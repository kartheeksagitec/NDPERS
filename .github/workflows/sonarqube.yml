name: Build and Analyze with SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and SonarQube Analysis
    runs-on: windows-latest

    env:
      SONAR_HOST_URL: http://localhost:9000       # Your local SonarQube URL
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     # Add in GitHub Secrets
      SOLUTION_PATH: slnNeoSpin/slnNeoSpin.sln    # Update if solution path differs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Restore NuGet packages
        run: nuget restore $env:SOLUTION_PATH

      - name: Add dotnet tools to PATH
        run: echo "$env:USERPROFILE\.dotnet\tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install SonarScanner for MSBuild
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarQube analysis
        run: |
          dotnet-sonarscanner begin `
            /k:"NDPERS" `
            /d:sonar.host.url="${{ env.SONAR_HOST_URL }}" `
            /d:sonar.login="${{ env.SONAR_TOKEN }}" `
            /d:sonar.verbose=true

      - name: Build Solution
        run: msbuild $env:SOLUTION_PATH /p:Configuration=Release /p:Platform="Any CPU"

      - name: End SonarQube analysis
        run: dotnet-sonarscanner end /d:sonar.login="${{ env.SONAR_TOKEN }}"
