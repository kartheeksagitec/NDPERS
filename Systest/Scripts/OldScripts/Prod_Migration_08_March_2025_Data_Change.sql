
/********************Purpose: PIR 25920******************************
*********************Created By: Abhijeet Malwadkar********************************/
IF NOT EXISTS (SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10526)
BEGIN
	INSERT INTO SGS_MESSAGES VALUES(10526,'Member''s plan already has history beyond this enrollment date.  Please review plan and use overlap to enroll manually.', 16, 'E', NULL,	NULL, 'PIR 25920', GETDATE(), 'PIR 25920', GETDATE(), 0)
END
GO

IF EXISTS (SELECT 1 FROM SGT_WSS_ACKNOWLEDGEMENT WHERE SCREEN_STEP_VALUE = 'ADCI' AND ACKNOWLEDGEMENT_TEXT = 
	'I understand I have the option to contribute up to {0}% of my gross wages to the Defined Contribution Plan, and my employer will match my contribution. I understand that if I do not elect an additional contribution within my first 30 days of employment, <br/><u>I will not have a future option to contribute up to an additional {1}% in the Defined Contribution Plan later.</u>  I acknowledge that this one-time 30-day election is an <u><b><b style="color:red;font-size:18px;">irrevocable,</b></b> lifetime election</u> for as long as I participate in this plan, <br/>and the amount cannot be changed, unless I become a temporary or part-time employee in the future.'
	)
BEGIN 
	UPDATE SGT_WSS_ACKNOWLEDGEMENT SET ACKNOWLEDGEMENT_TEXT = 
	'I understand I have the option to contribute up to {0}% of my gross wages to the Defined Contribution Plan, and my employer will match my contribution. I understand that if I do not elect an additional contribution within my first 30 days of employment, <u>I will not have a future option to contribute up to an additional {1}% in the Defined Contribution Plan later.</u>  I acknowledge that this one-time 30-day election is an <u><b><b style="color:red;font-size:18px;">irrevocable,</b></b> lifetime election</u> for as long as I participate in this plan, and the amount cannot be changed, unless I become a temporary or part-time employee in the future.'
	WHERE SCREEN_STEP_VALUE = 'ADCI'  
END
GO

IF EXISTS (SELECT 1 FROM SGT_WSS_ACKNOWLEDGEMENT WHERE SCREEN_STEP_VALUE = 'PACA' AND ACKNOWLEDGEMENT_TEXT = 
	'I, <b>{0}</b>, acknowledge that under the NDCC 54-52.6 I am responsible for directing the investments in the Defined Contribution Retirement Plan. I will be solely responsible for the investment results of my account. <br/>NDPERS and its governing board will not be liable for any election or investment decision I make or any default investment made as a result of my failure to timely make an investment election.'
	)
BEGIN
	UPDATE SGT_WSS_ACKNOWLEDGEMENT SET ACKNOWLEDGEMENT_TEXT = 
	  'I, <b>{0}</b>, acknowledge that under the NDCC 54-52.6 I am responsible for directing the investments in the Defined Contribution Retirement Plan. I will be solely responsible for the investment results of my account. NDPERS and its governing board will not be liable for any election or investment decision I make or any default investment made as a result of my failure to timely make an investment election.'
	WHERE SCREEN_STEP_VALUE = 'PACA' 
END

IF EXISTS (SELECT 1 FROM SGT_WSS_ACKNOWLEDGEMENT WHERE SCREEN_STEP_VALUE = 'MRA' AND ACKNOWLEDGEMENT_TEXT = 
	'In accordance with the requirements of the North Dakota Public Employees Retirement System, I make application for retirement enrollment.<br/>I understand that my membership will become effective immediately or at the attainment of age 18.  I declare that the foregoing statements<br/>are full, true, and correct to the best of my knowledge and belief, and are subject to the laws and penalties governing any misrepresentation<br/>and fraud.  Submit a “Designation of Beneficiary SFN 2560” along with this form.'
	)
BEGIN
	UPDATE SGT_WSS_ACKNOWLEDGEMENT SET ACKNOWLEDGEMENT_TEXT = 
	'In accordance with the requirements of the North Dakota Public Employees Retirement System, I make application for retirement enrollment.<br/>I understand that my membership will become effective immediately or at the attainment of age 18.  I declare that the foregoing statements are full, true, and correct to the best of my knowledge and belief, and are subject to the laws and penalties governing any misrepresentation and fraud.  Submit a “Designation of Beneficiary SFN 2560” along with this form.'
	WHERE SCREEN_STEP_VALUE = 'MRA' 
END


/********************Purpose: PIR 26652******************************
*********************Created By: Vidya Fulsoundar********************************/

IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE [CODE_VALUE] = 'P501' AND CODE_ID = 1302)
BEGIN
INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(1302, 'P501', 'Excess Contribution Taxable',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR 26652', GETDATE(), 'PIR 26652',	GETDATE(),	0)
END
 
IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE [CODE_VALUE] = 'P502' AND CODE_ID = 1302)
BEGIN
INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(1302, 'P502', 'Excess Contribution Non-Taxable',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR 26652', GETDATE(), 'PIR 26652',	GETDATE(),	0)
END
 
IF NOT EXISTS(SELECT 1 FROM SGT_REMIT_TYPE_BANK_ACCT_CROSSREF WHERE [REMITTANCE_TYPE_VALUE] = 'P501' AND [REMITTANCE_TYPE_ID] = 1302)
BEGIN
INSERT INTO SGT_REMIT_TYPE_BANK_ACCT_CROSSREF( [REMITTANCE_TYPE_ID],[REMITTANCE_TYPE_VALUE], [BANK_ACCOUNT_ID], [BANK_ACCOUNT_VALUE], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES (1302,	'P501',	1201,	'RETR',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE(),	0)
END
 
IF NOT EXISTS(SELECT 1 FROM SGT_REMIT_TYPE_BANK_ACCT_CROSSREF WHERE [REMITTANCE_TYPE_VALUE] = 'P502' AND [REMITTANCE_TYPE_ID] = 1302)
BEGIN
INSERT INTO SGT_REMIT_TYPE_BANK_ACCT_CROSSREF([REMITTANCE_TYPE_ID],[REMITTANCE_TYPE_VALUE], [BANK_ACCOUNT_ID], [BANK_ACCOUNT_VALUE], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES (1302,	'P502',	1201,	'RETR',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGT_PAYMENT_ITEM_TYPE WHERE [ITEM_TYPE_CODE] = 'ITEM501')
BEGIN
INSERT INTO SGT_PAYMENT_ITEM_TYPE ([ITEM_TYPE_CODE], [ITEM_TYPE_DESCRIPTION], [ITEM_PRIORITY], [ITEM_USAGE_ID], [ITEM_USAGE_VALUE], [CHECK_TYPE_ID], [CHECK_TYPE_VALUE], [ITEM_TYPE_DIRECTION], [CHECK_COMPONENT_DESCRIPTION], [TAXABLE_ITEM_FLAG], [VENDOR_FLAG], [PAYMENT_1099R_FLAG], [CHECK_GROUP_CODE_ID], [CHECK_GROUP_CODE_VALUE], [ADJUSTMENT_CODE_ID], [ADJUSTMENT_CODE_VALUE], [DEDUCTION_ID], [DEDUCTION_VALUE], [RETRO_PAYMENT_TYPE_ID], [RETRO_PAYMENT_TYPE_VALUE], [RETRO_ITEM_CODE_LINK], [SPECIAL_TAX_TREATMENT_CODE_ID], [SPECIAL_TAX_TREATMENT_CODE_VALUE], [ALLOW_ROLLOVER_CODE_ID], [ALLOW_ROLLOVER_CODE_VALUE], [ROLLOVER_ITEM_CODE], [PLSO_FLAG], [COMMENTS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ], [RETRO_SPECIAL_PAYMENT_IND], [MONTHLY_SUMMARY_GROUP_ID], [MONTHLY_SUMMARY_GROUP_VALUE], [MASTER_PAYMENT_GROUP_ID], [MASTER_PAYMENT_GROUP_VALUE], [ACH_CHECK_GROUP_ID], [ACH_CHECK_GROUP_VALUE], [BASE_AMOUNT_FLAG], [ITEM_TYPE_CODE_VALUE], [PAYEE_DETAIL_GROUP_ID], [PAYEE_DETAIL_GROUP_VALUE], [CANCEL_PAYMENT_1099R_ID], [CANCEL_PAYMENT_1099R_VALUE], [NON_MONTHLY_PAYMENT_GROUP_ID], [NON_MONTHLY_PAYMENT_GROUP_VALUE], [RECEIAVABLE_ITEM_FOR_RETRO_FLAG], [ADHOC_COLA_GROUP_ID], [ADHOC_COLA_GROUP_VALUE], [UPDATE_PROVIDER_REPORT_PAYMENT_FLAG], [REISSUE_ITEMS_FLAG], [RECEIVABLE_CREATION_1099R_ID], [RECEIVABLE_CREATION_1099R_VALUE])
VALUES ('ITEM501',	'Excess Taxable Amount',	1,	2208,	'MNTP',	2207,	'REGL',	1,	'Excess Taxable Amount',	'Y',	'N',	'Y',	2209,	'GRSS',	2221,	'DSPL',	2212,	'HDDN',	2204, NULL,	NULL,	2222,	'FDTX',	2223,	'DONT',	NULL,	'N',	NULL,	'PIR 26652', GETDATE(),	'PIR 26652',	GETDATE(),	0,	0,	2511,	'GROS',	2512,	'TXRF',	2514,	'GROS',	'N',	'P501',	2519,	NULL,	2903,	NULL,	2520,	NULL,	'N',	3003,	'REGL',	'N',	'N',	2908,	NULL)
END

IF NOT EXISTS(SELECT 1 FROM SGT_PAYMENT_ITEM_TYPE WHERE [ITEM_TYPE_CODE] = 'ITEM502')
BEGIN
INSERT INTO SGT_PAYMENT_ITEM_TYPE ([ITEM_TYPE_CODE], [ITEM_TYPE_DESCRIPTION], [ITEM_PRIORITY], [ITEM_USAGE_ID], [ITEM_USAGE_VALUE], [CHECK_TYPE_ID], [CHECK_TYPE_VALUE], [ITEM_TYPE_DIRECTION], [CHECK_COMPONENT_DESCRIPTION], [TAXABLE_ITEM_FLAG], [VENDOR_FLAG], [PAYMENT_1099R_FLAG], [CHECK_GROUP_CODE_ID], [CHECK_GROUP_CODE_VALUE], [ADJUSTMENT_CODE_ID], [ADJUSTMENT_CODE_VALUE], [DEDUCTION_ID], [DEDUCTION_VALUE], [RETRO_PAYMENT_TYPE_ID], [RETRO_PAYMENT_TYPE_VALUE], [RETRO_ITEM_CODE_LINK], [SPECIAL_TAX_TREATMENT_CODE_ID], [SPECIAL_TAX_TREATMENT_CODE_VALUE], [ALLOW_ROLLOVER_CODE_ID], [ALLOW_ROLLOVER_CODE_VALUE], [ROLLOVER_ITEM_CODE], [PLSO_FLAG], [COMMENTS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ], [RETRO_SPECIAL_PAYMENT_IND], [MONTHLY_SUMMARY_GROUP_ID], [MONTHLY_SUMMARY_GROUP_VALUE], [MASTER_PAYMENT_GROUP_ID], [MASTER_PAYMENT_GROUP_VALUE], [ACH_CHECK_GROUP_ID], [ACH_CHECK_GROUP_VALUE], [BASE_AMOUNT_FLAG], [ITEM_TYPE_CODE_VALUE], [PAYEE_DETAIL_GROUP_ID], [PAYEE_DETAIL_GROUP_VALUE], [CANCEL_PAYMENT_1099R_ID], [CANCEL_PAYMENT_1099R_VALUE], [NON_MONTHLY_PAYMENT_GROUP_ID], [NON_MONTHLY_PAYMENT_GROUP_VALUE], [RECEIAVABLE_ITEM_FOR_RETRO_FLAG], [ADHOC_COLA_GROUP_ID], [ADHOC_COLA_GROUP_VALUE], [UPDATE_PROVIDER_REPORT_PAYMENT_FLAG], [REISSUE_ITEMS_FLAG], [RECEIVABLE_CREATION_1099R_ID], [RECEIVABLE_CREATION_1099R_VALUE])
VALUES ('ITEM502',	'Excess Non Taxable Amount',	1,	2208,	'MNTP',	2207,	'REGL',	1,	'Excess Non Taxable Amount',	'N',	'N',	'Y',	2209,	'GRSS',	2221,	'DSPL',	2212,	'HDDN',	2204,	NULL,	NULL,	2222,	'NOTX',	2223,	'DONT',	NULL,	'N',	NULL,	'PIR 26652', GETDATE(),	'PIR 26652',	GETDATE(),	0,	0,	2511,	'GROS',	2512,	'NXAN',	2514,	'GROS',	'N',	'P502',	2519,	NULL,	2903,	NULL,	2520,	NULL,	'N',	3003,	'REGL',	'N',	'N',	2908,	'RECR')
END

IF NOT EXISTS(SELECT 1 FROM SGT_PAYMENT_ITEM_TYPE WHERE [ITEM_TYPE_CODE] = 'ITEM503')
BEGIN
INSERT INTO SGT_PAYMENT_ITEM_TYPE ([ITEM_TYPE_CODE], [ITEM_TYPE_DESCRIPTION], [ITEM_PRIORITY], [ITEM_USAGE_ID], [ITEM_USAGE_VALUE], [CHECK_TYPE_ID], [CHECK_TYPE_VALUE], [ITEM_TYPE_DIRECTION], [CHECK_COMPONENT_DESCRIPTION], [TAXABLE_ITEM_FLAG], [VENDOR_FLAG], [PAYMENT_1099R_FLAG], [CHECK_GROUP_CODE_ID], [CHECK_GROUP_CODE_VALUE], [ADJUSTMENT_CODE_ID], [ADJUSTMENT_CODE_VALUE], [DEDUCTION_ID], [DEDUCTION_VALUE], [RETRO_PAYMENT_TYPE_ID], [RETRO_PAYMENT_TYPE_VALUE], [RETRO_ITEM_CODE_LINK], [SPECIAL_TAX_TREATMENT_CODE_ID], [SPECIAL_TAX_TREATMENT_CODE_VALUE], [ALLOW_ROLLOVER_CODE_ID], [ALLOW_ROLLOVER_CODE_VALUE], [ROLLOVER_ITEM_CODE], [PLSO_FLAG], [COMMENTS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ], [RETRO_SPECIAL_PAYMENT_IND], [MONTHLY_SUMMARY_GROUP_ID], [MONTHLY_SUMMARY_GROUP_VALUE], [MASTER_PAYMENT_GROUP_ID], [MASTER_PAYMENT_GROUP_VALUE], [ACH_CHECK_GROUP_ID], [ACH_CHECK_GROUP_VALUE], [BASE_AMOUNT_FLAG], [ITEM_TYPE_CODE_VALUE], [PAYEE_DETAIL_GROUP_ID], [PAYEE_DETAIL_GROUP_VALUE], [CANCEL_PAYMENT_1099R_ID], [CANCEL_PAYMENT_1099R_VALUE], [NON_MONTHLY_PAYMENT_GROUP_ID], [NON_MONTHLY_PAYMENT_GROUP_VALUE], [RECEIAVABLE_ITEM_FOR_RETRO_FLAG], [ADHOC_COLA_GROUP_ID], [ADHOC_COLA_GROUP_VALUE], [UPDATE_PROVIDER_REPORT_PAYMENT_FLAG], [REISSUE_ITEMS_FLAG], [RECEIVABLE_CREATION_1099R_ID], [RECEIVABLE_CREATION_1099R_VALUE])
VALUES ('ITEM503',	'Federal Tax Amount',	1,	2208,	'MNTP',	2207,	'REGL',	-1,	'Federal Tax',	'N',	'Y',	'Y',	2209,	'DEDT',	2221,	'HDDN',	2212,	'HDDN',	2204,	NULL,	NULL,	2222,	'NOTX',	2223,	'DONT',	NULL,	'N',	NULL,	'PIR 26652', GETDATE(),	'PIR 26652',	GETDATE(),	0,	0,	2511,	'FEDL',	2512,	'FDRF',	2514,	'FDTX',	'N',	'P503',	2519,	'FEDX',	2903,	'CWHR',	2520,	'FDTX',	'N',	3003,	'REGL',	'Y',	'N',	2908,	'REWT')
END

IF NOT EXISTS(SELECT 1 FROM SGT_PAYMENT_ITEM_TYPE WHERE [ITEM_TYPE_CODE] = 'ITEM504')
BEGIN
INSERT INTO SGT_PAYMENT_ITEM_TYPE ([ITEM_TYPE_CODE], [ITEM_TYPE_DESCRIPTION], [ITEM_PRIORITY], [ITEM_USAGE_ID], [ITEM_USAGE_VALUE], [CHECK_TYPE_ID], [CHECK_TYPE_VALUE], [ITEM_TYPE_DIRECTION], [CHECK_COMPONENT_DESCRIPTION], [TAXABLE_ITEM_FLAG], [VENDOR_FLAG], [PAYMENT_1099R_FLAG], [CHECK_GROUP_CODE_ID], [CHECK_GROUP_CODE_VALUE], [ADJUSTMENT_CODE_ID], [ADJUSTMENT_CODE_VALUE], [DEDUCTION_ID], [DEDUCTION_VALUE], [RETRO_PAYMENT_TYPE_ID], [RETRO_PAYMENT_TYPE_VALUE], [RETRO_ITEM_CODE_LINK], [SPECIAL_TAX_TREATMENT_CODE_ID], [SPECIAL_TAX_TREATMENT_CODE_VALUE], [ALLOW_ROLLOVER_CODE_ID], [ALLOW_ROLLOVER_CODE_VALUE], [ROLLOVER_ITEM_CODE], [PLSO_FLAG], [COMMENTS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ], [RETRO_SPECIAL_PAYMENT_IND], [MONTHLY_SUMMARY_GROUP_ID], [MONTHLY_SUMMARY_GROUP_VALUE], [MASTER_PAYMENT_GROUP_ID], [MASTER_PAYMENT_GROUP_VALUE], [ACH_CHECK_GROUP_ID], [ACH_CHECK_GROUP_VALUE], [BASE_AMOUNT_FLAG], [ITEM_TYPE_CODE_VALUE], [PAYEE_DETAIL_GROUP_ID], [PAYEE_DETAIL_GROUP_VALUE], [CANCEL_PAYMENT_1099R_ID], [CANCEL_PAYMENT_1099R_VALUE], [NON_MONTHLY_PAYMENT_GROUP_ID], [NON_MONTHLY_PAYMENT_GROUP_VALUE], [RECEIAVABLE_ITEM_FOR_RETRO_FLAG], [ADHOC_COLA_GROUP_ID], [ADHOC_COLA_GROUP_VALUE], [UPDATE_PROVIDER_REPORT_PAYMENT_FLAG], [REISSUE_ITEMS_FLAG], [RECEIVABLE_CREATION_1099R_ID], [RECEIVABLE_CREATION_1099R_VALUE])
VALUES ('ITEM504',	'State Tax Amount',	1,	2208,	'MNTP',	2207,	'REGL',	-1,	'State Tax',	'N',	'Y',	'Y',	2209,	'DEDT',	2221,	'HDDN',	2212,	'HDDN',	2204,	'REAC',	'ITEM504',	2222,	'NOTX',	2223,	'DONT',	NULL,	'N',	NULL,	'PIR 26652',GETDATE(), 'PIR 26652', GETDATE(),	0,	0,	2511,	'STAT',	2512,	'STAN',	2514,	'STTX',	'N',	'P504',	2519,	'STTX',	2903,	'CWHR',	2520,	NULL,	'N',	3003,	'REGL',	'Y',	'N',	2908,	'REWT')
END

BEGIN
DECLARE @cnt INT
BEGIN TRANSACTION Trans
SELECT @cnt = count(*) FROM [DBO].[SGS_RESOURCES]  WHERE RESOURCE_ID=2088 AND RESOURCE_DESCRIPTION='Remittance – Cancel Refund Button'; 
   if @cnt = 0   
   Begin    
       INSERT INTO [DBO].[SGS_RESOURCES] ([RESOURCE_ID],[RESOURCE_TYPE_ID],[RESOURCE_TYPE_VALUE],[RESOURCE_DESCRIPTION],[CREATED_BY],[CREATED_DATE]
       ,[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])
  VALUES
           (2088,12,'U','Remittance – Cancel Refund Button','PIR 26652',GETDATE(),'PIR 26652',GETDATE(),0)
   END
   ELSE 
   PRINT 'RESOURCE_ID 2088 and RESOURCE_DESCRIPTION Remittance – Cancel Refund Button already exists in SGS_RESOURCES table';
 COMMIT TRANSACTION Trans
 END

/*********************Comments: New resource linked to All with with None action*****************/


BEGIN TRANSACTION Trans2

IF NOT EXISTS(SELECT 1 FROM SGS_SECURITY WHERE RESOURCE_ID = 2088)
BEGIN
INSERT INTO [DBO].[SGS_SECURITY]([ROLE_ID], [RESOURCE_ID], [SECURITY_ID], [SECURITY_VALUE], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
SELECT [ROLE_ID], 2088, 11, 0, 'PIR 26652', GETDATE(), 'PIR 26652', GETDATE(), 0  FROM [DBO].[SGS_ROLES] 
END

COMMIT TRANSACTION Trans2

/********************Purpose: PIR  ******************************
*********************Created By: Vidya Fulsoundar********************************
*********************Comments: Death BPM-Automation *****************/ 
IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10474)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10474, 'Please review Levels of Coverage for associated plans.',	16,	'I','','', 'PIR',	getdate(),	'PIR',	getdate(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10475)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10475, 'Please review Life insurance of Spouse.',	16,	'I', '','','PIR',	getdate(),	'PIR',	getdate(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10476)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10476, 'Please enter an Employment Date before saving.',	16,	'W', '','', 'PIR',	getdate(),	'PIR',	getdate(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10477)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10477, 'Please review Employment and Plans for future end dates.',	16,	'W','','', 'PIR',	getdate(),	'PIR',	getdate(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10478)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10478, 'Dependents have Medicare Part D enrolled.',	16,	'W','','', 'PIR',	getdate(),	'PIR',	getdate(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10479)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10479, 'You must update all associated records manually.',	16,	'W','','', 'PIR',	getdate(),	'PIR',	getdate(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_CODE WHERE [CODE_ID] = 7034)
BEGIN
INSERT INTO SGS_CODE([CODE_ID], [DESCRIPTION], [DATA1_CAPTION], [DATA1_TYPE], [DATA2_CAPTION], [DATA2_TYPE], [DATA3_CAPTION], [DATA3_TYPE], [FIRST_LOOKUP_ITEM], [FIRST_MAINTENANCE_ITEM], [COMMENTS], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(7034,'BPM Death Letter Template Name',NULL,	NULL,NULL,	NULL,NULL,NULL,	NULL,	NULL,	NULL,	NULL,	'PIR',	getdate(),	'PIR',	getdate(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE [CODE_ID] = 7034 AND [CODE_VALUE] = 'NEDL')
BEGIN
INSERT INTO SGS_CODE_VALUE([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(7034,'NEDL',	'Non Employee Death',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR',	GETDATE(),	'PIR',	GETDATE(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE [CODE_ID] = 7034 AND [CODE_VALUE] = 'EMDL')
BEGIN
INSERT INTO SGS_CODE_VALUE([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(7034,'EMDL',	'Employee Death',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR',	GETDATE(),	'PIR',	GETDATE(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE [CODE_ID] = 7034 AND [CODE_VALUE] = 'PADL')
BEGIN
INSERT INTO SGS_CODE_VALUE([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(7034,'PADL',	'Payee Death Letter',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR', GETDATE(),	'PIR',	GETDATE(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10483)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10483, 'Please select template name.',	16,	'E', '','', 'PIR',	getdate(),	'PIR',	getdate(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10484)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10484, 'Please select record to generate.',	16,	'E', '','', 'PIR',	getdate(),	'PIR',	getdate(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10485)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10485, 'Correspondence Generated for selected record successfully.',	16,	'I', '','', 'PIR',	getdate(),	'PIR',	getdate(),	0)
END

/********************Purpose: PIR  ******************************
*********************Created By: Abhijeet Malwadkar********************************
*********************Comments: Death BPM-Automation *****************/ 
IF EXISTS(SELECT TOP 1 * FROM SGW_BPM_PROCESS WHERE NAME = 'Creating Receivable Against Payment History' ORDER BY 1 DESC)
BEGIN 
    IF NOT EXISTS(SELECT TOP 1 * FROM SGW_BPM_PROCESS_EVENT_XR WHERE PROCESS_ID = (SELECT TOP 1 PROCESS_ID FROM SGW_BPM_PROCESS WHERE NAME = 'Creating Receivable Against Payment History'  ORDER BY 1 DESC))
    BEGIN     INSERT INTO SGW_BPM_PROCESS_EVENT_XR (EVENT_ID,PROCESS_ID,ACTION_ID,ACTION_VALUE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ,EVENT_REASON_ID,ACTIVITY_ID)
    VALUES(
        (SELECT BPM_EVENT_ID FROM SGW_BPM_EVENT WHERE EVENT_DESC = 'MEMORADUM OF UNDERSTANDING'),
        (SELECT TOP 1 PROCESS_ID FROM SGW_BPM_PROCESS WHERE NAME = 'Creating Receivable Against Payment History'  ORDER BY 1 DESC),
        2005,'RENE', 'Death BPM-Automation', GETDATE(),'Death BPM-Automation', GETDATE(),0,NULL,NULL
    )
    END    
END
/********************Purpose: PIR  ******************************
*********************Created By: Vidya Fulsoundar********************************
*********************Comments: Death BPM-Automation *****************/ 
IF NOT EXISTS(SELECT 1 FROM SGS_BATCH_SCHEDULE WHERE BATCH_SCHEDULE_ID = 164)
BEGIN
INSERT INTO SGS_BATCH_SCHEDULE ([BATCH_SCHEDULE_ID], [STEP_NO], [STEP_NAME], [STEP_DESCRIPTION], [FREQUENCY_IN_DAYS], [FREQUENCY_IN_MONTHS], [NEXT_RUN_DATE], [STEP_PARAMETERS], [ACTIVE_FLAG], [REQUIRES_TRANSACTION_FLAG], [EMAIL_NOTIFICATION], [ORDER_NO], [CUTOFF_START], [CUTOFF_END], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(164,	1035, 'Member Details Update Batch', NULL, 1, NULL, GETDATE(), NULL, 'Y', 'N', NULL, NULL, NULL, NULL, 'BPM Death Automation',	GETDATE(), 'BPM Death Automation', GETDATE(), 0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE CODE_ID=52 AND CODE_VALUE = 'BRDY')
BEGIN
INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES (52,	'BRDY',	'Batch Run Days',	15,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'BPM Death Automation',	GETDATE(),	'BPM Death Automation',	GETDATE(),	0)
END


/********************Purpose: PIR  ******************************
*********************Created By: Vidya Fulsoundar********************************
*********************Comments: Death BPM-Automation *****************/ 
IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10501)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10501, 'Beneficiary does not have a valid Address.',	16,	'E',	NULL,	NULL,	'BPM Death Automation',	Getdate(),	'BPM Death Automation',	GETDATE(), 0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10502)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10502, 'Dependent does not have a valid Address.',	16,	'E',	NULL,	NULL,	'BPM Death Automation',	Getdate(),	'BPM Death Automation',	GETDATE(), 0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10503)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10503, 'Member may have available funds in Flex Comp.',	16,	'W',	NULL,	NULL,	'BPM Death Automation',	Getdate(),	'BPM Death Automation',	GETDATE(), 0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID = 10504)
BEGIN
INSERT INTO SGS_MESSAGES ([MESSAGE_ID], [DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(10504, 'Please review plan end dates with future suspended dates.',	16,	'W',	NULL,	NULL,	'BPM Death Automation',	Getdate(),	'BPM Death Automation',	GETDATE(), 0)
END

/********************Purpose: PIR  ******************************
*********************Created By: Sarvesh********************************
*********************Comments: Death BPM-Automation *****************/ 

IF NOT EXISTS (SELECT * FROM [dbo].[SGS_MESSAGES] WHERE [MESSAGE_ID] = 10527 )
INSERT INTO [dbo].[SGS_MESSAGES] ([MESSAGE_ID],[DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES (10527,'Employment End Date and Date of Death do not match', 16, 'W', NULL, NULL,'BPM Death Automation', Getdate(), 'BPM Death Automation', Getdate(), '0')


IF NOT EXISTS (SELECT * FROM [dbo].[SGS_MESSAGES] WHERE [MESSAGE_ID] = 10528)
INSERT INTO [dbo].[SGS_MESSAGES] ([MESSAGE_ID],[DISPLAY_MESSAGE], [SEVERITY_ID], [SEVERITY_VALUE], [INTERNAL_INSTRUCTIONS], [EMPLOYER_INSTRUCTIONS],  
[CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES (10528,'Deceased Name must be selected', 16, 'E', null, null,'BPM Death Automation', getdate(), 'BPM Death Automation', getdate(), '0')