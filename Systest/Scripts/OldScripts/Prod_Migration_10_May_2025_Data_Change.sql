/********************Purpose: PIR 26945 ******************************
*********************Created By: Bharat Reddy********************************/
BEGIN
DECLARE @cnt INT
BEGIN TRANSACTION Trans
SELECT @cnt = count(*) FROM SGS_RESOURCES  WHERE RESOURCE_ID=2091 AND RESOURCE_DESCRIPTION = 'Person - TFFR/TIAA Service Extract'; 
   if @cnt = 0   
   Begin    
       INSERT INTO SGS_RESOURCES ([RESOURCE_ID],[RESOURCE_TYPE_ID],[RESOURCE_TYPE_VALUE],[RESOURCE_DESCRIPTION],[CREATED_BY],[CREATED_DATE]
       ,[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])
  VALUES
           (2091,12,'U','Person - TFFR/TIAA Service Extract','PIR 26945',GETDATE(),'PIR 26945',GETDATE(),0)
   END
   ELSE 
   PRINT 'RESOURCE_ID 2091 and RESOURCE_DESCRIPTION "Person - TFFR/TIAA Service Extract" already exists in SGS_RESOURCES table';
 COMMIT TRANSACTION Trans
 END

BEGIN TRANSACTION Trans2

IF NOT EXISTS(SELECT 1 FROM SGS_SECURITY WHERE RESOURCE_ID = 2091)
BEGIN
INSERT INTO [DBO].[SGS_SECURITY]([ROLE_ID], [RESOURCE_ID], [SECURITY_ID], [SECURITY_VALUE], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
SELECT [ROLE_ID], 2091, 11, 0, 'PIR 26945', GETDATE(), 'PIR 26945', GETDATE(), 0  FROM [DBO].[SGS_ROLES]
END
 
COMMIT TRANSACTION Trans2

/*****
	27111 - BPM Event/Activity mapping - Initiate new BPM for Events where current BPM process is at or past linked
*****/
/****** Object:  Trigger [dbo].[InsertIntoBpmRequest]    Script Date: 4/16/2025 2:30:47 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE OR ALTER TRIGGER [dbo].[InsertIntoBpmRequest] 
   ON  [dbo].[SGW_WORKFLOW_REQUEST] 
   INSTEAD OF INSERT
AS 
DECLARE
@ORG_ID INT,
@ORG_CODE VARCHAR(50),
@FILENET_DOCUMENT_TYPE VARCHAR(50),
@IMAGE_DOC_CATEGORY VARCHAR(50),
@ADDITIONAL_INFO VARCHAR(MAX),
@CONTACT_TICKET_ID INT,
@REQUEST_ID INT,
@CREATED_BY VARCHAR(100),
@CREATED_DATE DATETIME,
@MODIFIED_BY  VARCHAR(100),
@MODIFIED_DATE DATETIME,
@UPDATE_SEQ INT,
@ADDITIONAL_PARAMETER1 varchar(50)
BEGIN
	set @ORG_ID = NULL;
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT 
	@ORG_CODE = ORG_CODE, 
	@FILENET_DOCUMENT_TYPE= FILENET_DOCUMENT_TYPE,
	@IMAGE_DOC_CATEGORY = IMAGE_DOC_CATEGORY,
	@CONTACT_TICKET_ID = CONTACT_TICKET_ID,
	@CREATED_BY = CREATED_BY,
	@CREATED_DATE = CREATED_DATE,
	@MODIFIED_BY = MODIFIED_BY,
	@MODIFIED_DATE = MODIFIED_DATE,
	@UPDATE_SEQ = UPDATE_SEQ,
	@ADDITIONAL_PARAMETER1 = ADDITIONAL_PARAMETER1
	 FROM inserted;
	IF (@ORG_CODE is not null)
	BEGIN
		SELECT @ORG_ID = ORG_ID FROM sgt_organization WHERE ORG_CODE = @ORG_CODE;
	END
	SET @ADDITIONAL_INFO = '{"FILENET_DOCUMENT_TYPE":"' + ISNULL(@FILENET_DOCUMENT_TYPE,'') + '","IMAGE_DOC_CATEGORY":"' + ISNULL(@IMAGE_DOC_CATEGORY,'') + '"}';
    INSERT INTO [dbo].[SGW_BPM_REQUEST](DOC_TYPE,PROCESS_ID,REFERENCE_ID,PERSON_ID,ORG_ID,STATUS_ID,STATUS_VALUE,SOURCE_ID,SOURCE_VALUE,ADDITIONAL_INFO,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ,PRIORITY_CODE_ID,PRIORITY_CODE_VALUE,REASON_ID,CHECK_FOR_EXISTING_INST)
	SELECT DOCUMENT_CODE,NULL,REFERENCE_ID,PERSON_ID,@ORG_ID,7026,'UNPC',2021,'INDX',@ADDITIONAL_INFO,@CREATED_BY,@CREATED_DATE,@MODIFIED_BY,@MODIFIED_DATE,@UPDATE_SEQ,3008,'NORM',3013,'N' FROM INSERTED
	SET @REQUEST_ID = SCOPE_IDENTITY();
	if (@CONTACT_TICKET_ID IS NOT NULL)
	BEGIN
		INSERT INTO [dbo].[SGW_BPM_REQUEST_PARAMETER](REQUEST_ID,PARAMETER_NAME,PARAMETER_VALUE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)
		VALUES(@REQUEST_ID,'contact_ticket_id',CAST(@CONTACT_TICKET_ID AS varchar),@CREATED_BY,@CREATED_DATE,@MODIFIED_BY,@MODIFIED_DATE,@UPDATE_SEQ);
	END
	if (@ADDITIONAL_PARAMETER1 IS NOT NULL)
	BEGIN
		INSERT INTO [dbo].[SGW_BPM_REQUEST_PARAMETER](REQUEST_ID,PARAMETER_NAME,PARAMETER_VALUE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)
		VALUES(@REQUEST_ID,'additional_parameter1',@ADDITIONAL_PARAMETER1,@CREATED_BY,@CREATED_DATE,@MODIFIED_BY,@MODIFIED_DATE,@UPDATE_SEQ);
	END
END
GO

ALTER TABLE [dbo].[SGW_WORKFLOW_REQUEST] ENABLE TRIGGER [InsertIntoBpmRequest]
GO


--Removed code serial ID 18025 - Main2020 85 
IF EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE CODE_ID = 1311 AND CODE_VALUE = 'MN85') 
BEGIN
	DELETE FROM SGS_CODE_VALUE WHERE CODE_ID = 1311 AND CODE_VALUE = 'MN85'
END
--------------------------------------------------------------------------------------
-- Adding for Plan id 29 
IF NOT EXISTS(SELECT * FROM SGS_CODE_VALUE WHERE [CODE_VALUE] = 'SP50' AND [CODE_ID] = 1311) 
BEGIN
	INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
	VALUES
	(1311,	'SP50',	'State Public Safety 50',	'29',	'50',	'N',	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR 25729',	GETDATE(),	'PIR 25729',	GETDATE(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE [CODE_VALUE] = 'SP55' AND [CODE_ID] = 1311) 
BEGIN
	INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
	VALUES
	(1311,	'SP55',	'State Public Safety 55',	'29',	'55',	'N',	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR 25729',	GETDATE(),	'PIR 25729',	GETDATE(),	0)
END
IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE [CODE_VALUE] = 'SP85' AND [CODE_ID] = 1311) 
BEGIN
	INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
	VALUES
	(1311,	'SP85',	'State Public Safety 85',	'29',	'85',	'Y',	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR 25729',	GETDATE(),	'PIR 25729',	GETDATE(),	0)
END
--------------------------------------------------------------------------------------
-- Adding for Plan id 30 
IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE [CODE_VALUE] = 'D555' AND [CODE_ID] = 1311) 
BEGIN
	INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
	VALUES
	(1311,	'D555',	'DC2025 55',	'30',	'55',	'N',	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR 25920',	GETDATE(),	'PIR 25920',	GETDATE(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE [CODE_VALUE] = 'D562' AND [CODE_ID] = 1311) 
BEGIN
	INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
	VALUES
	(1311,	'D562',	'DC2025 62',	'30',	'62',	'N',	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR 25920',	GETDATE(),	'PIR 25920',	GETDATE(),	0)
END
IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE [CODE_VALUE] = 'D565' AND [CODE_ID] = 1311) 
BEGIN
	INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
	VALUES
	(1311,	'D565',	'DC2025 65',	'30',	'65',	'N',	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR 25920',	GETDATE(),	'PIR 25920',	GETDATE(),	0)
END
IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE [CODE_VALUE] = 'D585' AND [CODE_ID] = 1311) 
BEGIN
	INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
	VALUES
	(1311,	'D585',	'DC2025 85',	'30',	'85',	'Y',	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR 25920',	GETDATE(),	'PIR 25920',	GETDATE(),	0)
END


--------------Created By: sanket 
--------------Purpose   : PIR 26102

BEGIN
DECLARE @cnt INT
BEGIN TRANSACTION Trans
SELECT @cnt = count(*) FROM SGS_RESOURCES  WHERE RESOURCE_ID=2089 AND RESOURCE_DESCRIPTION='Person - Enrollment - Ret - Enhanced Overlap'; 
   if @cnt = 0   
   Begin    
       INSERT INTO SGS_RESOURCES ([RESOURCE_ID],[RESOURCE_TYPE_ID],[RESOURCE_TYPE_VALUE],[RESOURCE_DESCRIPTION],[CREATED_BY],[CREATED_DATE]
       ,[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])
  VALUES
           (2089,12,'U','Person - Enrollment - Ret - Enhanced Overlap','PIR 26102',GETDATE(),'PIR 26102',GETDATE(),0)
   END
   ELSE 
   PRINT 'RESOURCE_ID 2089 and RESOURCE_DESCRIPTION Person - Enrollment - Ret - Enhanced Overlap already exists in SGS_RESOURCES table';
 COMMIT TRANSACTION Trans
 END

 BEGIN
DECLARE @RES INT
BEGIN TRANSACTION Trans
SELECT @RES = count(*) FROM SGS_RESOURCES  WHERE RESOURCE_ID=2090 AND RESOURCE_DESCRIPTION='Person - Enrollment - DefComp - Enhanced Overlap'; 
   if @RES = 0   
   Begin    
       INSERT INTO SGS_RESOURCES ([RESOURCE_ID],[RESOURCE_TYPE_ID],[RESOURCE_TYPE_VALUE],[RESOURCE_DESCRIPTION],[CREATED_BY],[CREATED_DATE]
       ,[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])
  VALUES
           (2090,12,'U','Person - Enrollment - DefComp - Enhanced Overlap','PIR 26102',GETDATE(),'PIR 26102',GETDATE(),0)
   END
   ELSE 
   PRINT 'RESOURCE_ID 2090 and RESOURCE_DESCRIPTION Person - Enrollment - DefComp - Enhanced Overlap already exists in SGS_RESOURCES table';
 COMMIT TRANSACTION Trans
 END

 

/*********************Comments: New resource linked to role 192 with Execute action*****************/


BEGIN TRANSACTION Trans2
 
IF NOT EXISTS(SELECT 1 FROM [DBO].[SGS_SECURITY] WHERE RESOURCE_ID = 2089 AND ROLE_ID = 192)
BEGIN
INSERT INTO [DBO].[SGS_SECURITY]
VALUES(192, 2089, 11, 5, 'PIR 26102', GETDATE(), 'PIR 26102', GETDATE(), 0)
END
 
IF NOT EXISTS(SELECT 1 FROM SGS_SECURITY WHERE RESOURCE_ID = 2089 AND ROLE_ID NOT IN (192))
BEGIN
INSERT INTO [DBO].[SGS_SECURITY]([ROLE_ID], [RESOURCE_ID], [SECURITY_ID], [SECURITY_VALUE], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
SELECT [ROLE_ID], 2089, 11, 0, 'PIR 26102', GETDATE(), 'PIR 26102', GETDATE(), 0  FROM [DBO].[SGS_ROLES] WHERE ROLE_ID NOT IN (192)
END
 
COMMIT TRANSACTION Trans2


BEGIN TRANSACTION Trans2
 
IF NOT EXISTS(SELECT 1 FROM [DBO].[SGS_SECURITY] WHERE RESOURCE_ID = 2090 AND ROLE_ID = 192)
BEGIN
INSERT INTO [DBO].[SGS_SECURITY]
VALUES(192, 2090, 11, 5, 'PIR 26102', GETDATE(), 'PIR 26102', GETDATE(), 0)
END
 
IF NOT EXISTS(SELECT 1 FROM SGS_SECURITY WHERE RESOURCE_ID = 2090 AND ROLE_ID NOT IN (192))
BEGIN
INSERT INTO [DBO].[SGS_SECURITY]([ROLE_ID], [RESOURCE_ID], [SECURITY_ID], [SECURITY_VALUE], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
SELECT [ROLE_ID], 2090, 11, 0, 'PIR 26102', GETDATE(), 'PIR 26102', GETDATE(), 0  FROM [DBO].[SGS_ROLES] WHERE ROLE_ID NOT IN (192)
END
 
COMMIT TRANSACTION Trans2

/********************Purpose: PIR 26652******************************
*********************Created By: Vidya Fulsoundar********************************/
IF NOT EXISTS(SELECT 1 FROM SGT_PAYMENT_ITEM_TYPE WHERE [ITEM_TYPE_CODE] = 'ITEM505')
BEGIN
INSERT INTO SGT_PAYMENT_ITEM_TYPE ([ITEM_TYPE_CODE], [ITEM_TYPE_DESCRIPTION], [ITEM_PRIORITY], [ITEM_USAGE_ID], [ITEM_USAGE_VALUE], [CHECK_TYPE_ID], [CHECK_TYPE_VALUE], [ITEM_TYPE_DIRECTION], [CHECK_COMPONENT_DESCRIPTION], [TAXABLE_ITEM_FLAG], [VENDOR_FLAG], [PAYMENT_1099R_FLAG], [CHECK_GROUP_CODE_ID], [CHECK_GROUP_CODE_VALUE], [ADJUSTMENT_CODE_ID], [ADJUSTMENT_CODE_VALUE], [DEDUCTION_ID], [DEDUCTION_VALUE], [RETRO_PAYMENT_TYPE_ID], [RETRO_PAYMENT_TYPE_VALUE], [RETRO_ITEM_CODE_LINK], [SPECIAL_TAX_TREATMENT_CODE_ID], [SPECIAL_TAX_TREATMENT_CODE_VALUE], [ALLOW_ROLLOVER_CODE_ID], [ALLOW_ROLLOVER_CODE_VALUE], [ROLLOVER_ITEM_CODE], [PLSO_FLAG], [COMMENTS], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ], [RETRO_SPECIAL_PAYMENT_IND], [MONTHLY_SUMMARY_GROUP_ID], [MONTHLY_SUMMARY_GROUP_VALUE], [MASTER_PAYMENT_GROUP_ID], [MASTER_PAYMENT_GROUP_VALUE], [ACH_CHECK_GROUP_ID], [ACH_CHECK_GROUP_VALUE], [BASE_AMOUNT_FLAG], [ITEM_TYPE_CODE_VALUE], [PAYEE_DETAIL_GROUP_ID], [PAYEE_DETAIL_GROUP_VALUE], [CANCEL_PAYMENT_1099R_ID], [CANCEL_PAYMENT_1099R_VALUE], [NON_MONTHLY_PAYMENT_GROUP_ID], [NON_MONTHLY_PAYMENT_GROUP_VALUE], [RECEIAVABLE_ITEM_FOR_RETRO_FLAG], [ADHOC_COLA_GROUP_ID], [ADHOC_COLA_GROUP_VALUE], [UPDATE_PROVIDER_REPORT_PAYMENT_FLAG], [REISSUE_ITEMS_FLAG], [RECEIVABLE_CREATION_1099R_ID], [RECEIVABLE_CREATION_1099R_VALUE])
VALUES ('ITEM505',	'EE Interest for Excess Contribution',	7,	2208,	'MNTP',	2207,	'REGL',	1,	'Taxable Amount',	'Y',	'N',	'Y',	2209,	'GRSS',	2221,	'HDAD',	2212,	'HDDN',	2204,	NULL,	NULL,	2222,	'FTTX',	2223,	'ROLL',	'ITEM501',	'N',	'item created when the Interest Amount in account is changed that from Calculation',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE(),	0,	0,	2511,	'GROS',	2512,	'TXRF',	2514,	'GROS',	'N',	'P505',	2519,	NULL,	2903,	NULL,	2520,	'EEIA',	'N',	3003,	'REGL',	'N',	'N',	2908,	'RECR')
END

IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE CODE_ID = 1302 AND CODE_VALUE ='P505') 
BEGIN
INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
VALUES(1302,	'P505',	'EE Interest for Excess Contribution',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGT_Account_Reference WHERE [ITEM_TYPE_VALUE] = 'P505') 
BEGIN
 INSERT INTO SGT_ACCOUNT_REFERENCE ([PLAN_ID], [FUND_ID], [FUND_VALUE], [DEPT_ID], [DEPT_VALUE], [ITEM_TYPE_ID], [ITEM_TYPE_VALUE], [FROM_ITEM_TYPE_ID], [FROM_ITEM_TYPE_VALUE], [TO_ITEM_TYPE_ID], [TO_ITEM_TYPE_VALUE], [TRANSACTION_TYPE_ID], [TRANSACTION_TYPE_VALUE], [STATUS_TRANSITION_ID], [STATUS_TRANSITION_VALUE], [SOURCE_TYPE_ID], [SOURCE_TYPE_VALUE], [GENERATE_GL_FLAG], [DEBIT_ACCOUNT_ID], [CREDIT_ACCOUNT_ID], [JOURNAL_DESCRIPTION], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
 VALUES
(1,  1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	81	,2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(2,  1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	81	,2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(3,  1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	81	,2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(4,  1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	24	,2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(5,  1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	81	,2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(6,  1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	21	,2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(7,  1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	222, 2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(20, 1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	81	,2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(25, 1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	81	,2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(26, 1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	81	,2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(27, 1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	81	,2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(28, 1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	222, 2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(29, 1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	81	,2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0),
(30, 1300,	483,	1301,	1001,	1302,	'P505',	NULL,	NULL,	NULL,	NULL,	1303,	'ITLV',	1309,	NULL,	1304,	'BEPY',	1,	222, 2,	'Payments EE',	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE()	,0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE CODE_ID = 2518 AND CODE_VALUE ='P503') 
BEGIN
 INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
 VALUES(2518,	'P503', 'Federal Tax Amount', 'ITEM503','ITEM622',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE(),	0)
END

IF NOT EXISTS(SELECT 1 FROM SGS_CODE_VALUE WHERE CODE_ID = 2518 AND CODE_VALUE ='P504') 
BEGIN
 INSERT INTO SGS_CODE_VALUE ([CODE_ID], [CODE_VALUE], [DESCRIPTION], [DATA1], [DATA2], [DATA3], [COMMENTS], [START_DATE], [END_DATE], [CODE_VALUE_ORDER], [LEGACY_CODE_ID], [CREATED_BY], [CREATED_DATE], [MODIFIED_BY], [MODIFIED_DATE], [UPDATE_SEQ])
 VALUES(2518,	'P504',	'State Tax Amount',	'ITEM504',	'ITEM624',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'PIR 26652',	GETDATE(),	'PIR 26652',	GETDATE(),	0)
END

IF EXISTS(SELECT 1 FROM SGT_PAYMENT_ITEM_TYPE WHERE [ITEM_TYPE_CODE] = 'ITEM501' AND ISNULL(NON_MONTHLY_PAYMENT_GROUP_VALUE,'') <> 'TXAM')
BEGIN
UPDATE  SGT_PAYMENT_ITEM_TYPE SET NON_MONTHLY_PAYMENT_GROUP_VALUE = 'TXAM' WHERE [ITEM_TYPE_CODE] = 'ITEM501' AND ISNULL(NON_MONTHLY_PAYMENT_GROUP_VALUE,'') <> 'TXAM'
END

IF EXISTS(SELECT 1 FROM SGT_PAYMENT_ITEM_TYPE WHERE [ITEM_TYPE_CODE] = 'ITEM502' AND ISNULL(NON_MONTHLY_PAYMENT_GROUP_VALUE,'') <> 'NTXA')
BEGIN
UPDATE  SGT_PAYMENT_ITEM_TYPE SET NON_MONTHLY_PAYMENT_GROUP_VALUE = 'NTXA' WHERE [ITEM_TYPE_CODE] = 'ITEM502' AND ISNULL(NON_MONTHLY_PAYMENT_GROUP_VALUE,'') <> 'NTXA'
END

IF EXISTS(SELECT 1 FROM SGT_PAYMENT_ITEM_TYPE WHERE [ITEM_TYPE_CODE] = 'ITEM503' AND ISNULL(NON_MONTHLY_PAYMENT_GROUP_VALUE,'') <> 'FDTX')
BEGIN
UPDATE  SGT_PAYMENT_ITEM_TYPE SET NON_MONTHLY_PAYMENT_GROUP_VALUE = 'FDTX' WHERE [ITEM_TYPE_CODE] = 'ITEM503' AND ISNULL(NON_MONTHLY_PAYMENT_GROUP_VALUE,'') <> 'FDTX'
END

IF EXISTS(SELECT 1 FROM SGT_PAYMENT_ITEM_TYPE WHERE [ITEM_TYPE_CODE] = 'ITEM504' AND ISNULL(NON_MONTHLY_PAYMENT_GROUP_VALUE,'') <> 'STTX')
BEGIN
UPDATE  SGT_PAYMENT_ITEM_TYPE SET NON_MONTHLY_PAYMENT_GROUP_VALUE = 'STTX' WHERE [ITEM_TYPE_CODE] = 'ITEM504' AND ISNULL(NON_MONTHLY_PAYMENT_GROUP_VALUE,'') <> 'STTX'
END
