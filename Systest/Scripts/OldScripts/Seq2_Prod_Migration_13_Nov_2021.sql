/********************Purpose: PIR 23999******************************
*********************Created By: Surendra Reddy********************************
*********************Comments: *****************/

IF EXISTS (SELECT * FROM SGT_ACCOUNT_REFERENCE where CREATED_BY like '%23999%')
DELETE FROM SGT_GL_TRANSACTION WHERE ACCOUNT_REFERENCE_ID IN (SELECT ACCOUNT_REFERENCE_ID FROM SGT_ACCOUNT_REFERENCE WHERE CREATED_BY LIKE '%23999%')
DELETE FROM SGT_ACCOUNT_REFERENCE WHERE CREATED_BY LIKE '%23999%'
GO

IF NOT EXISTS (SELECT * FROM  [dbo].[SGS_CODE_VALUE] WHERE CODE_ID=1302 AND [CODE_VALUE] = 'PNTY')
INSERT INTO [dbo].[SGS_CODE_VALUE]
           ([CODE_ID],[CODE_VALUE],[DESCRIPTION],[DATA1],[DATA2],[DATA3],[COMMENTS],[START_DATE],[END_DATE],[CODE_VALUE_ORDER]
           ,[LEGACY_CODE_ID],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])
     VALUES
           (1302,'PNTY','Penalty',NULL,NULL ,NULL ,NULL,NULL,NULL,NULL,NULL ,'PIR_23999',GETDATE(),'PIR_23999',GETDATE(),0)
GO
--------------------------APPROVED PENALTY ACCOUNT REFERENCES START--------------------------------
IF NOT EXISTS (SELECT 1 FROM SGT_ACCOUNT_REFERENCE WHERE PLAN_ID = 1 AND SOURCE_TYPE_VALUE = 'EMPR' AND TRANSACTION_TYPE_VALUE = 'ITLV' AND STATUS_TRANSITION_VALUE = 'APVD' 
				AND DEBIT_ACCOUNT_ID = 26 AND CREDIT_ACCOUNT_ID = 255)
INSERT INTO [DBO].[SGT_ACCOUNT_REFERENCE]
           ([PLAN_ID],[FUND_ID],[FUND_VALUE],[DEPT_ID],[DEPT_VALUE],[ITEM_TYPE_ID],[ITEM_TYPE_VALUE],[FROM_ITEM_TYPE_ID],[FROM_ITEM_TYPE_VALUE],[TO_ITEM_TYPE_ID]
           ,[TO_ITEM_TYPE_VALUE],[TRANSACTION_TYPE_ID],[TRANSACTION_TYPE_VALUE],[STATUS_TRANSITION_ID],[STATUS_TRANSITION_VALUE],[SOURCE_TYPE_ID],[SOURCE_TYPE_VALUE]
           ,[GENERATE_GL_FLAG],[DEBIT_ACCOUNT_ID],[CREDIT_ACCOUNT_ID],[JOURNAL_DESCRIPTION],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])
     VALUES
           (1,1300,'483',1301,'1001',1302,'PNTY',1302,NULL,1302,NULL,1303,'ITLV',1309,'APVD',1304,'EMPR','1',26,255,'Employer Reporting Allocation GH','PIR_23999',GETDATE()
		   ,'PIR_23999',GETDATE(),0)
GO
IF NOT EXISTS (SELECT 1 FROM SGT_ACCOUNT_REFERENCE WHERE PLAN_ID = 12 AND SOURCE_TYPE_VALUE = 'EMPR' AND TRANSACTION_TYPE_VALUE = 'ITLV' AND STATUS_TRANSITION_VALUE = 'APVD' 
				AND DEBIT_ACCOUNT_ID = 10 AND CREDIT_ACCOUNT_ID = 255)
INSERT INTO [DBO].[SGT_ACCOUNT_REFERENCE]
           ([PLAN_ID],[FUND_ID],[FUND_VALUE],[DEPT_ID],[DEPT_VALUE],[ITEM_TYPE_ID],[ITEM_TYPE_VALUE],[FROM_ITEM_TYPE_ID],[FROM_ITEM_TYPE_VALUE],[TO_ITEM_TYPE_ID]
           ,[TO_ITEM_TYPE_VALUE],[TRANSACTION_TYPE_ID],[TRANSACTION_TYPE_VALUE],[STATUS_TRANSITION_ID],[STATUS_TRANSITION_VALUE],[SOURCE_TYPE_ID],[SOURCE_TYPE_VALUE]
           ,[GENERATE_GL_FLAG],[DEBIT_ACCOUNT_ID],[CREDIT_ACCOUNT_ID],[JOURNAL_DESCRIPTION],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])
     VALUES
           (12,1300,'470',1301,'2001',1302,'PNTY',1302,NULL,1302,NULL,1303,'ITLV',1309,'APVD',1304,'EMPR','1',10,255,'Employer Reporting Allocation ER','PIR_23999',GETDATE()
		   ,'PIR_23999',GETDATE(),0)
GO
--------------------------APPROVED PENALTY ACCOUNT REFERENCES END--------------------------------

--------------------------CANCELED PENALTY ACCOUNT REFERENCES START--------------------------------
IF NOT EXISTS (SELECT 1 FROM SGT_ACCOUNT_REFERENCE WHERE PLAN_ID = 1 AND SOURCE_TYPE_VALUE = 'EMPR' AND TRANSACTION_TYPE_VALUE = 'ITLV' AND STATUS_TRANSITION_VALUE = 'CNCL' 
				AND DEBIT_ACCOUNT_ID = 255 AND CREDIT_ACCOUNT_ID = 26)
INSERT INTO [DBO].[SGT_ACCOUNT_REFERENCE]
           ([PLAN_ID],[FUND_ID],[FUND_VALUE],[DEPT_ID],[DEPT_VALUE],[ITEM_TYPE_ID],[ITEM_TYPE_VALUE],[FROM_ITEM_TYPE_ID],[FROM_ITEM_TYPE_VALUE],[TO_ITEM_TYPE_ID]
           ,[TO_ITEM_TYPE_VALUE],[TRANSACTION_TYPE_ID],[TRANSACTION_TYPE_VALUE],[STATUS_TRANSITION_ID],[STATUS_TRANSITION_VALUE],[SOURCE_TYPE_ID],[SOURCE_TYPE_VALUE]
           ,[GENERATE_GL_FLAG],[DEBIT_ACCOUNT_ID],[CREDIT_ACCOUNT_ID],[JOURNAL_DESCRIPTION],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])
     VALUES
           (1,1300,'483',1301,'1001',1302,'PNTY',1302,NULL,1302,NULL,1303,'ITLV',1309,'CNCL',1304,'EMPR','1',255,26,'Employer Reporting Allocation GH','PIR_23999',GETDATE()
		   ,'PIR_23999',GETDATE(),0)
GO
IF NOT EXISTS (SELECT 1 FROM SGT_ACCOUNT_REFERENCE WHERE PLAN_ID = 12 AND SOURCE_TYPE_VALUE = 'EMPR' AND TRANSACTION_TYPE_VALUE = 'ITLV' AND STATUS_TRANSITION_VALUE = 'CNCL' 
				AND DEBIT_ACCOUNT_ID = 255 AND CREDIT_ACCOUNT_ID = 10)
INSERT INTO [DBO].[SGT_ACCOUNT_REFERENCE]
           ([PLAN_ID],[FUND_ID],[FUND_VALUE],[DEPT_ID],[DEPT_VALUE],[ITEM_TYPE_ID],[ITEM_TYPE_VALUE],[FROM_ITEM_TYPE_ID],[FROM_ITEM_TYPE_VALUE],[TO_ITEM_TYPE_ID]
           ,[TO_ITEM_TYPE_VALUE],[TRANSACTION_TYPE_ID],[TRANSACTION_TYPE_VALUE],[STATUS_TRANSITION_ID],[STATUS_TRANSITION_VALUE],[SOURCE_TYPE_ID],[SOURCE_TYPE_VALUE]
           ,[GENERATE_GL_FLAG],[DEBIT_ACCOUNT_ID],[CREDIT_ACCOUNT_ID],[JOURNAL_DESCRIPTION],[CREATED_BY],[CREATED_DATE],[MODIFIED_BY],[MODIFIED_DATE],[UPDATE_SEQ])
     VALUES
           (12,1300,'470',1301,'2001',1302,'PNTY',1302,NULL,1302,NULL,1303,'ITLV',1309,'CNCL',1304,'EMPR','1',255,10,'Employer Reporting Allocation ER','PIR_23999',GETDATE()
		   ,'PIR_23999',GETDATE(),0)
GO
--------------------------CANCELED PENALTY ACCOUNT REFERENCES END--------------------------------


/********************Purpose: PIR 24382******************************
*********************Created By: Saylee Pujari********************************
*********************Comments: Humana Payment file*****************/

IF NOT EXISTS (SELECT 1 FROM SGS_FILE WHERE [FILE_ID] = 105)
BEGIN
	SET IDENTITY_INSERT[SGS_FILE] ON;
	INSERT INTO SGS_FILE ([FILE_ID], [DESCRIPTION], DELIMITED_BY, TRANSACTION_CODE_POS, TRANSACTION_CODE_LENGTH, TRANSACTION_CODE_VALUE, HEADER_GROUP_POS, HEADER_GROUP_LENGTH, 
	XML_LAYOUT_FILE, INBOUND_MASK, MAILBOX_PATH_CODE, STAGING_PATH_CODE, ERROR_PATH_CODE, PROCESS_PATH_CODE, FILE_STATUS_ID, FILE_STATUS_VALUE, INBOUND_OUTBOUND_FLAG, CREATED_BY,
	 CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ, EMAIL_NOTIFICATION, OTHER_PARAMETERS, GROUP_PROCESS_FLAG)
	VALUES(105, 'Humana Medicare Part D Premium Payment File Out', ',', NULL, NULL, 'Header Detail', 0, 0, 'fleHumanaMedicarePartDPremiumPaymentFileOut','*.*', 'VPOutbox', 'VPStaging', 'VPError', 'VPOutProc', 
	26, 'A', 'O', 'PIR 24382', GETDATE(), 'PIR 24382', GETDATE(), 0, NULL, NULL, 'N')
	SET IDENTITY_INSERT[SGS_FILE] OFF;
END
GO

/********************Purpose: PIR 24283******************************
*********************Created By: Nurul Gondane********************************
*********************Comments:Need a suppressible warning on Benefit Calculation (Estimate and Final) and Service Purchase in LOB only. *****************/
IF NOT EXISTS (SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID=10430)
	INSERT INTO SGS_MESSAGES (MESSAGE_ID,DISPLAY_MESSAGE,SEVERITY_ID,SEVERITY_VALUE,INTERNAL_INSTRUCTIONS,EMPLOYER_INSTRUCTIONS,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)
    VALUES(10430,'Wage may have to be re-spread',16,'W',NULL,NULL,'PIR 24283',GETDATE(),'PIR 24283',GETDATE(),0)
GO

/********************Purpose: PIR 18594 ******************************
*********************Created By: Bora Bharat Reddy********************************
*********************Comments:SFN-58868 also needs to generate from wfmPersonMaintenance *****************/
IF EXISTS(SELECT 1 FROM SGS_COR_TEMPLATES WHERE TEMPLATE_NAME = 'SFN-58868'  AND ASSOCIATED_FORMS != 'wfmRefundApplicationMaintenance; wfmPersonMaintenance;')
BEGIN
	UPDATE SGS_COR_TEMPLATES SET ASSOCIATED_FORMS = 'wfmRefundApplicationMaintenance; wfmPersonMaintenance;' WHERE TEMPLATE_NAME = 'SFN-58868'
END


/********************Purpose: PIR 18493******************************
*********************Created By: Abhijeet Malwadkar********************************
*********************Comments:Application wizard changes *****************/
/*********************Comments:Change Messages 5505 *****************/
IF EXISTS(SELECT * FROM SGS_MESSAGES WHERE MESSAGE_ID = 5505 AND DISPLAY_MESSAGE = 'EITHER PERCENTAGE OF BENEFIT OR AMOUNT IS REQUIRED')
BEGIN
	UPDATE SGS_MESSAGES SET DISPLAY_MESSAGE = 'Either Percentage of Benefit or Amount is required – if choosing a flat amount remove the %' WHERE MESSAGE_ID = 5505
END
/*********************Comments:Application wizard New Messages *****************/
IF NOT EXISTS (SELECT 1 FROM SGS_MESSAGES WHERE MESSAGE_ID=10429)
	INSERT INTO SGS_MESSAGES (MESSAGE_ID,DISPLAY_MESSAGE,SEVERITY_ID,SEVERITY_VALUE,INTERNAL_INSTRUCTIONS,EMPLOYER_INSTRUCTIONS,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)
    VALUES(10429,'Your application is being submitted too early based upon termination date entered.  Your application can not be submitted more than 6 months in advance.',16,'E',NULL,NULL,'PIR 18493',GETDATE(),'PIR 18493',GETDATE(),0)
GO
IF NOT EXISTS (SELECT * FROM SGS_MESSAGES WHERE MESSAGE_ID=10431)
	INSERT INTO SGS_MESSAGES (MESSAGE_ID,DISPLAY_MESSAGE,SEVERITY_ID,SEVERITY_VALUE,INTERNAL_INSTRUCTIONS,EMPLOYER_INSTRUCTIONS,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)
    VALUES(10431,'You already submitted an Application for this plan.  Please contact NDPERS to make changes or select ''View the status of my Application'' from the previous page.',16,'E',NULL,NULL,'PIR 18493',GETDATE(),'PIR 18493',GETDATE(),0)
GO
IF NOT EXISTS (SELECT * FROM SGS_MESSAGES WHERE MESSAGE_ID=10432)
	INSERT INTO SGS_MESSAGES (MESSAGE_ID,DISPLAY_MESSAGE,SEVERITY_ID,SEVERITY_VALUE,INTERNAL_INSTRUCTIONS,EMPLOYER_INSTRUCTIONS,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)
    VALUES(10432,'If you select to refund/rollover this plan account you also have to refund/rollover your other plans.',16,'W',NULL,NULL,'PIR 18493',GETDATE(),'PIR 18493',GETDATE(),0)
GO
IF NOT EXISTS (SELECT * FROM SGS_MESSAGES WHERE MESSAGE_ID=10433)
	INSERT INTO SGS_MESSAGES (MESSAGE_ID,DISPLAY_MESSAGE,SEVERITY_ID,SEVERITY_VALUE,INTERNAL_INSTRUCTIONS,EMPLOYER_INSTRUCTIONS,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)
    VALUES(10433,'Primary and Secondary Account Number should not be same.',16,'E',NULL,NULL,'PIR 18493',GETDATE(),'PIR 18493',GETDATE(),0)
GO
IF NOT EXISTS (SELECT * FROM SGS_MESSAGES WHERE MESSAGE_ID=10434)
	INSERT INTO SGS_MESSAGES (MESSAGE_ID,DISPLAY_MESSAGE,SEVERITY_ID,SEVERITY_VALUE,INTERNAL_INSTRUCTIONS,EMPLOYER_INSTRUCTIONS,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)
    VALUES(10434,'Percentage on first selection cannot be 100% when entering a secondary ACH info.',16,'E',NULL,NULL,'PIR 18493',GETDATE(),'PIR 18493',GETDATE(),0)
GO
IF NOT EXISTS (SELECT * FROM SGS_MESSAGES WHERE MESSAGE_ID=10435)
	INSERT INTO SGS_MESSAGES (MESSAGE_ID,DISPLAY_MESSAGE,SEVERITY_ID,SEVERITY_VALUE,INTERNAL_INSTRUCTIONS,EMPLOYER_INSTRUCTIONS,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)
    VALUES(10435,'Routing Number is required for remaining amount to be deposited.',16,'E',NULL,NULL,'PIR 18493',GETDATE(),'PIR 18493',GETDATE(),0)
GO
IF NOT EXISTS (SELECT * FROM SGS_MESSAGES WHERE MESSAGE_ID=10436)
	INSERT INTO SGS_MESSAGES (MESSAGE_ID,DISPLAY_MESSAGE,SEVERITY_ID,SEVERITY_VALUE,INTERNAL_INSTRUCTIONS,EMPLOYER_INSTRUCTIONS,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)
    VALUES(10436,'Your application has been successfully submitted and must be on file for at least 31 days prior to payment.  Your payment date will be determined after your employer submits your termination date and your last monthly retirement contribution is received by NDPERS.  Payments are issued the first business day of each month.',16,'W',NULL,NULL,'PIR 18493',GETDATE(),'PIR 18493',GETDATE(),0)
GO
IF NOT EXISTS (SELECT * FROM SGS_MESSAGES WHERE MESSAGE_ID=10437)
	INSERT INTO SGS_MESSAGES (MESSAGE_ID,DISPLAY_MESSAGE,SEVERITY_ID,SEVERITY_VALUE,INTERNAL_INSTRUCTIONS,EMPLOYER_INSTRUCTIONS,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ)
    VALUES(10437,'If you have multiple retirement plans with NDPERS you must terminate all NDPERS retirement plan participation and must refund/rollover all retirement plans.',16,'W',NULL,NULL,'PIR 18493',GETDATE(),'PIR 18493',GETDATE(),0)
GO
/*********************Comments:Change drop down list value*****************/
IF EXISTS(SELECT * FROM SGS_CODE_VALUE WHERE CODE_ID =7014 AND CODE_VALUE = 'ARPB' AND [DESCRIPTION] = 'Apply for Retirement Plan Benefits')
BEGIN
	UPDATE SGS_CODE_VALUE SET [DESCRIPTION] = 'Apply for Retirement/Refund-Rollover/Deferral/Disability' WHERE CODE_ID =7014 AND CODE_VALUE = 'ARPB'
END
/*********************Comments:Change drop down list value*****************/
IF EXISTS(SELECT * FROM SGS_CODE_VALUE WHERE CODE_ID =1904 AND CODE_VALUE = 'RFND' AND data2 = 'Refunds')
BEGIN
	UPDATE SGS_CODE_VALUE SET data2 = 'Refund/Rollover' WHERE CODE_ID =1904 AND CODE_VALUE = 'RFND'
END
/*********************Comments:State code updated with contry code in data 2*****************/

IF EXISTS (SELECT 1 FROM [dbo].[SGS_CODE] WHERE CODE_ID = 150 AND ISNULL(DATA2_CAPTION,'') = '')
	UPDATE [SGS_CODE] SET DATA2_CAPTION = 'Country Code', DATA2_TYPE = 'str' WHERE CODE_ID = 150
GO

IF EXISTS (SELECT 1 FROM [SGS_CODE_VALUE] WHERE CODE_ID = 150 AND ISNULL(DATA2,'') = '' )
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='AK' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='AL' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='AR' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='AZ' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='CA' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='CO' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='CT' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='DC' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='DE' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='FL' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='GA' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='HI' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='IA' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='ID' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='IL' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='IN' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='KS' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='KY' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='LA' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='MA' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='MD' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='ME' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='MI' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='MN' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='MO' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='MS' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='MT' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='NC' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='ND' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='NE' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='NH' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='NJ' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='NM' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='NV' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='NY' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='OH' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='OK' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='OR' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='PA' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='PR' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='RI' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='SC' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='SD' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='TN' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='TX' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='UT' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='VA' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='VT' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='WA' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='WI' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='WV' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='WY' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='AE' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='AP' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='AA' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='AS' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='FM' AND ISNULL(DATA2,'') = ''
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='GU' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='MH' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='MP' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='PW' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0001' WHERE CODE_ID = 150 AND CODE_VALUE='VI' AND ISNULL(DATA2,'') = '' 
	/*------------------------------Canada Country State list-----------------------*/
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='AB' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='BC' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='MB' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='NB' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='NL' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='NS' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='NT' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='NU' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='ON' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='QC' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='PE' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='SK' AND ISNULL(DATA2,'') = '' 
	UPDATE [SGS_CODE_VALUE] SET DATA2 = '0036' WHERE CODE_ID = 150 AND CODE_VALUE='YT' AND ISNULL(DATA2,'') = '' 
GO