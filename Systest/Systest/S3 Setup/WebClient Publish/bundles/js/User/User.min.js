app.directive("userTypeList",["$compile","$rootScope","$http","$SgMessagesService","$timeout",function(n,t,i,r,u){return{restrict:"E",scope:{clientId:"=",userTypes:"=",isAdminMapping:"=",callBackFunction:"&",isRefreshRequired:"="},replace:!0,link:function(n){n.iobjSelectedUser=null;n.lstUserType=[{ID:"owner",Description:"Owner"},{ID:"developer",Description:"Developer"},{ID:"ba",Description:"BA"},{ID:"viewer",Description:"Viewer"}];n.lstStatus=[{ID:"Active",Value:"active"},{ID:"InActive",Value:"inactive"}];n.unmapUser=function(){n.iobjSelectedUser&&r.Message("Delete","User Name :"+n.iobjSelectedUser.User.UserName+" will be deleted, Do you want to continue?",!0,function(r){r&&(t.IsLoading=!0,i({method:"POST",data:{clientID:n.clientId,userID:n.iobjSelectedUser.User.UserID},headers:{"Content-Type":"application/json; charset=utf-8"},async:!1,url:"api/Admin/UnMapUserFromClient"}).then(function(i){if(i.data&&i.data=="SUCCESS"){var r=n.userTypes.indexOf(n.iobjSelectedUser);n.isRefreshRequired=!0;n.$broadcast("stDeleteRowBroadcast",{objDeleted:n.iobjSelectedUser});r>n.userTypes.length-1&&(r-=1);n.userTypes&&n.userTypes.length&&n.selectUser(n.userTypes[r])}t.IsLoading=!1},function(n){t.IsLoading=!1;t.showExceptionDetails(n.data)}))})};n.selectUser=function(t){n.iobjSelectedUser=t};n.mapUsers=function(){if(n.clientId){var r=n.$new();r.IsShowRole=!n.isAdminMapping;r.lstUnMappedUsers=[];r.llstSelectedUsers=[];i({method:"POST",data:{clientId:n.clientId,adminMapping:n.isAdminMapping},headers:{"Content-Type":"application/json; charset=utf-8"},async:!1,url:"api/Admin/GetUsersForOwnerMapping"}).then(function(n){n&&n.data&&(r.lstUnMappedUsers=n.data)},function(n){t.showExceptionDetails(n.data)});r.selectAllUsers=function(){for(var n=0,t=r.lstUnMappedUsers.length;n<t;n++)r.llstSelectedUsers.push(r.lstUnMappedUsers[n]);r.lstUnMappedUsers=[]};r.selectUser=function(n){var t=r.lstUnMappedUsers.indexOf(n);r.lstUnMappedUsers.splice(t,1);r.llstSelectedUsers.push(n)};r.unSelectAllUsers=function(){for(var n=0,t=r.llstSelectedUsers.length;n<t;n++)r.lstUnMappedUsers.push(r.llstSelectedUsers[n]);r.llstSelectedUsers=[]};r.unSelectUser=function(n){var t=r.llstSelectedUsers.indexOf(n);r.llstSelectedUsers.splice(t,1);r.lstUnMappedUsers.push(n)};dialogMapuser=t.showDialog(r,"Assign User","StartUp/views/ClientUserAssociationDialog.html",{minHeight:600,minWidth:1300});r.OkClick=function(){n.isRefreshRequired=!0;var t=(new Date).getUTCMonth()+1;n.saveUserClientMapping(r.llstSelectedUsers.map(function(i){return{User:i,UserType:n.isAdminMapping?"owner":"developer",StartDate:t+"/"+(new Date).getUTCDate()+"/"+(new Date).getUTCFullYear(),EndDate:null,ClientID:n.clientId,Status:"active"}}));r.closeDialog()};r.closeDialog=function(){dialogMapuser.close()}}};n.mapADUsers=function(){var r=n.$new();r.IsShowRole=!n.isAdminMapping;r.searchADUser=function(){t.IsLoading=!0;i({method:"POST",data:{clientID:n.clientId,samAccounName:r.samAccountName,domainName:r.domainName,name:r.name,email:r.email,adminMapping:n.isAdminMapping},headers:{"Content-Type":"application/json; charset=utf-8"},async:!1,url:"api/Admin/GetADUsersForOwnerMapping"}).then(function(i){t.IsLoading=!1;r.llstUnMappedADUsers=i.data;n.isRefreshRequired=!0},function(n){t.IsLoading=!1;t.showExceptionDetails(n.data)})};r.OK=function(){r.beforeOK();var t=(new Date).getUTCMonth()+1;n.saveUserClientMapping(r.selectedADUsers.map(function(i){return{User:i,UserType:n.isAdminMapping?"owner":"developer",StartDate:t+"/"+(new Date).getUTCDate()+"/"+(new Date).getUTCFullYear(),EndDate:null,ClientID:n.clientId,Status:"active"}}));r.closeDialog()};r.dialogMapuser=t.showDialog(r,"Assign Active Directory User","StartUp/views/GetActiveDirectoryUsers.html",{width:1400,height:600})};n.saveUserClientMapping=function(i){i&&$.ajax({url:"api/Admin/SaveUserClientMapping",type:"POST",async:!0,data:JSON.stringify(i),dataType:"json",contentType:"application/json; charset=utf-8",success:function(t){n.$evalAsync(function(){if(t&&t.length>0)for(var i=0,r=t.length;i<r;i++)n.userTypes.push(t[i])})},error:function(n){t.showExceptionDetails(n)}})};n.createUser=function(){n.callBackFunction&&n.callBackFunction()};n.onUserUpdateClick=function(r,u){i({method:"POST",data:r,headers:{"Content-Type":"application/json; charset=utf-8"},url:"api/Login/UpdateClientUserTypeDetails"}).then(function(t){t&&t.data=="Cannot map user as owner for more than one client."?toastr.error(t.data):(toastr.success("User Updated sucessfully."),n.$broadcast("stUpdateRowBroadcast",{objUpdated:r,stid:u}))},function(n){t.IsProjectLoaded=!1;t.showExceptionDetails(n.data)})};n.reSendActivationMailForUser=function(n){n&&n.User&&n.User.UserID?i({method:"POST",data:{UserID:n.User.UserID},headers:{"Content-Type":"application/json; charset=utf-8"},url:"api/Admin/ReSendActivationMail"}).then(function(n){n.data&&n.data.length},function(n){t.showExceptionDetails(n.data)}):t.showExceptionDetails("User ID not found.")};n.initializeComponentPicker=function(){ComponentsPickers.init()};u(function(){n.userTypes&&n.userTypes.length&&(n.iobjSelectedUser=n.userTypes[0])})},templateUrl:"User/views/userTypeList.html"}}]);