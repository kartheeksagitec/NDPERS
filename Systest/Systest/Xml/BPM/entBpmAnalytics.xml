<entity ID="entBpmAnalytics" Text="Analytics" sfwObjectID="busBpmAnalytics" sfwObjectType="NeoSpin.BusinessObjects.busBpmAnalytics, NeoSpinBusinessObjects, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" sfwView="False">
  <queries>
    <query ID="ActivationRankingAnalytics" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 10 T_INST_CREATED.PROCESS_ID, SBP.DESCRIPTION AS PROCESS,&#xD;&#xA;T_INST_CREATED.INST_COUNT AS INSTANCE_COUNT&#xD;&#xA;FROM SGW_BPM_PROCESS SBP WITH(NOLOCK)&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS INST_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK)  &#x9;&#xD;&#xA;&#x9;where SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_INST_CREATED ON T_INST_CREATED.PROCESS_ID = SBP.PROCESS_ID&#xD;&#xA;ORDER BY PROCESS" sfwOracle="SELECT  T_INST_CREATED.PROCESS_ID, SBP.DESCRIPTION AS PROCESS,&#xD;&#xA;T_INST_CREATED.INST_COUNT AS INSTANCE_COUNT&#xD;&#xA;FROM SGW_BPM_PROCESS SBP&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS INST_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI  &#x9;&#xD;&#xA;&#x9;where SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_INST_CREATED ON T_INST_CREATED.PROCESS_ID = SBP.PROCESS_ID&#xD;&#xA;ORDER BY PROCESS&#xD;&#xA;FETCH FIRST 10 ROWS ONLY" sfwPostgre="SELECT T_INST_CREATED.PROCESS_ID, SBP.DESCRIPTION AS PROCESS,&#xD;&#xA;T_INST_CREATED.INST_COUNT AS INSTANCE_COUNT&#xD;&#xA;FROM SGW_BPM_PROCESS SBP &#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS INST_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI  &#x9;&#xD;&#xA;&#x9;where SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_INST_CREATED ON T_INST_CREATED.PROCESS_ID = SBP.PROCESS_ID&#xD;&#xA;ORDER BY PROCESS LIMIT 10">
      <parameters>
        <parameter ID="@DATE_FROM" sfwDataType="DateTime" />
        <parameter ID="@DATE_TO" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="ProcessRankingAnalyticsByProcessId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT SBP.DESCRIPTION AS PROCESS, sbp.PROCESS_ID,&#xD;&#xA;ISNULL(T_ACTV_INST.ACTV_COUNT,0) AS ACTV_COUNT,&#xD;&#xA;ISNULL(T_PROC_INST.PROC_COUNT,0) AS PROC_COUNT,&#xD;&#xA;ISNULL(T_TERMSUSP_INST.TERMSUSP_COUNT,0) AS TERM_SUSP_COUNT&#xD;&#xA;FROM SGW_BPM_PROCESS SBP WITH(NOLOCK)&#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS ACTV_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK)  &#x9;&#xD;&#xA;&#x9;WHERE CONVERT(DATETIME,CONVERT(CHAR,SBPI.CREATED_DATE,103),103) BETWEEN  @DATE_FROM AND @DATE_TO AND SBPI.STATUS_VALUE = 'INPC'&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_ACTV_INST ON T_ACTV_INST.PROCESS_ID = SBP.PROCESS_ID&#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS PROC_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK)  &#x9;&#xD;&#xA;&#x9;WHERE CONVERT(DATETIME,CONVERT(CHAR,SBPI.CREATED_DATE,103),103) BETWEEN  @DATE_FROM AND @DATE_TO AND SBPI.STATUS_VALUE = 'PROC'&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_PROC_INST ON T_PROC_INST.PROCESS_ID = SBP.PROCESS_ID&#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS TERMSUSP_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK) &#xD;&#xA;&#x9;&#xD;&#xA;&#x9;WHERE CONVERT(DATETIME,CONVERT(CHAR,SBPI.CREATED_DATE,103),103) BETWEEN  @DATE_FROM AND @DATE_TO  AND SBPI.STATUS_VALUE IN ('TERM','FAIL')&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_TERMSUSP_INST ON T_TERMSUSP_INST.PROCESS_ID = SBP.PROCESS_ID WHERE SBP.PROCESS_ID = @PROCESS_ID&#xD;&#xA;&#x9;AND (ACTV_COUNT &gt; 0 or PROC_COUNT &gt; 0 or TERMSUSP_COUNT &gt; 0)&#xD;&#xA; ORDER BY PROCESS " sfwOracle="SELECT DISTINCT SBP.DESCRIPTION AS PROCESS, sbp.PROCESS_ID,&#xD;&#xA;COALESCE(T_ACTV_INST.ACTV_COUNT,0) AS ACTV_COUNT,&#xD;&#xA;COALESCE(T_PROC_INST.PROC_COUNT,0) AS PROC_COUNT,&#xD;&#xA;COALESCE(T_TERMSUSP_INST.TERMSUSP_COUNT,0) AS TERM_SUSP_COUNT&#xD;&#xA;FROM SGW_BPM_PROCESS SBP &#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS ACTV_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI   &#x9;&#xD;&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN  @DATE_FROM AND @DATE_TO AND SBPI.STATUS_VALUE = 'INPC'&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_ACTV_INST ON T_ACTV_INST.PROCESS_ID = SBP.PROCESS_ID&#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS PROC_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI   &#x9;&#xD;&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN  @DATE_FROM AND @DATE_TO AND SBPI.STATUS_VALUE = 'PROC'&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_PROC_INST ON T_PROC_INST.PROCESS_ID = SBP.PROCESS_ID&#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS TERMSUSP_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI  &#xD;&#xA;&#x9;&#xD;&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN  @DATE_FROM AND @DATE_TO  AND SBPI.STATUS_VALUE IN ('TERM','FAIL')&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_TERMSUSP_INST ON T_TERMSUSP_INST.PROCESS_ID = SBP.PROCESS_ID WHERE SBP.PROCESS_ID = @PROCESS_ID&#xD;&#xA;&#x9;AND (ACTV_COUNT &gt; 0 or PROC_COUNT &gt; 0 or TERMSUSP_COUNT &gt; 0)&#xD;&#xA; ORDER BY PROCESS" sfwPostgre="SELECT&#xA;DISTINCT sbp.description AS process,&#xA;sbp.process_id,&#xA;COALESCE(t_actv_inst.actv_count,&#xA;0) AS actv_count,&#xA;COALESCE(t_proc_inst.proc_count,&#xA;0) AS proc_count,&#xA;COALESCE(t_termsusp_inst.termsusp_count,&#xA;0) AS term_susp_count&#xA;FROM&#xA;dbo.sgw_bpm_process AS sbp&#xA;LEFT OUTER JOIN (SELECT&#xA;COUNT(*) AS actv_count,&#xA;sbpi.process_id&#xA;FROM&#xA;dbo.sgw_bpm_process_instance AS sbpi&#xA;WHERE&#xA;aws_sqlserver_ext.conv_string_to_datetime('DATETIME',&#xA;aws_sqlserver_ext.conv_datetime_to_string('CHAR',&#xA;'DATETIME',&#xA;sbpi.created_date,&#xA;103),&#xA;103) BETWEEN @DATE_FROM AND&#xA;@DATE_TO AND&#xA;sbpi.status_value = 'INPC'&#xA;GROUP BY sbpi.process_id) AS t_actv_inst&#xA;ON t_actv_inst.process_id = sbp.process_id&#xA;LEFT OUTER JOIN (SELECT&#xA;COUNT(*) AS proc_count,&#xA;sbpi.process_id&#xA;FROM&#xA;dbo.sgw_bpm_process_instance AS sbpi&#xA;WHERE&#xA;aws_sqlserver_ext.conv_string_to_datetime('DATETIME',&#xA;aws_sqlserver_ext.conv_datetime_to_string('CHAR',&#xA;'DATETIME',&#xA;sbpi.created_date,&#xA;103),&#xA;103) BETWEEN @DATE_FROM AND&#xA;@DATE_TO AND&#xA;sbpi.status_value = 'PROC'&#xA;GROUP BY sbpi.process_id) AS t_proc_inst&#xA;ON t_proc_inst.process_id = sbp.process_id&#xA;LEFT OUTER JOIN (SELECT&#xA;COUNT(*) AS termsusp_count,&#xA;sbpi.process_id&#xA;FROM&#xA;dbo.sgw_bpm_process_instance AS sbpi&#xA;WHERE&#xA;aws_sqlserver_ext.conv_string_to_datetime('DATETIME',&#xA;aws_sqlserver_ext.conv_datetime_to_string('CHAR',&#xA;'DATETIME',&#xA;sbpi.created_date,&#xA;103),&#xA;103) BETWEEN @DATE_FROM AND&#xA;@DATE_TO AND&#xA;sbpi.status_value IN ('TERM',&#xA;'FAIL')&#xA;GROUP BY sbpi.process_id) AS t_termsusp_inst&#xA;ON t_termsusp_inst.process_id = sbp.process_id&#xA;WHERE&#xA;sbp.process_id = @PROCESS_ID AND&#xA;(actv_count &gt; 0 OR proc_count &gt; 0 OR termsusp_count &gt; 0)&#xA;ORDER BY process NULLS FIRST">
      <parameters>
        <parameter ID="@DATE_FROM" sfwDataType="DateTime" />
        <parameter ID="@DATE_TO" sfwDataType="DateTime" />
        <parameter ID="@PROCESS_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="ProcessRankingAnalytics" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 10 SBP.DESCRIPTION AS PROCESS, sbp.PROCESS_ID,&#xD;&#xA;ISNULL(T_ACTV_INST.ACTV_COUNT,0) AS ACTV_COUNT,&#xD;&#xA;ISNULL(T_PROC_INST.PROC_COUNT,0) AS PROC_COUNT,&#xD;&#xA;ISNULL(T_TERMSUSP_INST.TERMSUSP_COUNT,0) AS TERM_SUSP_COUNT&#xD;&#xA;FROM SGW_BPM_PROCESS SBP WITH(NOLOCK)&#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS ACTV_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK)  &#x9;&#xD;&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO AND SBPI.STATUS_VALUE = 'INPC'&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_ACTV_INST ON T_ACTV_INST.PROCESS_ID = SBP.PROCESS_ID&#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS PROC_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK)  &#x9;&#xD;&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO AND SBPI.STATUS_VALUE = 'PROC'&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_PROC_INST ON T_PROC_INST.PROCESS_ID = SBP.PROCESS_ID&#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS TERMSUSP_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK) &#xD;&#xA;&#x9;&#xD;&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO AND SBPI.STATUS_VALUE IN ('TERM','FAIL')&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_TERMSUSP_INST ON T_TERMSUSP_INST.PROCESS_ID = SBP.PROCESS_ID WHERE (ACTV_COUNT &gt; 0 or PROC_COUNT &gt; 0 or TERMSUSP_COUNT &gt; 0)&#xD;&#xA; ORDER BY PROCESS " sfwOracle="SELECT  SBP.DESCRIPTION AS PROCESS, sbp.PROCESS_ID,&#xD;&#xA;COALESCE(T_ACTV_INST.ACTV_COUNT,0) AS ACTV_COUNT,&#xD;&#xA;COALESCE(T_PROC_INST.PROC_COUNT,0) AS PROC_COUNT,&#xD;&#xA;COALESCE(T_TERMSUSP_INST.TERMSUSP_COUNT,0) AS TERM_SUSP_COUNT&#xD;&#xA;FROM SGW_BPM_PROCESS SBP &#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS ACTV_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI   &#x9;&#xD;&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO AND SBPI.STATUS_VALUE = 'INPC'&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_ACTV_INST ON T_ACTV_INST.PROCESS_ID = SBP.PROCESS_ID&#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS PROC_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI   &#x9;&#xD;&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO AND SBPI.STATUS_VALUE = 'PROC'&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_PROC_INST ON T_PROC_INST.PROCESS_ID = SBP.PROCESS_ID&#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS TERMSUSP_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI  &#xD;&#xA;&#x9;&#xD;&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO AND SBPI.STATUS_VALUE IN ('TERM','FAIL')&#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID ) T_TERMSUSP_INST ON T_TERMSUSP_INST.PROCESS_ID = SBP.PROCESS_ID WHERE (ACTV_COUNT &gt; 0 or PROC_COUNT &gt; 0 or TERMSUSP_COUNT &gt; 0)&#xD;&#xA; ORDER BY PROCESS &#xD;&#xA; FETCH FIRST 10 ROWS ONLY" sfwPostgre="SELECT&#xD;&#xA;sbp.description AS process,&#xD;&#xA;sbp.process_id,&#xD;&#xA;COALESCE(t_actv_inst.actv_count,&#xD;&#xA;0) AS actv_count,&#xD;&#xA;COALESCE(t_proc_inst.proc_count,&#xD;&#xA;0) AS proc_count,&#xD;&#xA;COALESCE(t_termsusp_inst.termsusp_count,&#xD;&#xA;0) AS term_susp_count&#xD;&#xA;FROM&#xD;&#xA;dbo.sgw_bpm_process AS sbp&#xD;&#xA;LEFT OUTER JOIN (SELECT&#xD;&#xA;COUNT(*) AS actv_count,&#xD;&#xA;sbpi.process_id&#xD;&#xA;FROM&#xD;&#xA;dbo.sgw_bpm_process_instance AS sbpi&#xD;&#xA;WHERE&#xD;&#xA;sbpi.created_date BETWEEN @DATE_FROM AND&#xD;&#xA;@DATE_TO AND&#xD;&#xA;sbpi.status_value = 'INPC'&#xD;&#xA;GROUP BY sbpi.process_id) AS t_actv_inst&#xD;&#xA;ON t_actv_inst.process_id = sbp.process_id&#xD;&#xA;LEFT OUTER JOIN (SELECT&#xD;&#xA;COUNT(*) AS proc_count,&#xD;&#xA;sbpi.process_id&#xD;&#xA;FROM&#xD;&#xA;dbo.sgw_bpm_process_instance AS sbpi&#xD;&#xA;WHERE&#xD;&#xA;sbpi.created_date BETWEEN @DATE_FROM AND&#xD;&#xA;@DATE_TO AND&#xD;&#xA;sbpi.status_value = 'PROC'&#xD;&#xA;GROUP BY sbpi.process_id) AS t_proc_inst&#xD;&#xA;ON t_proc_inst.process_id = sbp.process_id&#xD;&#xA;LEFT OUTER JOIN (SELECT&#xD;&#xA;COUNT(*) AS termsusp_count,&#xD;&#xA;sbpi.process_id&#xD;&#xA;FROM&#xD;&#xA;dbo.sgw_bpm_process_instance AS sbpi&#xD;&#xA;WHERE&#xD;&#xA;sbpi.created_date BETWEEN @DATE_FROM AND&#xD;&#xA;@DATE_TO AND&#xD;&#xA;sbpi.status_value IN ('TERM',&#xD;&#xA;'FAIL')&#xD;&#xA;GROUP BY sbpi.process_id) AS t_termsusp_inst&#xD;&#xA;ON t_termsusp_inst.process_id = sbp.process_id&#xD;&#xA;WHERE&#xD;&#xA;(actv_count &gt; 0 OR proc_count &gt; 0 OR termsusp_count &gt; 0)&#xD;&#xA;ORDER BY process NULLS FIRST LIMIT 10">
      <parameters>
        <parameter ID="@DATE_FROM" sfwDataType="DateTime" />
        <parameter ID="@DATE_TO" sfwDataType="DateTime" />
      </parameters>
    </query>
  </queries>
  <commonproperties />
  <checklist />
  <initialload />
  <delete />
  <validatedelete />
  <softerror />
  <groupslist />
  <harderror />
  <constraint>
    <item sfwObjectBased="True" sfwFieldName="IdtDateFrom" sfwDataType="datetime" sfwDisplayName="Date From is greater than Date To" sfwOperator="LessThanEqual" sfwRelatedField="IdtDateTo" />
  </constraint>
  <rules />
  <ExtraFields />
  <methods>
    <method sfwMethodType="Load" ID="Group1" sfwMode="All">
      <item ID="LoadAnalyticsChart" sfwDataType="Void" sfwParameter="aintProcessId" sfwItemType="Method" />
      <parameter ID="aintProcessId" sfwDataType="Int32" />
    </method>
  </methods>
  <lifecycle />
  <attributes>
    <attribute ID="ActivityInstanceId" sfwType="Column" sfwValue="activity_instance_id" sfwIsNull="False" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" />
    <attribute sfwDataType="int32" sfwType="Property" ID="IintProcessId" sfwValue="iintProcessId" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtDateFrom" sfwValue="idtDateFrom" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtDateTo" sfwValue="idtDateTo" />
    <attribute sfwType="Collection" sfwEntity="entBpmProcessRankingAnalytics" ID="lstProcessRankingAnalytics" sfwValue="iclbProcessRankingAnalytics" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrProcessName" sfwValue="istrProcessName" />
    <attribute sfwDataType="int32" sfwType="Property" ID="IintInstanceCount" sfwValue="iintInstanceCount" />
  </attributes>
  <objectmethods>
    <method ID="LoadAnalyticsChart" sfwReturnType="ArrayList">
      <parameters>
        <parameter ID="aintProcessId" sfwDataType="Int32" />
      </parameters>
    </method>
  </objectmethods>
</entity>