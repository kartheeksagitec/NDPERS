<?xml version="1.0" encoding="utf-8"?>
<entity ID="entBenefitCalculationFasMonths" sfwActive="True" sfwStatus="Valid" sfwType="BusinessRule" sfwMainCDO="icdoBenefitCalculationFasMonths" sfwObjectID="busBenefitCalculationFasMonths" sfwTableName="sgt_benefit_calculation_fas_months" sfwView="False">
  <rules />
  <delete />
  <checklist />
  <initialload />
  <softerror />
  <harderror />
  <validatedelete />
  <updateablecdo />
  <queries>
    <query ID="LoadFASSalaryRecords" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="CREATE TABLE #SGT_TEMP_FAS&#xD;&#xA;(&#xD;&#xA;PERSON_ACCOUNT_ID INT NULL,&#xD;&#xA;PAY_PERIOD_MONTH INT NULL,&#xD;&#xA;PAY_PERIOD_YEAR INT NULL,&#xD;&#xA;EFFECTIVE_DATE DATETIME NULL,&#xD;&#xA;SALARY_AMOUNT DECIMAL(13,2) NULL,&#xD;&#xA;PLAN_ID INT NULL,&#xD;&#xA;PLAN_NAME VARCHAR(75) NULL,&#xD;&#xA;PLAN_CODE VARCHAR(75) NULL,&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;INSERT INTO #SGT_TEMP_FAS(PERSON_ACCOUNT_ID,PAY_PERIOD_MONTH, PAY_PERIOD_YEAR,EFFECTIVE_DATE, SALARY_AMOUNT,PLAN_ID, PLAN_NAME, PLAN_CODE)&#xD;&#xA;SELECT  PERSON_ACCOUNT_ID,PAY_PERIOD_MONTH,PAY_PERIOD_YEAR,EFFECTIVE_DATE,SALARY_AMOUNT,PLAN_ID,PLAN_NAME,PLAN_CODE FROM&#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;A.PERSON_ACCOUNT_ID,&#xD;&#xA;A.PAY_PERIOD_MONTH,&#xD;&#xA;A.PAY_PERIOD_YEAR,&#xD;&#xA;MAX(A.EFFECTIVE_DATE) 'EFFECTIVE_DATE',&#xD;&#xA;SUM(A.SALARY_AMOUNT) AS SALARY_AMOUNT,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION A&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT B ON A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PLAN PLN ON PLN.PLAN_ID=B.PLAN_ID&#xD;&#xA;WHERE B.PERSON_ID=@PERSON_ID AND&#xD;&#xA; (B.PLAN_ID =@PLAN_ID&#xD;&#xA;OR B.PLAN_ID IN(SELECT PLAN_ID FROM SGT_PLAN SUB WHERE PLAN_ID IN (1,2,20,4,5,26,27,29,3,30) AND 1=(CASE WHEN @PLAN_ID=6 THEN 0 ELSE 1 END)))&#xD;&#xA;AND A.SUBSYSTEM_VALUE IN ('PAYR','CONV','ADJS','PURC','ACTR') AND&#xD;&#xA;(A.SALARY_AMOUNT IS NOT NULL AND A.SALARY_AMOUNT !=0) AND&#xD;&#xA;EFFECTIVE_DATE &lt;= @LAST_CONT_DATE AND&#xD;&#xA;B.PERSON_ACCOUNT_ID != @RTW_PERSON_ACCOUNT_ID&#xD;&#xA;AND B.PLAN_PARTICIPATION_STATUS_VALUE NOT IN ('TICR',&#xD;&#xA;'TRDB',&#xD;&#xA;'TRDC',&#xD;&#xA;'TRTF',&#xD;&#xA;'WTN1',&#xD;&#xA;'CAN1')&#xD;&#xA;GROUP BY A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_MONTH,A.PAY_PERIOD_YEAR,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;) AS MAINTAB&#xD;&#xA;&#xD;&#xA;UPDATE #SGT_TEMP_FAS SET PLAN_ID = 0, PLAN_NAME = 'Combined', PLAN_CODE = 'COMB' ,PERSON_ACCOUNT_ID= null&#xD;&#xA;WHERE EXISTS (SELECT PAY_PERIOD_YEAR,PAY_PERIOD_MONTH FROM #SGT_TEMP_FAS A WHERE #SGT_TEMP_FAS.PAY_PERIOD_YEAR = A.PAY_PERIOD_YEAR AND&#xD;&#xA;#SGT_TEMP_FAS.PAY_PERIOD_MONTH = A.PAY_PERIOD_MONTH&#xD;&#xA;GROUP BY PAY_PERIOD_YEAR,PAY_PERIOD_MONTH HAVING COUNT(1) &gt; 1)&#xD;&#xA;&#xD;&#xA;SELECT TOP (@FASCOUNT) PERSON_ACCOUNT_ID,PAY_PERIOD_YEAR,PAY_PERIOD_MONTH,EFFECTIVE_DATE,SALARY_AMOUNT,PLAN_ID,PLAN_NAME,PLAN_CODE FROM&#xD;&#xA;(&#xD;&#xA;SELECT TOP (@FASPERIODRANGE) &#xD;&#xA;A.PERSON_ACCOUNT_ID,&#xD;&#xA;A.PAY_PERIOD_MONTH,&#xD;&#xA;A.PAY_PERIOD_YEAR,&#xD;&#xA;MAX(A.EFFECTIVE_DATE) 'EFFECTIVE_DATE',&#xD;&#xA;SUM(A.SALARY_AMOUNT) AS SALARY_AMOUNT,PLAN_ID,PLAN_NAME,PLAN_CODE&#xD;&#xA;FROM #SGT_TEMP_FAS A&#xD;&#xA;GROUP BY A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_MONTH,A.PAY_PERIOD_YEAR,PLAN_ID,PLAN_NAME,PLAN_CODE&#xD;&#xA;ORDER BY PAY_PERIOD_YEAR DESC,PAY_PERIOD_MONTH DESC&#xD;&#xA;) AS MAINTAB&#xD;&#xA;ORDER BY SALARY_AMOUNT DESC&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID(N'tempdb..#SGT_TEMP_FAS') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;DROP TABLE #SGT_TEMP_FAS&#xD;&#xA;END">
      <parameters>
        <parameter ID="@FASCOUNT" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@RTW_PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@FASPERIODRANGE" sfwDataType="int" />
        <parameter ID="@LAST_CONT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadJobServiceSalaryRecords" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;A.PERSON_ACCOUNT_ID,&#xD;&#xA;A.PAY_PERIOD_MONTH,&#xD;&#xA;A.PAY_PERIOD_YEAR,&#xD;&#xA;MAX(A.EFFECTIVE_DATE) 'EFFECTIVE_DATE',&#xD;&#xA;SUM(A.SALARY_AMOUNT) AS SALARY_AMOUNT,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION A&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT B ON A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PLAN PLN ON PLN.PLAN_ID=B.PLAN_ID&#xD;&#xA;Where B.PERSON_ID=@PERSON_ID and&#xD;&#xA; (B.PLAN_ID =@PLAN_ID&#xD;&#xA;OR B.PLAN_ID IN(SELECT PLAN_ID FROM SGT_PLAN SUB WHERE PLAN_ID IN (1,2,20,4,5,26,27,29,3,30) AND 1=(CASE WHEN @PLAN_ID=6 THEN 0 ELSE 1 END)))&#xD;&#xA;and A.SUBSYSTEM_VALUE IN ('PAYR','CONV','ADJS','PURC') AND&#xD;&#xA;(A.SALARY_AMOUNT IS NOT NULL AND A.SALARY_AMOUNT !=0) AND&#xD;&#xA;EFFECTIVE_DATE &lt;= @LAST_CONTRIBUTION_DATE AND&#xD;&#xA;B.PERSON_ACCOUNT_ID != @RTW_PERSON_ACCOUNT_ID&#xD;&#xA;GROUP BY A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_MONTH,A.PAY_PERIOD_YEAR,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;ORDER BY A.PAY_PERIOD_YEAR ,A.PAY_PERIOD_MONTH">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@LAST_CONTRIBUTION_DATE" sfwDataType="DateTime" />
        <parameter ID="@RTW_PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadLastSalaryRecord" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  TOP 1 &#xD;&#xA;A.PERSON_ACCOUNT_ID,&#xD;&#xA;A.PAY_PERIOD_MONTH,&#xD;&#xA;A.PAY_PERIOD_YEAR,&#xD;&#xA;A.EFFECTIVE_DATE,&#xD;&#xA;SUM(A.SALARY_AMOUNT) AS SALARY_AMOUNT,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION A with(nolock)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT B with(nolock) ON A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PLAN PLN with(nolock) ON PLN.PLAN_ID=B.PLAN_ID&#xD;&#xA;Where B.PERSON_ID=@PERSON_ID and&#xD;&#xA; (B.PLAN_ID =@PLAN_ID&#xD;&#xA;OR B.PLAN_ID IN(SELECT PLAN_ID FROM SGT_PLAN SUB WHERE PLAN_ID IN (1,2,20,4,5,26,27,29,3,30) AND 1=(CASE WHEN @PLAN_ID=6 THEN 0 ELSE 1 END)))&#xD;&#xA;and A.SUBSYSTEM_VALUE IN ('PAYR','CONV','ADJS','PURC','ACTR') AND&#xD;&#xA;(A.SALARY_AMOUNT IS NOT NULL AND A.SALARY_AMOUNT !=0) AND&#xD;&#xA;B.PERSON_ACCOUNT_ID != @PERSON_ACCOUNT_ID&#xD;&#xA;GROUP BY A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_MONTH,A.PAY_PERIOD_YEAR,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE,A.EFFECTIVE_DATE&#xD;&#xA;HAVING SUM(A.SALARY_AMOUNT) &gt;0&#xD;&#xA;ORDER BY A.PAY_PERIOD_YEAR DESC,A.PAY_PERIOD_MONTH DESC">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadJobServiceSalaryRecordsRTW" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;A.PERSON_ACCOUNT_ID,&#xD;&#xA;A.PAY_PERIOD_MONTH,&#xD;&#xA;A.PAY_PERIOD_YEAR,&#xD;&#xA;MAX(A.EFFECTIVE_DATE) 'EFFECTIVE_DATE',&#xD;&#xA;SUM(A.SALARY_AMOUNT) AS SALARY_AMOUNT,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION A&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT B ON A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PLAN PLN ON PLN.PLAN_ID=B.PLAN_ID&#xD;&#xA;Where B.PERSON_ID=@PERSON_ID and&#xD;&#xA; (B.PLAN_ID =@PLAN_ID&#xD;&#xA;OR B.PLAN_ID IN(SELECT PLAN_ID FROM SGT_PLAN SUB WHERE PLAN_ID IN (1,2,20,4,5,26,27,29,3,30) AND 1=(CASE WHEN @PLAN_ID=6 THEN 0 ELSE 1 END)))&#xD;&#xA;and A.SUBSYSTEM_VALUE IN ('PAYR','CONV','ADJS','PURC') AND&#xD;&#xA;(A.SALARY_AMOUNT IS NOT NULL AND A.SALARY_AMOUNT !=0) AND&#xD;&#xA;EFFECTIVE_DATE &lt;= @LAST_CONTRIBUTION_DATE AND&#xD;&#xA;B.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;GROUP BY A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_MONTH,A.PAY_PERIOD_YEAR,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;ORDER BY A.PAY_PERIOD_YEAR ,A.PAY_PERIOD_MONTH">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@LAST_CONTRIBUTION_DATE" sfwDataType="DateTime" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadFASSalaryRecordsRTW" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="CREATE TABLE #SGT_TEMP_FAS&#xD;&#xA;(&#xD;&#xA;PERSON_ACCOUNT_ID INT NULL,&#xD;&#xA;PAY_PERIOD_MONTH INT NULL,&#xD;&#xA;PAY_PERIOD_YEAR INT NULL,&#xD;&#xA;EFFECTIVE_DATE DATETIME NULL,&#xD;&#xA;SALARY_AMOUNT DECIMAL(13,2) NULL,&#xD;&#xA;PLAN_ID INT NULL,&#xD;&#xA;PLAN_NAME VARCHAR(75) NULL,&#xD;&#xA;PLAN_CODE VARCHAR(75) NULL,&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;INSERT INTO #SGT_TEMP_FAS(PERSON_ACCOUNT_ID,PAY_PERIOD_MONTH, PAY_PERIOD_YEAR,EFFECTIVE_DATE, SALARY_AMOUNT,PLAN_ID, PLAN_NAME, PLAN_CODE)&#xD;&#xA;SELECT  PERSON_ACCOUNT_ID,PAY_PERIOD_MONTH,PAY_PERIOD_YEAR,EFFECTIVE_DATE,SALARY_AMOUNT,PLAN_ID,PLAN_NAME,PLAN_CODE FROM&#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;A.PERSON_ACCOUNT_ID,&#xD;&#xA;A.PAY_PERIOD_MONTH,&#xD;&#xA;A.PAY_PERIOD_YEAR,&#xD;&#xA;MAX(A.EFFECTIVE_DATE) 'EFFECTIVE_DATE',&#xD;&#xA;SUM(A.SALARY_AMOUNT) AS SALARY_AMOUNT,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION A&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT B ON A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PLAN PLN ON PLN.PLAN_ID=B.PLAN_ID&#xD;&#xA;WHERE B.PERSON_ID=@PERSON_ID AND&#xD;&#xA; (B.PLAN_ID =@PLAN_ID&#xD;&#xA;OR B.PLAN_ID IN(SELECT PLAN_ID FROM SGT_PLAN SUB WHERE PLAN_ID IN (1,2,20,4,5,26,27,29,3,30) AND 1=(CASE WHEN @PLAN_ID=6 THEN 0 ELSE 1 END)))&#xD;&#xA;AND A.SUBSYSTEM_VALUE IN ('PAYR','CONV','ADJS','PURC','ACTR') AND&#xD;&#xA;(A.SALARY_AMOUNT IS NOT NULL AND A.SALARY_AMOUNT !=0) AND&#xD;&#xA;EFFECTIVE_DATE &lt;= @LAST_CONT_DATE AND&#xD;&#xA;B.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND B.PLAN_PARTICIPATION_STATUS_VALUE NOT IN ('TICR',&#xD;&#xA;'TRDB',&#xD;&#xA;'TRDC',&#xD;&#xA;'TRTF',&#xD;&#xA;'WTN1',&#xD;&#xA;'CAN1')&#xD;&#xA;GROUP BY A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_MONTH,A.PAY_PERIOD_YEAR,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;) AS MAINTAB&#xD;&#xA;&#xD;&#xA;UPDATE #SGT_TEMP_FAS SET PLAN_ID = 0, PLAN_NAME = 'Combined', PLAN_CODE = 'COMB' ,PERSON_ACCOUNT_ID= null&#xD;&#xA;WHERE EXISTS (SELECT PAY_PERIOD_YEAR,PAY_PERIOD_MONTH FROM #SGT_TEMP_FAS A WHERE #SGT_TEMP_FAS.PAY_PERIOD_YEAR = A.PAY_PERIOD_YEAR AND&#xD;&#xA;#SGT_TEMP_FAS.PAY_PERIOD_MONTH = A.PAY_PERIOD_MONTH&#xD;&#xA;GROUP BY PAY_PERIOD_YEAR,PAY_PERIOD_MONTH HAVING COUNT(1) &gt; 1)&#xD;&#xA;&#xD;&#xA;SELECT TOP (@FASCOUNT) PERSON_ACCOUNT_ID,PAY_PERIOD_YEAR,PAY_PERIOD_MONTH,EFFECTIVE_DATE,SALARY_AMOUNT,PLAN_ID,PLAN_NAME,PLAN_CODE FROM&#xD;&#xA;(&#xD;&#xA;SELECT TOP (@FASPERIODRANGE) &#xD;&#xA;A.PERSON_ACCOUNT_ID,&#xD;&#xA;A.PAY_PERIOD_MONTH,&#xD;&#xA;A.PAY_PERIOD_YEAR,&#xD;&#xA;MAX(A.EFFECTIVE_DATE) 'EFFECTIVE_DATE',&#xD;&#xA;SUM(A.SALARY_AMOUNT) AS SALARY_AMOUNT,PLAN_ID,PLAN_NAME,PLAN_CODE&#xD;&#xA;FROM #SGT_TEMP_FAS A&#xD;&#xA;GROUP BY A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_MONTH,A.PAY_PERIOD_YEAR,PLAN_ID,PLAN_NAME,PLAN_CODE&#xD;&#xA;ORDER BY PAY_PERIOD_YEAR DESC,PAY_PERIOD_MONTH DESC&#xD;&#xA;) AS MAINTAB&#xD;&#xA;ORDER BY SALARY_AMOUNT DESC&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID(N'tempdb..#SGT_TEMP_FAS') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;DROP TABLE #SGT_TEMP_FAS&#xD;&#xA;END">
      <parameters>
        <parameter ID="@FASCOUNT" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@FASPERIODRANGE" sfwDataType="int" />
        <parameter ID="@LAST_CONT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadFASSalaryRecords2020" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @DATEFROM DATETIME;&#xD;&#xA;DECLARE @DATETO DATETIME;&#xD;&#xA;DECLARE @EMP_DET_STATUS_VALUE varchar(10);&#xD;&#xA;--DECLARE @PERSON_ID INT = 215478;   --152&#xD;&#xA;--DECLARE @PERSON_ACCOUNT_ID INT = 323412;    --1023&#xD;&#xA;--DECLARE @PLAN_ID INT =1;&#xD;&#xA;--DECLARE @RTW_PERSON_ACCOUNT_ID INT=0;&#xD;&#xA;--DECLARE @LAST_CONT_DATE DATE=GETDATE();  &#xD;&#xA;&#xD;&#xA;DECLARE DATEFROM CURSOR FOR&#xD;&#xA;&#xD;&#xA;SELECT SGT_PERSON_EMPLOYMENT_DETAIL.START_DATE,ISNULL(SGT_PERSON_EMPLOYMENT_DETAIL.END_DATE,@LAST_CONT_DATE), SGT_PERSON_EMPLOYMENT_DETAIL.STATUS_VALUE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT PA WITH(NOLOCK) INNER JOIN&#xD;&#xA;SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PERSON_ACCOUNT_ID INNER JOIN&#xD;&#xA;SGT_PERSON_EMPLOYMENT_DETAIL WITH(NOLOCK) ON SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_DTL_ID = SGT_PERSON_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;WHERE SGT_PERSON_EMPLOYMENT_DETAIL.STATUS_VALUE in ( 'CONT', 'LOA', 'LOAM') AND PA.PERSON_ID = @PERSON_ID AND PA.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID(N'tempdb..#SGT_TEMP_FAS') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;DROP TABLE #SGT_TEMP_FAS&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;CREATE TABLE #SGT_TEMP_FAS&#xD;&#xA;(&#xD;&#xA;PERSON_ACCOUNT_ID INT NULL,&#xD;&#xA;PAY_PERIOD_YEAR INT NULL,&#xD;&#xA;PAY_PERIOD_MONTH INT NULL,&#xD;&#xA;SALARY_AMOUNT DECIMAL(13,2) NULL,&#xD;&#xA;PLAN_ID INT NULL,&#xD;&#xA;PLAN_NAME VARCHAR(75) NULL,&#xD;&#xA;PLAN_CODE VARCHAR(75) NULL,&#xD;&#xA;PERSON_ID INT NULL&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;OPEN DATEFROM&#xD;&#xA;FETCH NEXT FROM DATEFROM INTO @DATEFROM,@DATETO , @EMP_DET_STATUS_VALUE&#xD;&#xA;&#xD;&#xA;WHILE @@FETCH_STATUS = 0&#xD;&#xA;BEGIN&#xD;&#xA;BEGIN&#xD;&#xA;&#xD;&#xA;--This block insert gets the contributions and ‘pads’ 0.00 where there is no contribution for Contributing employment details&#xD;&#xA;INSERT INTO #SGT_TEMP_FAS(PERSON_ACCOUNT_ID, PAY_PERIOD_YEAR, PAY_PERIOD_MONTH, SALARY_AMOUNT, PLAN_ID, PLAN_NAME, PLAN_CODE, PERSON_ID)&#xD;&#xA;SELECT ISNULL(PERSON_ACCOUNT_ID, @PERSON_ACCOUNT_ID),ISNULL(PAY_PERIOD_YEAR,YEARMONTHTBL.YEAR),ISNULL(PAY_PERIOD_MONTH,YEARMONTHTBL.MONTH),&#xD;&#xA;ISNULL(SALARY_AMOUNT,0) AS SALARY_AMOUNT,ISNULL(PLAN_ID,@PLAN_ID) AS PLAN_ID,PLAN_NAME,PLAN_CODE,@PERSON_ID AS PERSON_ID&#xD;&#xA;FROM&#xD;&#xA;(SELECT CONVERT(CHAR(4),DATEADD(MONTH, X.NUMBER, @DATEFROM),120)AS 'YEAR'&#xD;&#xA;, CONVERT(CHAR(2),DATEADD(MONTH, X.NUMBER, @DATEFROM),110) AS 'MONTH'&#xD;&#xA;FROM MASTER.DBO.SPT_VALUES X&#xD;&#xA;WHERE X.TYPE = 'P'&#xD;&#xA;AND X.NUMBER &lt;= DATEDIFF(MONTH, @DATEFROM, @DATETO)) YEARMONTHTBL&#xD;&#xA;&#xD;&#xA;LEFT JOIN&#xD;&#xA;&#xD;&#xA;(SELECT PERSON_ACCOUNT_ID,PAY_PERIOD_YEAR,PAY_PERIOD_MONTH,SALARY_AMOUNT,PLAN_ID,PLAN_NAME,PLAN_CODE&#xD;&#xA;FROM&#xD;&#xA;(SELECT A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_YEAR,A.PAY_PERIOD_MONTH,SUM(A.SALARY_AMOUNT) AS SALARY_AMOUNT,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION A WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT B WITH(NOLOCK) ON A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON PLN.PLAN_ID = B.PLAN_ID&#xD;&#xA;WHERE B.PERSON_ID = @PERSON_ID AND (B.PLAN_ID = @PLAN_ID OR B.PLAN_ID IN(SELECT PLAN_ID FROM SGT_PLAN SUB WITH(NOLOCK) WHERE PLAN_ID IN (1,2,20,4,5,26,27,29,3,30) AND 1=(CASE WHEN @PLAN_ID=6 THEN 0 ELSE 1 END)))&#xD;&#xA;AND (A.SALARY_AMOUNT IS NOT NULL AND A.SALARY_AMOUNT !=0)&#xD;&#xA;AND EFFECTIVE_DATE &lt;= @LAST_CONT_DATE AND B.PERSON_ACCOUNT_ID != @RTW_PERSON_ACCOUNT_ID --and a.PAY_PERIOD_YEAR=2014 and a.PAY_PERIOD_MONTH=6&#xD;&#xA;AND B.PLAN_PARTICIPATION_STATUS_VALUE NOT IN ('TICR','TRDB','TRDC','TRTF','WTN1','CAN1')&#xD;&#xA;GROUP BY A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_YEAR,A.PAY_PERIOD_MONTH,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE,EFFECTIVE_DATE&#xD;&#xA;) tbl )as MAINTAB&#xD;&#xA;&#xD;&#xA;ON MAINTAB.PAY_PERIOD_YEAR = YEARMONTHTBL.YEAR AND MAINTAB.PAY_PERIOD_MONTH = YEARMONTHTBL.MONTH&#xD;&#xA;AND NOT EXISTS (SELECT 1 FROM #SGT_TEMP_FAS WITH(NOLOCK)&#xD;&#xA;WHERE MAINTAB.PERSON_ACCOUNT_ID = #SGT_TEMP_FAS.PERSON_ACCOUNT_ID AND MAINTAB.PAY_PERIOD_YEAR = #SGT_TEMP_FAS.PAY_PERIOD_YEAR AND MAINTAB.PAY_PERIOD_MONTH = #SGT_TEMP_FAS.PAY_PERIOD_MONTH)&#xD;&#xA;&#xD;&#xA;FETCH NEXT FROM DATEFROM INTO @DATEFROM ,@DATETO , @EMP_DET_STATUS_VALUE&#xD;&#xA;END&#xD;&#xA;END&#xD;&#xA;CLOSE DATEFROM&#xD;&#xA;DEALLOCATE DATEFROM&#xD;&#xA;&#xD;&#xA;--This block insert gets the contributions outside the Contributing employment details without duplicating what is already there.&#xD;&#xA;INSERT INTO #SGT_TEMP_FAS&#xD;&#xA;SELECT A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_YEAR,A.PAY_PERIOD_MONTH,SUM(A.SALARY_AMOUNT) AS SALARY_AMOUNT,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE,@PERSON_ID AS PERSON_ID&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION A WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT B WITH(NOLOCK) ON A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON PLN.PLAN_ID = B.PLAN_ID&#xD;&#xA;WHERE B.PERSON_ID = @PERSON_ID AND (B.PLAN_ID = @PLAN_ID OR B.PLAN_ID IN(SELECT PLAN_ID FROM SGT_PLAN SUB WITH(NOLOCK) WHERE PLAN_ID IN (1,2,20,4,5,26,27,29,3,30) AND 1=(CASE WHEN @PLAN_ID=6 THEN 0 ELSE 1 END)))&#xD;&#xA;AND (A.SALARY_AMOUNT IS NOT NULL AND A.SALARY_AMOUNT !=0 )&#xD;&#xA;AND EFFECTIVE_DATE &lt;= @LAST_CONT_DATE AND B.PERSON_ACCOUNT_ID != @RTW_PERSON_ACCOUNT_ID&#xD;&#xA;AND B.PLAN_PARTICIPATION_STATUS_VALUE NOT IN ('TICR','TRDB','TRDC','TRTF','WTN1','CAN1')&#xD;&#xA;AND NOT EXISTS (SELECT 1 FROM #SGT_TEMP_FAS WITH(NOLOCK)&#xD;&#xA;WHERE A.PERSON_ACCOUNT_ID = #SGT_TEMP_FAS.PERSON_ACCOUNT_ID AND A.PAY_PERIOD_YEAR = #SGT_TEMP_FAS.PAY_PERIOD_YEAR AND A.PAY_PERIOD_MONTH = #SGT_TEMP_FAS.PAY_PERIOD_MONTH)&#xD;&#xA;GROUP BY A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_YEAR,A.PAY_PERIOD_MONTH,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE #SGT_TEMP_FAS SET PLAN_ID = 0, PLAN_NAME = 'Combined', PLAN_CODE = 'COMB' ,PERSON_ACCOUNT_ID= null&#xD;&#xA;WHERE EXISTS (SELECT PAY_PERIOD_YEAR,PAY_PERIOD_MONTH FROM #SGT_TEMP_FAS A WHERE #SGT_TEMP_FAS.PAY_PERIOD_YEAR = A.PAY_PERIOD_YEAR AND&#xD;&#xA;#SGT_TEMP_FAS.PAY_PERIOD_MONTH = A.PAY_PERIOD_MONTH&#xD;&#xA;GROUP BY PAY_PERIOD_YEAR,PAY_PERIOD_MONTH HAVING COUNT(1) &gt; 1)&#xD;&#xA;&#xD;&#xA;select Main.* from&#xD;&#xA;(&#xD;&#xA;SELECT DISTINCT PERSON_ACCOUNT_ID, PAY_PERIOD_YEAR, PAY_PERIOD_MONTH, SUM(SALARY_AMOUNT) AS SALARY_AMOUNT, PL.PLAN_ID, PL.PLAN_NAME, PL.PLAN_CODE, PERSON_ID&#xD;&#xA;FROM #SGT_TEMP_FAS WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN PL ON #SGT_TEMP_FAS.PLAN_ID = PL.PLAN_ID&#xD;&#xA;WHERE PERSON_ID = @PERSON_ID&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID, PAY_PERIOD_YEAR, PAY_PERIOD_MONTH,PL.PLAN_ID, PL.PLAN_NAME, PL.PLAN_CODE, PERSON_ID&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT PERSON_ACCOUNT_ID, PAY_PERIOD_YEAR, PAY_PERIOD_MONTH, SUM(SALARY_AMOUNT) AS SALARY_AMOUNT, PLAN_ID, PLAN_NAME COLLATE DATABASE_DEFAULT AS PLAN_NAME, &#xD;&#xA;PLAN_CODE COLLATE DATABASE_DEFAULT AS PLAN_CODE, PERSON_ID&#xD;&#xA;FROM #SGT_TEMP_FAS WITH(NOLOCK) where PLAN_ID=0&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID, PAY_PERIOD_YEAR, PAY_PERIOD_MONTH,PLAN_ID, PLAN_NAME, PLAN_CODE, PERSON_ID&#xD;&#xA;) Main&#xD;&#xA;ORDER BY Main.PAY_PERIOD_YEAR DESC, Main.PAY_PERIOD_MONTH DESC&#xD;&#xA;&#xD;&#xA;DELETE FROM #SGT_TEMP_FAS Where PERSON_ID = @PERSON_ID&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID(N'tempdb..#SGT_TEMP_FAS') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;DROP TABLE #SGT_TEMP_FAS&#xD;&#xA;END">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@RTW_PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@LAST_CONT_DATE" sfwDataType="DateTime" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadFASSalaryRecords2020RTW" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @DATEFROM DATETIME;&#xD;&#xA;DECLARE @DATETO DATETIME;&#xD;&#xA;DECLARE @EMP_DET_STATUS_VALUE varchar(10);&#xD;&#xA;--DECLARE @PERSON_ID INT = 215478;   --152&#xD;&#xA;--DECLARE @PERSON_ACCOUNT_ID INT = 323412;    --1023&#xD;&#xA;--DECLARE @PLAN_ID INT =1;&#xD;&#xA;--DECLARE @LAST_CONT_DATE DATE=GETDATE();  &#xD;&#xA;&#xD;&#xA;DECLARE DATEFROM CURSOR FOR &#xD;&#xA;&#xD;&#xA;SELECT SGT_PERSON_EMPLOYMENT_DETAIL.START_DATE,ISNULL(SGT_PERSON_EMPLOYMENT_DETAIL.END_DATE,@LAST_CONT_DATE), SGT_PERSON_EMPLOYMENT_DETAIL.STATUS_VALUE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT PA WITH(NOLOCK) INNER JOIN&#xD;&#xA;SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PERSON_ACCOUNT_ID INNER JOIN&#xD;&#xA;SGT_PERSON_EMPLOYMENT_DETAIL WITH(NOLOCK) ON SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_DTL_ID = SGT_PERSON_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;WHERE SGT_PERSON_EMPLOYMENT_DETAIL.STATUS_VALUE in ( 'CONT', 'LOA', 'LOAM') AND PA.PERSON_ID = @PERSON_ID AND PA.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID(N'tempdb..#SGT_TEMP_FAS') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;DROP TABLE #SGT_TEMP_FAS&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;CREATE TABLE #SGT_TEMP_FAS&#xD;&#xA;(&#xD;&#xA;&#x9;PERSON_ACCOUNT_ID INT NULL,&#xD;&#xA;&#x9;PAY_PERIOD_YEAR INT NULL,&#xD;&#xA;&#x9;PAY_PERIOD_MONTH INT NULL,&#xD;&#xA;&#x9;SALARY_AMOUNT DECIMAL(13,2) NULL,&#xD;&#xA;&#x9;PLAN_ID INT NULL,&#xD;&#xA;&#x9;PLAN_NAME VARCHAR(75) NULL,&#xD;&#xA;&#x9;PLAN_CODE VARCHAR(75) NULL,&#xD;&#xA;&#x9;PERSON_ID INT NULL&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;OPEN DATEFROM&#xD;&#xA;FETCH NEXT FROM DATEFROM INTO @DATEFROM,@DATETO , @EMP_DET_STATUS_VALUE&#xD;&#xA;&#xD;&#xA;WHILE @@FETCH_STATUS = 0&#xD;&#xA;BEGIN  &#xD;&#xA;BEGIN&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;--This block insert gets the contributions and ‘pads’ 0.00 where there is no contribution for Contributing employment details&#xD;&#xA;INSERT INTO #SGT_TEMP_FAS(PERSON_ACCOUNT_ID, PAY_PERIOD_YEAR, PAY_PERIOD_MONTH, SALARY_AMOUNT, PLAN_ID, PLAN_NAME, PLAN_CODE, PERSON_ID)&#xD;&#xA;SELECT ISNULL(PERSON_ACCOUNT_ID, @PERSON_ACCOUNT_ID),ISNULL(PAY_PERIOD_YEAR,YEARMONTHTBL.YEAR),ISNULL(PAY_PERIOD_MONTH,YEARMONTHTBL.MONTH),&#xD;&#xA;ISNULL(SALARY_AMOUNT,0) AS SALARY_AMOUNT,ISNULL(PLAN_ID,@PLAN_ID) AS PLAN_ID,PLAN_NAME,PLAN_CODE,@PERSON_ID AS PERSON_ID&#xD;&#xA;FROM &#xD;&#xA;(SELECT CONVERT(CHAR(4),DATEADD(MONTH, X.NUMBER, @DATEFROM),120)AS 'YEAR'&#xD;&#xA;, CONVERT(CHAR(2),DATEADD(MONTH, X.NUMBER, @DATEFROM),110) AS 'MONTH'&#xD;&#xA;FROM    MASTER.DBO.SPT_VALUES X&#xD;&#xA;WHERE   X.TYPE = 'P'        &#xD;&#xA;AND     X.NUMBER &lt;= DATEDIFF(MONTH, @DATEFROM, @DATETO)) YEARMONTHTBL&#xD;&#xA;&#xD;&#xA;LEFT JOIN &#xD;&#xA;&#xD;&#xA;(SELECT  PERSON_ACCOUNT_ID,PAY_PERIOD_YEAR,PAY_PERIOD_MONTH,SALARY_AMOUNT,PLAN_ID,PLAN_NAME,PLAN_CODE &#xD;&#xA;FROM&#xD;&#xA;(SELECT A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_YEAR,A.PAY_PERIOD_MONTH,SUM(A.SALARY_AMOUNT) AS SALARY_AMOUNT,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION A WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT B WITH(NOLOCK) ON A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON PLN.PLAN_ID = B.PLAN_ID&#xD;&#xA;WHERE B.PERSON_ID = @PERSON_ID AND (B.PLAN_ID = @PLAN_ID OR B.PLAN_ID IN(SELECT PLAN_ID FROM SGT_PLAN SUB WITH(NOLOCK) WHERE PLAN_ID IN (1,2,20,4,5,26,27,29,3,30) AND 1=(CASE WHEN @PLAN_ID=6 THEN 0 ELSE 1 END)))&#xD;&#xA;AND (A.SALARY_AMOUNT IS NOT NULL AND A.SALARY_AMOUNT !=0) AND EFFECTIVE_DATE &lt;= @LAST_CONT_DATE AND B.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND B.PLAN_PARTICIPATION_STATUS_VALUE NOT IN ('TICR','TRDB','TRDC','TRTF','WTN1','CAN1')&#xD;&#xA;GROUP BY A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_YEAR,A.PAY_PERIOD_MONTH,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE,EFFECTIVE_DATE&#xD;&#xA;) tbl )as MAINTAB&#xD;&#xA;&#xD;&#xA;ON MAINTAB.PAY_PERIOD_YEAR = YEARMONTHTBL.YEAR AND MAINTAB.PAY_PERIOD_MONTH = YEARMONTHTBL.MONTH&#xD;&#xA;AND NOT EXISTS (SELECT 1 FROM #SGT_TEMP_FAS WITH(NOLOCK)&#xD;&#xA;WHERE MAINTAB.PERSON_ACCOUNT_ID = #SGT_TEMP_FAS.PERSON_ACCOUNT_ID AND MAINTAB.PAY_PERIOD_YEAR = #SGT_TEMP_FAS.PAY_PERIOD_YEAR AND MAINTAB.PAY_PERIOD_MONTH = #SGT_TEMP_FAS.PAY_PERIOD_MONTH)&#xD;&#xA;&#xD;&#xA;FETCH NEXT FROM DATEFROM INTO @DATEFROM ,@DATETO , @EMP_DET_STATUS_VALUE&#xD;&#xA;END&#xD;&#xA;END&#xD;&#xA;CLOSE DATEFROM  &#xD;&#xA;DEALLOCATE DATEFROM &#xD;&#xA;&#xD;&#xA;--This block insert gets the contributions outside the Contributing employment details without duplicating what is already there.&#xD;&#xA;INSERT INTO #SGT_TEMP_FAS&#xD;&#xA;SELECT A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_YEAR,A.PAY_PERIOD_MONTH,SUM(A.SALARY_AMOUNT) AS SALARY_AMOUNT,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE,@PERSON_ID AS PERSON_ID&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION A WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT B WITH(NOLOCK) ON A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON PLN.PLAN_ID = B.PLAN_ID&#xD;&#xA;WHERE B.PERSON_ID = @PERSON_ID AND (B.PLAN_ID = @PLAN_ID OR B.PLAN_ID IN(SELECT PLAN_ID FROM SGT_PLAN SUB WITH(NOLOCK) WHERE PLAN_ID IN (1,2,20,4,5,26,27,29,3,30) AND 1=(CASE WHEN @PLAN_ID=6 THEN 0 ELSE 1 END)))&#xD;&#xA;AND (A.SALARY_AMOUNT IS NOT NULL AND A.SALARY_AMOUNT !=0) AND EFFECTIVE_DATE &lt;= @LAST_CONT_DATE AND B.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND B.PLAN_PARTICIPATION_STATUS_VALUE NOT IN ('TICR','TRDB','TRDC','TRTF','WTN1','CAN1')&#xD;&#xA;AND NOT EXISTS (SELECT 1 FROM #SGT_TEMP_FAS WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE A.PERSON_ACCOUNT_ID = #SGT_TEMP_FAS.PERSON_ACCOUNT_ID AND A.PAY_PERIOD_YEAR = #SGT_TEMP_FAS.PAY_PERIOD_YEAR AND A.PAY_PERIOD_MONTH = #SGT_TEMP_FAS.PAY_PERIOD_MONTH) &#xD;&#xA;GROUP BY A.PERSON_ACCOUNT_ID,A.PAY_PERIOD_YEAR,A.PAY_PERIOD_MONTH,PLN.PLAN_ID,PLN.PLAN_NAME,PLN.PLAN_CODE&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE #SGT_TEMP_FAS SET PLAN_ID = 0, PLAN_NAME = 'Combined', PLAN_CODE = 'COMB' ,PERSON_ACCOUNT_ID=@PERSON_ACCOUNT_ID&#xD;&#xA;WHERE EXISTS (SELECT PAY_PERIOD_YEAR,PAY_PERIOD_MONTH FROM #SGT_TEMP_FAS A WHERE #SGT_TEMP_FAS.PAY_PERIOD_YEAR = A.PAY_PERIOD_YEAR AND&#xD;&#xA;#SGT_TEMP_FAS.PAY_PERIOD_MONTH = A.PAY_PERIOD_MONTH&#xD;&#xA;GROUP BY PAY_PERIOD_YEAR,PAY_PERIOD_MONTH HAVING COUNT(1) &gt; 1)&#xD;&#xA;&#xD;&#xA;select TOP (180) Main.* from&#xD;&#xA;(&#xD;&#xA;SELECT DISTINCT PERSON_ACCOUNT_ID, PAY_PERIOD_YEAR, PAY_PERIOD_MONTH, SUM(SALARY_AMOUNT) AS SALARY_AMOUNT, PL.PLAN_ID, PL.PLAN_NAME, PL.PLAN_CODE, PERSON_ID&#xD;&#xA;FROM #SGT_TEMP_FAS WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN PL ON #SGT_TEMP_FAS.PLAN_ID = PL.PLAN_ID&#xD;&#xA;WHERE PERSON_ID = @PERSON_ID&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID, PAY_PERIOD_YEAR, PAY_PERIOD_MONTH,PL.PLAN_ID, PL.PLAN_NAME, PL.PLAN_CODE, PERSON_ID&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT PERSON_ACCOUNT_ID, PAY_PERIOD_YEAR, PAY_PERIOD_MONTH, SUM(SALARY_AMOUNT) AS SALARY_AMOUNT, PLAN_ID, &#xD;&#xA;PLAN_NAME COLLATE DATABASE_DEFAULT AS PLAN_NAME, PLAN_CODE COLLATE DATABASE_DEFAULT AS PLAN_CODE, PERSON_ID&#xD;&#xA;FROM #SGT_TEMP_FAS WITH(NOLOCK) where PLAN_ID=0&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID, PAY_PERIOD_YEAR, PAY_PERIOD_MONTH,PLAN_ID, PLAN_NAME, PLAN_CODE, PERSON_ID&#xD;&#xA;) Main&#xD;&#xA;ORDER BY Main.PAY_PERIOD_YEAR DESC, Main.PAY_PERIOD_MONTH DESC&#xD;&#xA;&#xD;&#xA;DELETE FROM #SGT_TEMP_FAS Where PERSON_ID = @PERSON_ID&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID(N'tempdb..#SGT_TEMP_FAS') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;DROP TABLE #SGT_TEMP_FAS&#xD;&#xA;END">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@LAST_CONT_DATE" sfwDataType="DateTime" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetCountOfSalaryRecords" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) AS COUNTER_1 FROM (&#xD;&#xA;SELECT &#xD;&#xA;SUM(CONT.SALARY_AMOUNT)AS SALARY_AMOUNT,&#xD;&#xA;MONTH(EFFECTIVE_DATE) AS EFFECTIVE_MONTH, &#xD;&#xA;YEAR(EFFECTIVE_DATE) AS EFFECTIVE_YEAR&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION CONT WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON CONT.PERSON_ACCOUNT_ID=PA.PERSON_ACCOUNT_ID &#xD;&#xA;WHERE PA.PERSON_ID = @PERSON_ID AND&#xD;&#xA;(PA.PLAN_ID = @PLAN_ID OR PA.PLAN_ID IN(SELECT PLAN_ID FROM SGT_PLAN SUB WHERE PLAN_ID IN (1,2,20,4,5,26,27,29,3,30) AND 1=(CASE WHEN @PLAN_ID=6 THEN 0 ELSE 1 END)))&#xD;&#xA;AND (ISNULL(CONT.SALARY_AMOUNT,0)!= 0) &#xD;&#xA;AND CONT.EFFECTIVE_DATE &lt;= @LAST_CONT_DATE&#xD;&#xA;AND PA.PLAN_PARTICIPATION_STATUS_VALUE NOT IN ('TICR','TRDB','TRDC','TRTF','WTN1','CAN1')&#xD;&#xA;GROUP BY MONTH(EFFECTIVE_DATE), YEAR(EFFECTIVE_DATE)&#xD;&#xA;HAVING SUM(CONT.SALARY_AMOUNT) != 0&#xD;&#xA;) MAIN">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@LAST_CONT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="objPersonAccount" sfwType="Object" sfwEntity="entPersonAccount" sfwValue="ibusPersonAccount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="NormalSalaryAmount" sfwValue="normal_salary_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="ProjectedSalaryAmount" sfwValue="projected_salary_amount" />
    <attribute sfwValue="benefit_calc_months_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="BenefitCalcMonthsId" sfwCaption="ID" />
    <attribute sfwValue="benefit_calculation_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="BenefitCalculationId" sfwCaption="Benefit Calculation Id" />
    <attribute sfwValue="person_account_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="PersonAccountId" sfwCaption="Person Account Id" />
    <attribute sfwValue="year" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="Year" sfwCaption="Year" />
    <attribute sfwValue="month" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="Month" sfwCaption="Month" />
    <attribute sfwValue="salary_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="decimal" sfwLength="13,2" sfwIsNull="False" ID="SalaryAmount" sfwCaption="Salary Amount" />
    <attribute sfwValue="projected_flag" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="char" sfwLength="1" sfwIsNull="False" ID="ProjectedFlag" sfwCaption="Projected Flag" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwCaption="Update Seq" />
    <attribute sfwValue="effective_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="True" ID="EffectiveDate" sfwCaption="Effective Date" />
    <attribute sfwValue="fas_logic_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="FasLogicId" sfwCodeID="7014" sfwCaption="Fas Logic" />
    <attribute sfwValue="fas_logic_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="1" sfwIsNull="True" ID="FasLogicValue" sfwCaption="Fas Logic" />
    <attribute sfwType="Description" ID="FasLogicDescription" sfwCaption="Fas Logic" sfwValue="fas_logic_description" />
    <attribute ID="IstrPlanName" sfwDataType="string" sfwPrivate="False" sfwValue="istrPlanName" sfwType="Property" />
  </attributes>
  <constraint />
  <groupslist />
  <methods />
  <lifecycle />
  <objectmethods />
</entity>