<entity ID="entEmployerPayrollHeader" sfwActive="True" sfwStatus="Review" sfwRemoteObject="srvEmployerReport" sfwType="BusinessRule" sfwErrorTable="sgt_employer_payroll_header_error" sfwParentKey="employer_payroll_header_id" sfwParentKeyValue="icdoEmployerPayrollHeader.employer_payroll_header_id" sfwMainCDO="icdoEmployerPayrollHeader" sfwStatusColumn="status_value" sfwObjectID="busEmployerPayrollHeader" sfwTableName="sgt_employer_payroll_header" sfwView="False">
  <rules>
    <rule ID="Check Org is Employer" sfwMessageId="4699" sfwExpression="(!string.IsNullOrEmpty(this.istrOrgCodeId)) &amp;&amp; &#xA;!(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusOrganization.icdoOrganization.org_id&quot;) == 0) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusOrganization.icdoOrganization.org_type_value&quot;) != &quot;EMPL&quot;)" sfwObjectBased="True" />
    <rule ID="Check Start Date is Greater than End date" sfwMessageId="4083" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.pay_period_end_date == DateTime.MinValue) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.pay_period_start_date == DateTime.MinValue) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.pay_period_start_date &gt; this.icdoEmployerPayrollHeader.pay_period_end_date)" sfwObjectBased="True" />
    <rule ID="CheckHeaderTypeIsPurchase" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;PRCH&quot;)" sfwObjectBased="True" />
    <rule ID="RULE CHECK BENEFIT TYPE IS PURCHASE AND REPORT TYPE IS REGULAR" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;PRCH&quot;) &amp;&amp; &#xA;(this.astrIsDetailPopulated == &quot;YES&quot;)" sfwObjectBased="True" />
    <rule ID="RULE CHECK BENEFIT TYPE IS PURCHASE COMP AND REPORT TYPE IS ADJUSTMENT" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;PRCH&quot;) &amp;&amp; &#xA;!(this.astrIsDetailPopulated == &quot;YES&quot;)" sfwObjectBased="True" />
    <rule ID="ESSVisibleRuleForDetailCreationButton" sfwExpression="(this.icdoEmployerPayrollHeader.report_type_value == &quot;ADJS&quot;) &amp;&amp; &#xA;((this.icdoEmployerPayrollHeader.status_value == &quot;PEND&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;))" sfwObjectBased="True" />
    <rule ID="ESSVisibleRuleForNewDetail" sfwExpression="!(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;) &amp;&amp; &#xA;((this.icdoEmployerPayrollHeader.status_value == &quot;PEND&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;RPST&quot;)) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusOrganization.icdoOrganization.central_payroll_flag&quot;) == &quot;Y&quot;) &amp;&amp;&#xA;!(this.icdoEmployerPayrollHeader.report_type_value==&quot;PEN&quot;)" sfwObjectBased="True" />
    <rule ID="IsBenefitTypeRetOrDefComp" sfwExpression="((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) || &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;))" sfwObjectBased="True" />
    <rule ID="IsDebitACHRequestButtonVisible" sfwExpression="(this.IsbtnDebitACHRequestVisible() == True)" sfwObjectBased="True" />
    <rule ID="IsDeleteACHRequestButtonVisible" sfwExpression="(this.IsbtnDeleteACHRequestButtonVisible() == True)" sfwObjectBased="True" />
    <rule ID="IsInsuranceTypeCreatedManually" sfwMessageId="4750" sfwExpression="(this.IsInsuranceTypeCreatedManually() == True)" sfwObjectBased="True" />
    <rule ID="IsPayCheckDateDifferentInHeaderAndDetail" sfwMessageId="4753" sfwExpression="(this.IsPayCheckDateDifferentForDetail() == True) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;)" sfwObjectBased="True" />
    <rule ID="IsRemittanceReportButtonVisible" sfwExpression="(this.IsbtnRemittanceReportVisibleWithoutStatus() == True)" sfwObjectBased="True" />
    <rule ID="IsReportedTotalWagesMatchWithCalculated" sfwMessageId="4734" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;(!(this.icdoEmployerPayrollHeader.total_wages_reported == this.icdoEmployerPayrollHeader.total_wages_calculated) || &#xA;!(this.IsRoundingDifferenceWithinLimits() == True))" sfwObjectBased="True" />
    <rule ID="IsTotalContributionsReportedMatchWithCalculated" sfwMessageId="4742" sfwExpression="!(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.total_contribution_reported == this.icdoEmployerPayrollHeader.total_contribution_calculated)" sfwObjectBased="True" />
    <rule ID="IsTotalInterestAmountReportedMatchWithCalculated" sfwMessageId="4745" sfwExpression="!(this.icdoEmployerPayrollHeader.total_interest_calculated == this.icdoEmployerPayrollHeader.total_interest_reported)" sfwObjectBased="True" />
    <rule ID="IsTotalPremiumReportedMatchWithCalculated" sfwMessageId="4743" sfwExpression="!(this.icdoEmployerPayrollHeader.total_premium_amount_reported == this.idecTotalPremiumReportedForIns)" sfwObjectBased="True" />
    <rule ID="IsTotalPurchseAmountReportedMatchWithCalcuated" sfwMessageId="4744" sfwExpression="!(this.icdoEmployerPayrollHeader.total_purchase_amount == this.icdoEmployerPayrollHeader.total_purchase_amount_reported)" sfwObjectBased="True" />
    <rule ID="RULE CHECK BENEFIT TYPE IS DEFF COMP" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;)" sfwObjectBased="True" />
    <rule ID="RULE CHECK BENEFIT TYPE IS DEFF COMP AND REPORT TYPE IS REGULAR" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;(this.astrIsDetailPopulated == &quot;YES&quot;)" sfwObjectBased="True" />
    <rule ID="RULE CHECK BENEFIT TYPE IS DEFF COMP AND REPORT TYPE IS ADJUSTMENT" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;!(this.astrIsDetailPopulated == &quot;YES&quot;)" sfwObjectBased="True" />
    <rule ID="RULE CHECK BENEFIT TYPE IS NOT DEFF COMP" sfwExpression="!(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;)" sfwObjectBased="True" />
    <rule ID="RULE CHECK BENFIT TYPE IS NULL" sfwMessageId="4079" sfwExpression="(string.IsNullOrEmpty(this.icdoEmployerPayrollHeader.header_type_value))" sfwObjectBased="True" />
    <rule ID="Rule Check Header Date continuity For Def Comp" sfwMessageId="4704" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.report_type_value == &quot;REG&quot;) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.pay_period_start_date == DateTime.MinValue) &amp;&amp; &#xA;(this.CheckHeaderDateContinuity() == False)" sfwObjectBased="True" />
    <rule ID="Rule Check Header got Remittance" sfwMessageId="4697" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entEmployerPayrollHeader.GetCountofRemittanceAllocatedByHeaderID&quot;, this.icdoEmployerPayrollHeader.employer_payroll_header_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="Rule check if any detail is in review status" sfwMessageId="4701" sfwExpression="(this.IsDetailEntryExistsInReviewStatus() == True)" sfwObjectBased="True" />
    <rule ID="Rule Check if any detail is posted" sfwMessageId="4689" sfwExpression="!(this.VisibleIgnoreButton() == False)" sfwObjectBased="True" />
    <rule ID="Rule check if benefit type Insurance" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;)" sfwObjectBased="True" />
    <rule ID="Rule check if detail exists for header" sfwMessageId="4700" sfwExpression="(this.IsDetailEntryExists() == False)" sfwObjectBased="True" />
    <rule ID="Rule Check if Frequency not set for Org Plan" sfwMessageId="4698" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;(this.CheckIfFrequencySetForOrgPlan() == False)" sfwObjectBased="True" />
    <rule ID="Rule Check if Plan Deferred Comp Frequency" sfwMessageId="4690" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;!(this.CheckIfFrequencySetForOrgPlan() == False) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.pay_period_start_date == DateTime.MinValue) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.pay_period_end_date == DateTime.MinValue) &amp;&amp; &#xA;(this.CheckDateForDefCompWithPlanParticipation() == False)" sfwObjectBased="True" />
    <rule ID="Rule check if status is ignored or posted" sfwExpression="(this.icdoEmployerPayrollHeader.status_value == &quot;IGNR&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;PSTD&quot;)" sfwObjectBased="True" />
    <rule ID="Rule check Interest waiver is modified and details are posted" sfwMessageId="4705" sfwExpression="(this.CheckInterestWaiverIsModifiedAfterDetailPosted() == True)" sfwObjectBased="True" />
    <rule ID="RULE CHECK ORG ID IS NULL" sfwMessageId="1032" sfwExpression="(string.IsNullOrEmpty(this.istrOrgCodeId))" sfwObjectBased="True" />
    <rule ID="RULE CHECK ORG ID IS VALID" sfwMessageId="1027" sfwExpression="(!string.IsNullOrEmpty(this.istrOrgCodeId)) &amp;&amp; &#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusOrganization.icdoOrganization.org_id&quot;) == 0)" sfwObjectBased="True" />
    <rule ID="Rule Check Org Status is not active" sfwMessageId="4144" sfwExpression="(!string.IsNullOrEmpty(this.istrOrgCodeId)) &amp;&amp; &#xA;!(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusOrganization.icdoOrganization.org_id&quot;) == 0) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusOrganization.icdoOrganization.status_value&quot;) != &quot;ACTV&quot;)" sfwObjectBased="True" />
    <rule ID="Rule Check Pay date Continuity for Ret or Ins" sfwMessageId="4704" sfwExpression="((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) || &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;)) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.report_type_value == &quot;REG&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.payroll_paid_date != DateTime.MinValue) &amp;&amp; &#xA;(this.CheckHeaderDateContinuity() == False)" sfwObjectBased="True" />
    <rule ID="RULE CHECK PAY PERIOD END DATE IS NULL" sfwMessageId="4577" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.pay_period_end_date == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="RULE CHECK PAY PERIOD IS NULL" sfwMessageId="4576" sfwExpression="((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) || &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;)) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.payroll_paid_date == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="RULE CHECK PAY PERIOD START DATE IS NULL" sfwMessageId="4575" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.pay_period_start_date == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="RULE CHECK PAYROLL HEADER OVERLAPS" sfwMessageId="4574" sfwExpression="(!string.IsNullOrEmpty(this.icdoEmployerPayrollHeader.header_type_value)) &amp;&amp; &#xA;(!string.IsNullOrEmpty(this.icdoEmployerPayrollHeader.report_type_value)) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.report_type_value == &quot;REG&quot;) &amp;&amp; &#xA;(this.CheckPayrollHeaderOverlapping() == True) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.header_type_value == &quot;PRCH&quot;)" sfwObjectBased="True" />
    <rule ID="RULE CHECK REPORT TYPE IS NULL" sfwMessageId="4573" sfwExpression="(string.IsNullOrEmpty(this.icdoEmployerPayrollHeader.report_type_value))" sfwObjectBased="True" />
    <rule ID="RULE CHECK REPORTING SOURCE IS PAPER REPORTING" sfwMessageId="4579" sfwExpression="(this.IsReportingSourceChanged() == True)" sfwObjectBased="True" />
    <rule ID="Rule Check Status is not review" sfwMessageId="4695" sfwExpression="(this.icdoEmployerPayrollHeader.status_value != &quot;REVW&quot;)" sfwObjectBased="True" />
    <rule ID="Rule if none of Detail is in posted Status" sfwMessageId="4696" sfwExpression="(this.VisibleIgnoreButton() == False)" sfwObjectBased="True" />
    <rule ID="RuleCheckTotalReportedAmtAndPurchaseAmt" sfwMessageId="1323" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;PRCH&quot;) &amp;&amp; &#xA;(this.CompareTotalBalanceContractAmtAndReportedAmt() == false)" sfwObjectBased="True" />
    <rule ID="Visible Allocation grid if benefit type is Retirement" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;)" sfwObjectBased="True" />
    <rule ID="Visible Allocation grid if benefit type is Retirement Regular ESS" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;(this.astrIsDetailPopulated == &quot;YES&quot;)" sfwObjectBased="True" />
    <rule ID="Visible Allocation grid if benefit type is Retirement Adjustment ESS" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;!(this.astrIsDetailPopulated == &quot;YES&quot;)" sfwObjectBased="True" />
    <rule ID="Visible Allocation grid when benefit type is insurance" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;)" sfwObjectBased="True" />
    <rule ID="Visible New Detail button" sfwExpression="((this.icdoEmployerPayrollHeader.status_value == &quot;PEND&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;RPST&quot;)) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.report_type_value == &quot;PEN&quot;)" sfwObjectBased="True" />
    <rule ID="Visible Reload Button" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.status_value == &quot;IGNR&quot;) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.status_value == &quot;PSTD&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.report_type_value == &quot;REG&quot;) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.report_type_value == &quot;PEN&quot;)" sfwObjectBased="True" />
    <rule ID="VISIBLE RULE BENEFIT TYPE IS RETR AND INSR" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) || &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;)" sfwObjectBased="True" />
    <rule ID="Visible Rule Ignore button ESS" sfwExpression="(RFunc.EvaluateRule(&quot;VISIBLE_RULE_IF_HEADER_STATUS_IS_PENDING_REVIEW_VALID_REDPST&quot;, this)) &amp;&amp; &#xA;!((this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.report_type_value == &quot;ADJS&quot;)) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusOrganization.icdoOrganization.central_payroll_flag&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="Visible rule new Allocation" sfwExpression="(this.icdoEmployerPayrollHeader.status_value != &quot;IGNR&quot;)" sfwObjectBased="True" />
    <rule ID="Visible Rule Online Payroll Detail Button" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.report_type_value == &quot;ADJS&quot;) &amp;&amp; &#xA;((this.icdoEmployerPayrollHeader.status_value == &quot;PEND&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;)) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.report_type_value == &quot;PEN&quot;)" sfwObjectBased="True" />
    <rule ID="VISIBLE_RULE_IF_HEADER_STATUS_IS_PENDING_OR_REVIEW" sfwExpression="(this.icdoEmployerPayrollHeader.status_value == &quot;PEND&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;)" sfwObjectBased="True" />
    <rule ID="VISIBLE_RULE_IF_HEADER_STATUS_IS_PENDING_REVIEW_VALID" sfwExpression="((this.icdoEmployerPayrollHeader.status_value == &quot;PEND&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;)) &amp;&amp;&#xA;!(this.icdoEmployerPayrollHeader.report_type_value == &quot;PEN&quot;)" sfwObjectBased="True" />
    <rule ID="VISIBLE_RULE_IF_HEADER_STATUS_IS_PENDING_REVIEW_VALID_REDPST" sfwExpression="((this.icdoEmployerPayrollHeader.status_value == &quot;PEND&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;)) &amp;&amp; &#xA;(this.VisibleIgnoreButton() == False) &amp;&amp; &#xA;!((this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.report_type_value == &quot;REG&quot;)) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.report_type_value == &quot;PEN&quot;)" sfwObjectBased="True" />
    <rule ID="VISIBLE_RULE_IF_HEADER_STATUS_IS_VALID_READYTOPOST_POSTED_INGORED" sfwExpression="(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;RPST&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;PSTD&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;IGNR&quot;)" sfwObjectBased="True" />
    <rule ID="VISIBLE_RULE_IF_HEADER_STATUS_IS_VALID_REVIEW" sfwExpression="((this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.ignore_balancing_status_flag == &quot;Y&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInValidStatus() == True) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value != &quot;RPST&quot;)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.balancing_status_value == &quot;BALN&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInValidStatus() == True) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value != &quot;RPST&quot;)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInValidStatus() == True)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInValidStatus() == True)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.balancing_status_value == &quot;BALN&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInReviewPendingStatus() == False)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInReviewPendingStatus() == False) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value != &quot;RPST&quot;)) || &#xD;&#xA;(((this.icdoEmployerPayrollHeader.balancing_status_value == &quot;BALN&quot;) || (this.icdoEmployerPayrollHeader.ignore_balancing_status_flag == &quot;Y&quot;)) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;PRCH&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value != &quot;RPST&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.ignore_balancing_status_flag == &quot;Y&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInReviewPendingStatus() == False)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInReviewPendingStatus() == False) &amp;&amp; &#xD;&#xA;(this.IsDetailContainOnlyOther457() == True)) " sfwObjectBased="True" />
    <rule ID="VisibleRuleForCreatePayrollDetailButton" sfwExpression="(this.icdoEmployerPayrollHeader.report_type_value == &quot;REG&quot;) &amp;&amp; &#xA;((this.icdoEmployerPayrollHeader.status_value == &quot;PEND&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;)) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.report_type_value == &quot;PEN&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForValidateButton" sfwExpression="((this.icdoEmployerPayrollHeader.status_value == &quot;PEND&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;)) &amp;&amp; &#xA;!((this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.report_type_value == &quot;ADJS&quot;)) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.report_type_value == &quot;PEN&quot;)" sfwObjectBased="True" />
    <rule ID="Rule Check Pay date duplicate for Ins" sfwMessage="Report for current pay period month already exists.  Please change Reporting Month." sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;) &amp;&amp; &#xA;(this.IsPayPeriodValidForUpload() == False)" sfwObjectBased="True" />
    <rule ID="Rule Check Pay date duplicate for Def Comp" sfwMessage="Report for current pay period already exists.  Please change dates." sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.report_type_value == &quot;REG&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.pay_period_start_date != DateTime.MinValue) &amp;&amp;&#xA;(this.icdoEmployerPayrollHeader.pay_period_end_date != DateTime.MinValue) &amp;&amp;&#xA;(this.IsPayPeriodValidForDefComp() == False)  &amp;&amp;&#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusOrganization.icdoOrganization.central_payroll_flag&quot;) != &quot;Y&quot;) &#xA;" sfwObjectBased="True" />
    <rule ID="RULE CHECK BENEFIT TYPE DEFF COMP AND DETAIL COUNT NOT NONE" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;!(this.iblnIsDetailCountNone == True)" sfwObjectBased="True" />
    <rule ID="RULE CHECK BENEFIT TYPE DEFF COMP AND DETAIL NONE" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;(this.iblnIsDetailCountNone == True)" sfwObjectBased="True" />
    <rule ID="VISIBLE RULE HEADER DETAILS" sfwExpression="!(this.iblnIsDetailCountNone == True)" sfwObjectBased="True" />
    <rule ID="Visible Rule Benefit Type Retirement Or Purchase" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) || &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;PRCH&quot;)" sfwObjectBased="True" />
    <rule ID="Rule Check if Header Type is Bonus" sfwExpression="(this.icdoEmployerPayrollHeader.astrRecordTypeBonus == &quot;BONS&quot;)" sfwObjectBased="True" />
    <rule ID="Rule Check if Report Type Adjustment" sfwExpression="(this.icdoEmployerPayrollHeader.report_type_value == &quot;ADJS&quot;)" sfwObjectBased="True" />
    <rule ID="Rule Check if Report Type Regular" sfwExpression="(this.icdoEmployerPayrollHeader.report_type_value == &quot;REG&quot;)" sfwObjectBased="True" />
    <rule ID="IsDefCompPostedDetailExists" sfwExpression="(this.IsDefCompPostedDetailExists() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleHeaderStatusReview" sfwExpression="(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;)" sfwObjectBased="True" />
    <rule ID="EssVisibleRuleForRoundingDifference" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;!(this.IsDetailEntryExists() == False) &amp;&amp; &#xA;(this.IsDetailEntryExistsInReviewPendingStatus() == False) &amp;&amp; &#xA;((this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;PSTD&quot;))" sfwObjectBased="True" />
    <rule ID="RULE CHECK BENEFIT TYPE IS NOT DEFF COMP AND PURCHASE" sfwExpression="!(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.header_type_value == &quot;PRCH&quot;)" sfwObjectBased="True" />
    <rule ID="RULE CHECK BENEFIT TYPE IS RETIREMENT" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;)" sfwObjectBased="True" />
    <rule ID="Rule Check Retirement Header Type Is Not Bonus" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.astrRecordTypeBonus == &quot;BONS&quot;)" sfwObjectBased="True" />
    <rule ID="ESSVisibleRuleSubmitReport" sfwExpression="(RFunc.EvaluateRule(&quot;ESS_VISIBLE_RULE_IF_HEADER_STATUS_IS_VALID_REVIEW&quot;, this)) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusOrganization.icdoOrganization.central_payroll_flag&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="ESS Visible Rule Benefit Type Retirement and Central Payroll Flag Not Yes" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusOrganization.icdoOrganization.central_payroll_flag&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="ESSVisibleRuleHeaderTypePurchaseAndCentralPayrollNotYes" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;PRCH&quot;) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusOrganization.icdoOrganization.central_payroll_flag&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="ESSVisibleRuleIsBenefitTypeRetOrDefCompAndCentralPayrollNotYes" sfwExpression="!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusOrganization.icdoOrganization.central_payroll_flag&quot;) == &quot;Y&quot;) &amp;&amp; &#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) || &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;))" sfwObjectBased="True" />
    <rule ID="Rule Check if Reporting month less than Jan 1977" sfwMessageId="10252" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.report_type_value == &quot;ADJS&quot;) &amp;&amp; &#xA;(this.iblnIsReportingMonthLessthanJan1977ForAdj() == True) &amp;&amp; &#xA;!(this.iblnIsReportingMonthLessthanJan1977ForAdjBonusRetro() == True)" sfwObjectBased="True" />
    <rule ID="Rule Check if Reporting month less than Jan 1977 for Bonus Retro" sfwMessageId="10253" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.report_type_value == &quot;ADJS&quot;) &amp;&amp; &#xA;!(this.iblnIsReportingMonthLessthanJan1977ForAdj() == True) &amp;&amp; &#xA;(this.iblnIsReportingMonthLessthanJan1977ForAdjBonusRetro() == True)" sfwObjectBased="True" />
    <rule ID="Visible Rule Check If Benefit Type Is Not Insurance" sfwExpression="!(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;)" sfwObjectBased="True" />
    <rule ID="Rule Check IF Header and Detail Dates Not Same" sfwMessageId="4591" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.report_type_value == &quot;REG&quot;) &amp;&amp; &#xA;(this.CheckIfHeaderAndDetailDatesAreNotSame() == True)" sfwObjectBased="True" />
    <rule ID="Visible Rule Check if Life Details Exists" sfwRuleType="Validation" sfwExpression="iblnIsFromESS &amp;&amp; (this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;) &amp;&amp; this.CheckIfLifeInsuranceDetailsExist()" sfwObjectBased="True" />
    <rule ID="Visible Rule Benefit Type Retirement" sfwRuleType="Validation" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;)&#xD;&#xA;" sfwObjectBased="True" />
    <rule ID="Visible Rule Benefit Type Purchase" sfwRuleType="Validation" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;PRCH&quot;)" sfwObjectBased="True" />
    <rule ID="Visible Rule Benefit Type Deferred" sfwRuleType="Validation" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;)" sfwObjectBased="True" />
    <rule ID="Visible Rule Benefit Type is not Purchase" sfwRuleType="Validation" sfwExpression="!(this.icdoEmployerPayrollHeader.header_type_value == &quot;PRCH&quot;)" sfwObjectBased="True" />
    <rule ID="Rule - Rule Check For Benefit Type Is DIFF COMP or PURCHASE" sfwRuleType="Validation" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) ||&#xD;&#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;PRCH&quot;)&#xD;&#xA;" sfwObjectBased="True" />
    <rule ID="ESS_VISIBLE_RULE_IF_HEADER_STATUS_IS_VALID_REVIEW" sfwRuleType="Validation" sfwExpression="((this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.ignore_balancing_status_flag == &quot;Y&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInValidStatus() == True) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value != &quot;RPST&quot;)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.balancing_status_value == &quot;BALN&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInValidStatus() == True) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value != &quot;RPST&quot;)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInValidStatus() == True)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInValidStatus() == True)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.balancing_status_value == &quot;BALN&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInReviewPendingStatus() == False)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInReviewPendingStatus() == False) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value != &quot;RPST&quot;)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.ignore_balancing_status_flag == &quot;Y&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInReviewPendingStatus() == False)) || &#xD;&#xA;((this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp; &#xD;&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;) &amp;&amp; &#xD;&#xA;(this.IsDetailEntryExistsInReviewPendingStatus() == False) &amp;&amp; &#xD;&#xA;(this.IsDetailContainOnlyOther457() == True))" sfwObjectBased="True" />
    <rule ID="VisibiltyRuleFOrSurpress3rdpayroll" sfwRuleType="Validation" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) &amp;&amp;&#xA;(this.IsDetailEntryExistsWith1145Error() == true) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.report_type_value == &quot;PEN&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForSaveButton" sfwRuleType="Validation" sfwExpression="((this.icdoEmployerPayrollHeader.status_value == &quot;PEND&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;) || &#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;))" sfwObjectBased="True" />
    <rule ID="DoesOrgCodeOnFileMatchUploadingOrg" sfwRuleType="Validation" sfwExpression="(this.DoesNotOrgCodeOnFileMatchUploadingOrg())" sfwMessageId="10334" sfwObjectBased="True" />
    <rule ID="Visible_Rule_For_Save_Comments_Button" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.icdoEmployerPayrollHeader.status_value == &quot;PSTD&quot;) ||&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;IGNR&quot;)||&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;VALD&quot;)||&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;)||&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;PEND&quot;)" />
    <rule ID="VISIBLE_RULE_FOR_APPLY_PENALTY" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) || &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;)) &amp;&amp; &#xA;((this.icdoEmployerPayrollHeader.report_type_value==&quot;REG&quot;) ||&#xA;(this.icdoEmployerPayrollHeader.report_type_value==&quot;ADJS&quot;)) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.status_value==&quot;PSTD&quot;) &amp;&amp; &#xA;!(this.IsPenaltyHeaderExistsOnHeader())" />
    <rule ID="VISIBLE_RULE_IF_REPORT_TYPE_VALUE_PENALTY" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.icdoEmployerPayrollHeader.report_type_value==&quot;PEN&quot;" />
    <rule ID="VISIBLE_RULE_IF_HEADER_STATUS_IS_REVIEW_REPORT_TYPE_VALUE_PENALTY" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot; &amp;&amp; &#xA;this.icdoEmployerPayrollHeader.report_type_value == &quot;PEN&quot; &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.created_by != RFunc.GetValue&lt;String&gt;(this, &quot;iobjPassInfo.istrUserID&quot;))" />
    <rule ID="VISIBLE_RULE_IF_REPORT_TYPE_VALUE_NOT_PENALTY" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="!(this.icdoEmployerPayrollHeader.report_type_value==&quot;PEN&quot;)" />
    <rule ID="VISIBLE_RULE_PENALTY_AND_NOT_ISURANCE" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.icdoEmployerPayrollHeader.report_type_value==&quot;PEN&quot; &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;)" />
    <rule ID="VISIBLE_RULE_PENALTY_NOT_RETIREMENT_DEFCOMP" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="!((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) || &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) ) &amp;&amp; &#xA;this.icdoEmployerPayrollHeader.report_type_value==&quot;PEN&quot;" />
    <rule ID="VISIBLE_RULE_PENALTY_AND_ISURANCE" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.icdoEmployerPayrollHeader.report_type_value==&quot;PEN&quot; &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;)" />
    <rule ID="VISIBLE_RULE_PENALTY_RETIREMENT_DEFCOMP" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;)) &amp;&amp; &#xA;this.icdoEmployerPayrollHeader.report_type_value==&quot;PEN&quot;" />
    <rule ID="VISIBLE_RULE_ISURANCE_AND_NOT_PENALTY" sfwRuleType="Validation" sfwObjectBased="False" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;INSR&quot;)&#xA;&amp;&amp; !(this.icdoEmployerPayrollHeader.report_type_value==&quot;PEN&quot;)" />
    <rule ID="VISIBLE_RULE_PENALTY_STATUS_REVIEW_POSTED" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.icdoEmployerPayrollHeader.report_type_value==&quot;PEN&quot; &amp;&amp;&#xA;((this.icdoEmployerPayrollHeader.status_value == &quot;PSTD&quot;) ||&#xA;(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;))" />
    <rule ID="VISIBLE_RULE_RETIREMENT_AND_NOT_PENALTY" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;)&#xA;&amp;&amp; !(this.icdoEmployerPayrollHeader.report_type_value==&quot;PEN&quot;)" />
    <rule ID="VISIBLE_RULE_NOT_PENALTY_BUT_RETIREMENT_DEFCOMP" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="((this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;) || &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;) ) &amp;&amp; &#xA;!(this.icdoEmployerPayrollHeader.report_type_value==&quot;PEN&quot;)" />
    <rule ID="CheckDebitACHRequestExists" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="!(this.IblnCheckDebitACHRequestExists == True)" />
    <rule ID="MakeReadOnlyDetailComment" sfwRuleType="Validation" sfwObjectBased="False" sfwExpression="true" />
    <rule ID="VisibleRuleHeaderStatusNotReview" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="!(this.icdoEmployerPayrollHeader.status_value == &quot;REVW&quot;)" />
    <rule ID="VR-ESSIsBenefitTypeRetAndCentralPayrollNotYes" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusOrganization.icdoOrganization.central_payroll_flag&quot;) == &quot;Y&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;RETR&quot;)" />
    <rule ID="VR-ESSIsBenefitTypeDeffAndCentralPayrollNotYes" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusOrganization.icdoOrganization.central_payroll_flag&quot;) == &quot;Y&quot;) &amp;&amp; &#xA;(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;)" />
    <rule ID="IsBenefitTypeDeffComp" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.icdoEmployerPayrollHeader.header_type_value == &quot;DEFF&quot;)" />
    <rule ID="VSTotalEEContributionReportedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalEEContributionReportedByPlanHasValue" />
    <rule ID="VSTotalEEPreTaxReportedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalEEPreTaxReportedByPlanHasValue" />
    <rule ID="VSTotalEEEmployerPickupReportedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalEEEmployerPickupReportedByPlanHasValue" />
    <rule ID="VSTotalERContributionReportedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalERContributionReportedByPlanHasValue" />
    <rule ID="VSTotalMemberInterestCalculatedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalMemberInterestCalculatedByPlanHasValue" />
    <rule ID="VSTotalEmployerInterestCalculatedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalEmployerInterestCalculatedByPlanHasValue" />
    <rule ID="VSTotalRHICEEContributionReportedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalRHICEEContributionReportedByPlanHasValue" />
    <rule ID="VSTotalRHICERContributionReportedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalRHICERContributionReportedByPlanHasValue" />
    <rule ID="VSTotalRHICEmployerInterestCalculatedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalEEContributionReportedByPlanHasValue" />
    <rule ID="VSTotalEEPreTaxAddlReportedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalEEPreTaxAddlReportedByPlanHasValue" />
    <rule ID="VSTotalEEPostTaxAddlReportedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalEEPostTaxAddlReportedByPlanHasValue" />
    <rule ID="VSTotalERPreTaxMatchReportedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalERPreTaxMatchReportedByPlanHasValue" />
    <rule ID="VSTotalADECReportedByPlanHasValue" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnTotalADECReportedByPlanHasValue" />
  </rules>
  <delete>
    <property ID="lstEmployerPayrollHeaderError" sfwMethodName="LoadEmployerPayrollHeaderError" />
    <property ID="lstEmployerPayrollDetail" sfwMethodName="LoadEmployerPayrollDetail" />
  </delete>
  <checklist />
  <initialload>
    <item ID="VISIBLE_RULE_IF_HEADER_STATUS_IS_PENDING_OR_REVIEW" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_IF_HEADER_STATUS_IS_VALID_REVIEW" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_IF_HEADER_STATUS_IS_PENDING_REVIEW_VALID_REDPST" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK BENEFIT TYPE IS NOT DEFF COMP" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK BENEFIT TYPE IS DEFF COMP" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_IF_HEADER_STATUS_IS_VALID_READYTOPOST_POSTED_INGORED" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE RULE BENEFIT TYPE IS RETR AND INSR" sfwMode="All" sfwStatus="Active" />
    <item ID="Visible Allocation grid when benefit type is insurance" sfwMode="All" sfwStatus="Active" />
    <item ID="Visible Allocation grid if benefit type is Retirement" sfwMode="All" sfwStatus="Active" />
    <item ID="Visible Reload Button" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule check if benefit type Insurance" sfwMode="All" sfwStatus="Active" />
    <item ID="Visible New Detail button" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_IF_HEADER_STATUS_IS_PENDING_REVIEW_VALID" sfwMode="All" sfwStatus="Active" />
    <item ID="Visible rule new Allocation" sfwMode="All" sfwStatus="Active" />
    <item ID="CheckHeaderTypeIsPurchase" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForCreatePayrollDetailButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForValidateButton" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRemittanceReportButtonVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="IsDebitACHRequestButtonVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="IsDeleteACHRequestButtonVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="IsBenefitTypeRetOrDefComp" sfwMode="All" sfwStatus="Active" />
    <item ID="ESSVisibleRuleForDetailCreationButton" sfwMode="All" sfwStatus="Active" />
    <item ID="ESSVisibleRuleForNewDetail" sfwMode="All" sfwStatus="Active" />
    <item ID="Visible Rule Online Payroll Detail Button" sfwMode="All" sfwStatus="Active" />
    <item ID="Visible Rule Ignore button ESS" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK BENEFIT TYPE DEFF COMP AND DETAIL COUNT NOT NONE" sfwStatus="Active" sfwMode="All" />
    <item ID="RULE CHECK BENEFIT TYPE DEFF COMP AND DETAIL NONE" sfwStatus="Active" sfwMode="All" />
    <item ID="VISIBLE RULE HEADER DETAILS" sfwStatus="Active" sfwMode="All" />
    <item ID="Visible Rule Benefit Type Retirement Or Purchase" sfwStatus="Active" sfwMode="All" />
    <item ID="Visible Allocation grid if benefit type is Retirement Regular ESS" sfwStatus="Active" sfwMode="All" />
    <item ID="Visible Allocation grid if benefit type is Retirement Adjustment ESS" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule Check if Header Type is Bonus" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule Check if Report Type Adjustment" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule Check if Report Type Regular" sfwStatus="Active" sfwMode="All" />
    <item ID="IsDefCompPostedDetailExists" sfwStatus="Active" sfwMode="All" />
    <item ID="VisibleRuleHeaderStatusReview" sfwStatus="Active" sfwMode="All" />
    <item ID="RULE CHECK BENEFIT TYPE IS DEFF COMP AND REPORT TYPE IS REGULAR" sfwStatus="Active" sfwMode="All" />
    <item ID="RULE CHECK BENEFIT TYPE IS DEFF COMP AND REPORT TYPE IS ADJUSTMENT" sfwStatus="Active" sfwMode="All" />
    <item ID="RULE CHECK BENEFIT TYPE IS PURCHASE AND REPORT TYPE IS REGULAR" sfwStatus="Active" sfwMode="All" />
    <item ID="RULE CHECK BENEFIT TYPE IS PURCHASE COMP AND REPORT TYPE IS ADJUSTMENT" sfwStatus="Active" sfwMode="All" />
    <item ID="EssVisibleRuleForRoundingDifference" sfwStatus="Active" sfwMode="All" />
    <item ID="RULE CHECK BENEFIT TYPE IS NOT DEFF COMP AND PURCHASE" sfwStatus="Active" sfwMode="All" />
    <item ID="RULE CHECK BENEFIT TYPE IS RETIREMENT" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule Check Retirement Header Type Is Not Bonus" sfwStatus="Active" sfwMode="All" />
    <item ID="ESSVisibleRuleSubmitReport" sfwStatus="Active" sfwMode="All" />
    <item ID="ESS Visible Rule Benefit Type Retirement and Central Payroll Flag Not Yes" sfwStatus="Active" sfwMode="All" />
    <item ID="ESSVisibleRuleHeaderTypePurchaseAndCentralPayrollNotYes" sfwStatus="Active" sfwMode="All" />
    <item ID="ESSVisibleRuleIsBenefitTypeRetOrDefCompAndCentralPayrollNotYes" sfwStatus="Active" sfwMode="All" />
    <item ID="Visible Rule Check If Benefit Type Is Not Insurance" sfwStatus="Active" sfwMode="All" />
    <item ID="Visible Rule Check if Life Details Exists" sfwStatus="Active" sfwMode="All" />
    <item ID="Visible Rule Benefit Type Retirement" sfwStatus="Active" sfwMode="All" />
    <item ID="Visible Rule Benefit Type Purchase" sfwStatus="Active" sfwMode="All" />
    <item ID="Visible Rule Benefit Type Deferred" sfwStatus="Active" sfwMode="All" />
    <item ID="Visible Rule Benefit Type is not Purchase" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule - Rule Check For Benefit Type Is DIFF COMP or PURCHASE" sfwStatus="Active" sfwMode="All" />
    <item ID="VisibiltyRuleFOrSurpress3rdpayroll" sfwStatus="Active" sfwMode="All" />
    <item ID="VisibleRuleForSaveButton" sfwStatus="Active" sfwMode="All" />
    <item ID="VISIBLE_RULE_FOR_APPLY_PENALTY" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_IF_REPORT_TYPE_VALUE_PENALTY" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_IF_HEADER_STATUS_IS_REVIEW_REPORT_TYPE_VALUE_PENALTY" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_IF_REPORT_TYPE_VALUE_NOT_PENALTY" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_PENALTY_AND_NOT_ISURANCE" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_PENALTY_NOT_RETIREMENT_DEFCOMP" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_PENALTY_AND_ISURANCE" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_PENALTY_RETIREMENT_DEFCOMP" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_ISURANCE_AND_NOT_PENALTY" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_PENALTY_STATUS_REVIEW_POSTED" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_RETIREMENT_AND_NOT_PENALTY" sfwMode="All" sfwStatus="Active" />
    <item ID="VISIBLE_RULE_NOT_PENALTY_BUT_RETIREMENT_DEFCOMP" sfwMode="All" sfwStatus="Active" />
    <item ID="CheckDebitACHRequestExists" sfwMode="All" sfwStatus="Active" />
    <item ID="MakeReadOnlyDetailComment" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleHeaderStatusNotReview" sfwMode="All" sfwStatus="Active" />
    <item ID="VR-ESSIsBenefitTypeRetAndCentralPayrollNotYes" sfwMode="All" sfwStatus="Active" />
    <item ID="VR-ESSIsBenefitTypeDeffAndCentralPayrollNotYes" sfwMode="All" sfwStatus="Active" />
    <item ID="IsBenefitTypeDeffComp" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalEEContributionReportedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalEEPreTaxReportedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalEEEmployerPickupReportedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalERContributionReportedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalMemberInterestCalculatedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalEmployerInterestCalculatedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalRHICEEContributionReportedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalRHICERContributionReportedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalRHICEmployerInterestCalculatedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalEEPreTaxAddlReportedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalEEPostTaxAddlReportedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalERPreTaxMatchReportedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
    <item ID="VSTotalADECReportedByPlanHasValue" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror>
    <item ID="RULE CHECK REPORTING SOURCE IS PAPER REPORTING" sfwMode="All" sfwStatus="InActive" />
    <item ID="Rule check if detail exists for header" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule check if any detail is in review status" sfwMode="All" sfwStatus="Active" />
    <item ID="IsReportedTotalWagesMatchWithCalculated" sfwMode="All" sfwStatus="Active" />
    <item ID="IsTotalContributionsReportedMatchWithCalculated" sfwMode="All" sfwStatus="Active" />
    <item ID="IsTotalPremiumReportedMatchWithCalculated" sfwMode="All" sfwStatus="Active" />
    <item ID="IsTotalPurchseAmountReportedMatchWithCalcuated" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPayCheckDateDifferentInHeaderAndDetail" sfwMode="All" sfwStatus="Active" />
  </softerror>
  <harderror>
    <item ID="RULE CHECK ORG ID IS VALID" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK ORG ID IS NULL" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK PAY PERIOD END DATE IS NULL" sfwMode="New" sfwStatus="Active" />
    <item ID="RULE CHECK PAY PERIOD IS NULL" sfwMode="New" sfwStatus="Active" />
    <item ID="RULE CHECK PAY PERIOD START DATE IS NULL" sfwMode="New" sfwStatus="Active" />
    <item ID="RULE CHECK PAYROLL HEADER OVERLAPS" sfwMode="New" sfwStatus="Inactive" />
    <item ID="RULE CHECK BENFIT TYPE IS NULL" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK REPORT TYPE IS NULL" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check Org Status is not active" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check if Frequency not set for Org Plan" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check if Plan Deferred Comp Frequency" sfwMode="All" sfwStatus="Active" />
    <item ID="Check Org is Employer" sfwMode="All" sfwStatus="Active" />
    <item ID="Check Start Date is Greater than End date" sfwMode="New" sfwStatus="Active" />
    <item ID="Rule Check Pay date Continuity for Ret or Ins" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check Header Date continuity For Def Comp" sfwMode="All" sfwStatus="Active" />
    <item ID="IsInsuranceTypeCreatedManually" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check if Reporting month less than Jan 1977" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule Check if Reporting month less than Jan 1977 for Bonus Retro" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule Check IF Header and Detail Dates Not Same" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule Check Pay date duplicate for Ins" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule Check Pay date duplicate for Def Comp" sfwStatus="Active" sfwMode="All" />
    <item ID="DoesOrgCodeOnFileMatchUploadingOrg" sfwStatus="Active" sfwMode="All" />
  </harderror>
  <validatedelete>
    <item ID="Rule Check if any detail is posted" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check Status is not review" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check Header got Remittance" sfwMode="All" sfwStatus="Active" />
  </validatedelete>
  <groupslist />
  <updateablecdo />
  <commonproperties />
  <expressionfields />
  <queries>
    <query ID="Lookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EPH.*,SO.*&#xD;&#xA;,DTLCOUNT = (SELECT COUNT(*) FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD WITH(NOLOCK) WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID = EPH.EMPLOYER_PAYROLL_HEADER_ID) &#xD;&#xA;,INSURANCEAMOUNT = ISNULL((SELECT SUM(ISNULL(A.PREMIUM_AMOUNT,0)) FROM SGT_EMPLOYER_PAYROLL_DETAIL A WITH(NOLOCK)&#xD;&#xA;     WHERE  A.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID AND A.STATUS_VALUE != 'IGNR' AND EPH.HEADER_TYPE_VALUE='INSR' AND A.RECORD_TYPE_VALUE!='-ADJ') ,0),&#xD;&#xA;NEGINSURANCEADJAMOUNT = ISNULL((SELECT SUM(ISNULL(A.PREMIUM_AMOUNT,0)) FROM SGT_EMPLOYER_PAYROLL_DETAIL A WITH(NOLOCK) &#xD;&#xA;     WHERE  A.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID AND A.STATUS_VALUE != 'IGNR' AND EPH.HEADER_TYPE_VALUE='INSR' AND A.RECORD_TYPE_VALUE='-ADJ'),0)&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_ORGANIZATION SO ON EPH.ORG_ID=SO.ORG_ID&#xD;&#xA;ORDER BY EPH.EMPLOYER_PAYROLL_HEADER_ID DESC&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="Subquery" sfwQueryType="SubSelectQuery" sfwSql="select * from sgt_organization B where A.org_id=B.Org_id">
      <parameters />
    </query>
    <query ID="StatusSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT A.STATUS_VALUE, C.DESCRIPTION AS STATUS_DESCRIPTION, COUNT(*) AS STATUS_COUNT&#xD;&#xA;  FROM SGT_EMPLOYER_PAYROLL_DETAIL A WITH (NOLOCK),&#xD;&#xA;       SGT_EMPLOYER_PAYROLL_HEADER B WITH (NOLOCK),&#xD;&#xA;       SGS_CODE_VALUE C WITH (NOLOCK)&#xD;&#xA; WHERE A.EMPLOYER_PAYROLL_HEADER_ID     = B.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;   AND B.EMPLOYER_PAYROLL_HEADER_ID     = @EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;   AND A.STATUS_ID               = C.CODE_ID&#xD;&#xA;   AND A.STATUS_VALUE            = C.CODE_VALUE&#xD;&#xA; GROUP BY &#xD;&#xA;       A.STATUS_VALUE, C.DESCRIPTION">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="ErrorSummaryByID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TEMP.MESSAGE_ID, DISPLAY_MESSAGE, SEVERITY, COUNT(*) AS MESSAGE_COUNT &#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT A.EMPLOYER_PAYROLL_DETAIL_ID,A.MESSAGE_ID, DISPLAY_MESSAGE, E.DESCRIPTION AS SEVERITY, COUNT(*) AS MESSAGE_COUNT&#xD;&#xA;  FROM SGT_EMPLOYER_PAYROLL_DETAIL_ERROR A WITH(NOLOCK) ,&#xD;&#xA;       SGT_EMPLOYER_PAYROLL_DETAIL B WITH(NOLOCK) ,&#xD;&#xA;       SGT_EMPLOYER_PAYROLL_HEADER C WITH(NOLOCK) ,&#xD;&#xA;       SGS_MESSAGES D WITH(NOLOCK) ,&#xD;&#xA;       SGS_CODE_VALUE E WITH(NOLOCK) &#xD;&#xA; WHERE A.EMPLOYER_PAYROLL_DETAIL_ID = B.EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;   AND B.EMPLOYER_PAYROLL_HEADER_ID     = C.EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA;   AND C.EMPLOYER_PAYROLL_HEADER_ID      = @EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;   AND A.MESSAGE_ID              = D.MESSAGE_ID&#xD;&#xA;   AND D.SEVERITY_ID             = E.CODE_ID&#xD;&#xA;   AND D.SEVERITY_VALUE          = E.CODE_VALUE&#xD;&#xA;   AND B.STATUS_VALUE NOT IN ('PSTD','IGNR','VALD')&#xD;&#xA;   AND 1=(CASE WHEN E.DESCRIPTION = 'Warning' AND ISNULL(B.SUPPRESS_WARNINGS_FLAG,'N') = 'Y' THEN 0 ELSE 1 END)&#xD;&#xA; GROUP BY &#xD;&#xA;       A.MESSAGE_ID, DISPLAY_MESSAGE, E.DESCRIPTION&#xD;&#xA;&#x9;   ,A.EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;&#xD;&#xA;&#x9;   ) TEMP&#xD;&#xA;&#x9;    GROUP BY &#xD;&#xA;       TEMP.MESSAGE_ID, TEMP.DISPLAY_MESSAGE, SEVERITY">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRetirementContributionByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID, EPD.PLAN_ID IINTPLANID, &#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_CONTRIBUTION_REPORTED,0) ELSE 0 END) IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_CONTRIBUTION_REPORTED,0) ELSE 0 END) IDECTOTALNEGATIVEEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.ER_CONTRIBUTION_REPORTED,0) ELSE 0 END) IDECTOTALERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.ER_CONTRIBUTION_REPORTED,0) ELSE 0 END)  IDECTOTALNEGATIVEERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.RHIC_ER_CONTRIBUTION_REPORTED,0) ELSE 0 END) IDECTOTALRHICERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.RHIC_ER_CONTRIBUTION_REPORTED,0) ELSE 0 END) IDECTOTALNEGATIVERHICERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.RHIC_EE_CONTRIBUTION_REPORTED,0) ELSE 0 END) IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.RHIC_EE_CONTRIBUTION_REPORTED,0) ELSE 0 END) IDECTOTALNEGATIVERHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_EMPLOYER_PICKUP_REPORTED,0) ELSE 0 END) IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_EMPLOYER_PICKUP_REPORTED,0) ELSE 0 END) IDECTOTALNEGATIVEEEEMPLOYERPICKUPREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_PRE_TAX_REPORTED,0) ELSE 0 END) IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_PRE_TAX_REPORTED,0) ELSE 0 END) IDECTOTALNEGATIVEEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_CONTRIBUTION_CALCULATED,0) ELSE 0 END) IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_CONTRIBUTION_CALCULATED,0) ELSE 0 END) IDECTOTALNEGATIVEEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.ER_CONTRIBUTION_CALCULATED,0) ELSE 0 END) IDECTOTALERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.ER_CONTRIBUTION_CALCULATED,0) ELSE 0 END) IDECTOTALNEGATIVEERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA; &#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.RHIC_ER_CONTRIBUTION_CALCULATED,0) ELSE 0 END) IDECTOTALRHICERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.RHIC_ER_CONTRIBUTION_CALCULATED,0) ELSE 0 END)  IDECTOTALNEGATIVERHICERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.RHIC_EE_CONTRIBUTION_CALCULATED,0) ELSE 0 END) IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.RHIC_EE_CONTRIBUTION_CALCULATED,0) ELSE 0 END)  IDECTOTALNEGATIVERHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.MEMBER_INTEREST_CALCULATED,0) ELSE 0 END) IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.MEMBER_INTEREST_CALCULATED,0) ELSE 0 END)  IDECTOTALNEGATIVEMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EMPLOYER_INTEREST_CALCULATED,0) ELSE 0 END) IDECTOTALEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD'  THEN ISNULL(EPD.EMPLOYER_INTEREST_CALCULATED,0) ELSE 0 END)  IDECTOTALNEGATIVEEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN  ISNULL(EPD.EMPLOYER_RHIC_INTEREST_CALCULATED,0) ELSE 0 END) IDECTOTALRHICEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EMPLOYER_RHIC_INTEREST_CALCULATED,0) ELSE 0 END)  IDECTOTALNEGATIVERHICEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_EMPLOYER_PICKUP_CALCULATED,0) ELSE 0 END) IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_EMPLOYER_PICKUP_CALCULATED,0) ELSE 0 END) IDECTOTALNEGATIVEEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_PRE_TAX_CALCULATED,0) ELSE 0 END) IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_PRE_TAX_CALCULATED,0) ELSE 0 END)  IDECTOTALNEGATIVEEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.ADEC_CALCULATED,0) ELSE 0 END) IDECTOTALADECCALCULATEDBYPLAN,&#xD;&#xA;--SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.ADEC_CALCULATED,0) ELSE 0 END)  IDECTOTALNEGATIVEADECAMOUNTCALCULATEDBYPLAN&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.ADEC_REPORTED,0) ELSE 0 END) IDECTOTALADECREPORTEDBYPLAN,&#xD;&#xA;--SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_PRE_TAX_REPORTED,0) ELSE 0 END) IDECTOTALNEGATIVEEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_PRETAX_ADDL_CALCULATED,0) ELSE 0 END) IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,&#xD;&#xA;--SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_PRE_TAX_REPORTED,0) ELSE 0 END) IDECTOTALNEGATIVEEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_PRETAX_ADDL_REPORTED,0) ELSE 0 END) IDECTOTALEEPRETAXADDLREPORTEDBYPLAN,&#xD;&#xA;--SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_PRE_TAX_REPORTED,0) ELSE 0 END) IDECTOTALNEGATIVEEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_POST_TAX_ADDL_CALCULATED,0) ELSE 0 END) IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;--SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_PRE_TAX_REPORTED,0) ELSE 0 END) IDECTOTALNEGATIVEEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_POST_TAX_ADDL_REPORTED,0) ELSE 0 END) IDECTOTALEEPOSTTAXADDLREPORTEDBYPLAN,&#xD;&#xA;--SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_PRE_TAX_REPORTED,0) ELSE 0 END) IDECTOTALNEGATIVEEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.ER_PRETAX_MATCH_CALCULATED,0) ELSE 0 END) IDECTOTALERPRETAXMATCHCALCULATEDBYPLAN,&#xD;&#xA;--SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_PRE_TAX_REPORTED,0) ELSE 0 END) IDECTOTALNEGATIVEEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.ER_PRETAX_MATCH_REPORTED,0) ELSE 0 END) IDECTOTALERPRETAXMATCHREPORTEDBYPLAN&#xD;&#xA;--SUM(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE != 'PSTD' THEN ISNULL(EPD.EE_PRE_TAX_REPORTED,0) ELSE 0 END) IDECTOTALNEGATIVEEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD WITH(NOLOCK), SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK) &#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= @EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPD.RECORD_TYPE_VALUE IN ('+ADJ','REG','BONS','NBON','-ADJ') AND EPD.STATUS_VALUE NOT IN('IGNR')&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, EPD.PLAN_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT EMPHDR.EMPLOYER_PAYROLL_HEADER_ID AS IINTEMLOYERPAYROLLHEADERID, &#xD;&#xA;&#x9;1 AS IINTPLANID,&#xD;&#xA;&#x9;ISNULL(EMPHDR.TOTAL_CONTRIBUTION_REPORTED,0) AS IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVEEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVEERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALRHICERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVERHICERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVERHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVEEEEMPLOYERPICKUPREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVEEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;&#x9;ISNULL(EMPHDR.TOTAL_CONTRIBUTION_CALCULATED,0) AS IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVEEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVEERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALRHICERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVERHICERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVERHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVEMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVEEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALRHICEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVERHICEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVEEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALNEGATIVEEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALADECCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALADECREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALEEPRETAXADDLREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALEEPOSTTAXADDLREPORTEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALERPRETAXMATCHCALCULATEDBYPLAN,&#xD;&#xA;&#x9;0.00 AS IDECTOTALERPRETAXMATCHREPORTEDBYPLAN&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER EMPHDR WITH(NOLOCK)&#xD;&#xA;WHERE EMPHDR.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA;AND EMPHDR.HEADER_TYPE_VALUE IN ('RETR')&#xD;&#xA;AND EMPHDR.REPORT_TYPE_VALUE = 'PEN'&#xD;&#xA;AND EMPHDR.EMPLOYER_PAYROLL_HEADER_ID = @EMPLOYER_PAYROLL_HEADER_ID">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllPayrollHeaderExceptIgnored" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select  *&#xD;&#xA;&#xD;&#xA;From Sgt_employer_payroll_header &#xD;&#xA;&#xD;&#xA;Where org_id=@org_id and header_type_value=@benefit_type_value and&#xD;&#xA;&#xD;&#xA;report_type_value=@report_type_value and status_value !='IGNR' and employer_payroll_header_id &lt;&gt; @employer_payroll_header_id">
      <parameters>
        <parameter ID="@org_id" sfwDataType="int" />
        <parameter ID="@benefit_type_value" sfwDataType="string" />
        <parameter ID="@report_type_value" sfwDataType="string" />
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadDistinctPlanInPayrollDetailByHeader" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select distinct epd.plan_id &#xD;&#xA;from sgt_employer_payroll_detail epd&#xD;&#xA;where epd.employer_payroll_header_id= @employer_payroll_header_id&#xD;&#xA;and plan_id != ''&#xD;&#xA;">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadDeferredCompContributionByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID, EPD.PLAN_ID IINTPLANID, &#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT1,0)) IDECTOTALCONTRIBUTIONAMOUNT1REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT2,0)) IDECTOTALCONTRIBUTIONAMOUNT2REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT3,0)) IDECTOTALCONTRIBUTIONAMOUNT3REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT4,0)) IDECTOTALCONTRIBUTIONAMOUNT4REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT5,0)) IDECTOTALCONTRIBUTIONAMOUNT5REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT6,0)) IDECTOTALCONTRIBUTIONAMOUNT6REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT7,0)) IDECTOTALCONTRIBUTIONAMOUNT7REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ER_PRETAX_MATCH_REPORTED,0)) IDECTOTALERPRETAXMATCHREPORTEDBYPLAN&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD WITH(NOLOCK), SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK)&#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= @EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPD.RECORD_TYPE_VALUE IN ('+ADJ','REG') AND EPD.STATUS_VALUE NOT IN('IGNR')&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, EPD.PLAN_ID">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadInsurancePremiumByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID, EPD.PLAN_ID IINTPLANID, &#xD;&#xA;SUM(ISNULL(EPD.PREMIUM_AMOUNT,0)) IDECTOTALPREMIUMAMOUNTBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.GROUP_HEALTH_FEE_AMOUNT,0)) IDECTOTALFEEAMOUNTBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.OTHR_RHIC_AMOUNT,0)) IDECOTHERRHICAMOUNT,&#xD;&#xA;SUM(ISNULL(EPD.JS_RHIC_AMOUNT,0)) IDECJSRHICAMOUNT&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD WITH(NOLOCK) , SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK)  &#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= @EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPD.RECORD_TYPE_VALUE IN ('+ADJ','REG') AND EPD.STATUS_VALUE NOT IN('IGNR')&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, EPD.PLAN_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT&#xD;&#xA;EMPHDR.EMPLOYER_PAYROLL_HEADER_ID AS IINTEMLOYERPAYROLLHEADERID, 12 AS IINTPLANID, &#xD;&#xA;ISNULL(EMPHDR.TOTAL_PREMIUM_AMOUNT_REPORTED,0) AS IDECTOTALPREMIUMAMOUNTBYPLAN,&#xD;&#xA;ISNULL(EMPHDR.TOTAL_CONTRIBUTION_CALCULATED,0) AS IDECTOTALFEEAMOUNTBYPLAN,&#xD;&#xA;0 AS IDECOTHERRHICAMOUNT,&#xD;&#xA;0 AS IDECJSRHICAMOUNT&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER EMPHDR WITH(NOLOCK)&#xD;&#xA;WHERE EMPHDR.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA;AND EMPHDR.HEADER_TYPE_VALUE IN ('INSR')&#xD;&#xA;AND EMPHDR.REPORT_TYPE_VALUE = 'PEN'&#xD;&#xA;AND EMPHDR.EMPLOYER_PAYROLL_HEADER_ID= @EMPLOYER_PAYROLL_HEADER_ID">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadNegativeAdjustmentAmountByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID,EPH.ORG_ID IINTORGID, EPD.PLAN_ID IINTPLANID, &#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_CALCULATED,0))IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ER_CONTRIBUTION_CALCULATED,0)) IDECTOTALERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_ER_CONTRIBUTION_CALCULATED,0)) IDECTOTALRHICERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_CALCULATED,0)) IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_CALCULATED,0)) IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_CALCULATED,0)) IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.MEMBER_INTEREST_CALCULATED,0)) IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EMPLOYER_INTEREST_CALCULATED,0)) IDECTOTALEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EMPLOYER_RHIC_INTEREST_CALCULATED,0)) IDECTOTALRHICEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT1,0)) IDECTOTALCONTRIBUTIONAMOUNT1REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT2,0)) IDECTOTALCONTRIBUTIONAMOUNT2REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT3,0)) IDECTOTALCONTRIBUTIONAMOUNT3REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT4,0)) IDECTOTALCONTRIBUTIONAMOUNT4REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT5,0)) IDECTOTALCONTRIBUTIONAMOUNT5REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT6,0)) IDECTOTALCONTRIBUTIONAMOUNT6REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT7,0)) IDECTOTALCONTRIBUTIONAMOUNT7REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.PREMIUM_AMOUNT,0)) IDECTOTALPREMIUMAMOUNTBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.GROUP_HEALTH_FEE_AMOUNT,0)) IDECTOTALFEEAMOUNTBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.OTHR_RHIC_AMOUNT,0)) IDECOTHERRHICAMOUNT,&#xD;&#xA;SUM(ISNULL(EPD.JS_RHIC_AMOUNT,0)) IDECJSRHICAMOUNT,&#xD;&#xA;SUM(ISNULL(EPD.HSA_AMOUNT,0)) IDECHSAAMOUNT,&#xD;&#xA;SUM(ISNULL(EPD.VENDOR_AMOUNT,0)) IDECVENDORAMOUNT,&#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_REPORTED,0)) IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ER_CONTRIBUTION_REPORTED,0)) IDECTOTALERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_ER_CONTRIBUTION_REPORTED,0)) IDECTOTALRHICERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_REPORTED,0)) IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_REPORTED,0)) IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_REPORTED,0)) IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRETAX_ADDL_CALCULATED,0)) IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_POST_TAX_ADDL_CALCULATED,0)) IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ER_PRETAX_MATCH_CALCULATED,0)) IDECTOTALERPRETAXMATCHCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ADEC_CALCULATED,0)) IDECTOTALADECCALCULATEDBYPLAN&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD, SGT_EMPLOYER_PAYROLL_HEADER EPH &#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= @EMPLOYER_PAYROLL_HEADER_ID AND EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE='VALD'&#xD;&#xA;AND EPD.PLAN_ID != 8&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, EPD.PLAN_ID,EPH.ORG_ID">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPayrollHeaderExceptIgnoredForRetAndIns" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select *&#xD;&#xA;From Sgt_employer_payroll_header &#xD;&#xA;Where org_id=@org_id and header_type_value=@benefit_type_value and&#xD;&#xA;report_type_value='REG' and status_value !='IGNR' and employer_payroll_header_id &lt;&gt; @employer_payroll_header_id&#xD;&#xA;and payroll_paid_date &lt;= @payroll_paid_date&#xD;&#xA;order by payroll_paid_date desc">
      <parameters>
        <parameter ID="@org_id" sfwDataType="int" />
        <parameter ID="@benefit_type_value" sfwDataType="string" />
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
        <parameter ID="@payroll_paid_date" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPayrollHeaderExceptIngoredForDefComp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select  *&#xD;&#xA;From Sgt_employer_payroll_header &#xD;&#xA;Where org_id=@org_id and header_type_value='DEFF' and&#xD;&#xA;report_type_value='REG' and status_value !='IGNR' and employer_payroll_header_id &lt;&gt; @employer_payroll_header_id&#xD;&#xA;and PAY_PERIOD_START_DATE &lt;= @pay_period_start_date&#xD;&#xA;order by pay_period_start_date desc">
      <parameters>
        <parameter ID="@org_id" sfwDataType="int" />
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
        <parameter ID="@pay_period_start_date" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetActiveInsuranceOrgPlans" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_ORG_PLAN OP WITH (NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN P ON P.PLAN_ID=OP.PLAN_ID AND P.BENEFIT_TYPE_VALUE='INSR'&#xD;&#xA;INNER JOIN SGT_ORGANIZATION O ON O.ORG_ID = OP.ORG_ID&#xD;&#xA;WHERE @payrollPaidDate BETWEEN OP.PARTICIPATION_START_DATE AND ISNULL(OP.PARTICIPATION_END_DATE,'01/01/2900')&#xD;&#xA;">
      <parameters>
        <parameter ID="@payrollPaidDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadActiveInsuranceMemberByOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="WITH PARENT(PERSON_ACCOUNT_ID,&#xD;&#xA; plan_participation_status_value,&#xD;&#xA; effective_start_date,&#xD;&#xA; effective_end_date,&#xD;&#xA; RowRank)&#xD;&#xA;AS&#xD;&#xA;(&#xD;&#xA;select PERSON_ACCOUNT_ID,&#xD;&#xA; ltch.plan_participation_status_value,&#xD;&#xA; LTCH.effective_start_date,&#xD;&#xA; ltch.effective_end_date&#xD;&#xA; ,row_number() OVER (PARTITION BY LTC.PERSON_ACCOUNT_ID ORDER BY LTC.PERSON_ACCOUNT_ID,&#xD;&#xA; LTCH.effective_start_date DESC,isnull(ltch.effective_end_date,'01/01/2900') DESC ) &#xD;&#xA; AS ROWRANK &#xD;&#xA;     &#xD;&#xA; from &#xD;&#xA; SGT_PERSON_ACCOUNT_LTC_OPTION ltc &#xD;&#xA; Inner Join sgt_person_account_ltc_option_history LTCH &#xD;&#xA; on ltch.person_account_ltc_option_id = ltc.person_account_ltc_option_id&#xD;&#xA;   where @payroll_paid_date between ltch.effective_start_date &#xD;&#xA;   and isnull(ltch.effective_end_date,'01/01/2900')&#xD;&#xA;   and ltch.plan_participation_status_value = 'ENL2'&#xD;&#xA;&#xD;&#xA;)&#xD;&#xA;select pa.*,per.*,p.*,pe.*,PED.*,pag.*,pal.*,pape.* &#xD;&#xA;from &#xD;&#xA;(&#xD;&#xA; select ped.*,paed.person_account_id &#xD;&#xA; ,row_number() OVER (PARTITION BY paed.PERSON_ACCOUNT_ID ORDER BY &#xD;&#xA;  isnull(ped.end_date,'01/01/2900') desc,isnull(pe.end_date,'01/01/2900') desc,&#xD;&#xA;  ped.start_date desc , pe.start_date desc,  ped.person_employment_dtl_id desc ) &#xD;&#xA;  AS ROWRANK  &#xD;&#xA; from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA; inner join sgt_person_employment_detail ped(nolock) on paed.person_employment_dtl_id = ped.person_employment_dtl_id&#xD;&#xA; inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA; where @payroll_paid_date between ped.start_date and dateadd(m,1,isnull(ped.end_date,'01/01/2900')) and &#xD;&#xA; @Payroll_paid_Date between left(convert(char(8),dateadd(m,1, pe.start_date), 111),8) + '01'  and dateadd(m,1,isnull(pe.end_date,'01/01/2900'))&#xD;&#xA; and paed.election_value = 'ENLD'  &#xD;&#xA;) as PED&#xD;&#xA;inner join sgt_person_account pa(nolock) &#xD;&#xA; on pa.person_account_id = PED.person_account_id and peD.rowrank = 1&#xD;&#xA;inner join sgt_person_employment PE &#xD;&#xA; on ped.person_employment_id = pe.person_employment_id&#xD;&#xA;inner join sgt_plan p(nolock) &#xD;&#xA; on p.plan_id = pa.plan_id&#xD;&#xA;inner join sgt_person per(nolock) &#xD;&#xA; on per.person_id = pa.person_id&#xD;&#xA;left join &#xD;&#xA;(&#xD;&#xA; Select PAG.* from sgt_person_account_ghdv pag(nolock) &#xD;&#xA;  INNER jOIN sgt_person_account_ghdv_history pagh with(nolock) &#xD;&#xA;  on pag.person_account_ghdv_id = pagh.person_account_ghdv_id&#xD;&#xA;   where pagh.plan_participation_status_value = 'ENL2'&#xD;&#xA;   AND (pagh.dental_insurance_type_value is null OR pagh.dental_insurance_type_value &lt;&gt; 'RT16')&#xD;&#xA;   AND (pagh.health_insurance_type_value is null OR pagh.health_insurance_type_value not in('RT09','RT12'))&#xD;&#xA;   AND (pagh.vision_insurance_type_value is null OR pagh.vision_insurance_type_value &lt;&gt; 'RETR')&#xD;&#xA;   AND pagh.cobra_type_value is null&#xD;&#xA;    AND @payroll_paid_date between pagh.start_date and isnull(pagh.end_date,'01/01/2900')&#xD;&#xA;    AND pagh.START_DATE &lt;&gt; CASE WHEN pagh.END_DATE IS NOT NULL &#xD;&#xA;        THEN pagh.END_DATE ELSE '01/01/2900' END&#xD;&#xA;) pag ON pag.person_account_id = pa.person_account_id&#xD;&#xA;left join &#xD;&#xA;(&#xD;&#xA; Select Pal.* from  sgt_person_account_life pal(nolock) &#xD;&#xA;  Inner  join sgt_person_account_life_history palh with(nolock) &#xD;&#xA;  on pal.person_account_id = palh.person_account_id &#xD;&#xA;   and palh.level_of_coverage_value = 'BASC'&#xD;&#xA;  where palh.plan_participation_status_value = 'ENL2'&#xD;&#xA;  and palh.life_insurance_type_value = 'NREM'&#xD;&#xA;  and @payroll_paid_date between palh.effective_start_date &#xD;&#xA;   and isnull(palh.effective_end_date,'01/01/2900') &#xD;&#xA;  AND palh.effective_start_date &lt;&gt; CASE WHEN palh.effective_end_date IS NOT NULL &#xD;&#xA;   THEN palh.effective_end_date ELSE '01/01/2900' END&#xD;&#xA;) pal on pal.person_account_id = pa.person_account_id&#xD;&#xA;left outer join &#xD;&#xA;(&#xD;&#xA; Select * from SGT_PERSON_ACCOUNT_EAP_HISTORY eaph with(nolock) &#xD;&#xA; where eaph.plan_participation_status_value = 'ENL2'&#xD;&#xA; and @payroll_paid_date between eaph.start_date &#xD;&#xA; and isnull(eaph.end_date,'01/01/2900')&#xD;&#xA; AND eaph.START_DATE &lt;&gt; CASE WHEN eaph.END_DATE IS NOT NULL &#xD;&#xA;  THEN eaph.END_DATE ELSE '01/01/2900' END&#xD;&#xA;&#xD;&#xA;) eaph on eaph.person_account_id = pa.person_account_id&#xD;&#xA;left join&#xD;&#xA;(&#xD;&#xA; Select * from Parent where rowrank = 1 &#xD;&#xA;) ltch  on ltch.person_account_id = PA.person_account_id&#xD;&#xA;left join sgt_person_account_payment_election pape with (nolock) &#xD;&#xA; on pa.person_account_id = pape.person_account_id &#xD;&#xA; and pape.ACCOUNT_PAYMENT_ELECTION_ID = (select MAX(ACCOUNT_PAYMENT_ELECTION_ID) &#xD;&#xA;  from sgt_person_account_payment_election where PERSON_ACCOUNT_ID = pa.PERSON_ACCOUNT_ID)&#xD;&#xA;where p.benefit_type_value = 'INSR' &#xD;&#xA; and @payroll_paid_date between pa.start_date &#xD;&#xA; and isnull(pa.end_date,'01/01/2900')&#xD;&#xA; AND (&#xD;&#xA;  Pag.person_account_id is not null &#xD;&#xA;  or Pal.person_account_id is not null &#xD;&#xA;  or EAPH.person_account_id is not null &#xD;&#xA;  or LTCH.person_account_id is not null &#xD;&#xA;   )   &#xD;&#xA;and pe.org_id = @org_id">
      <parameters>
        <parameter ID="@payroll_paid_date" sfwDataType="DateTime" />
        <parameter ID="@org_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadInsuranceHeaderToReload" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT *,A.STATUS_VALUE AS PAYROLL_STATUS_VALUE FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA;INNER JOIN SGT_ORGANIZATION B ON A.ORG_ID = B.ORG_ID  &#xD;&#xA;WHERE header_type_value='INSR' AND&#xD;&#xA;MONTH(PAYROLL_PAID_DATE)=MONTH(@batchDate) AND &#xD;&#xA;YEAR(PAYROLL_PAID_DATE)=YEAR(@batchDate) AND&#xD;&#xA;((A.STATUS_VALUE = 'REVW' &#xD;&#xA;AND EXISTS (SELECT 1 FROM SGT_ORGANIZATION ORG&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGS_CODE_VALUE CV ON CV.DATA1 = ORG.ORG_CODE AND CV.CODE_ID = 7022&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE A.ORG_ID = ORG.ORG_ID ))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;OR &#xD;&#xA;(A.STATUS_VALUE NOT IN ('RPST','IGNR','PSTD') AND&#xD;&#xA;REPORT_TYPE_VALUE = 'REG'))">
      <parameters>
        <parameter ID="@batchDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="DeletePayrollDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DELETE FROM SGT_COMMENTS &#xD;&#xA;WHERE ISNULL(EMPLOYER_PAYROLL_DETAIL_ID,0) IN (SELECT EMPLOYER_PAYROLL_DETAIL_ID &#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL &#xD;&#xA;WHERE EMPLOYER_PAYROLL_HEADER_ID = @HEADER_ID&#xD;&#xA;AND STATUS_VALUE &lt;&gt; 'PSTD')&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;DELETE FROM SGT_EMPLOYER_PAYROLL_DETAIL WHERE EMPLOYER_PAYROLL_HEADER_ID=@HEADER_ID&#xD;&#xA;and status_value &lt;&gt; 'PSTD'">
      <parameters>
        <parameter ID="@HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="DeleteAllocatedRemittanceByHeaderID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DELETE FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION WHERE EMPLOYER_PAYROLL_HEADER_ID=@HEADER_ID">
      <parameters>
        <parameter ID="@HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetMaxCentralPayrollID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ISNULL(MAX(CENTRAL_PAYROLL_RECORD_ID),0) FROM SGT_EMPLOYER_PAYROLL_HEADER">
      <parameters />
    </query>
    <query ID="GetLastPaidPayrollForRETRandINSR" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 1 * FROM SGT_EMPLOYER_PAYROLL_HEADER WHERE &#xD;&#xA;ORG_ID=@ORG_ID AND header_type_value = @BENEFIT_TYPE_VALUE &#xD;&#xA;AND REPORT_TYPE_VALUE = 'REG' AND STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA;ORDER BY PAYROLL_PAID_DATE DESC">
      <parameters>
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@BENEFIT_TYPE_VALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetLastPaidPayrollForDefComp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 1 * FROM SGT_EMPLOYER_PAYROLL_HEADER WHERE &#xD;&#xA;ORG_ID=@ORG_ID AND header_type_value = @BENEFIT_TYPE_VALUE  &#xD;&#xA;AND REPORT_TYPE_VALUE = 'REG'&#xD;&#xA;ORDER BY PAY_PERIOD_END_DATE DESC">
      <parameters>
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@BENEFIT_TYPE_VALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetDeferredCompFrequencyByOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 1 REPORT_FREQUENCY_VALUE FROM SGT_ORG_PLAN A&#xD;&#xA;INNER JOIN SGT_PLAN B ON A.PLAN_ID = B.PLAN_ID AND BENEFIT_TYPE_VALUE = 'DEFF'&#xD;&#xA;Where org_id = @org_id&#xD;&#xA;and (@payperiodstartdate between a.participation_start_date and isnull(a.participation_end_date,'99991231')&#xD;&#xA; or @payperiodenddate between a.participation_start_date and isnull(a.participation_end_date,'99991231'))">
      <parameters>
        <parameter ID="@org_id" sfwDataType="int" />
        <parameter ID="@payperiodstartdate" sfwDataType="DateTime" />
        <parameter ID="@payperiodenddate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetCountofRemittanceAllocatedByHeaderID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT count(*) FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION&#xD;&#xA;WHERE EMPLOYER_PAYROLL_HEADER_ID=@HEADER_ID AND PAYROLL_ALLOCATION_STATUS_VALUE ='ALOC'">
      <parameters>
        <parameter ID="@HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadItemLevelGLDetailAmountByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select epd.employer_payroll_header_id iintEmloyerPayrollHeaderID,eph.org_id iintOrgID, epd.plan_id iintPlanID, &#xD;&#xA;sum(isnull(epd.EE_CONTRIBUTION_CALCULATED,0))idecTotalEEContributionReportedByPlan,&#xD;&#xA;sum(isnull(epd.EE_EMPLOYER_PICKUP_CALCULATED,0)) idecTotalEEEmployerPickupReportedByPlan,&#xD;&#xA;sum(isnull(epd.EE_PRE_TAX_CALCULATED,0)) idecTotalEEPreTaxReportedByPlan,&#xD;&#xA;sum(isnull(epd.ER_CONTRIBUTION_CALCULATED,0)) idecTotalERContributionReportedByPlan,&#xD;&#xA;sum(isnull(epd.RHIC_ER_CONTRIBUTION_CALCULATED,0)) idecTotalRHICERContributionReportedByPlan,&#xD;&#xA;sum(isnull(epd.RHIC_EE_CONTRIBUTION_CALCULATED,0)) idecTotalRHICEEContributionReportedByPlan,&#xD;&#xA;sum(isnull(epd.MEMBER_INTEREST_CALCULATED,0)) idecTotalMemberInterestCalculatedByPlan,&#xD;&#xA;sum(isnull(epd.EMPLOYER_INTEREST_CALCULATED,0)) idecTotalEmployerInterestCalculatedByPlan,&#xD;&#xA;sum(isnull(epd.EMPLOYER_RHIC_INTEREST_CALCULATED,0)) idecTotalRHICEmployerInterestCalculatedByPlan, --PIR 13832 RHIC Interest not creating GL Entries&#xD;&#xA;sum(isnull(epd.CONTRIBUTION_AMOUNT1,0)) idecTotalContributionAmount1ReportedByPlan,&#xD;&#xA;sum(isnull(epd.CONTRIBUTION_AMOUNT2,0)) idecTotalContributionAmount2ReportedByPlan,&#xD;&#xA;sum(isnull(epd.CONTRIBUTION_AMOUNT3,0)) idecTotalContributionAmount3ReportedByPlan,&#xD;&#xA;sum(isnull(epd.CONTRIBUTION_AMOUNT4,0)) idecTotalContributionAmount4ReportedByPlan,&#xD;&#xA;sum(isnull(epd.CONTRIBUTION_AMOUNT5,0)) idecTotalContributionAmount5ReportedByPlan,&#xD;&#xA;sum(isnull(epd.CONTRIBUTION_AMOUNT6,0)) idecTotalContributionAmount6ReportedByPlan,&#xD;&#xA;sum(isnull(epd.CONTRIBUTION_AMOUNT7,0)) idecTotalContributionAmount7ReportedByPlan,&#xD;&#xA;sum(isnull(epd.PREMIUM_AMOUNT,0)) idecTotalPremiumAmountByPlan,&#xD;&#xA;sum(isnull(epd.GROUP_HEALTH_FEE_AMOUNT,0)) idecTotalFeeAmountByPlan,&#xD;&#xA;sum(isnull(epd.BUYDOWN_AMOUNT,0)) idecTotalBuydownAmountByPlan,&#xD;&#xA;sum(isnull(epd.MEDICARE_PART_D_AMT,0)) idecTotalMedicarePartDAmtByPlan,&#xD;&#xA;sum(isnull(epd.OTHR_RHIC_AMOUNT,0)) idecOtherRHICAmount,&#xD;&#xA;sum(isnull(epd.JS_RHIC_AMOUNT,0)) idecJSRHICAmount,&#xD;&#xA;sum(isnull(epd.HSA_AMOUNT,0)) idecHSAAmount,&#xD;&#xA;sum(isnull(epd.EE_PRETAX_ADDL_CALCULATED,0)) idecTotalEEPreTaxAddlCalculatedByPlan,&#xD;&#xA;sum(isnull(epd.EE_POST_TAX_ADDL_CALCULATED,0)) idecTotalEEPostTaxAddlCalculatedByPlan,&#xD;&#xA;sum(isnull(epd.ER_PRETAX_MATCH_CALCULATED,0)) idecTotalERPreTaxMatchReportedByPlan,&#xD;&#xA;sum(isnull(epd.ADEC_CALCULATED,0)) idecTotalADECReportedByPlan&#xD;&#xA;from sgt_employer_payroll_detail epd, sgt_employer_payroll_header eph &#xD;&#xA;where epd.employer_payroll_header_id=eph.employer_payroll_header_id&#xD;&#xA;and eph.employer_payroll_header_id= @employer_payroll_header_id and epd.record_type_value in ('+ADJ','REG','BONS') and epd.status_value='VALD'&#xD;&#xA;and epd.plan_id != 8&#xD;&#xA;group by epd.employer_payroll_header_id, epd.plan_id,eph.org_id">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="DeleteErrorsFromEmployerPayrollHeader" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="delete from sgt_employer_payroll_header_error where employer_payroll_header_id = @employer_payroll_header_id ">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="DeleteErrorsFromEmployerPayrollDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="delete from sgt_employer_payroll_detail_error &#xD;&#xA;where employer_payroll_detail_id in (select employer_payroll_detail_id &#xD;&#xA;from sgt_employer_payroll_detail &#xD;&#xA;where employer_payroll_header_id = @employer_payroll_header_id &#xD;&#xA;and status_value &lt;&gt; 'PSTD') ">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPurchaseByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID, SPH.PLAN_ID IINTPLANID, &#xD;&#xA;SUM(ISNULL(LP.ALLOCATED_AMOUNT,0)) IDECTOTALREPORTEDPURCHASEBYPLAN&#xD;&#xA;FROM DBO.SGT_EMPLOYER_PURCHASE_ALLOCATION  LP WITH(NOLOCK) &#xD;&#xA;INNER JOIN DBO.SGT_SERVICE_PURCHASE_HEADER SPH WITH(NOLOCK)  ON  LP.SERVICE_PURCHASE_HEADER_ID = SPH.SERVICE_PURCHASE_HEADER_ID&#xD;&#xA;LEFT OUTER JOIN SGT_EMPLOYER_PAYROLL_DETAIL EPD WITH(NOLOCK)  ON EPD.EMPLOYER_PAYROLL_DETAIL_ID = LP.EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;, SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK) &#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= @EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPD.RECORD_TYPE_VALUE IN ('+ADJ','REG','BONS','PURC') AND EPD.STATUS_VALUE NOT IN('IGNR')&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, SPH.PLAN_ID">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptEmployerReceivableAging" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT OUTERMAIN.Org_ID,ORG.ORG_CODE,Org_Name,SUM(OUTERMAIN.[0-30DAYS]) ZeroToThirtydays,SUM([31-60DAYS]) ThirtyoneToSixty,SUM([61-90DAYS]) SixtyoneToNinety,&#xD;&#xA;SUM([OVER90DAYS]) OverNinetydays , AvailableAmount&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;SELECT ORG_ID,&#xD;&#xA;&quot;0-30DAYS&quot; =(CASE WHEN (NUMBEROFDAYS &gt;=0 AND NUMBEROFDAYS &lt;=30 AND MAIN1.BALANCING_STATUS_VALUE &lt;&gt; 'BALN') THEN TOTALREPORTEDAMOUNT ELSE 0 END), --PIR 12548&#xD;&#xA;&quot;31-60DAYS&quot; =(CASE WHEN (NUMBEROFDAYS &gt;=31 AND NUMBEROFDAYS &lt;=60 AND MAIN1.BALANCING_STATUS_VALUE &lt;&gt; 'BALN') THEN TOTALREPORTEDAMOUNT ELSE 0 END),&#xD;&#xA;&quot;61-90DAYS&quot; =(CASE WHEN (NUMBEROFDAYS &gt;=61 AND NUMBEROFDAYS &lt;=90 AND MAIN1.BALANCING_STATUS_VALUE &lt;&gt; 'BALN') THEN TOTALREPORTEDAMOUNT ELSE 0 END),&#xD;&#xA;&quot;OVER90DAYS&quot; =(CASE WHEN (NUMBEROFDAYS &gt;=91 AND MAIN1.BALANCING_STATUS_VALUE &lt;&gt; 'BALN') THEN TOTALREPORTEDAMOUNT ELSE 0 END),&#xD;&#xA;&quot;AVAILABLEAMOUNT&quot;=ISNULL(&#xD;&#xA;CASE WHEN @Header_Type_Value = 'RETR' THEN &#xD;&#xA;  (SELECT  SUM(ISNULL((REMITTANCE_AMOUNT - &#xD;&#xA;   ( ISNULL(ALLOCATED_AMOUNT,0.00) + &#xD;&#xA;      ISNULL(ALLOCATED_NEGATIVE_DEPOSIT_AMOUNT,0.00) +&#xD;&#xA;    ISNULL(&#xD;&#xA;      CASE WHEN REFUND_STATUS_VALUE = 'PRCD' THEN&#xD;&#xA;       CASE WHEN OVERRIDDEN_REFUND_AMOUNT IS NOT NULL &#xD;&#xA;         THEN ISNULL(OVERRIDDEN_REFUND_AMOUNT,0.00) &#xD;&#xA;         ELSE ISNULL(COMPUTED_REFUND_AMOUNT,0.00) &#xD;&#xA;       END&#xD;&#xA;      ELSE 0.00 END&#xD;&#xA;       ,0.00)&#xD;&#xA;   )&#xD;&#xA;  ),0.00))&#xD;&#xA;  AS REMITTANCE_BALANCE_FORWARD &#xD;&#xA;   FROM SGT_REMITTANCE REM WITH(NOLOCK) &#xD;&#xA;   INNER JOIN SGT_DEPOSIT DEP WITH(NOLOCK) &#xD;&#xA;    ON DEP.DEPOSIT_ID = REM.DEPOSIT_ID&#xD;&#xA;   LEFT OUTER JOIN&#xD;&#xA;    (&#xD;&#xA;     SELECT REMITTANCE_ID,SUM(ISNULL(ALLOCATED_AMOUNT,0.00)) AS ALLOCATED_AMOUNT&#xD;&#xA;      FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION&#xD;&#xA;      GROUP BY REMITTANCE_ID &#xD;&#xA;    ) AS ALLOC ON REM.REMITTANCE_ID = ALLOC.REMITTANCE_ID&#xD;&#xA;  WHERE DEP.STATUS_VALUE = 'APLD' &#xD;&#xA;  AND REM.REMITTANCE_TYPE_VALUE  IN ('CNTR','RHCO')&#xD;&#xA;  AND REM.ORG_ID = MAIN1.ORG_ID)&#xD;&#xA;  WHEN @Header_Type_Value = 'INSR' THEN&#xD;&#xA;  (SELECT  SUM(ISNULL((REMITTANCE_AMOUNT - &#xD;&#xA;   ( ISNULL(ALLOCATED_AMOUNT,0.00) + &#xD;&#xA;      ISNULL(ALLOCATED_NEGATIVE_DEPOSIT_AMOUNT,0.00) +&#xD;&#xA;    ISNULL(&#xD;&#xA;      CASE WHEN REFUND_STATUS_VALUE = 'PRCD' THEN&#xD;&#xA;       CASE WHEN OVERRIDDEN_REFUND_AMOUNT IS NOT NULL &#xD;&#xA;         THEN ISNULL(OVERRIDDEN_REFUND_AMOUNT,0.00) &#xD;&#xA;         ELSE ISNULL(COMPUTED_REFUND_AMOUNT,0.00) &#xD;&#xA;       END&#xD;&#xA;      ELSE 0.00 END&#xD;&#xA;       ,0.00)&#xD;&#xA;   )&#xD;&#xA;  ),0.00))&#xD;&#xA;  AS REMITTANCE_BALANCE_FORWARD &#xD;&#xA;   FROM SGT_REMITTANCE REM WITH(NOLOCK) &#xD;&#xA;   INNER JOIN SGT_DEPOSIT DEP WITH(NOLOCK) &#xD;&#xA;    ON DEP.DEPOSIT_ID = REM.DEPOSIT_ID&#xD;&#xA;   LEFT OUTER JOIN&#xD;&#xA;    (&#xD;&#xA;     SELECT REMITTANCE_ID,SUM(ISNULL(ALLOCATED_AMOUNT,0.00)) AS ALLOCATED_AMOUNT&#xD;&#xA;      FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION&#xD;&#xA;      GROUP BY REMITTANCE_ID &#xD;&#xA;    ) AS ALLOC ON REM.REMITTANCE_ID = ALLOC.REMITTANCE_ID&#xD;&#xA;  WHERE DEP.STATUS_VALUE = 'APLD' &#xD;&#xA;  AND REM.REMITTANCE_TYPE_VALUE  IN ('LTCD','HMOD','DNDP','EAPD','HLDP','VISD','LIDP')&#xD;&#xA;  AND REM.ORG_ID = MAIN1.ORG_ID)&#xD;&#xA;  WHEN @Header_Type_Value = 'PRCH' THEN &#xD;&#xA;  (SELECT  SUM(ISNULL((REMITTANCE_AMOUNT - &#xD;&#xA;   ( ISNULL(ALLOCATED_AMOUNT,0.00) + &#xD;&#xA;      ISNULL(ALLOCATED_NEGATIVE_DEPOSIT_AMOUNT,0.00) +&#xD;&#xA;    ISNULL(&#xD;&#xA;      CASE WHEN REFUND_STATUS_VALUE = 'PRCD' THEN&#xD;&#xA;       CASE WHEN OVERRIDDEN_REFUND_AMOUNT IS NOT NULL &#xD;&#xA;         THEN ISNULL(OVERRIDDEN_REFUND_AMOUNT,0.00) &#xD;&#xA;         ELSE ISNULL(COMPUTED_REFUND_AMOUNT,0.00) &#xD;&#xA;       END&#xD;&#xA;      ELSE 0.00 END&#xD;&#xA;       ,0.00)&#xD;&#xA;   )&#xD;&#xA;  ),0.00))&#xD;&#xA;  AS REMITTANCE_BALANCE_FORWARD &#xD;&#xA;   FROM SGT_REMITTANCE REM WITH(NOLOCK) &#xD;&#xA;   INNER JOIN SGT_DEPOSIT DEP WITH(NOLOCK) &#xD;&#xA;    ON DEP.DEPOSIT_ID = REM.DEPOSIT_ID&#xD;&#xA;   LEFT OUTER JOIN&#xD;&#xA;    (&#xD;&#xA;     SELECT REMITTANCE_ID,SUM(ISNULL(ALLOCATED_AMOUNT,0.00)) AS ALLOCATED_AMOUNT&#xD;&#xA;      FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION&#xD;&#xA;      GROUP BY REMITTANCE_ID &#xD;&#xA;    ) AS ALLOC ON REM.REMITTANCE_ID = ALLOC.REMITTANCE_ID&#xD;&#xA;  WHERE DEP.STATUS_VALUE = 'APLD' &#xD;&#xA;  AND REM.REMITTANCE_TYPE_VALUE  IN ('PURC')&#xD;&#xA;  AND REM.ORG_ID = MAIN1.ORG_ID)&#xD;&#xA;  WHEN @Header_Type_Value = 'DEFF' THEN&#xD;&#xA;  (SELECT  SUM(ISNULL((REMITTANCE_AMOUNT - &#xD;&#xA;   ( ISNULL(ALLOCATED_AMOUNT,0.00) + &#xD;&#xA;      ISNULL(ALLOCATED_NEGATIVE_DEPOSIT_AMOUNT,0.00) +&#xD;&#xA;    ISNULL(&#xD;&#xA;      CASE WHEN REFUND_STATUS_VALUE = 'PRCD' THEN&#xD;&#xA;       CASE WHEN OVERRIDDEN_REFUND_AMOUNT IS NOT NULL &#xD;&#xA;         THEN ISNULL(OVERRIDDEN_REFUND_AMOUNT,0.00) &#xD;&#xA;         ELSE ISNULL(COMPUTED_REFUND_AMOUNT,0.00) &#xD;&#xA;       END&#xD;&#xA;      ELSE 0.00 END&#xD;&#xA;       ,0.00)&#xD;&#xA;   )&#xD;&#xA;  ),0.00))&#xD;&#xA;  AS REMITTANCE_BALANCE_FORWARD &#xD;&#xA;   FROM SGT_REMITTANCE REM WITH(NOLOCK) &#xD;&#xA;   INNER JOIN SGT_DEPOSIT DEP WITH(NOLOCK) &#xD;&#xA;    ON DEP.DEPOSIT_ID = REM.DEPOSIT_ID&#xD;&#xA;   LEFT OUTER JOIN&#xD;&#xA;    (&#xD;&#xA;     SELECT REMITTANCE_ID,SUM(ISNULL(ALLOCATED_AMOUNT,0.00)) AS ALLOCATED_AMOUNT&#xD;&#xA;      FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION&#xD;&#xA;      GROUP BY REMITTANCE_ID &#xD;&#xA;    ) AS ALLOC ON REM.REMITTANCE_ID = ALLOC.REMITTANCE_ID&#xD;&#xA;  WHERE DEP.STATUS_VALUE = 'APLD' &#xD;&#xA;  AND REM.REMITTANCE_TYPE_VALUE  IN ('DCMD')&#xD;&#xA;  AND REM.ORG_ID = MAIN1.ORG_ID)&#xD;&#xA;  WHEN @Header_Type_Value = '' THEN&#xD;&#xA;  (SELECT  SUM(ISNULL((REMITTANCE_AMOUNT - &#xD;&#xA;   ( ISNULL(ALLOCATED_AMOUNT,0.00) + &#xD;&#xA;      ISNULL(ALLOCATED_NEGATIVE_DEPOSIT_AMOUNT,0.00) +&#xD;&#xA;    ISNULL(&#xD;&#xA;      CASE WHEN REFUND_STATUS_VALUE = 'PRCD' THEN&#xD;&#xA;       CASE WHEN OVERRIDDEN_REFUND_AMOUNT IS NOT NULL &#xD;&#xA;         THEN ISNULL(OVERRIDDEN_REFUND_AMOUNT,0.00) &#xD;&#xA;         ELSE ISNULL(COMPUTED_REFUND_AMOUNT,0.00) &#xD;&#xA;       END&#xD;&#xA;      ELSE 0.00 END&#xD;&#xA;       ,0.00)&#xD;&#xA;   )&#xD;&#xA;  ),0.00))&#xD;&#xA;  AS REMITTANCE_BALANCE_FORWARD &#xD;&#xA;   FROM SGT_REMITTANCE REM WITH(NOLOCK) &#xD;&#xA;   INNER JOIN SGT_DEPOSIT DEP WITH(NOLOCK) &#xD;&#xA;    ON DEP.DEPOSIT_ID = REM.DEPOSIT_ID&#xD;&#xA;   LEFT OUTER JOIN&#xD;&#xA;    (&#xD;&#xA;     SELECT REMITTANCE_ID,SUM(ISNULL(ALLOCATED_AMOUNT,0.00)) AS ALLOCATED_AMOUNT&#xD;&#xA;      FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION&#xD;&#xA;      GROUP BY REMITTANCE_ID &#xD;&#xA;    ) AS ALLOC ON REM.REMITTANCE_ID = ALLOC.REMITTANCE_ID&#xD;&#xA;  WHERE DEP.STATUS_VALUE = 'APLD' &#xD;&#xA;  AND REM.ORG_ID = MAIN1.ORG_ID)&#xD;&#xA;  END,0.00)&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;SELECT MAIN.ORG_ID,MAIN.BALANCING_STATUS_VALUE,&#xD;&#xA;&quot;TOTALREPORTEDAMOUNT&quot;=ISNULL(&#xD;&#xA;CASE WHEN HEADER_TYPE_VALUE &#xD;&#xA;='RETR' THEN &#xD;&#xA;(&#xD;&#xA;SELECT  &#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_REPORTED,0))  +&#xD;&#xA;SUM(ISNULL(EPD.ER_CONTRIBUTION_REPORTED,0))  +&#xD;&#xA;SUM(ISNULL(EPD.RHIC_ER_CONTRIBUTION_REPORTED,0))  +&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_REPORTED,0))  +&#xD;&#xA;SUM(ISNULL(EPD.MEMBER_INTEREST_CALCULATED,0))  +&#xD;&#xA;SUM(ISNULL(EPD.EMPLOYER_INTEREST_CALCULATED,0))  +&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_REPORTED,0))  +&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_REPORTED,0)) &#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL(NOLOCK) EPD, SGT_EMPLOYER_PAYROLL_HEADER(NOLOCK) EPH &#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= MAIN.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPD.RECORD_TYPE_VALUE IN ('+ADJ','REG','BONS') AND EPD.STATUS_VALUE NOT IN('IGNR'))&#xD;&#xA;WHEN HEADER_TYPE_VALUE &#xD;&#xA;= 'INSR' THEN&#xD;&#xA;(SELECT &#xD;&#xA;SUM(ISNULL(EPD.PREMIUM_AMOUNT,0)) IDECTOTALPREMIUMAMOUNTBYPLAN&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL(NOLOCK) EPD, SGT_EMPLOYER_PAYROLL_HEADER(NOLOCK) EPH &#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= MAIN.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPD.STATUS_VALUE NOT IN('IGNR'))&#xD;&#xA;WHEN HEADER_TYPE_VALUE &#xD;&#xA;= 'PRCH' THEN &#xD;&#xA;(SELECT &#xD;&#xA;SUM(ISNULL(LP.ALLOCATED_AMOUNT,0)) IDECTOTALREPORTEDPURCHASEBYPLAN&#xD;&#xA;FROM DBO.SGT_EMPLOYER_PURCHASE_ALLOCATION(NOLOCK)  LP &#xD;&#xA;INNER JOIN DBO.SGT_SERVICE_PURCHASE_HEADER(NOLOCK) SPH  ON  LP.SERVICE_PURCHASE_HEADER_ID = SPH.SERVICE_PURCHASE_HEADER_ID&#xD;&#xA;LEFT OUTER JOIN SGT_EMPLOYER_PAYROLL_DETAIL(NOLOCK) EPD ON EPD.EMPLOYER_PAYROLL_DETAIL_ID = LP.EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;, SGT_EMPLOYER_PAYROLL_HEADER(NOLOCK) EPH&#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= MAIN.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPD.RECORD_TYPE_VALUE IN ('+ADJ','REG','BONS','PURC') AND EPD.STATUS_VALUE NOT IN('IGNR')&#xD;&#xA;)&#xD;&#xA;WHEN HEADER_TYPE_VALUE &#xD;&#xA;=  'DEFF' THEN&#xD;&#xA;(SELECT  &#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT1,0))  +&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT2,0))  +&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT3,0))  +&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT4,0))  +&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT5,0))  +&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT6,0))  +&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT7,0)) &#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL(NOLOCK) EPD, SGT_EMPLOYER_PAYROLL_HEADER(NOLOCK) EPH &#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= MAIN.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPD.RECORD_TYPE_VALUE IN ('+ADJ','REG') AND EPD.STATUS_VALUE NOT IN('IGNR'))&#xD;&#xA;END,0)-&#xD;&#xA;ISNULL((SELECT SUM(ISNULL(ALLOCATED_AMOUNT,0)) FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION(NOLOCK)&#xD;&#xA;WHERE EMPLOYER_PAYROLL_HEADER_ID=MAIN.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;--AND PAYROLL_ALLOCATION_STATUS_VALUE='ALOC' --PIR 12548&#xD;&#xA;),0),&#xD;&#xA;&quot;NUMBEROFDAYS&quot;=ISNULL(DATEDIFF(&quot;DD&quot;,POSTED_DATE,GETDATE()),0)&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER MAIN(NOLOCK)&#xD;&#xA;WHERE --MAIN.BALANCING_STATUS_VALUE &lt;&gt; 'BALN' --PIR 12548&#xD;&#xA;--AND &#xD;&#xA;MAIN.STATUS_VALUE='PSTD'&#xD;&#xA;AND MAIN.HEADER_TYPE_VALUE=(CASE WHEN @Header_Type_Value ='' THEN MAIN.HEADER_TYPE_VALUE ELSE @Header_Type_Value END)&#xD;&#xA;AND ISNULL(DATEDIFF(&quot;DD&quot;,POSTED_DATE,GETDATE()) ,0) &gt;=0&#xD;&#xA;) AS MAIN1&#xD;&#xA;WHERE MAIN1.TOTALREPORTEDAMOUNT &lt;&gt; 0) AS OUTERMAIN&#xD;&#xA;INNER JOIN SGT_ORGANIZATION(NOLOCK)ORG ON OUTERMAIN.ORG_ID=ORG.ORG_ID&#xD;&#xA;WHERE NOT(OUTERMAIN.[0-30DAYS] = 0 and OUTERMAIN.[31-60DAYS] = 0 and OUTERMAIN.[61-90DAYS] = 0 and OUTERMAIN.OVER90DAYS = 0 and OUTERMAIN.AVAILABLEAMOUNT = 0) --PIR 12548&#xD;&#xA;GROUP BY OUTERMAIN.ORG_ID,ORG.ORG_NAME, [AVAILABLEAMOUNT] ,ORG.ORG_CODE&#xD;&#xA;ORDER BY ORG.ORG_CODE,ORG.ORG_NAME">
      <parameters>
        <parameter ID="@Header_Type_Value" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadCentralPayrollHeaderForRetInsByDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select a.* from Sgt_Employer_Payroll_Header A&#xD;&#xA;Inner Join SGT_ORGANIZATION O &#xD;&#xA;      on A.ORG_ID = O.ORG_ID&#xD;&#xA;Where Central_Payroll_Record_Id in &#xD;&#xA;(Select distinct Central_Payroll_Record_Id From Sgt_Employer_Payroll_Header &#xD;&#xA;      Where Central_Payroll_Record_Id is not null &#xD;&#xA;      and Header_Type_Value=@benefitType &#xD;&#xA;      And Payroll_Paid_Date Between @Start_Date And @End_Date)&#xD;&#xA;AND Header_Type_Value=@benefitType &#xD;&#xA;AND isnull(o.CENTRAL_PAYROLL_FLAG,'N') = 'Y'&#xD;&#xA;">
      <parameters>
        <parameter ID="@benefitType" sfwDataType="string" />
        <parameter ID="@Start_Date" sfwDataType="DateTime" />
        <parameter ID="@End_Date" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadCentralPayrollHeaderForDeff" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select a.* From Sgt_Employer_Payroll_Header A&#xD;&#xA;Inner Join SGT_ORGANIZATION O &#xD;&#xA;      on A.ORG_ID = O.ORG_ID&#xD;&#xA;Where Central_Payroll_Record_Id in &#xD;&#xA;(Select distinct Central_Payroll_Record_Id From Sgt_Employer_Payroll_Header &#xD;&#xA;      Where Central_Payroll_Record_Id is not null &#xD;&#xA;      and Header_Type_Value=@benefitType&#xD;&#xA;      and &#xD;&#xA;      Pay_Period_Start_Date between @Start_date and @End_date&#xD;&#xA;      and isnull(Pay_Period_End_Date,'99991231') Between @Start_date And @End_date&#xD;&#xA;      )&#xD;&#xA;AND Header_Type_Value=@benefitType&#xD;&#xA;AND isnull(o.CENTRAL_PAYROLL_FLAG,'N') = 'Y'&#xD;&#xA;">
      <parameters>
        <parameter ID="@benefitType" sfwDataType="string" />
        <parameter ID="@Start_date" sfwDataType="DateTime" />
        <parameter ID="@End_date" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadAllActiveProviders" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select op.* from sgt_org_plan op(nolock)&#xD;&#xA;inner join sgt_organization o(nolock) on o.org_id = op.org_id and o.org_type_value='PRVD'&#xD;&#xA;where @payrollPaidDate between op.participation_start_date and &#xD;&#xA;isnull(op.participation_end_date,'01/01/2900')">
      <parameters>
        <parameter ID="@payrollPaidDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadLifeOption" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select palh.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_life_history palh(nolock) on pa.person_account_id = palh.person_account_id&#xD;&#xA;where paed.election_value = 'ENLD' and palh.plan_participation_status_value = 'ENL2' and&#xD;&#xA;palh.plan_option_status_value = 'ENLD' and&#xD;&#xA;palh.life_insurance_type_value = 'NREM' and&#xD;&#xA;@payrollPaidDate between palh.effective_start_date and isnull(palh.effective_end_date,'01/01/2900') and&#xD;&#xA;palh.effective_start_date &lt;&gt; isnull(palh.effective_end_date,'01/01/2900') and --ignore same dated history records&#xD;&#xA;@payrollPaidDate between pa.start_date and isnull(pa.end_date,'01/01/2900') and&#xD;&#xA;@payrollPaidDate between ped.start_date and dateadd(m,1,isnull(ped.end_date,'01/01/2900')) and&#xD;&#xA;@payrollPaidDate between left(convert(char(8),dateadd(m,1, pe.start_date), 111),8) + '01'  and dateadd(m,1,isnull(pe.end_date,'01/01/2900')) and&#xD;&#xA;paed.plan_id = 13">
      <parameters>
        <parameter ID="@payrollPaidDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadEAPHistory" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select paeh.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_eap_history paeh(nolock) on paeh.person_account_id = pa.person_account_id&#xD;&#xA;where paed.election_value = 'ENLD' AND&#xD;&#xA;paeh.plan_participation_status_value = 'ENL2' and&#xD;&#xA;@payrollPaidDate between paeh.start_date and isnull(paeh.end_date,'01/01/2900') and&#xD;&#xA;paeh.start_date &lt;&gt; isnull(paeh.end_date,'01/01/2900') and --ignore same dated history records&#xD;&#xA;@payrollPaidDate between ped.start_date and dateadd(m,1,isnull(ped.end_date,'01/01/2900')) and&#xD;&#xA;@payrollPaidDate between left(convert(char(8),dateadd(m,1, pe.start_date), 111),8) + '01'  and dateadd(m,1,isnull(pe.end_date,'01/01/2900')) and&#xD;&#xA;paed.plan_id = 14&#xD;&#xA;order by paeh.PERSON_ACCOUNT_EAP_HISTORY_ID desc">
      <parameters>
        <parameter ID="@payrollPaidDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadGHDVHistory" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select pagh.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_ghdv pag(nolock) on pag.person_account_id = pa.person_account_id&#xD;&#xA;inner join sgt_person_account_ghdv_history pagh(nolock) on pagh.person_account_ghdv_id = pag.person_account_ghdv_id&#xD;&#xA;where paed.election_value = 'ENLD' AND&#xD;&#xA;pagh.plan_participation_status_value = 'ENL2'&#xD;&#xA;AND (pagh.dental_insurance_type_value is null OR pagh.dental_insurance_type_value &lt;&gt; 'RT16')&#xD;&#xA;AND (pagh.health_insurance_type_value is null OR pagh.health_insurance_type_value not in('RT09','RT12'))&#xD;&#xA;AND (pagh.vision_insurance_type_value is null OR pagh.vision_insurance_type_value &lt;&gt; 'RETR')&#xD;&#xA;AND pagh.cobra_type_value is null and&#xD;&#xA;@payrollPaidDate between pagh.start_date and isnull(pagh.end_date,'01/01/2900') and&#xD;&#xA;pagh.start_date &lt;&gt; isnull(pagh.end_date,'01/01/2900') and --ignore same dated history records&#xD;&#xA;@payrollPaidDate between ped.start_date and dateadd(m,1,isnull(ped.end_date,'01/01/2900')) and&#xD;&#xA;@payrollPaidDate between left(convert(char(8),dateadd(m,1, pe.start_date), 111),8) + '01'  and dateadd(m,1,isnull(pe.end_date,'01/01/2900')) and&#xD;&#xA;paed.plan_id in (9,12,16,17,22)&#xD;&#xA;order by pagh.PERSON_ACCOUNT_GHDV_HISTORY_ID desc">
      <parameters>
        <parameter ID="@payrollPaidDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadLifeHistory" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select palh.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_life_history palh(nolock) on palh.person_account_id = pa.person_account_id&#xD;&#xA;where paed.plan_id = 13 and paed.election_value = 'ENLD' AND&#xD;&#xA;palh.plan_participation_status_value = 'ENL2'  and palh.plan_option_status_value = 'ENLD'&#xD;&#xA;and palh.life_insurance_type_value = 'NREM' and&#xD;&#xA;@payrollPaidDate between palh.effective_start_date and isnull(palh.effective_end_date,'01/01/2900') and&#xD;&#xA;palh.effective_start_date &lt;&gt; isnull(palh.effective_end_date,'01/01/2900') and --ignore same dated history records&#xD;&#xA;@payrollPaidDate between ped.start_date and dateadd(m,1,isnull(ped.end_date,'01/01/2900')) and&#xD;&#xA;@payrollPaidDate between left(convert(char(8),dateadd(m,1, pe.start_date), 111),8) + '01'  and dateadd(m,1,isnull(pe.end_date,'01/01/2900'))&#xD;&#xA;order by palh.PERSON_ACCOUNT_LIFE_HISTORY_ID desc">
      <parameters>
        <parameter ID="@payrollPaidDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadActiveRetirementMembersByOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Declare @FdM as datetime &#xD;&#xA;set @fdm = cast(cast(year(@payroll_paid_date) as varchar(4)) + '/'+ right('00'+ltrim(rtrim(cast(month(@payroll_paid_date) as varchar(2)))) ,2) +'/01' as datetime)&#xD;&#xA;&#xD;&#xA;select distinct per.*,p.*, ped.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_retirement_history parh(nolock) on pa.person_account_id = parh.person_account_id&#xD;&#xA;inner join sgt_plan p(nolock) on p.plan_id = pa.plan_id&#xD;&#xA;inner join sgt_person per(nolock) on per.person_id = pa.person_id&#xD;&#xA;where paed.election_value = 'ENLD' and p.benefit_type_value = 'RETR' and&#xD;&#xA;parh.plan_participation_status_value = 'ENL1' AND &#xD;&#xA;(@payroll_paid_date between parh.start_date and isnull(parh.end_date,'01/01/2900') OR (@FDM BETWEEN parh.start_date and isnull(parh.end_date,'01/01/2900'))) and&#xD;&#xA;parh.start_date &lt;&gt; isnull(parh.end_date,'01/01/2900') and --ignore same dated history records&#xD;&#xA;((@FDM BETWEEN ped.start_date and isnull(ped.end_date,'01/01/2900')) OR (ped.START_DATE BETWEEN @fdm and @payroll_paid_date)) and --or condition added for employees joining mid-month&#xD;&#xA;((@FDM BETWEEN pe.start_date and isnull(pe.end_date,'01/01/2900')) OR (pe.START_DATE BETWEEN @fdm and @payroll_paid_date)) and --or condition added for employees joining mid-month&#xD;&#xA;pe.org_id = @org_id order by per.LAST_NAME asc, per.FIRST_NAME asc">
      <parameters>
        <parameter ID="@payroll_paid_date" sfwDataType="DateTime" />
        <parameter ID="@org_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadActiveDeffCompMembersByOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select distinct pa.*,per.*,p.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_deferred_comp_history padch(nolock) on pa.person_account_id = padch.person_account_id&#xD;&#xA;inner join sgt_plan p(nolock) on p.plan_id = pa.plan_id&#xD;&#xA;inner join sgt_person per(nolock) on per.person_id = pa.person_id&#xD;&#xA;where paed.election_value = 'ENLD' and p.benefit_type_value = 'DEFF' and&#xD;&#xA;padch.plan_participation_status_value = 'ENL3' AND &#xD;&#xA;(&#xD;&#xA; (@pay_period_start_date between padch.start_date and isnull(padch.end_date,'01/01/2900')) or&#xD;&#xA; (@pay_period_end_date between padch.start_date and isnull(padch.end_date,'01/01/2900'))&#xD;&#xA;) and&#xD;&#xA;padch.start_date &lt;&gt; isnull(padch.end_date,'01/01/2900') and  --ignore same dated history records&#xD;&#xA;(&#xD;&#xA; (@pay_period_start_date between ped.start_date and isnull(ped.end_date,'01/01/2900')) or&#xD;&#xA; (@pay_period_end_date between ped.start_date and isnull(ped.end_date,'01/01/2900')) &#xD;&#xA;) and&#xD;&#xA;(&#xD;&#xA; (@pay_period_start_date between pe.start_date and isnull(pe.end_date,'01/01/2900')) or&#xD;&#xA; (@pay_period_end_date between pe.start_date and isnull(pe.end_date,'01/01/2900'))&#xD;&#xA;) and&#xD;&#xA;pe.org_id = @org_id order by per.LAST_NAME asc, per.FIRST_NAME asc">
      <parameters>
        <parameter ID="@pay_period_start_date" sfwDataType="DateTime" />
        <parameter ID="@pay_period_end_date" sfwDataType="DateTime" />
        <parameter ID="@org_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadActiveDeffCompProviderDetailsByOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select padcp.*,op.*,o.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_deferred_comp_history padch(nolock) on pa.person_account_id = padch.person_account_id&#xD;&#xA;inner join sgt_plan p(nolock) on p.plan_id = pa.plan_id&#xD;&#xA;inner join sgt_person per(nolock) on per.person_id = pa.person_id&#xD;&#xA;inner join sgt_person_account_deferred_comp_provider padcp on pa.person_account_id = padcp.person_account_id and padcp.person_employment_id = pe.person_employment_id&#xD;&#xA;inner join sgt_org_plan op on padcp.provider_org_plan_id = op.org_plan_id&#xD;&#xA;inner join sgt_organization o on op.org_id = o.org_id&#xD;&#xA;where paed.election_value = 'ENLD' and p.benefit_type_value = 'DEFF' and&#xD;&#xA;padch.plan_participation_status_value = 'ENL3' AND &#xD;&#xA;(&#xD;&#xA; (@pay_period_start_date between padch.start_date and isnull(padch.end_date,'01/01/2900')) or&#xD;&#xA; (@pay_period_end_date between padch.start_date and isnull(padch.end_date,'01/01/2900'))&#xD;&#xA;) and&#xD;&#xA;padch.start_date &lt;&gt; isnull(padch.end_date,'01/01/2900') and --ignore same dated history records&#xD;&#xA;padcp.start_date &lt;&gt; isnull(padcp.end_date,'01/01/2900') and --ignore same dated def comp provider records&#xD;&#xA;(&#xD;&#xA; (@pay_period_start_date between ped.start_date and isnull(ped.end_date,'01/01/2900')) or&#xD;&#xA; (@pay_period_end_date between ped.start_date and isnull(ped.end_date,'01/01/2900')) &#xD;&#xA;) and&#xD;&#xA;(&#xD;&#xA; (@pay_period_start_date between pe.start_date and isnull(pe.end_date,'01/01/2900')) or&#xD;&#xA; (@pay_period_end_date between pe.start_date and isnull(pe.end_date,'01/01/2900'))&#xD;&#xA;) and&#xD;&#xA;(&#xD;&#xA; (@pay_period_start_date between padcp.start_date and isnull(padcp.end_date,'01/01/2900')) or&#xD;&#xA; (@pay_period_end_date between padcp.start_date and isnull(padcp.end_date,'01/01/2900'))&#xD;&#xA;) &#xD;&#xA;and pe.org_id = @org_id&#xD;&#xA;and isnull(padcp.per_pay_period_contribution_amt,0) &gt; 0">
      <parameters>
        <parameter ID="@org_id" sfwDataType="int" />
        <parameter ID="@pay_period_start_date" sfwDataType="DateTime" />
        <parameter ID="@pay_period_end_date" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptDeferredCompPayrollContributionReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ORG.ORG_CODE AS 'PROVIDER_ORG_CODE_ID',ORG.ORG_NAME 'PROVIDER_ORG_NAME', COD.DESCRIPTION 'RECORD_TYPE',&#xD;&#xA;SUM(CONTRIBUTIONAMOUNT)'CONTRIBUTION_AMOUNT', @STARTDATE AS STARTDATE, @ENDDATE AS ENDDATE FROM&#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;DET.PROVIDER_ID1 'PROVIDER_ID', &#xD;&#xA;RECORD_TYPE_ID,&#xD;&#xA;RECORD_TYPE_VALUE 'RECORDTYPE',&#xD;&#xA;ISNULL(CONTRIBUTION_AMOUNT1,0) AS 'CONTRIBUTIONAMOUNT'&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HEAD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL DET WITH(NOLOCK) ON HEAD.EMPLOYER_PAYROLL_HEADER_ID=DET.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HEADER_TYPE_VALUE='DEFF' &#xD;&#xA;AND DET.PROVIDER_ID1 IS NOT NULL&#xD;&#xA;--AND HEAD.STATUS_VALUE='RPST'&#xD;&#xA;AND DET.STATUS_VALUE='PSTD' &#xD;&#xA;AND DET.POSTED_DATE BETWEEN @STARTDATE AND @ENDDATE&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;DET.PROVIDER_ID2 'PROVIDER_ID', &#xD;&#xA;RECORD_TYPE_ID,&#xD;&#xA;RECORD_TYPE_VALUE 'RECORDTYPE',&#xD;&#xA;ISNULL(CONTRIBUTION_AMOUNT2,0) 'CONTRIBUTIONAMOUNT'&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HEAD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL DET WITH(NOLOCK) ON HEAD.EMPLOYER_PAYROLL_HEADER_ID=DET.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HEADER_TYPE_VALUE='DEFF' &#xD;&#xA;AND DET.PROVIDER_ID2 IS NOT NULL&#xD;&#xA;--AND HEAD.STATUS_VALUE='RPST'&#xD;&#xA;AND DET.STATUS_VALUE='PSTD'&#xD;&#xA;AND DET.POSTED_DATE BETWEEN @STARTDATE AND @ENDDATE&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;DET.PROVIDER_ID3 'PROVIDER_ID',  &#xD;&#xA;RECORD_TYPE_ID,&#xD;&#xA;RECORD_TYPE_VALUE 'RECORDTYPE',&#xD;&#xA;ISNULL(CONTRIBUTION_AMOUNT3,0) 'CONTRIBUTIONAMOUNT'&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HEAD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL DET WITH(NOLOCK) ON HEAD.EMPLOYER_PAYROLL_HEADER_ID=DET.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HEADER_TYPE_VALUE='DEFF' &#xD;&#xA;AND DET.PROVIDER_ID3 IS NOT NULL&#xD;&#xA;--AND HEAD.STATUS_VALUE='RPST'&#xD;&#xA;AND DET.STATUS_VALUE='PSTD'&#xD;&#xA;AND DET.POSTED_DATE BETWEEN @STARTDATE AND @ENDDATE&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;DET.PROVIDER_ID4 'PROVIDER_ID',  &#xD;&#xA;RECORD_TYPE_ID,&#xD;&#xA;RECORD_TYPE_VALUE 'RECORDTYPE',&#xD;&#xA;ISNULL(CONTRIBUTION_AMOUNT4,0)'CONTRIBUTIONAMOUNT'&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HEAD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL DET WITH(NOLOCK) ON HEAD.EMPLOYER_PAYROLL_HEADER_ID=DET.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HEADER_TYPE_VALUE='DEFF' &#xD;&#xA;AND DET.PROVIDER_ID4 IS NOT NULL&#xD;&#xA;--AND HEAD.STATUS_VALUE='RPST'&#xD;&#xA;AND DET.STATUS_VALUE='PSTD'&#xD;&#xA;AND DET.POSTED_DATE BETWEEN @STARTDATE AND @ENDDATE&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;DET.PROVIDER_ID5 'PROVIDER_ID',  &#xD;&#xA;RECORD_TYPE_ID,&#xD;&#xA;RECORD_TYPE_VALUE 'RECORDTYPE',&#xD;&#xA;ISNULL(CONTRIBUTION_AMOUNT5,0)'CONTRIBUTIONAMOUNT'&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HEAD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL DET WITH(NOLOCK) ON HEAD.EMPLOYER_PAYROLL_HEADER_ID=DET.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HEADER_TYPE_VALUE='DEFF' &#xD;&#xA;AND DET.PROVIDER_ID5 IS NOT NULL&#xD;&#xA;--AND HEAD.STATUS_VALUE='RPST'&#xD;&#xA;AND DET.STATUS_VALUE='PSTD'&#xD;&#xA;AND DET.POSTED_DATE BETWEEN @STARTDATE AND @ENDDATE&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;DET.PROVIDER_ID6 'PROVIDER_ID', &#xD;&#xA;RECORD_TYPE_ID,&#xD;&#xA;RECORD_TYPE_VALUE 'RECORDTYPE',&#xD;&#xA;ISNULL(CONTRIBUTION_AMOUNT6,0)'CONTRIBUTIONAMOUNT'&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HEAD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL DET WITH(NOLOCK) ON HEAD.EMPLOYER_PAYROLL_HEADER_ID=DET.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HEADER_TYPE_VALUE='DEFF' &#xD;&#xA;AND DET.PROVIDER_ID6 IS NOT NULL&#xD;&#xA;--AND HEAD.STATUS_VALUE='RPST'&#xD;&#xA;AND DET.STATUS_VALUE='PSTD'&#xD;&#xA;AND DET.POSTED_DATE BETWEEN @STARTDATE AND @ENDDATE&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;DET.PROVIDER_ID7 'PROVIDER_ID',   &#xD;&#xA;RECORD_TYPE_ID,&#xD;&#xA;RECORD_TYPE_VALUE 'RECORDTYPE',&#xD;&#xA;ISNULL(CONTRIBUTION_AMOUNT7,0) 'CONTRIBUTIONAMOUNT'&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HEAD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL DET WITH(NOLOCK) ON HEAD.EMPLOYER_PAYROLL_HEADER_ID=DET.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HEADER_TYPE_VALUE='DEFF' &#xD;&#xA;AND DET.PROVIDER_ID7 IS NOT NULL&#xD;&#xA;--AND HEAD.STATUS_VALUE='RPST'&#xD;&#xA;AND DET.STATUS_VALUE='PSTD' &#xD;&#xA;AND DET.POSTED_DATE BETWEEN @STARTDATE AND @ENDDATE&#xD;&#xA;) AS TEMP&#xD;&#xA;INNER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON ORG.ORG_ID=TEMP.PROVIDER_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE COD WITH(NOLOCK) ON COD.CODE_ID=TEMP.RECORD_TYPE_ID AND COD.CODE_VALUE=TEMP.RECORDTYPE&#xD;&#xA;GROUP BY PROVIDER_ID,ORG.ORG_CODE,ORG.ORG_NAME,COD.DESCRIPTION">
      <parameters>
        <parameter ID="@STARTDATE" sfwDataType="DateTime" />
        <parameter ID="@ENDDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadRGroupMembersByOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="WITH PARENT(PERSON_ACCOUNT_ID,&#xA; plan_participation_status_value,&#xA; effective_start_date,&#xA; effective_end_date,&#xA; RowRank)&#xA;AS&#xA;(&#xA;select PERSON_ACCOUNT_ID,&#xA; ltch.plan_participation_status_value,&#xA; LTCH.effective_start_date,&#xA; ltch.effective_end_date&#xA; ,row_number() OVER (PARTITION BY LTC.PERSON_ACCOUNT_ID ORDER BY LTC.PERSON_ACCOUNT_ID,&#xA; LTCH.effective_start_date DESC,isnull(ltch.effective_end_date,'01/01/2900') DESC ) &#xA; AS ROWRANK &#xA;     &#xA; from &#xA; SGT_PERSON_ACCOUNT_LTC_OPTION ltc &#xA; Inner Join sgt_person_account_ltc_option_history LTCH &#xA; on ltch.person_account_ltc_option_id = ltc.person_account_ltc_option_id&#xA;   where @Batchdate between ltch.effective_start_date &#xA;   and isnull(ltch.effective_end_date,'01/01/2900')&#xA;   and ltch.plan_participation_status_value = 'ENL2'&#xA;&#xA;)&#xA;select pa.*,p.*,pl.*,pag.*,pal.*,papeh.*, pam.*&#xA;from sgt_person_account pa WITH (NOLOCK) &#xA;&#xA;inner join sgt_person p WITH (NOLOCK) on pa.person_id= p.person_id &#xA;inner join sgt_plan pl  WITH (NOLOCK) on pa.plan_id = pl.plan_id&#xA;left join &#xA;(&#xA; Select PAG.* from sgt_person_account_ghdv pag(nolock) &#xA;  INNER jOIN sgt_person_account_ghdv_history pagh with(nolock) &#xA;  on pag.person_account_ghdv_id = pagh.person_account_ghdv_id&#xA;   where pagh.plan_participation_status_value = 'ENL2'&#xA;    AND @BatchDate between pagh.start_date and isnull(pagh.end_date,'01/01/2900')&#xA;    AND pagh.START_DATE &lt;&gt; CASE WHEN pagh.END_DATE IS NOT NULL &#xA;        THEN pagh.END_DATE ELSE '01/01/2900' END&#xA;) pag ON pag.person_account_id = pa.person_account_id&#xA;left join &#xA;(&#xA; Select pam.* from SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY pam(nolock) &#xA;   where pam.plan_participation_status_value = 'ENL2'&#xA;    AND @BatchDate between pam.start_date and isnull(pam.end_date,'01/01/2900')&#xA;    AND pam.START_DATE &lt;&gt; CASE WHEN pam.END_DATE IS NOT NULL &#xA;        THEN pam.END_DATE ELSE '01/01/2900' END&#xA;) pam ON pam.person_account_id = pa.person_account_id&#xA;left join &#xA;(&#xA; Select Pal.* from  sgt_person_account_life pal(nolock) &#xA;  Inner  join sgt_person_account_life_history palh with(nolock) &#xA;  on pal.person_account_id = palh.person_account_id &#xA;   and palh.level_of_coverage_value = 'BASC'&#xA;  where palh.plan_participation_status_value = 'ENL2'&#xA;  and @BatchDate between palh.effective_start_date &#xA;   and isnull(palh.effective_end_date,'01/01/2900') &#xA;  AND palh.effective_start_date &lt;&gt; CASE WHEN palh.effective_end_date IS NOT NULL &#xA;   THEN palh.effective_end_date ELSE '01/01/2900' END&#xA;) pal on pal.person_account_id = pa.person_account_id&#xA;left join&#xA;(&#xA; Select * from Parent where rowrank = 1 &#xA;) ltch  on ltch.person_account_id = PA.person_account_id&#xA;&#xA;left join (&#xA;&#x9;select PERSON_ACCOUNT_ID,max(HISTORY_CHANGE_DATE) as maxhischngdate, max(ACCOUNT_PAYMENT_ELECTION_HISTORY_ID) as ACCOUNT_PAYMENT_ELECTION_HISTORY_ID&#xA;&#x9;from SGT_PERSON_ACCOUNT_PAYMENT_ELECTION_history with (nolock) &#xA;&#x9;where IBS_EFFECTIVE_DATE &lt;= @Batchdate&#xA;&#x9;group by PERSON_ACCOUNT_ID &#xA;)pe_max on pa.PERSON_ACCOUNT_ID = pe_max.PERSON_ACCOUNT_ID&#xA;left join SGT_PERSON_ACCOUNT_PAYMENT_ELECTION_HISTORY papeh with (nolock) on papeh.PERSON_ACCOUNT_ID = pe_max.PERSON_ACCOUNT_ID &#xA;&#x9;and papeh.HISTORY_CHANGE_DATE = pe_max.maxhischngdate&#xA;&#x9;and papeh.ACCOUNT_PAYMENT_ELECTION_HISTORY_ID = pe_max.ACCOUNT_PAYMENT_ELECTION_HISTORY_ID&#xA;left join sgt_person_account_payment_election pape WITH (NOLOCK) on pa.person_account_id = pape.PERSON_ACCOUNT_ID&#xA;&#xA;where &#xA;pl.benefit_type_value='INSR'&#xA;AND @batchDate between pa.start_date and isnull(pa.end_date,'01/01/2900')&#xA;AND papeh.ibs_effective_date &lt;= @batchDate&#xA;and (papeh.ibs_org_id = @orgID or papeh.IBS_SUPPLEMENTAL_ORG_ID = @orgID)&#xA;and not (pape.ibs_flag = 'N' and pape.ibs_org_id is null)&#xA;AND (&#xA; Pag.person_account_id is not null &#xA; or Pal.person_account_id is not null &#xA; or LTCH.person_account_id is not null &#xA; or pam.PERSON_ACCOUNT_ID is not null&#xA;)&#xA;order by pa.plan_id">
      <parameters>
        <parameter ID="@orgID" sfwDataType="int" />
        <parameter ID="@batchDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="IsDetailEntryExistsByPersonPlanForHeader" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgt_employer_payroll_detail &#xD;&#xA;where employer_payroll_header_id = @headerID and person_id = @personID &#xD;&#xA;and plan_id = @planID and status_value &lt;&gt; 'IGNR'">
      <parameters>
        <parameter ID="@headerID" sfwDataType="int" />
        <parameter ID="@personID" sfwDataType="int" />
        <parameter ID="@planID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRemittanceByPayrollHeader" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select a.* from sgt_remittance a &#xD;&#xA;inner join sgt_deposit b on a.deposit_id = b.deposit_id&#xD;&#xA;where employer_payroll_header_id = @employerPayrollHeaderID">
      <parameters>
        <parameter ID="@employerPayrollHeaderID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="ESSLookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_EMPLOYER_PAYROLL_HEADER EPH&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="ESSOrgContactSubQuery" sfwQueryType="SubSelectQuery" sfwSql="SELECT OC.* FROM SGS_CODE_VALUE BT  &#xD;&#xA; INNER JOIN SGS_CODE_VALUE HT ON HT.CODE_ID = 1212 AND HT.CODE_VALUE = BT.DATA3&#xD;&#xA; INNER JOIN SGT_PLAN P &#xD;&#xA;  ON P.BENEFIT_TYPE_VALUE = BT.DATA2&#xD;&#xA; INNER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT O.ORG_ID,O.PLAN_ID,R.CONTACT_ROLE_VALUE,O.CONTACT_ID FROM SGT_ORG_CONTACT O&#xD;&#xA;    INNER JOIN SGT_ORG_CONTACT_ROLE R &#xD;&#xA;     ON O.ORG_CONTACT_ID = R.ORG_CONTACT_ID         &#xD;&#xA;  ) AS OC&#xD;&#xA;  ON P.PLAN_ID =  OC.PLAN_ID&#xD;&#xA; INNER JOIN SGT_ORG_PLAN OP ON&#xD;&#xA;  OC.ORG_ID = OP.ORG_ID AND OP.PLAN_ID = OC.PLAN_ID &#xD;&#xA; WHERE BT.CODE_ID = 3504 AND EPH.ORG_ID = OC.ORG_ID  AND EPH.HEADER_TYPE_VALUE=BT.DATA3">
      <parameters />
    </query>
    <query ID="ESSOrgSubQuery" sfwQueryType="SubSelectQuery" sfwSql="select * from sgt_organization B where B.org_id=EPH.Org_id">
      <parameters />
    </query>
    <query ID="ESSDetailSubQuery" sfwQueryType="SubSelectQuery" sfwSql="SELECT * FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD  &#xD;&#xA;  WHERE EPD.PLAN_ID = OC.PLAN_ID AND EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="PullACHForEmployer" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF(@HEADERTYPEVALUE &lt;&gt; 'RETR')&#xD;&#xA;BEGIN&#xD;&#xA; SELECT DEB.DEBIT_ACH_REQUEST_ID,HED.*,BNK.ACCOUNT_NO,BNK.ACCOUNT_TYPE_VALUE,0 AS ABA_NUMBER,ORG1.ROUTING_NO,ORG.ORG_CODE,LEFT(ORG.ORG_NAME,22) AS ORG_NAME&#xD;&#xA; FROM SGT_WSS_DEBIT_ACH_REQUEST DEB WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_HEADER HED WITH(NOLOCK)&#xD;&#xA; ON DEB.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA; INNER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA; ON HED.ORG_ID = ORG.ORG_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORG_BANK BNK WITH(NOLOCK)&#xD;&#xA; ON BNK.ORG_ID = ORG.ORG_ID and bnk.usage_value='WID' and bnk.status_value='ACTV'&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION ORG1 WITH(NOLOCK)&#xD;&#xA; ON BNK.BANK_ORG_ID = ORG1.ORG_ID&#xD;&#xA; WHERE DEB.STATUS_VALUE = 'PEND'&#xD;&#xA; AND HED.HEADER_TYPE_VALUE = @HEADERTYPEVALUE&#xD;&#xA;END&#xD;&#xA;ELSE&#xD;&#xA;BEGIN&#xD;&#xA; SELECT DEB.DEBIT_ACH_REQUEST_ID,HED.*,BNK.ACCOUNT_NO,BNK.ACCOUNT_TYPE_VALUE,0 AS ABA_NUMBER,ORG1.ROUTING_NO,ORG.ORG_CODE,LEFT(ORG.ORG_NAME,22) AS ORG_NAME&#xD;&#xA; FROM SGT_WSS_DEBIT_ACH_REQUEST DEB WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_HEADER HED WITH(NOLOCK)&#xD;&#xA; ON DEB.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA; INNER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA; ON HED.ORG_ID = ORG.ORG_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORG_BANK BNK WITH(NOLOCK)&#xD;&#xA; ON BNK.ORG_ID = ORG.ORG_ID and bnk.usage_value='WID' and bnk.status_value='ACTV'&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION ORG1 WITH(NOLOCK)&#xD;&#xA; ON BNK.BANK_ORG_ID = ORG1.ORG_ID&#xD;&#xA; WHERE DEB.STATUS_VALUE = 'PEND'&#xD;&#xA; AND HED.HEADER_TYPE_VALUE IN ('RETR','PRCH')&#xD;&#xA;END">
      <parameters>
        <parameter ID="@HEADERTYPEVALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="ESSLoadEmployerPayroll" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT EPH.*&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK)&#xD;&#xA;  left JOIN SGT_EMPLOYER_PAYROLL_DETAIL EPD WITH(NOLOCK)&#xD;&#xA;   ON EPH.EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA;    = EPD.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_ORG_CONTACT OC WITH(NOLOCK) &#xD;&#xA;   ON EPH.ORG_ID = OC.ORG_ID &#xD;&#xA;  INNER JOIN SGT_ORG_CONTACT_ROLE OCR WITH(NOLOCK)&#xD;&#xA;   ON OCR.ORG_CONTACT_ID = OC.ORG_CONTACT_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN PL&#xD;&#xA;   ON OC.PLAN_ID = PL.PLAN_ID  &#xD;&#xA;  WHERE (EPH.STATUS_VALUE = 'REVW' OR &#xD;&#xA;    ( (EPH.HEADER_TYPE_VALUE = 'RETR' OR EPH.HEADER_TYPE_VALUE ='INSR')&#xD;&#xA;     AND EPH.STATUS_VALUE = 'PSTD' &#xD;&#xA;     AND EPH.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xD;&#xA;    )&#xD;&#xA;    OR EPH.STATUS_VALUE = 'VALD'&#xD;&#xA;    OR (EPH.BALANCING_STATUS_VALUE &lt;&gt; 'BALN' AND EPH.HEADER_TYPE_VALUE = 'PRCH') -- PIR 15796&#xD;&#xA;      ) &#xD;&#xA;   AND OC.CONTACT_ID =  @CONTACT_ID&#xD;&#xA;   AND EPH.ORG_ID=@ORG_ID&#xD;&#xA;   AND ISNULL(EPD.PLAN_ID,0) = &#xD;&#xA;     CASE WHEN OCR.CONTACT_ROLE_VALUE = 'PAAG' OR OCR.CONTACT_ROLE_VALUE = 'AUTH' THEN ISNULL(EPD.PLAN_ID,0)&#xD;&#xA;      ELSE CASE WHEN EPD.EMPLOYER_PAYROLL_HEADER_ID IS NOT NULL&#xD;&#xA;          THEN OC.PLAN_ID &#xD;&#xA;          ELSE ISNULL(EPD.PLAN_ID,0)&#xD;&#xA;         END&#xD;&#xA;     END&#xD;&#xA;   AND EPH.HEADER_TYPE_VALUE = &#xD;&#xA;    CASE WHEN EPD.EMPLOYER_PAYROLL_HEADER_ID IS NOT NULL &#xD;&#xA;      THEN EPH.HEADER_TYPE_VALUE&#xD;&#xA;      ELSE &#xD;&#xA;      CASE WHEN  OCR.CONTACT_ROLE_VALUE = 'PAAG'&#xD;&#xA;       THEN EPH.HEADER_TYPE_VALUE&#xD;&#xA;       ELSE &#xD;&#xA;        CASE WHEN PL.BENEFIT_TYPE_VALUE = 'RETR' &#xD;&#xA;          AND EPH.HEADER_TYPE_VALUE = 'PRCH'&#xD;&#xA;          THEN 'PRCH'&#xD;&#xA;          ELSE PL.BENEFIT_TYPE_VALUE&#xD;&#xA;        END&#xD;&#xA;      END&#xD;&#xA;    END&#xD;&#xA;    AND (CASE WHEN  EPH.STATUS_VALUE IN ('PEND','IGNR','REVW','RPST','VALD') AND EPH.HEADER_TYPE_VALUE='INSR' AND EPH.REPORT_TYPE_VALUE='ADJS' THEN 1 ELSE 0 END) =0&#xD;&#xA;">
      <parameters>
        <parameter ID="@CONTACT_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="ESSMainLookUp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT * FROM &#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;EPH.*,&#xD;&#xA;OC.CONTACT_ID,SO.ORG_CODE,SO.ORG_NAME,&#xD;&#xA; InsuranceAmount = ISNULL((select SUM(ISNULL(PREMIUM_AMOUNT,0)) from SGT_EMPLOYER_PAYROLL_DETAIL where EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID and STATUS_VALUE != 'IGNR' AND RECORD_TYPE_VALUE!='-ADJ'),0)&#xD;&#xA;,NegInsuranceAdjAmount =ISNULL((select SUM(ISNULL(PREMIUM_AMOUNT,0)) from SGT_EMPLOYER_PAYROLL_DETAIL where EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID and STATUS_VALUE != 'IGNR' AND RECORD_TYPE_VALUE='-ADJ'),0)&#xD;&#xA;,CASE WHEN HEADER_TYPE_VALUE = 'DEFF' &#xD;&#xA; THEN EPH.PAY_PERIOD_START_DATE &#xD;&#xA;ELSE EPH.PAYROLL_PAID_DATE END as SORT_ORDER_DATE&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK)  &#xD;&#xA;LEFT JOIN SGT_ORG_CONTACT OC WITH(NOLOCK) ON EPH.ORG_ID = OC.ORG_ID &#xD;&#xA;LEFT JOIN SGT_ORG_CONTACT_ROLE OCR WITH(NOLOCK) ON OCR.ORG_CONTACT_ID = OC.ORG_CONTACT_ID&#xD;&#xA;LEFT JOIN SGT_EMPLOYER_PAYROLL_DETAIL EPD WITH(NOLOCK) ON EPH.EMPLOYER_PAYROLL_HEADER_ID = EPD.EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA;INNER JOIN sgt_organization SO WITH(NOLOCK) ON EPH.ORG_ID=SO.ORG_ID&#xD;&#xA;where&#xD;&#xA;  isnull(EPD.PLAN_ID,0) = CASE WHEN (OCR.CONTACT_ROLE_VALUE IN ('PAAG', 'AUTH') OR EPH.HEADER_TYPE_VALUE = 'PRCH') THEN isnull(EPD.PLAN_ID,0) ELSE OC.PLAN_ID END&#xD;&#xA;   AND &#xD;&#xA;   (CASE WHEN  EPH.STATUS_VALUE IN ('PEND','IGNR','REVW','RPST','VALD') AND EPH.HEADER_TYPE_VALUE='INSR' AND EPH.REPORT_TYPE_VALUE='ADJS' THEN 1 ELSE 0 END) =0&#xD;&#xA;   AND &#xD;&#xA;   (CASE WHEN  EPH.STATUS_VALUE = 'IGNR' AND EPH.HEADER_TYPE_VALUE='INSR' AND EPH.REPORT_TYPE_VALUE='REG' THEN 1 ELSE 0 END) = 0&#xD;&#xA;&#xD;&#xA;group by OC.CONTACT_ID,SO.ORG_CODE,SO.ORG_NAME,EPH.HEADER_TYPE_VALUE&#xD;&#xA;,EPH.[EMPLOYER_PAYROLL_HEADER_ID]&#xD;&#xA;      ,EPH.[ORG_ID]&#xD;&#xA;      ,EPH.[HEADER_TYPE_ID]&#xD;&#xA;      ,EPH.[HEADER_TYPE_VALUE]&#xD;&#xA;      ,EPH.[REPORTING_SOURCE_ID]&#xD;&#xA;      ,EPH.[REPORTING_SOURCE_VALUE]&#xD;&#xA;      ,EPH.[REPORT_TYPE_ID]&#xD;&#xA;      ,EPH.[REPORT_TYPE_VALUE]&#xD;&#xA;      ,EPH.[PAYROLL_PAID_DATE]&#xD;&#xA;      ,EPH.[PAY_PERIOD_START_DATE]&#xD;&#xA;      ,EPH.[PAY_PERIOD_END_DATE]&#xD;&#xA;      ,EPH.[STATUS_ID]&#xD;&#xA;      ,EPH.[STATUS_VALUE]&#xD;&#xA;      ,EPH.[RECEIVED_DATE]&#xD;&#xA;      ,EPH.[INTEREST_WAIVER_FLAG]&#xD;&#xA;      ,EPH.[BALANCING_STATUS_ID]&#xD;&#xA;      ,EPH.[BALANCING_STATUS_VALUE]&#xD;&#xA;      ,EPH.[TOTAL_CONTRIBUTION_REPORTED]&#xD;&#xA;      ,EPH.[TOTAL_CONTRIBUTION_CALCULATED]&#xD;&#xA;      ,EPH.[TOTAL_WAGES_REPORTED]&#xD;&#xA;      ,EPH.[TOTAL_WAGES_CALCULATED]&#xD;&#xA;      ,EPH.[TOTAL_INTEREST_REPORTED]&#xD;&#xA;      ,EPH.[TOTAL_INTEREST_CALCULATED]&#xD;&#xA;      ,EPH.[TOTAL_DETAIL_RECORD_COUNT]&#xD;&#xA;      ,EPH.[TOTAL_PURCHASE_AMOUNT]&#xD;&#xA;      ,EPH.[TOTAL_PREMIUM_AMOUNT_REPORTED]&#xD;&#xA;      ,EPH.[TOTAL_PURCHASE_AMOUNT_REPORTED]&#xD;&#xA;      ,EPH.[COMMENTS]&#xD;&#xA;      ,EPH.[SUBMITTED_DATE]&#xD;&#xA;      ,EPH.[VALIDATED_DATE]&#xD;&#xA;      ,EPH.[POSTED_DATE]&#xD;&#xA;      ,EPH.[CENTRAL_PAYROLL_RECORD_ID]&#xD;&#xA;      ,EPH.[IGNORE_BALANCING_STATUS_FLAG]&#xD;&#xA;      ,EPH.[LAST_RELOAD_RUN_DATE]&#xD;&#xA;      ,EPH.[CREATED_BY]&#xD;&#xA;      ,EPH.[CREATED_DATE]&#xD;&#xA;      ,EPH.[MODIFIED_BY]&#xD;&#xA;      ,EPH.[MODIFIED_DATE]&#xD;&#xA;      ,EPH.[UPDATE_SEQ]&#xD;&#xA;      ,EPH.[PAY_CHECK_DATE]&#xD;&#xA;      ,EPH.[SUPPRESS_SALARY_VARIANCE_VALIDATION_FLAG]&#xD;&#xA;      ,TOTAL_WAGES_ORIGINAL&#xD;&#xA;&#x9;  ,TOTAL_CONTRIBUTION_ORIGINAL&#xD;&#xA;&#x9;  ,TOTAL_PURCHASE_AMOUNT_ORIGINAL&#xD;&#xA;&#x9;  ,EPH.SUPPRESS_3RD_PAYROLL_FLAG&#xD;&#xA;&#x9;  ,EPH.ORIGINAL_EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;&#x9;  ,EPH.DETAIL_COMMENTS&#xD;&#xA;&#x9;  ,EPH.TOTAL_ADEC_AMOUNT_REPORTED&#xD;&#xA;&#x9;  ,EPH.TOTAL_ADEC_AMOUNT_CALCULATED&#xD;&#xA;&#x9;  ,EPH.TOTAL_ADEC_AMOUNT_ORIGINAL&#xD;&#xA;&#xD;&#xA;)TEMP&#xD;&#xA;ORDER BY TEMP.EMPLOYER_PAYROLL_HEADER_ID DESC">
      <parameters />
    </query>
    <query ID="LoadDistinctPlanByPurchaseAndPayrollHeader" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select distinct sph.plan_id &#xD;&#xA;from sgt_employer_purchase_allocation epa&#xD;&#xA;inner join sgt_service_purchase_header sph on epa.service_purchase_header_id = sph.service_purchase_header_id&#xD;&#xA;inner join sgt_employer_payroll_detail epd on epa.employer_payroll_detail_id = epd.employer_payroll_detail_id&#xD;&#xA;where epd.employer_payroll_header_id= @payrollHeaderID">
      <parameters>
        <parameter ID="@payrollHeaderID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="ESSStatusSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select a.status_value, c.description as status_description, count(*) as status_count&#xD;&#xA;  from sgt_employer_payroll_detail a with (nolock),&#xD;&#xA;       sgt_employer_payroll_header b with (nolock),&#xD;&#xA;       sgs_code_value c&#xD;&#xA; where a.employer_payroll_header_id     = b.employer_payroll_header_id&#xD;&#xA;   and b.employer_payroll_header_id     = @employer_payroll_header_id&#xD;&#xA;   and a.status_id               = c.code_id&#xD;&#xA;   and a.status_value            = c.code_value&#xD;&#xA;   and a.status_value &lt;&gt; 'REVW'&#xD;&#xA; group by &#xD;&#xA;       a.status_value, c.description&#xD;&#xA;&#xD;&#xA;union all&#xD;&#xA;&#xD;&#xA;select a.status_value, c.description as status_description, count(*) as status_count&#xD;&#xA;  from sgt_employer_payroll_detail a with (nolock)&#xD;&#xA;       inner join sgt_employer_payroll_header b with (nolock) on  a.employer_payroll_header_id     = b.employer_payroll_header_id&#xD;&#xA;       inner join sgs_code_value c with (nolock) on a.status_id = c.code_id and a.status_value = c.code_value&#xD;&#xA;       inner join &#xD;&#xA;       (select err.employer_payroll_detail_id,count(case when mess.severity_value = 'E' then 1 else 0 end) as count_error&#xD;&#xA;   from  sgt_employer_payroll_detail_error err with (nolock)&#xD;&#xA;       inner join sgs_messages mess with (nolock)&#xD;&#xA;       on err.message_id = mess.message_id&#xD;&#xA;   group by err.employer_payroll_detail_id) err on err.employer_payroll_detail_id = a.employer_payroll_detail_id&#xD;&#xA; where b.employer_payroll_header_id     = @employer_payroll_header_id&#xD;&#xA;   and isnull(a.ALLOW_CHANGE_WARNINGS,'N') = case when isnull(err.count_error,0) &gt; 0 then 'N' else 'Y' end&#xD;&#xA;   and a.status_value='REVW' &#xD;&#xA; group by &#xD;&#xA;       a.status_value, c.description">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="ESSErrorSummaryById" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select a.message_id, display_message, e.description as severity, count(*) as message_count&#xD;&#xA;  from sgt_employer_payroll_detail_error a ,&#xD;&#xA;       sgt_employer_payroll_detail b,&#xD;&#xA;       sgt_employer_payroll_header c ,&#xD;&#xA;       sgs_messages d,&#xD;&#xA;       sgs_code_value e&#xD;&#xA; where a.EMPLOYER_PAYROLL_DETAIL_ID = b.EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;   and b.employer_payroll_header_id     = c.employer_payroll_header_id &#xD;&#xA;   and c.employer_payroll_header_id      = @employer_payroll_header_id&#xD;&#xA;   and a.message_id              = d.message_id&#xD;&#xA;   and d.severity_id             = e.code_id&#xD;&#xA;   and d.severity_value          = e.code_value&#xD;&#xA;   and (d.severity_value = 'E' or (d.severity_value = 'W' and isnull(b.allow_change_warnings,'N') = 'Y'))&#xD;&#xA; group by &#xD;&#xA;       a.message_id, display_message, e.description">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadActiveInsuranceOrgPlanForPostingInsurance" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_ORG_PLAN OP WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN P WITH(NOLOCK) ON P.PLAN_ID=OP.PLAN_ID AND P.BENEFIT_TYPE_VALUE='INSR'&#xD;&#xA;INNER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON O.ORG_ID = OP.ORG_ID&#xD;&#xA;WHERE @payrollPaidDate BETWEEN OP.PARTICIPATION_START_DATE AND ISNULL(OP.PARTICIPATION_END_DATE,'01/01/2900')&#xD;&#xA;AND NOT EXISTS(SELECT 1 FROM SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK)&#xD;&#xA;WHERE EPH.org_id = OP.org_id AND &#xD;&#xA;EPH.header_type_value='INSR' AND EPH.REPORT_TYPE_VALUE = 'REG' AND&#xD;&#xA;MONTH(EPH.PAYROLL_PAID_DATE)=MONTH(@payrollPaidDate) AND &#xD;&#xA;YEAR(EPH.PAYROLL_PAID_DATE)=YEAR(@payrollPaidDate) AND&#xD;&#xA;EPH.STATUS_VALUE NOT IN ('IGNR'))">
      <parameters>
        <parameter ID="@payrollPaidDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadEmployerPayrollDetailWithOtherData" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select *, per.first_name as first_name_from_person, per.last_name as last_name_from_person from sgt_employer_payroll_detail epd WITH(NOLOCK)&#xD;&#xA;left join sgt_person per WITH(NOLOCK) on epd.person_id = per.person_id&#xD;&#xA;left join sgt_plan p WITH(NOLOCK) on epd.plan_id = p.plan_id&#xD;&#xA;where employer_payroll_header_id = @employerPayrollHeaderID">
      <parameters>
        <parameter ID="@employerPayrollHeaderID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllPersonAccount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT A.* FROM SGT_PERSON_ACCOUNT A WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL D WITH(NOLOCK) ON A.PERSON_ACCOUNT_ID = D.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL E WITH(NOLOCK) ON E.PERSON_EMPLOYMENT_DTL_ID = D.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;WHERE PERSON_ID IN (SELECT PERSON_ID FROM SGT_EMPLOYER_PAYROLL_DETAIL WITH(NOLOCK) &#xD;&#xA;WHERE EMPLOYER_PAYROLL_HEADER_ID = @EMPPAYROLLHEADERID GROUP BY PERSON_ID)">
      <parameters>
        <parameter ID="@empPayrollHeaderID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllPAEmpDetailChildData" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select DISTINCT paed.*,ped.*,pe.* from sgt_person_account_employment_detail paed WITH(NOLOCK)&#xD;&#xA;inner join sgt_person_employment_detail ped WITH(NOLOCK) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe WITH(NOLOCK) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_employer_payroll_detail epd WITH(NOLOCK) on pe.person_id = epd.person_id&#xD;&#xA;where employer_payroll_header_id = @empHeaderID &#xD;&#xA;--and  paed.election_value = 'ENLD' PIR 15741">
      <parameters>
        <parameter ID="@empHeaderID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllOrgPlans" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select op.* from sgt_org_plan op WITH(NOLOCK)&#xD;&#xA;inner join sgt_employer_payroll_header eph WITH(NOLOCK) on op.org_id = eph.org_id&#xD;&#xA;where employer_payroll_header_id = @headerID">
      <parameters>
        <parameter ID="@headerID" />
      </parameters>
    </query>
    <query ID="LoadAllOrgPlanMemberType" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select opmt.* from sgt_org_plan_member_type opmt WITH(NOLOCK)&#xD;&#xA;inner join sgt_org_plan op WITH(NOLOCK) on opmt.org_plan_id = op.org_plan_id&#xD;&#xA;inner join sgt_employer_payroll_header eph WITH(NOLOCK) on op.org_id = eph.org_id&#xD;&#xA;where employer_payroll_header_id = @headerID">
      <parameters>
        <parameter ID="@headerID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadEmployerPayrollHeaderForRemittanceAllocation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT EMPHDR.* FROM SGT_EMPLOYER_PAYROLL_HEADER EMPHDR WITH(NOLOCK)&#xD;&#xA;LEFT JOIN SGT_REMITTANCE REM WITH(NOLOCK) ON REM.ORG_ID = EMPHDR.ORG_ID&#xD;&#xA;LEFT JOIN SGT_DEPOSIT DEP WITH(NOLOCK) ON REM.DEPOSIT_ID = DEP.DEPOSIT_ID&#xD;&#xA;WHERE EMPHDR.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA;AND BALANCING_STATUS_VALUE = 'NOR'&#xD;&#xA;AND DEP.STATUS_VALUE IN ('APLD','VALD')&#xD;&#xA;AND REM.REMITTANCE_ID IS NOT NULL&#xD;&#xA;AND EMPHDR.HEADER_TYPE_VALUE NOT IN ('RETR','INSR') --PROD PIR 6062">
      <parameters />
    </query>
    <query ID="LoadAllOrgPlanProviders" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgt_org_plan_provider WITH(NOLOCK)">
      <parameters />
    </query>
    <query ID="LoadInsuranceHeaderToReloadForOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT *,A.STATUS_VALUE AS PAYROLL_STATUS_VALUE FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA;INNER JOIN SGT_ORGANIZATION B ON A.ORG_ID = B.ORG_ID  WHERE &#xD;&#xA;header_type_value='INSR' AND&#xD;&#xA;A.STATUS_VALUE NOT IN ('RPST','IGNR','PSTD') AND&#xD;&#xA;REPORT_TYPE_VALUE = 'REG' AND&#xD;&#xA;B.ORG_ID = @ORGID&#xD;&#xA;ORDER BY PAYROLL_PAID_DATE DESC">
      <parameters>
        <parameter ID="@ORGID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadEmpHeaderForARBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT *&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER WITH(NOLOCK)&#xD;&#xA;WHERE STATUS_VALUE = 'PSTD'&#xD;&#xA;AND HEADER_TYPE_VALUE IN ('RETR','INSR')&#xD;&#xA;AND BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xD;&#xA;ORDER BY ORG_ID,PAYROLL_PAID_DATE,REPORT_TYPE_VALUE DESC">
      <parameters />
    </query>
    <query ID="UpdateRetrEmpHeaderBalnFromARBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMPLOYER_PAYROLL_HEADER_ID,SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) AS DIFFAMT&#xA;INTO #TEMP&#xA;FROM ( &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'CNTR' AS REMITTANCE_TYPE,&#xA; SUM(ISNULL(EE_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(EE_PRE_TAX_REPORTED, 0.00) +&#xA; ISNULL(EE_EMPLOYER_PICKUP_REPORTED, 0.00) +&#xA; ISNULL(ER_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(MEMBER_INTEREST_CALCULATED, 0.00) +&#xA; ISNULL(EMPLOYER_INTEREST_CALCULATED, 0.00)&#xA; + ISNULL(EE_PRETAX_ADDL_REPORTED, 0.00) &#xA; + ISNULL(ER_PRETAX_MATCH_REPORTED, 0.00) &#xA; + ISNULL(EE_POST_TAX_ADDL_REPORTED, 0.00)) AS REPORTEDAMT,&#xA; 0.00 AS ALLOCATEDAMT&#xA; -- SELECT D.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'RHCO' AS REMITTANCE_TYPE,&#xA; SUM(ISNULL(RHIC_ER_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(RHIC_EE_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(EMPLOYER_RHIC_INTEREST_CALCULATED, 0.00)) AS REPORTEDAMT, &#xA; 0.00 AS ALLOCATEDAMT&#xA; -- SELECT D.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'ADEC' AS REMITTANCE_TYPE,&#xA; SUM(ISNULL(ADEC_REPORTED, 0.00)) AS REPORTEDAMT, &#xA; 0.00 AS ALLOCATEDAMT&#xA; -- SELECT D.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA; &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE AS REMITTANCE_TYPE, 0.00,&#xA; SUM(ALLOCATED_AMOUNT)&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; --AND A.REPORT_TYPE_VALUE &lt;&gt; 'PEN'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA;&#xA; UNION ALL&#xA; &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, 1 AS PLAN_ID, 'CNTR' AS REMITTANCE_TYPE_VALUE, SUM(ISNULL(A.TOTAL_CONTRIBUTION_REPORTED,0)),&#xA;0.00 AS ALLOCATEDAMT&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; AND A.REPORT_TYPE_VALUE = 'PEN'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE&#xA; --UNION ALL&#xA; &#xA; --SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID, &#xA; --CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','UCRP') THEN 'CNTR'&#xA; -- WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('ORRP', 'URRP') THEN 'RHCO' END AS REMITTANCE_TYPE, 0.00,&#xA; --SUM( CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','ORRP') THEN DIFFERENCE_AMOUNT ELSE 0.00 END) AS ALLOCATED_AMOUNT&#xA; --FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; --WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; --AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; --AND DIFFERENCE_TYPE_VALUE IS NOT NULL&#xA; --AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; --AND A.STATUS_VALUE = 'PSTD'&#xA; --GROUP BY A.EMPL OYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,&#xA; --CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','UCRP') THEN 'CNTR'&#xA; -- WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('ORRP', 'URRP') THEN 'RHCO' END&#xA;) MYQU&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID&#xA;HAVING SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) = 0&#xA;&#xA;UPDATE HED SET HED.BALANCING_STATUS_VALUE = 'BALN',&#xA;HED.MODIFIED_BY ='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),HED.MODIFIED_DATE = GETDATE(),HED.UPDATE_SEQ = HED.UPDATE_SEQ + 1&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HED&#xA;INNER JOIN #TEMP TMP ON TMP.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xA;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateInsrEmpHeaderBalnFromARBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMPLOYER_PAYROLL_HEADER_ID,SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) AS DIFFAMT&#xA;INTO #TEMP&#xA;FROM ( &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID,&#xA; SUM(ISNULL(PREMIUM_AMOUNT, 0.00)) AS REPORTEDAMT,0.00 AS ALLOCATEDAMT&#xA; -- SELECT B.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD' &#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID, 0.00, SUM(ALLOCATED_AMOUNT)&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xA; AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD' &#xA; --AND A.REPORT_TYPE_VALUE &lt;&gt; 'PEN'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA; &#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, 12 AS PLAN_ID, SUM(ISNULL(A.TOTAL_PREMIUM_AMOUNT_REPORTED,0)), 0.00&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD' &#xA; AND A.REPORT_TYPE_VALUE = 'PEN'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE--, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA;) MYQU&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID&#xA;HAVING SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) = 0&#xA;&#xA;UPDATE HED SET HED.BALANCING_STATUS_VALUE = 'BALN',&#xA;HED.MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),HED.MODIFIED_DATE = GETDATE(),HED.UPDATE_SEQ = HED.UPDATE_SEQ + 1&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HED&#xA;INNER JOIN #TEMP TMP ON TMP.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xA;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="DeletePersonAccountDependentLinkTable" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DELETE FROM SGT_PERSON_ACCOUNT_DEPENDENT_BILLING_LINK&#xD;&#xA;WHERE EMPLOYER_PAYROLL_DETAIL_ID IN &#xD;&#xA;(SELECT EMPLOYER_PAYROLL_DETAIL_ID FROM SGT_EMPLOYER_PAYROLL_DETAIL&#xD;&#xA;WHERE EMPLOYER_PAYROLL_HEADER_ID = @HEADERID AND STATUS_VALUE &lt;&gt; 'PSTD')">
      <parameters>
        <parameter ID="@HEADERID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateRetrEmpHeaderUnBalnFromARBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMPLOYER_PAYROLL_HEADER_ID,SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) AS DIFFAMT&#xA;INTO #TEMP&#xA;FROM ( &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'CNTR' AS REMITTANCE_TYPE,&#xA; SUM(ISNULL(EE_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(EE_PRE_TAX_REPORTED, 0.00) +&#xA; ISNULL(EE_EMPLOYER_PICKUP_REPORTED, 0.00) +&#xA; ISNULL(ER_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(MEMBER_INTEREST_CALCULATED, 0.00) +&#xA; ISNULL(EMPLOYER_INTEREST_CALCULATED, 0.00)&#xA; + ISNULL(EE_PRETAX_ADDL_REPORTED, 0.00) &#xA; + ISNULL(ER_PRETAX_MATCH_REPORTED, 0.00) &#xA; + ISNULL(EE_POST_TAX_ADDL_REPORTED, 0.00)) AS REPORTEDAMT,&#xA; 0.00 AS ALLOCATEDAMT&#xA; -- SELECT D.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'RHCO' AS REMITTANCE_TYPE,&#xA; SUM(ISNULL(RHIC_ER_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(RHIC_EE_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(EMPLOYER_RHIC_INTEREST_CALCULATED, 0.00)) AS REPORTEDAMT, &#xA; 0.00 AS ALLOCATEDAMT&#xA; -- SELECT D.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'ADEC' AS REMITTANCE_TYPE,&#xA; SUM(ISNULL(ADEC_REPORTED, 0.00)) AS REPORTEDAMT, &#xA; 0.00 AS ALLOCATEDAMT&#xA; -- SELECT D.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA; &#xA; UNION ALL&#xA; &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE AS REMITTANCE_TYPE, 0.00,&#xA; SUM(ALLOCATED_AMOUNT)&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; --AND A.REPORT_TYPE_VALUE &lt;&gt; 'PEN'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA;&#xA; UNION ALL&#xA; &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, 1 AS PLAN_ID, 'CNTR' AS REMITTANCE_TYPE, SUM(ISNULL(A.TOTAL_CONTRIBUTION_REPORTED,0)),&#xA; 0.00&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; AND A.REPORT_TYPE_VALUE = 'PEN'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE--, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA; --UNION ALL&#xA; &#xA; --SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID, &#xA; --CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','UCRP') THEN 'CNTR'&#xA; -- WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('ORRP', 'URRP') THEN 'RHCO' END AS REMITTANCE_TYPE, 0.00,&#xA; --SUM( CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','ORRP') THEN DIFFERENCE_AMOUNT ELSE 0.00 END) AS ALLOCATED_AMOUNT&#xA; --FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; --WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; --AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; --AND DIFFERENCE_TYPE_VALUE IS NOT NULL&#xA; --AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; --AND A.STATUS_VALUE = 'PSTD'&#xA; --GROUP BY A.EM PLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,&#xA; --CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','UCRP') THEN 'CNTR'&#xA; -- WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('ORRP', 'URRP') THEN 'RHCO' END&#xA;) MYQU&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID&#xA;HAVING SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) &lt; SUM(REPORTEDAMT)&#xA; AND SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) &gt; 0&#xA;&#xA;UPDATE HED SET HED.BALANCING_STATUS_VALUE = 'UNBL',&#xA;HED.MODIFIED_BY ='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),HED.MODIFIED_DATE = GETDATE(),HED.UPDATE_SEQ = HED.UPDATE_SEQ + 1&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HED&#xA;INNER JOIN #TEMP TMP ON TMP.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xA;WHERE HED.BALANCING_STATUS_VALUE = 'NOR'&#xA;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateInsrEmpHeaderUnBalnFromARBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMPLOYER_PAYROLL_HEADER_ID,SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) AS DIFFAMT&#xA;INTO #TEMP&#xA;FROM ( &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID,&#xA; SUM(ISNULL(PREMIUM_AMOUNT, 0.00)) AS REPORTEDAMT,0.00 AS ALLOCATEDAMT&#xA; -- SELECT B.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD' &#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID, 0.00, SUM(ALLOCATED_AMOUNT)&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xA; AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD' &#xA; --AND A.REPORT_TYPE_VALUE &lt;&gt; 'PEN'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA; &#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, 12 AS PLAN_ID, SUM(ISNULL(A.TOTAL_PREMIUM_AMOUNT_REPORTED,0)), 0.00&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD' &#xA; AND A.REPORT_TYPE_VALUE = 'PEN'&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE--, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA;) MYQU&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID&#xA;HAVING SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) &lt; SUM(REPORTEDAMT)&#xA;AND SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) &gt; 0&#xA;&#xA;UPDATE HED SET HED.BALANCING_STATUS_VALUE = 'UNBL',&#xA;HED.MODIFIED_BY ='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),HED.MODIFIED_DATE = GETDATE(),HED.UPDATE_SEQ = HED.UPDATE_SEQ + 1&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HED&#xA;INNER JOIN #TEMP TMP ON TMP.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xA;WHERE HED.BALANCING_STATUS_VALUE = 'NOR'&#xA;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateRetrInsrEmpHeaderNORFromARBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE HED SET HED.BALANCING_STATUS_VALUE = 'NOR',MODIFIED_BY ='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),MODIFIED_DATE = GETDATE(),HED.UPDATE_SEQ = HED.UPDATE_SEQ + 1&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HED&#xD;&#xA;LEFT JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION ALLOC&#xD;&#xA; ON ALLOC.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HED.HEADER_TYPE_VALUE IN ('RETR','INSR')&#xD;&#xA;AND HED.BALANCING_STATUS_VALUE = 'UNBL'&#xD;&#xA;AND HED.STATUS_VALUE = 'PSTD'&#xD;&#xA;AND ALLOC.EMPLOYER_PAYROLL_HEADER_ID IS NULL">
      <parameters>
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckIfThereIsChangeinReportingFrequency" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select a.* from SGT_ORG_PLAN a &#xD;&#xA;inner join SGT_PLAN b&#xD;&#xA;on a.PLAN_ID = b.PLAN_ID&#xD;&#xA;where a.ORG_ID = @org_id &#xD;&#xA;and b.BENEFIT_TYPE_VALUE='DEFF'&#xD;&#xA;order by a.PLAN_ID,a.ORG_PLAN_ID desc">
      <parameters>
        <parameter ID="@org_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="EmployerPayrollDetailCount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) as DTLCOUNT FROM SGT_EMPLOYER_PAYROLL_DETAIL WITH(NOLOCK) &#xD;&#xA;WHERE EMPLOYER_PAYROLL_HEADER_ID=@EMPLOYER_PAYROLL_HEADER_ID">
      <parameters>
        <parameter ID="@EMPLOYER_PAYROLL_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadCurrentMonthPostedInsuranceHeader" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_EMPLOYER_PAYROLL_HEADER HDR&#xD;&#xA;INNER JOIN SGT_ORGANIZATION ORG ON HDR.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE &#xD;&#xA;HDR.HEADER_TYPE_VALUE='INSR' AND&#xD;&#xA;HDR.STATUS_VALUE != 'IGNR' AND&#xD;&#xA;HDR.REPORT_TYPE_VALUE = 'REG' AND &#xD;&#xA;HDR.ORG_ID = @ORGID AND&#xD;&#xA;MONTH(HDR.PAYROLL_PAID_DATE) = MONTH(@BATCH_DATE) AND &#xD;&#xA;YEAR(HDR.PAYROLL_PAID_DATE) = YEAR(@BATCH_DATE) &#xD;&#xA;ORDER BY HDR.PAYROLL_PAID_DATE DESC">
      <parameters>
        <parameter ID="@ORGID" sfwDataType="int" />
        <parameter ID="@BATCH_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadEmployerPayrollDetailWithHeader" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_EMPLOYER_PAYROLL_DETAIL DET&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_HEADER HDR ON DET.EMPLOYER_PAYROLL_HEADER_ID=HDR.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;INNER JOIN SGT_ORGANIZATION ORG ON HDR.ORG_ID=ORG.ORG_ID&#xD;&#xA;INNER JOIN SGT_PLAN PLN ON DET.PLAN_ID=PLN.PLAN_ID&#xD;&#xA;WHERE HDR.EMPLOYER_PAYROLL_HEADER_ID=@HDR_ID">
      <parameters>
        <parameter ID="@HDR_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadLifeOptionWithOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select palh.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_life_history palh(nolock) on pa.person_account_id = palh.person_account_id&#xD;&#xA;where paed.election_value = 'ENLD' and palh.plan_participation_status_value = 'ENL2' and&#xD;&#xA;palh.plan_option_status_value = 'ENLD' and&#xD;&#xA;palh.life_insurance_type_value = 'NREM' and&#xD;&#xA;@payrollPaidDate between palh.effective_start_date and isnull(palh.effective_end_date,'01/01/2900') and&#xD;&#xA;palh.effective_start_date &lt;&gt; isnull(palh.effective_end_date,'01/01/2900') and --ignore same dated history records&#xD;&#xA;@payrollPaidDate between pa.start_date and isnull(pa.end_date,'01/01/2900') and&#xD;&#xA;@payrollPaidDate between ped.start_date and dateadd(m,1,isnull(ped.end_date,'01/01/2900')) and&#xD;&#xA;@payrollPaidDate between left(convert(char(8),dateadd(m,1, pe.start_date), 111),8) + '01'  and dateadd(m,1,isnull(pe.end_date,'01/01/2900')) and&#xD;&#xA;paed.plan_id = 13 and&#xD;&#xA;pe.ORG_ID = @org_id">
      <parameters>
        <parameter ID="@payrollPaidDate" sfwDataType="DateTime" />
        <parameter ID="@org_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadEAPHistoryWithOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select paeh.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_eap_history paeh(nolock) on paeh.person_account_id = pa.person_account_id&#xD;&#xA;where paed.election_value = 'ENLD' AND&#xD;&#xA;paeh.plan_participation_status_value = 'ENL2' and&#xD;&#xA;@payrollPaidDate between paeh.start_date and isnull(paeh.end_date,'01/01/2900') and&#xD;&#xA;paeh.start_date &lt;&gt; isnull(paeh.end_date,'01/01/2900') and --ignore same dated history records&#xD;&#xA;@payrollPaidDate between ped.start_date and dateadd(m,1,isnull(ped.end_date,'01/01/2900')) and&#xD;&#xA;@payrollPaidDate between left(convert(char(8),dateadd(m,1, pe.start_date), 111),8) + '01'  and dateadd(m,1,isnull(pe.end_date,'01/01/2900')) and&#xD;&#xA;paed.plan_id = 14 and&#xD;&#xA;pe.ORG_ID = @org_id&#xD;&#xA;order by paeh.PERSON_ACCOUNT_EAP_HISTORY_ID desc">
      <parameters>
        <parameter ID="@payrollPaidDate" sfwDataType="DateTime" />
        <parameter ID="@org_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadGHDVHistoryWithOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select pagh.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_ghdv pag(nolock) on pag.person_account_id = pa.person_account_id&#xD;&#xA;inner join sgt_person_account_ghdv_history pagh(nolock) on pagh.person_account_ghdv_id = pag.person_account_ghdv_id&#xD;&#xA;where paed.election_value = 'ENLD' AND&#xD;&#xA;pagh.plan_participation_status_value = 'ENL2'&#xD;&#xA;AND (pagh.dental_insurance_type_value is null OR pagh.dental_insurance_type_value &lt;&gt; 'RT16')&#xD;&#xA;AND (pagh.health_insurance_type_value is null OR pagh.health_insurance_type_value not in('RT09','RT12'))&#xD;&#xA;AND (pagh.vision_insurance_type_value is null OR pagh.vision_insurance_type_value &lt;&gt; 'RETR')&#xD;&#xA;AND pagh.cobra_type_value is null and&#xD;&#xA;@payrollPaidDate between pagh.start_date and isnull(pagh.end_date,'01/01/2900') and&#xD;&#xA;pagh.start_date &lt;&gt; isnull(pagh.end_date,'01/01/2900') and --ignore same dated history records&#xD;&#xA;@payrollPaidDate between ped.start_date and dateadd(m,1,isnull(ped.end_date,'01/01/2900')) and&#xD;&#xA;@payrollPaidDate between left(convert(char(8),dateadd(m,1, pe.start_date), 111),8) + '01'  and dateadd(m,1,isnull(pe.end_date,'01/01/2900')) and&#xD;&#xA;paed.plan_id in (9,12,16,17,22) and&#xD;&#xA;pe.org_id = @org_id&#xD;&#xA;order by pagh.PERSON_ACCOUNT_GHDV_HISTORY_ID desc">
      <parameters>
        <parameter ID="@payrollPaidDate" sfwDataType="DateTime" />
        <parameter ID="@org_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadLifeHistoryWithOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select palh.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_life_history palh(nolock) on palh.person_account_id = pa.person_account_id&#xD;&#xA;where paed.plan_id = 13 and paed.election_value = 'ENLD' AND&#xD;&#xA;palh.plan_participation_status_value = 'ENL2'  and palh.plan_option_status_value = 'ENLD'&#xD;&#xA;and palh.life_insurance_type_value = 'NREM' and&#xD;&#xA;@payrollPaidDate between palh.effective_start_date and isnull(palh.effective_end_date,'01/01/2900') and&#xD;&#xA;palh.effective_start_date &lt;&gt; isnull(palh.effective_end_date,'01/01/2900') and --ignore same dated history records&#xD;&#xA;@payrollPaidDate between ped.start_date and dateadd(m,1,isnull(ped.end_date,'01/01/2900')) and&#xD;&#xA;@payrollPaidDate between left(convert(char(8),dateadd(m,1, pe.start_date), 111),8) + '01'  and dateadd(m,1,isnull(pe.end_date,'01/01/2900'))&#xD;&#xA;and pe.org_id = @org_id&#xD;&#xA;order by palh.PERSON_ACCOUNT_LIFE_HISTORY_ID desc">
      <parameters>
        <parameter ID="@payrollPaidDate" sfwDataType="DateTime" />
        <parameter ID="@org_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="IsPayPeriodValid" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;    SELECT * FROM SGT_EMPLOYER_PAYROLL_HEADER &#xD;&#xA;   WHERE MONTH(PAYROLL_PAID_DATE) = @PayPeriodMonth AND YEAR(PAYROLL_PAID_DATE) = @PayPeriodYear&#xD;&#xA;   AND ORG_ID=@OrgId AND HEADER_TYPE_VALUE=@HeaderTypeValue &#xD;&#xA;   AND REPORT_TYPE_VALUE=@ReportTypeValue  and status_value !='IGNR' and employer_payroll_header_id &lt;&gt; @employer_payroll_header_id &#xD;&#xA;   AND REPORT_TYPE_VALUE &lt;&gt; 'ADJS'">
      <parameters>
        <parameter ID="@PayPeriodMonth" sfwDataType="string" />
        <parameter ID="@PayPeriodYear" sfwDataType="string" />
        <parameter ID="@OrgId" sfwDataType="int" />
        <parameter ID="@HeaderTypeValue" sfwDataType="string" />
        <parameter ID="@ReportTypeValue" sfwDataType="string" />
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadBenefitTypeSearchDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select CODE_VALUE,DESCRIPTION from SGS_CODE_VALUE  where CODE_ID=1212 order by data3">
      <parameters />
    </query>
    <query ID="IsPayPeriodValidForDefComp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" SELECT * FROM SGT_EMPLOYER_PAYROLL_HEADER &#xD;&#xA;   WHERE PAY_PERIOD_START_DATE = @Payperiodstartdate and PAY_PERIOD_END_DATE = @Payperiodenddate  &#xD;&#xA;   AND ORG_ID=@OrgId AND HEADER_TYPE_VALUE=@HeaderTypeValue &#xD;&#xA;   AND REPORT_TYPE_VALUE=@ReportTypeValue and status_value !='IGNR' and employer_payroll_header_id &lt;&gt; @employer_payroll_header_id">
      <parameters>
        <parameter ID="@Payperiodstartdate" sfwDataType="DateTime" />
        <parameter ID="@Payperiodenddate" sfwDataType="DateTime" />
        <parameter ID="@OrgId" sfwDataType="int" />
        <parameter ID="@HeaderTypeValue" sfwDataType="string" />
        <parameter ID="@ReportTypeValue" sfwDataType="string" />
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRemittancePaymentApplied" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(ALLOCATED_AMOUNT) AS PAYMENT_APPLIED FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION &#xD;&#xA;WHERE EMPLOYER_PAYROLL_HEADER_ID=@EmployerPayrollHeaderID and PAYROLL_ALLOCATION_STATUS_VALUE =@RemittanceAllocationStatus&#xD;&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;">
      <parameters>
        <parameter ID="@EmployerPayrollHeaderID" sfwDataType="int" />
        <parameter ID="@RemittanceAllocationStatus" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadRetirementReportTypes" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select TB1.CODE_VALUE, TB1.DESCRIPTION from&#xD;&#xA;( SELECT 'BONS' as CODE_VALUE,'Bonus / Retro Pay' as DESCRIPTION from SGS_CODE_VALUE &#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;select CODE_VALUE,DESCRIPTION from SGS_CODE_VALUE  where CODE_ID=1206 AND DATA2 = 'Y'&#xD;&#xA;) TB1&#xD;&#xA;ORDER BY CASE WHEN TB1.CODE_VALUE = 'REG' THEN '1'&#xD;&#xA;              WHEN TB1.CODE_VALUE = 'ADJS' THEN '2'&#xD;&#xA;              ELSE TB1.CODE_VALUE END">
      <parameters />
    </query>
    <query ID="LoadRetirementMembersByOrgandPersonId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Declare @FdM as datetime &#xD;&#xA;set @fdm = cast(cast(year(@payroll_paid_date) as varchar(4)) + '/'+ right('00'+ltrim(rtrim(cast(month(@payroll_paid_date) as varchar(2)))) ,2) +'/01' as datetime)&#xD;&#xA;&#xD;&#xA;select distinct per.*,p.*, ped.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_retirement_history parh(nolock) on pa.person_account_id = parh.person_account_id&#xD;&#xA;inner join sgt_plan p(nolock) on p.plan_id = pa.plan_id&#xD;&#xA;inner join sgt_person per(nolock) on per.person_id = pa.person_id&#xD;&#xA;where paed.election_value = 'ENLD' and p.benefit_type_value = 'RETR' and&#xD;&#xA;parh.plan_participation_status_value = 'ENL1' AND &#xD;&#xA;@payroll_paid_date between parh.start_date and isnull(parh.end_date,'01/01/2900') and&#xD;&#xA;parh.start_date &lt;&gt; isnull(parh.end_date,'01/01/2900') and --ignore same dated history records&#xD;&#xA;((@FDM BETWEEN ped.start_date and isnull(ped.end_date,'01/01/2900')) OR (ped.START_DATE BETWEEN @fdm and @payroll_paid_date)) and --or condition added for employees joining mid-month&#xD;&#xA;((@FDM BETWEEN pe.start_date and isnull(pe.end_date,'01/01/2900')) OR (pe.START_DATE BETWEEN @fdm and @payroll_paid_date)) and --or condition added for employees joining mid-month&#xD;&#xA;pe.org_id = @org_id and&#xD;&#xA;per.person_id=@person_id">
      <parameters>
        <parameter ID="@payroll_paid_date" sfwDataType="DateTime" />
        <parameter ID="@org_id" sfwDataType="int" />
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadESSRetirementContributionByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select epd.employer_payroll_header_id iintEmloyerPayrollHeaderID, epd.plan_id iintPlanID, &#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.EE_CONTRIBUTION_REPORTED,0) ELSE 0 END) idecTotalEEContributionReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.EE_CONTRIBUTION_REPORTED,0) ELSE 0 END) * -1 idecTotalNegativeEEContributionReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.ER_CONTRIBUTION_REPORTED,0) ELSE 0 END) idecTotalERContributionReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.ER_CONTRIBUTION_REPORTED,0) ELSE 0 END)  * -1 idecTotalNegativeERContributionReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.RHIC_ER_CONTRIBUTION_REPORTED,0) ELSE 0 END) idecTotalRHICERContributionReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.RHIC_ER_CONTRIBUTION_REPORTED,0) ELSE 0 END)  * -1 idecTotalNegativeRHICERContributionReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.RHIC_EE_CONTRIBUTION_REPORTED,0) ELSE 0 END) idecTotalRHICEEContributionReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.RHIC_EE_CONTRIBUTION_REPORTED,0) ELSE 0 END)  * -1 idecTotalNegativeRHICEEContributionReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.EE_EMPLOYER_PICKUP_REPORTED,0) ELSE 0 END) idecTotalEEEmployerPickupReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.EE_EMPLOYER_PICKUP_REPORTED,0) ELSE 0 END)  * -1 idecTotalNegativeEEEmployerPickupReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.EE_PRE_TAX_REPORTED,0) ELSE 0 END) idecTotalEEPreTaxReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.EE_PRE_TAX_REPORTED,0) ELSE 0 END)  * -1 idecTotalNegativeEEPreTaxReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.EE_CONTRIBUTION_CALCULATED,0) ELSE 0 END) idecTotalEEContributionCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.EE_CONTRIBUTION_CALCULATED,0) ELSE 0 END) * -1 idecTotalNegativeEEContributionCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.ER_CONTRIBUTION_CALCULATED,0) ELSE 0 END) idecTotalERContributionCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.ER_CONTRIBUTION_CALCULATED,0) ELSE 0 END)  * -1 idecTotalNegativeERContributionCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.RHIC_ER_CONTRIBUTION_CALCULATED,0) ELSE 0 END) idecTotalRHICERContributionCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.RHIC_ER_CONTRIBUTION_CALCULATED,0) ELSE 0 END)  * -1 idecTotalNegativeRHICERContributionCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.RHIC_EE_CONTRIBUTION_CALCULATED,0) ELSE 0 END) idecTotalRHICEEContributionCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.RHIC_EE_CONTRIBUTION_CALCULATED,0) ELSE 0 END)  * -1 idecTotalNegativeRHICEEContributionCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.MEMBER_INTEREST_CALCULATED,0) ELSE 0 END) idecTotalMemberInterestCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.MEMBER_INTEREST_CALCULATED,0) ELSE 0 END)  * -1 idecTotalNegativeMemberInterestCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.EMPLOYER_INTEREST_CALCULATED,0) ELSE 0 END) idecTotalEmployerInterestCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.EMPLOYER_INTEREST_CALCULATED,0) ELSE 0 END)  * -1 idecTotalNegativeEmployerInterestCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN  isnull(epd.EMPLOYER_RHIC_INTEREST_CALCULATED,0) ELSE 0 END) idecTotalRHICEmployerInterestCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.EMPLOYER_RHIC_INTEREST_CALCULATED,0) ELSE 0 END)  * -1 idecTotalNegativeRHICEmployerInterestCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.EE_EMPLOYER_PICKUP_CALCULATED,0) ELSE 0 END) idecTotalEEEmployerPickupCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.EE_EMPLOYER_PICKUP_CALCULATED,0) ELSE 0 END)  * -1 idecTotalNegativeEEEmployerPickupCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN isnull(epd.EE_PRE_TAX_CALCULATED,0) ELSE 0 END) idecTotalEEPreTaxCalculatedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') THEN isnull(epd.EE_PRE_TAX_CALCULATED,0) ELSE 0 END)  * -1 idecTotalNegativeEEPreTaxCalculatedByPlan,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.ADEC_CALCULATED,0) ELSE 0 END) IDECTOTALADECCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.ADEC_REPORTED,0) ELSE 0 END) IDECTOTALADECREPORTEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_PRETAX_ADDL_CALCULATED,0) ELSE 0 END) IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_PRETAX_ADDL_REPORTED,0) ELSE 0 END) IDECTOTALEEPRETAXADDLREPORTEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_POST_TAX_ADDL_CALCULATED,0) ELSE 0 END) IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.EE_POST_TAX_ADDL_REPORTED,0) ELSE 0 END) IDECTOTALEEPOSTTAXADDLREPORTEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.ER_PRETAX_MATCH_CALCULATED,0) ELSE 0 END) IDECTOTALERPRETAXMATCHCALCULATEDBYPLAN,&#xD;&#xA;SUM(CASE WHEN EPD.RECORD_TYPE_VALUE NOT IN ('-ADJ','NBON') THEN ISNULL(EPD.ER_PRETAX_MATCH_REPORTED,0) ELSE 0 END) IDECTOTALERPRETAXMATCHREPORTEDBYPLAN&#xD;&#xA;&#xD;&#xA;from sgt_employer_payroll_detail epd, sgt_employer_payroll_header eph &#xD;&#xA;where epd.employer_payroll_header_id=eph.employer_payroll_header_id&#xD;&#xA;and eph.employer_payroll_header_id= @employer_payroll_header_id&#xD;&#xA;and epd.record_type_value in ('+ADJ','REG','BONS','NBON','-ADJ') and epd.status_value not in('IGNR')&#xD;&#xA;group by epd.employer_payroll_header_id, epd.plan_id">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadActiveDeffCompMembersByOrgAndPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" select distinct pa.*,per.*,p.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_deferred_comp_history padch(nolock) on pa.person_account_id = padch.person_account_id&#xD;&#xA;inner join sgt_plan p(nolock) on p.plan_id = pa.plan_id&#xD;&#xA;inner join sgt_person per(nolock) on per.person_id = pa.person_id&#xD;&#xA;where paed.election_value = 'ENLD' and p.benefit_type_value = 'DEFF' and&#xD;&#xA;padch.plan_participation_status_value = 'ENL3' AND &#xD;&#xA;(&#xD;&#xA; (@pay_period_start_date between padch.start_date and isnull(padch.end_date,'01/01/2900')) or&#xD;&#xA; (@pay_period_end_date between padch.start_date and isnull(padch.end_date,'01/01/2900'))&#xD;&#xA;) and&#xD;&#xA;padch.start_date &lt;&gt; isnull(padch.end_date,'01/01/2900') and  --ignore same dated history records&#xD;&#xA;(&#xD;&#xA; (@pay_period_start_date between ped.start_date and isnull(ped.end_date,'01/01/2900')) or&#xD;&#xA; (@pay_period_end_date between ped.start_date and isnull(ped.end_date,'01/01/2900')) &#xD;&#xA;) and&#xD;&#xA;(&#xD;&#xA; (@pay_period_start_date between pe.start_date and isnull(pe.end_date,'01/01/2900')) or&#xD;&#xA; (@pay_period_end_date between pe.start_date and isnull(pe.end_date,'01/01/2900'))&#xD;&#xA;) and&#xD;&#xA;pe.org_id = @org_id&#xD;&#xA;and per.person_id=@person_id">
      <parameters>
        <parameter ID="@pay_period_start_date" sfwDataType="DateTime" />
        <parameter ID="@pay_period_end_date" sfwDataType="DateTime" />
        <parameter ID="@org_id" sfwDataType="int" />
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadESSInsurancePremiumByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select epd.employer_payroll_header_id iintEmloyerPayrollHeaderID, epd.plan_id iintPlanID, &#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE &lt;&gt; '-ADJ' THEN isnull(epd.PREMIUM_AMOUNT,0)ELSE 0 END) idecTotalPremiumAmountByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE = '-ADJ' THEN isnull(epd.PREMIUM_AMOUNT,0)ELSE 0 END) * -1 idecTotalNegativePremiumAmountByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE &lt;&gt; '-ADJ' THEN isnull(epd.GROUP_HEALTH_FEE_AMOUNT,0)ELSE 0 END) idecTotalFeeAmountByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE = '-ADJ' THEN isnull(epd.GROUP_HEALTH_FEE_AMOUNT,0)ELSE 0 END) * -1 idecTotalNegativeFeeAmountByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE &lt;&gt; '-ADJ' THEN isnull(epd.OTHR_RHIC_AMOUNT,0)ELSE 0 END) idecOtherRHICAmount,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE = '-ADJ' THEN isnull(epd.OTHR_RHIC_AMOUNT,0)ELSE 0 END) * -1 idecOtherNegativeRHICAmount,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE &lt;&gt; '-ADJ' THEN isnull(epd.JS_RHIC_AMOUNT,0)ELSE 0 END) idecJSRHICAmount,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE = '-ADJ' THEN isnull(epd.JS_RHIC_AMOUNT,0)ELSE 0 END) * -1 idecJSNegativeRHICAmount&#xD;&#xA;from sgt_employer_payroll_detail epd, sgt_employer_payroll_header eph &#xD;&#xA;where epd.employer_payroll_header_id=eph.employer_payroll_header_id&#xD;&#xA;and eph.employer_payroll_header_id= @employer_payroll_header_id&#xD;&#xA;and epd.record_type_value in ('+ADJ','REG', '-ADJ') and epd.status_value not in('IGNR')&#xD;&#xA;group by epd.employer_payroll_header_id, epd.plan_id&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT&#xD;&#xA;EMPHDR.EMPLOYER_PAYROLL_HEADER_ID AS IINTEMLOYERPAYROLLHEADERID, 12 AS IINTPLANID, &#xD;&#xA;ISNULL(EMPHDR.TOTAL_PREMIUM_AMOUNT_REPORTED,0) AS IDECTOTALPREMIUMAMOUNTBYPLAN,&#xD;&#xA;0 AS idecTotalNegativePremiumAmountByPlan,&#xD;&#xA;ISNULL(EMPHDR.TOTAL_CONTRIBUTION_CALCULATED,0) AS IDECTOTALFEEAMOUNTBYPLAN,&#xD;&#xA;0 AS idecTotalNegativeFeeAmountByPlan,&#xD;&#xA;0 AS IDECOTHERRHICAMOUNT,&#xD;&#xA;0 AS idecOtherNegativeRHICAmount,&#xD;&#xA;0 AS IDECJSRHICAMOUNT,&#xD;&#xA;0 AS idecJSNegativeRHICAmount&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER EMPHDR WITH(NOLOCK)&#xD;&#xA;WHERE EMPHDR.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA;AND EMPHDR.HEADER_TYPE_VALUE IN ('INSR')&#xD;&#xA;AND EMPHDR.REPORT_TYPE_VALUE = 'PEN'&#xD;&#xA;AND EMPHDR.EMPLOYER_PAYROLL_HEADER_ID = @employer_payroll_header_id">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadESSDeferredCompContributionByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select epd.employer_payroll_header_id iintEmloyerPayrollHeaderID, epd.plan_id iintPlanID, &#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE &lt;&gt; '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT1,0)  ELSE 0 END) idecTotalContributionAmount1ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE = '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT1,0)  ELSE 0 END) * -1 idecTotalNegativeContributionAmount1ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE &lt;&gt; '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT2,0)  ELSE 0 END) idecTotalContributionAmount2ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE = '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT2,0)  ELSE 0 END) * -1 idecTotalNegativeContributionAmount2ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE &lt;&gt; '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT3,0) ELSE 0 END) idecTotalContributionAmount3ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE = '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT3,0) ELSE 0 END)  * -1 idecTotalNegativeContributionAmount3ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE &lt;&gt; '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT4,0) ELSE 0 END) idecTotalContributionAmount4ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE = '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT4,0) ELSE 0 END)  * -1 idecTotalNegativeContributionAmount4ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE &lt;&gt; '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT5,0) ELSE 0 END) idecTotalContributionAmount5ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE = '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT5,0) ELSE 0 END)  * -1 idecTotalNegativeContributionAmount5ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE &lt;&gt; '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT6,0) ELSE 0 END) idecTotalContributionAmount6ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE = '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT6,0) ELSE 0 END)  * -1 idecTotalNegativeContributionAmount6ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE &lt;&gt; '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT7,0) ELSE 0 END) idecTotalContributionAmount7ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE = '-ADJ' THEN isnull(epd.CONTRIBUTION_AMOUNT7,0) ELSE 0 END)  * -1 idecTotalNegativeContributionAmount7ReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE &lt;&gt; '-ADJ' THEN isnull(epd.ER_PRETAX_MATCH_REPORTED,0) ELSE 0 END)  idecTotalERPreTaxMatchReportedByPlan,&#xD;&#xA;sum(CASE WHEN EPD.RECORD_TYPE_VALUE = '-ADJ' THEN isnull(epd.ER_PRETAX_MATCH_REPORTED,0) ELSE 0 END)  * -1 idecTotalNegativeERPreTaxMatchReportedByPlan&#xD;&#xA;from sgt_employer_payroll_detail epd, sgt_employer_payroll_header eph &#xD;&#xA;where epd.employer_payroll_header_id=eph.employer_payroll_header_id&#xD;&#xA;and eph.employer_payroll_header_id= @employer_payroll_header_id&#xD;&#xA;and epd.record_type_value in ('+ADJ', 'REG', '-ADJ') and epd.status_value not in('IGNR')&#xD;&#xA;group by epd.employer_payroll_header_id, epd.plan_id">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="ESSLOOKUPSubqueryEMP" sfwQueryType="SubSelectQuery" sfwSql="SELECT SUBEMP.EMPLOYER_PAYROLL_HEADER_ID,1 AS SUBEMPSELECT FROM SGT_EMPLOYER_PAYROLL_HEADER SUBEMP &#xD;&#xA;WHERE&#xD;&#xA;((HEADER_TYPE_VALUE='RETR' AND STATUS_VALUE='PSTD') OR (HEADER_TYPE_VALUE='INSR' AND STATUS_VALUE='PSTD') OR (HEADER_TYPE_VALUE='DEFF' AND STATUS_VALUE='VALD') OR (HEADER_TYPE_VALUE='PRCH' AND STATUS_VALUE='VALD'))&#xD;&#xA;AND SUBEMP.EMPLOYER_PAYROLL_HEADER_ID=TEMP.EMPLOYER_PAYROLL_HEADER_ID">
      <parameters />
    </query>
    <query ID="GetErrorOnESS" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select MESSA.MESSAGE_ID,MESSA.DISPLAY_MESSAGE,MESSA.DISPLAY_MESSAGE as long_description,&#xD;&#xA; 'Detail ' +MESSADESC.DESCRIPTION as severity_description,COUNT(HEADER.EMPLOYER_PAYROLL_HEADER_ID) as COUNT,HEADER.EMPLOYER_PAYROLL_HEADER_ID, MESSA.EMPLOYER_INSTRUCTIONS as istrEmployerInstructions&#xD;&#xA;from sgt_Employer_Payroll_Detail_Error DTLERROR WITH(NOLOCK)&#xD;&#xA;Inner join Sgt_employer_payroll_detail DTL WITH(NOLOCK)&#xD;&#xA;ON DTLERROR.EMPLOYER_PAYROLL_DETAIL_ID=DTL.EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;Inner join Sgt_employer_payroll_header HEADER WITH(NOLOCK)&#xD;&#xA;ON HEADER.EMPLOYER_PAYROLL_HEADER_ID=DTL.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;INNER JOIN SGS_MESSAGES MESSA WITH(NOLOCK)&#xD;&#xA;ON MESSA.MESSAGE_ID=DTLERROR.MESSAGE_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE MESSADESC WITH(NOLOCK)&#xD;&#xA;ON MESSADESC.CODE_ID=MESSA.SEVERITY_ID AND MESSADESC.CODE_VALUE=MESSA.SEVERITY_VALUE&#xD;&#xA;where HEADER.EMPLOYER_PAYROLL_HEADER_ID=@EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;and (MESSA.severity_value = 'E' or (MESSA.severity_value = 'W' &#xD;&#xA;--and isnull(DTL.allow_change_warnings,'N') = 'Y'&#xD;&#xA;))&#xD;&#xA;GROUP BY HEADER.EMPLOYER_PAYROLL_HEADER_ID,MESSA.MESSAGE_ID,MESSA.DISPLAY_MESSAGE,MESSADESC.[DESCRIPTION], MESSA.EMPLOYER_INSTRUCTIONS&#xD;&#xA;&#xD;&#xA;UNION ALL &#xD;&#xA;&#xD;&#xA;Select MESSA.MESSAGE_ID,MESSA.DISPLAY_MESSAGE,MESSA.DISPLAY_MESSAGE as long_description,&#xD;&#xA;'Report '+ MESSADESC.DESCRIPTION as severity_description,1 as COUNT,0 as EMPLOYER_PAYROLL_HEADER_ID, MESSA.EMPLOYER_INSTRUCTIONS as istrEmployerInstructions&#xD;&#xA;from sgt_Employer_Payroll_HEADER_ERROR HEADERROR WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGS_MESSAGES MESSA WITH(NOLOCK)&#xD;&#xA;ON MESSA.MESSAGE_ID=HEADERROR.MESSAGE_ID&#xD;&#xA;&#xD;&#xA;INNER JOIN SGS_CODE_VALUE MESSADESC WITH(NOLOCK)&#xD;&#xA;ON MESSADESC.CODE_ID=MESSA.SEVERITY_ID AND MESSADESC.CODE_VALUE=MESSA.SEVERITY_VALUE&#xD;&#xA;where HEADERROR.EMPLOYER_PAYROLL_HEADER_ID=@EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;and (MESSA.severity_value = 'E' or MESSA.severity_value = 'W' )&#xD;&#xA;GROUP BY HEADERROR.EMPLOYER_PAYROLL_HEADER_ID,MESSA.MESSAGE_ID,MESSA.DISPLAY_MESSAGE,MESSADESC.[DESCRIPTION], MESSA.EMPLOYER_INSTRUCTIONS">
      <parameters>
        <parameter ID="@EMPLOYER_PAYROLL_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadEmployerPayrollDetailWithPersonAccountAndOtherDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_EMPLOYER_PAYROLL_DETAIL DTL&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT ACC &#xD;&#xA;ON DTL.PERSON_ID=ACC.PERSON_ID AND DTL.PLAN_ID=ACC.PLAN_ID &#xD;&#xA;INNER JOIN SGT_Person_Account_Retirement RETR&#xD;&#xA;ON RETR.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID &#xD;&#xA;WHERE DTL.EMPLOYER_PAYROLL_HEADER_ID=@EMPLOYER_HEADER_ID">
      <parameters>
        <parameter ID="@EMPLOYER_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadInsOrgPlansByOrgForReload" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_ORG_PLAN OP WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN P WITH(NOLOCK) ON P.PLAN_ID=OP.PLAN_ID AND P.BENEFIT_TYPE_VALUE='INSR'&#xD;&#xA;INNER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON O.ORG_ID = OP.ORG_ID&#xD;&#xA;WHERE @PAYROLLPAIDDATE BETWEEN OP.PARTICIPATION_START_DATE AND ISNULL(OP.PARTICIPATION_END_DATE,'01/01/2900')&#xD;&#xA;AND OP.ORG_ID = @ORGID">
      <parameters>
        <parameter ID="@PAYROLLPAIDDATE" sfwDataType="DateTime" />
        <parameter ID="@ORGID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="IsDetailEntryExistsByPersonPlanForHeaderMedicare" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgt_employer_payroll_detail &#xD;&#xA;where employer_payroll_header_id = @headerID and person_account_id = @personAccountID &#xD;&#xA;and plan_id = @planID and status_value &lt;&gt; 'IGNR'">
      <parameters>
        <parameter ID="@headerID" sfwDataType="int" />
        <parameter ID="@personAccountID" sfwDataType="int" />
        <parameter ID="@planID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Error1145ExistsQuery" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from SGT_EMPLOYER_PAYROLL_DETAIL_ERROR EPDE with (nolock) &#xD;&#xA;&#x9;   inner JOIN  SGT_EMPLOYER_PAYROLL_DETAIL EPD with (nolock)  on EPD.EMPLOYER_PAYROLL_DETAIL_ID = EPDE.EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;&#x9;   where EPD.EMPLOYER_PAYROLL_HEADER_ID = @EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;&#x9;   and EPDE.MESSAGE_ID =1145">
      <parameters>
        <parameter ID="@EMPLOYER_PAYROLL_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadEmployerPayrollHeaderForRemittanceAllocationByOrgId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" SELECT DISTINCT EMPHDR.* FROM SGT_EMPLOYER_PAYROLL_HEADER EMPHDR WITH(NOLOCK)&#xD;&#xA;LEFT JOIN SGT_REMITTANCE REM WITH(NOLOCK) ON REM.ORG_ID = EMPHDR.ORG_ID&#xD;&#xA;LEFT JOIN SGT_DEPOSIT DEP WITH(NOLOCK) ON REM.DEPOSIT_ID = DEP.DEPOSIT_ID&#xD;&#xA;WHERE EMPHDR.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA;AND BALANCING_STATUS_VALUE = 'NOR'&#xD;&#xA;AND DEP.STATUS_VALUE IN ('APLD','VALD')&#xD;&#xA;AND REM.REMITTANCE_ID IS NOT NULL&#xD;&#xA;AND EMPHDR.HEADER_TYPE_VALUE NOT IN ('RETR','INSR') --PROD PIR 6062&#xD;&#xA;AND EMPHDR.ORG_ID =@ORG_ID  --warranty Pir-6501">
      <parameters>
        <parameter ID="@ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadEmpHeaderForARBatchAllocation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF ISNULL(@HEADERTYPE, '') = ''&#xD;&#xA;BEGIN&#xD;&#xA;SELECT *&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER WITH(NOLOCK)&#xD;&#xA;WHERE STATUS_VALUE = 'PSTD'&#xD;&#xA;AND HEADER_TYPE_VALUE IN ('INSR', 'RETR')&#xD;&#xA;AND BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xD;&#xA;and ORG_ID =  @ORG_ID  --warranty Pir-6501&#xD;&#xA;END&#xD;&#xA;ELSE &#xD;&#xA;IF @HEADERTYPE IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;SELECT *&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER WITH(NOLOCK)&#xD;&#xA;WHERE STATUS_VALUE = 'PSTD'&#xD;&#xA;AND HEADER_TYPE_VALUE = @HEADERTYPE&#xD;&#xA;AND BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xD;&#xA;and ORG_ID =  @ORG_ID  --warranty Pir-6501&#xD;&#xA;END">
      <parameters>
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@HEADERTYPE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="UpdateRetrEmpHeaderBalnFromARBatchByOrgId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMPLOYER_PAYROLL_HEADER_ID,SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) AS DIFFAMT&#xA;INTO #TEMP&#xA;FROM ( &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'CNTR' AS REMITTANCE_TYPE,&#xA; SUM(ISNULL(EE_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(EE_PRE_TAX_REPORTED, 0.00) +&#xA; ISNULL(EE_EMPLOYER_PICKUP_REPORTED, 0.00) +&#xA; ISNULL(ER_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(MEMBER_INTEREST_CALCULATED, 0.00) +&#xA; ISNULL(EMPLOYER_INTEREST_CALCULATED, 0.00)&#xA; + ISNULL(EE_PRETAX_ADDL_REPORTED, 0.00) &#xA; + ISNULL(ER_PRETAX_MATCH_REPORTED, 0.00) &#xA; + ISNULL(EE_POST_TAX_ADDL_REPORTED, 0.00)) AS REPORTEDAMT,&#xA; 0.00 AS ALLOCATEDAMT&#xA; -- SELECT D.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; AND A.ORG_ID =@ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'RHCO' AS REMITTANCE_TYPE,&#xA; SUM(ISNULL(RHIC_ER_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(RHIC_EE_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(EMPLOYER_RHIC_INTEREST_CALCULATED, 0.00)) AS REPORTEDAMT, &#xA; 0.00 AS ALLOCATEDAMT&#xA; -- SELECT D.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; AND A.ORG_ID =@ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'ADEC' AS REMITTANCE_TYPE,&#xA; SUM(ISNULL(ADEC_REPORTED, 0.00)) AS REPORTEDAMT, &#xA; 0.00 AS ALLOCATEDAMT&#xA; -- SELECT D.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; AND A.ORG_ID =@ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA; &#xA; UNION ALL&#xA; &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE AS REMITTANCE_TYPE, 0.00,&#xA; SUM(ALLOCATED_AMOUNT)&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; --AND A.REPORT_TYPE_VALUE &lt;&gt; 'PEN'&#xA; AND A.ORG_ID =@ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA;&#xA; UNION ALL&#xA; &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, 1 AS PLAN_ID, 'CNTR' AS REMITTANCE_TYPE, SUM(ISNULL(A.TOTAL_CONTRIBUTION_REPORTED,0)),&#xA; 0.00&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; AND A.REPORT_TYPE_VALUE = 'PEN'&#xA; AND A.ORG_ID =@ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE--, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA; --UNION ALL&#xA; &#xA; --SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID, &#xA; --CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','UCRP') THEN 'CNTR'&#xA; -- WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('ORRP', 'URRP') THEN 'RHCO' END AS REMITTANCE_TYPE, 0.00,&#xA; --SUM( CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','ORRP') THEN DIFFERENCE_AMOUNT ELSE 0.00 END) AS ALLOCATED_AMOUNT&#xA; --FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; --WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; --AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; --AND DIFFERENCE_TYPE_VALUE IS NOT NULL&#xA; --AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; --AND A.STATUS_VALUE = 'PSTD'&#xA; --GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,&#xA; --CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','UCRP') THEN 'CNTR'&#xA; -- WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('ORRP', 'URRP') THEN 'RHCO' END&#xA;) MYQU&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID&#xA;HAVING SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) = 0&#xA;&#xA;UPDATE HED SET HED.BALANCING_STATUS_VALUE = 'BALN',&#xA;HED.MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),HED.MODIFIED_DATE = GETDATE(),HED.UPDATE_SEQ = HED.UPDATE_SEQ + 1&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HED&#xA;INNER JOIN #TEMP TMP ON TMP.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xA;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateInsrEmpHeaderBalnFromARBatchByOrgId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMPLOYER_PAYROLL_HEADER_ID,SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) AS DIFFAMT&#xA;INTO #TEMP&#xA;FROM ( &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID,&#xA; SUM(ISNULL(PREMIUM_AMOUNT, 0.00)) AS REPORTEDAMT,0.00 AS ALLOCATEDAMT&#xA; -- SELECT B.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD' &#xA; AND A.ORG_ID = @ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID, 0.00, SUM(ALLOCATED_AMOUNT)&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xA; AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD' &#xA; --AND A.REPORT_TYPE_VALUE &lt;&gt; 'PEN'&#xA; AND A.ORG_ID = @ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA; &#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, 12 AS PLAN_ID, SUM(ISNULL(A.TOTAL_PREMIUM_AMOUNT_REPORTED,0)), 0.00&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA;-- INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA;-- INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD' &#xA; AND A.REPORT_TYPE_VALUE = 'PEN'&#xA; AND A.ORG_ID = @ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE--, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA;) MYQU&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID&#xA;HAVING SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) = 0&#xA;&#xA;UPDATE HED SET HED.BALANCING_STATUS_VALUE = 'BALN',&#xA;HED.MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),HED.MODIFIED_DATE = GETDATE(),HED.UPDATE_SEQ = HED.UPDATE_SEQ + 1&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HED&#xA;INNER JOIN #TEMP TMP ON TMP.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xA;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateRetrEmpHeaderUnBalnFromARBatchByOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMPLOYER_PAYROLL_HEADER_ID,SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) AS DIFFAMT&#xA;INTO #TEMP&#xA;FROM ( &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'CNTR' AS REMITTANCE_TYPE,&#xA; SUM(ISNULL(EE_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(EE_PRE_TAX_REPORTED, 0.00) +&#xA; ISNULL(EE_EMPLOYER_PICKUP_REPORTED, 0.00) +&#xA; ISNULL(ER_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(MEMBER_INTEREST_CALCULATED, 0.00) +&#xA; ISNULL(EMPLOYER_INTEREST_CALCULATED, 0.00)&#xA; + ISNULL(EE_PRETAX_ADDL_REPORTED, 0.00) &#xA; + ISNULL(ER_PRETAX_MATCH_REPORTED, 0.00) &#xA; + ISNULL(EE_POST_TAX_ADDL_REPORTED, 0.00)) AS REPORTEDAMT,&#xA; 0.00 AS ALLOCATEDAMT&#xA; -- SELECT D.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; AND A.ORG_ID = @ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'RHCO' AS REMITTANCE_TYPE,&#xA; SUM(ISNULL(RHIC_ER_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(RHIC_EE_CONTRIBUTION_REPORTED, 0.00) +&#xA; ISNULL(EMPLOYER_RHIC_INTEREST_CALCULATED, 0.00)) AS REPORTEDAMT, &#xA; 0.00 AS ALLOCATEDAMT&#xA; -- SELECT D.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; AND A.ORG_ID = @ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'ADECs' AS REMITTANCE_TYPE,&#xA; SUM(ISNULL(ADEC_REPORTED, 0.00)) AS REPORTEDAMT, &#xA; 0.00 AS ALLOCATEDAMT&#xA; -- SELECT D.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; AND A.ORG_ID = @ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA; &#xA; UNION ALL&#xA; &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE AS REMITTANCE_TYPE, 0.00,&#xA; SUM(ALLOCATED_AMOUNT)&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; --AND A.REPORT_TYPE_VALUE &lt;&gt; 'PEN'&#xA; AND A.ORG_ID = @ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA;&#xA; UNION ALL&#xA; &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, 1 AS PLAN_ID,'CNTR' AS REMITTANCE_TYPE, SUM(ISNULL(A.TOTAL_CONTRIBUTION_REPORTED,0)),&#xA; 0.00&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD'&#xA; AND A.REPORT_TYPE_VALUE = 'PEN'&#xA; AND A.ORG_ID = @ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE--, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA; --UNION ALL&#xA; &#xA; --SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID, &#xA; --CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','UCRP') THEN 'CNTR'&#xA; -- WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('ORRP', 'URRP') THEN 'RHCO' END AS REMITTANCE_TYPE, 0.00,&#xA; --SUM( CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','ORRP') THEN DIFFERENCE_AMOUNT ELSE 0.00 END) AS ALLOCATED_AMOUNT&#xA; --FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; --WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; --AND A.HEADER_TYPE_VALUE = 'RETR'&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; --AND DIFFERENCE_TYPE_VALUE IS NOT NULL&#xA; --AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; --AND A.STATUS_VALUE = 'PSTD'&#xA; --GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,&#xA; --CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','UCRP') THEN 'CNTR'&#xA; -- WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('ORRP', 'URRP') THEN 'RHCO' END&#xA;) MYQU&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID&#xA;HAVING SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) &lt; SUM(REPORTEDAMT)&#xA; AND SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) &gt; 0&#xA;&#xA;UPDATE HED SET HED.BALANCING_STATUS_VALUE = 'UNBL',&#xA;HED.MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),HED.MODIFIED_DATE = GETDATE(),HED.UPDATE_SEQ = HED.UPDATE_SEQ + 1&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HED&#xA;INNER JOIN #TEMP TMP ON TMP.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xA;WHERE HED.BALANCING_STATUS_VALUE = 'NOR'&#xA;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateInsrEmpHeaderUnBalnFromARBatchByOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMPLOYER_PAYROLL_HEADER_ID,SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) AS DIFFAMT&#xA;INTO #TEMP&#xA;FROM ( &#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID,&#xA; SUM(ISNULL(PREMIUM_AMOUNT, 0.00)) AS REPORTEDAMT,0.00 AS ALLOCATEDAMT&#xA; -- SELECT B.*&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD' &#xA; AND A.ORG_ID=@ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xA;&#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID, 0.00, SUM(ALLOCATED_AMOUNT)&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xA; AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD' &#xA; --AND A.REPORT_TYPE_VALUE &lt;&gt; 'PEN'&#xA; AND A.ORG_ID=@ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA; &#xA; UNION ALL&#xA;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, 12 AS PLAN_ID, SUM(ISNULL(A.TOTAL_PREMIUM_AMOUNT_REPORTED,0)), 0.00&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xA; AND A.BALANCING_STATUS_VALUE &lt;&gt; 'BALN'&#xA; AND A.STATUS_VALUE = 'PSTD' &#xA; AND A.REPORT_TYPE_VALUE = 'PEN'&#xA; AND A.ORG_ID=@ORG_ID&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE--, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xA;) MYQU&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID&#xA;HAVING SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) &lt; SUM(REPORTEDAMT)&#xA;AND SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) &gt; 0&#xA;&#xA;UPDATE HED SET HED.BALANCING_STATUS_VALUE = 'UNBL',&#xA;HED.MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),HED.MODIFIED_DATE = GETDATE(),HED.UPDATE_SEQ = HED.UPDATE_SEQ + 1&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HED&#xA;INNER JOIN #TEMP TMP ON TMP.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xA;WHERE HED.BALANCING_STATUS_VALUE = 'NOR'&#xA;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateRetrInsrEmpHeaderNORFromARBatchByOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE HED SET HED.BALANCING_STATUS_VALUE = 'NOR',MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),MODIFIED_DATE = GETDATE(),HED.UPDATE_SEQ = HED.UPDATE_SEQ + 1&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_HEADER HED&#xD;&#xA;LEFT JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION ALLOC&#xD;&#xA; ON ALLOC.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HED.HEADER_TYPE_VALUE IN ('RETR','INSR')&#xD;&#xA;AND HED.BALANCING_STATUS_VALUE = 'UNBL'&#xD;&#xA;AND HED.STATUS_VALUE = 'PSTD'&#xD;&#xA;AND ALLOC.EMPLOYER_PAYROLL_HEADER_ID IS NULL&#xD;&#xA;AND HED.ORG_ID = @ORG_ID">
      <parameters>
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadBalancingStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(EMPLOYER_PAYROLL_HEADER_ID) AS [COUNT] FROM SGT_EMPLOYER_PAYROLL_HEADER WITH(NOLOCK)&#xD;&#xA;WHERE ORG_ID = @ORG_ID&#xD;&#xA;AND ((BALANCING_STATUS_VALUE IN ('NOR','UNBL')) OR (STATUS_VALUE = 'REVW' AND HEADER_TYPE_VALUE = 'DEFF'))">
      <parameters>
        <parameter ID="@ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="RequiringActionLookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; DISTINCT * &#xA;FROM&#xA;&#x9; ( SELECT&#xA;&#x9; EPH.*,&#xA;&#x9;SO.ORG_CODE,&#xA;&#x9;SO.ORG_NAME,&#xA;&#x9;0.0 AS InsuranceAmount ,&#xA;&#x9;0.0 AS NegInsuranceAdjAmount ,&#xA;&#x9;CASE WHEN HEADER_TYPE_VALUE = 'DEFF'  THEN EPH.PAY_PERIOD_START_DATE ELSE EPH.PAYROLL_PAID_DATE END AS SORT_ORDER_DATE&#xA;&#x9;,CASE WHEN (HEADER_TYPE_VALUE = 'INSR' OR HEADER_TYPE_VALUE = 'RETR') AND EPH.STATUS_VALUE = 'PSTD' AND (BALANCING_STATUS_VALUE = 'NOR' OR BALANCING_STATUS_VALUE = 'UNBL') THEN 'Payment Required'&#xA;&#x9;WHEN (HEADER_TYPE_VALUE = 'PRCH' OR HEADER_TYPE_VALUE = 'DEFF') AND EPH.STATUS_VALUE = 'VALD' AND (BALANCING_STATUS_VALUE = 'NOR' OR BALANCING_STATUS_VALUE = 'UNBL') then 'Payment Required'&#xA;&#x9;ELSE '' END AS Payment_Status&#xA;FROM&#xA;&#x9; SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK)   &#xA;&#x9;INNER &#xA;&#x9; JOIN sgt_organization SO WITH(NOLOCK) &#xA;&#x9; ON EPH.ORG_ID = SO.ORG_ID &#xA;WHERE&#xA;&#x9; ((EPH.BALANCING_STATUS_VALUE IN ('NOR',&#xA;&#x9;'UNBL')) OR (EPH.STATUS_VALUE = 'REVW' AND&#xA;&#x9; EPH.HEADER_TYPE_VALUE = 'DEFF'))) TEMP &#xA;ORDER BY  TEMP.EMPLOYER_PAYROLL_HEADER_ID DESC">
      <parameters />
    </query>
    <query ID="LoadValidAndRPSTEmployerPayrollHeader" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMP_HEADER.* FROM SGT_EMPLOYER_PAYROLL_HEADER EMP_HEADER&#xD;&#xA;WHERE (STATUS_VALUE = 'VALD' &#xD;&#xA;AND EXISTS (SELECT 1 FROM SGT_ORGANIZATION ORG&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGS_CODE_VALUE CV ON CV.DATA1 = ORG.ORG_CODE AND CV.CODE_ID = 7022&#xD;&#xA;&#x9;&#x9;&#x9;WHERE EMP_HEADER.ORG_ID = ORG_ID ))&#xD;&#xA;OR&#xD;&#xA;(STATUS_VALUE = 'RPST')">
      <parameters />
    </query>
    <query ID="LoadPendingDebitACHRequest" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DEB_REQ.* FROM SGT_WSS_DEBIT_ACH_REQUEST DEB_REQ&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_HEADER DET ON DEB_REQ.EMPLOYER_PAYROLL_HEADER_ID = DET.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE DET.HEADER_TYPE_VALUE = @HEADERTYPE&#xD;&#xA;AND DEB_REQ.STATUS_VALUE = 'PEND'">
      <parameters>
        <parameter ID="@HEADERTYPE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="ErrorSummaryByIDLOB" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TEMP.MESSAGE_ID, DISPLAY_MESSAGE as istrDisplayMessage, SEVERITY as istrSeverity, COUNT(*) AS iintMessageCount, TEMP.EMPLOYER_INSTRUCTIONS as istrEmployerInstructions&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT A.EMPLOYER_PAYROLL_DETAIL_ID,A.MESSAGE_ID, DISPLAY_MESSAGE, E.DESCRIPTION AS SEVERITY, COUNT(*) AS MESSAGE_COUNT, D.EMPLOYER_INSTRUCTIONS&#xD;&#xA;  FROM SGT_EMPLOYER_PAYROLL_DETAIL_ERROR A WITH(NOLOCK) ,&#xD;&#xA;       SGT_EMPLOYER_PAYROLL_DETAIL B WITH(NOLOCK) ,&#xD;&#xA;       SGT_EMPLOYER_PAYROLL_HEADER C WITH(NOLOCK) ,&#xD;&#xA;       SGS_MESSAGES D WITH(NOLOCK) ,&#xD;&#xA;       SGS_CODE_VALUE E WITH(NOLOCK) &#xD;&#xA; WHERE A.EMPLOYER_PAYROLL_DETAIL_ID = B.EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;   AND B.EMPLOYER_PAYROLL_HEADER_ID     = C.EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA;   AND C.EMPLOYER_PAYROLL_HEADER_ID      = @EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;   AND A.MESSAGE_ID              = D.MESSAGE_ID&#xD;&#xA;   AND D.SEVERITY_ID             = E.CODE_ID&#xD;&#xA;   AND D.SEVERITY_VALUE          = E.CODE_VALUE&#xD;&#xA;   AND B.STATUS_VALUE NOT IN ('PSTD','IGNR','VALD')&#xD;&#xA;   AND 1=(CASE WHEN E.DESCRIPTION = 'Warning' AND ISNULL(B.SUPPRESS_WARNINGS_FLAG,'N') = 'Y' THEN 0 ELSE 1 END)&#xD;&#xA; GROUP BY &#xD;&#xA;       A.MESSAGE_ID, DISPLAY_MESSAGE, E.DESCRIPTION&#xD;&#xA;&#x9;   ,A.EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;&#x9;   ,D.EMPLOYER_INSTRUCTIONS&#xD;&#xA;&#x9;   ) TEMP&#xD;&#xA;&#x9;    GROUP BY &#xD;&#xA;       TEMP.MESSAGE_ID, TEMP.DISPLAY_MESSAGE, SEVERITY, TEMP.EMPLOYER_INSTRUCTIONS">
      <parameters>
        <parameter ID="@EMPLOYER_PAYROLL_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadTotalContributionDeffComp" sfwQueryType="ScalarQuery" sfwSql="SELECT &#xD;&#xA;&#x9;SUM(CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE != '-ADJ' THEN ISNULL(CONTRIBUTION_AMOUNT1_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE = '-ADJ' THEN ISNULL(-CONTRIBUTION_AMOUNT1_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;END) + &#xD;&#xA;&#x9;SUM(CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE != '-ADJ' THEN ISNULL(CONTRIBUTION_AMOUNT2_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE = '-ADJ' THEN ISNULL(-CONTRIBUTION_AMOUNT2_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;END) + &#xD;&#xA;&#x9;SUM(CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE != '-ADJ' THEN ISNULL(CONTRIBUTION_AMOUNT3_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE = '-ADJ' THEN ISNULL(-CONTRIBUTION_AMOUNT3_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;END) + &#xD;&#xA;&#x9;SUM(CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE != '-ADJ' THEN ISNULL(CONTRIBUTION_AMOUNT4_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE = '-ADJ' THEN ISNULL(-CONTRIBUTION_AMOUNT4_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;END) + &#xD;&#xA;&#x9;SUM(&#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE != '-ADJ' THEN ISNULL(CONTRIBUTION_AMOUNT5_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE = '-ADJ' THEN ISNULL(-CONTRIBUTION_AMOUNT5_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;END&#xD;&#xA;&#x9;&#x9;) + &#xD;&#xA;&#x9;SUM(CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE != '-ADJ' THEN ISNULL(CONTRIBUTION_AMOUNT6_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE = '-ADJ' THEN ISNULL(-CONTRIBUTION_AMOUNT6_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;END) + &#xD;&#xA;&#x9;SUM(CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE != '-ADJ' THEN ISNULL(CONTRIBUTION_AMOUNT7_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;&#x9;WHEN RECORD_TYPE_VALUE = '-ADJ' THEN ISNULL(-CONTRIBUTION_AMOUNT7_ORIGINAL,0)&#xD;&#xA;&#x9;&#x9;END) AS idecContributionOriginal  &#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL&#xD;&#xA;WHERE&#xD;&#xA;&#x9;EMPLOYER_PAYROLL_HEADER_ID=@employer_payroll_header_id &#xD;&#xA;&#x9;AND PLAN_ID=19">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateEmployerPayrollDetailStatusToIgnore" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_EMPLOYER_PAYROLL_DETAIL&#xD;&#xA;SET STATUS_VALUE = 'IGNR'&#xD;&#xA;WHERE PERSON_ID = @PERSON_ID AND PLAN_ID =@PLAN_ID AND PAY_PERIOD_DATE = @PAY_PERIOD_DATE&#xD;&#xA;AND ISNULL(STATUS_VALUE,'') IN ('VALD', 'REVW') AND ISNULL(PREMIUM_AMOUNT, 0) &gt; 0&#xD;&#xA;AND RECORD_TYPE_VALUE IN ('+ADJ')">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@PAY_PERIOD_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="UpdateAllEPDetailStatusToIgnoreAfterPlanSusorCan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_EMPLOYER_PAYROLL_DETAIL&#xD;&#xA;SET STATUS_VALUE = 'IGNR'&#xD;&#xA;WHERE PERSON_ID = @PERSON_ID AND PLAN_ID =@PLAN_ID AND PAY_PERIOD_DATE &gt;= @PAY_PERIOD_DATE&#xD;&#xA;AND ISNULL(STATUS_VALUE,'') IN ('VALD', 'REVW') AND ISNULL(PREMIUM_AMOUNT, 0) &gt; 0&#xD;&#xA;AND RECORD_TYPE_VALUE IN ('+ADJ')">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@PAY_PERIOD_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadReviewEmployerPayrollDtlForAdjustment" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_EMPLOYER_PAYROLL_DETAIL WITH(NOLOCK)&#xD;&#xA;WHERE PAY_PERIOD_DATE &gt;= @PAY_PERIOD_DATE&#xD;&#xA;AND PERSON_ID  = @PERSON_ID and PLAN_ID= @PLAN_ID&#xD;&#xA;AND ISNULL(STATUS_VALUE,'') IN ('VALD', 'REVW', 'PSTD')">
      <parameters>
        <parameter ID="@PAY_PERIOD_DATE" sfwDataType="DateTime" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateEmplyerPayrollDtlStatusToIgnoreByDtlID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_EMPLOYER_PAYROLL_DETAIL&#xD;&#xA;SET STATUS_VALUE = 'IGNR'&#xD;&#xA;WHERE EMPLOYER_PAYROLL_DETAIL_ID = @EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;AND ISNULL(STATUS_VALUE,'') IN ('VALD', 'REVW')">
      <parameters>
        <parameter ID="@EMPLOYER_PAYROLL_DETAIL_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadCancelRefundAdjustmentAmountsByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="-- Please also change in entEmployerPayrollHeader.LoadAllNegativeAdjAmountByPlan&#xD;&#xA;SELECT * INTO #Temp&#xD;&#xA;FROM (&#xD;&#xA;SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID,EPH.ORG_ID IINTORGID, 0 AS IINTPERSONID, EPD.PLAN_ID IINTPLANID, &#xD;&#xA;0 IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ER_CONTRIBUTION_CALCULATED,0)) IDECTOTALERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_ER_CONTRIBUTION_CALCULATED,0)) IDECTOTALRHICERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EMPLOYER_INTEREST_CALCULATED,0)) IDECTOTALEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EMPLOYER_RHIC_INTEREST_CALCULATED,0)) IDECTOTALRHICEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT1,0)) IDECTOTALCONTRIBUTIONAMOUNT1REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT2,0)) IDECTOTALCONTRIBUTIONAMOUNT2REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT3,0)) IDECTOTALCONTRIBUTIONAMOUNT3REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT4,0)) IDECTOTALCONTRIBUTIONAMOUNT4REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT5,0)) IDECTOTALCONTRIBUTIONAMOUNT5REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT6,0)) IDECTOTALCONTRIBUTIONAMOUNT6REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT7,0)) IDECTOTALCONTRIBUTIONAMOUNT7REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.PREMIUM_AMOUNT,0)) IDECTOTALPREMIUMAMOUNTBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.GROUP_HEALTH_FEE_AMOUNT,0)) IDECTOTALFEEAMOUNTBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.OTHR_RHIC_AMOUNT,0)) IDECOTHERRHICAMOUNT,&#xD;&#xA;SUM(ISNULL(EPD.JS_RHIC_AMOUNT,0)) IDECJSRHICAMOUNT,&#xD;&#xA;SUM(ISNULL(EPD.HSA_AMOUNT,0)) IDECHSAAMOUNT,&#xD;&#xA;SUM(ISNULL(EPD.VENDOR_AMOUNT,0)) IDECVENDORAMOUNT,&#xD;&#xA;0 IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ER_CONTRIBUTION_REPORTED,0)) IDECTOTALERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_ER_CONTRIBUTION_REPORTED,0)) IDECTOTALRHICERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ER_PRETAX_MATCH_CALCULATED,0)) IDECTOTALERPRETAXMATCHCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ADEC_CALCULATED,0)) IDECTOTALADECCALCULATEDBYPLAN,&#xD;&#xA;'TRUE' AS IBLNISFORORG&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD, SGT_EMPLOYER_PAYROLL_HEADER EPH &#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= @EMPLOYER_PAYROLL_HEADER_ID AND EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE='PSTD'&#xD;&#xA;AND EPD.PLAN_ID != 8&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, EPD.PLAN_ID,EPH.ORG_ID&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;--Note : Please don't change  * -1 condition from main selection because that calculated amount will refund to member&#xD;&#xA;SELECT IINTEMLOYERPAYROLLHEADERID, 0 AS IINTORGID, IINTPERSONID, IINTPLANID, &#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,0)) * -1 IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALRHICERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,0)) * -1 IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,0)) * -1 IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEEPRETAXCALCULATEDBYPLAN,0)) * -1 IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,0)) * -1 IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALRHICEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT1REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT2REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT3REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT4REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT5REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT6REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT7REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALPREMIUMAMOUNTBYPLAN,&#xD;&#xA;0 IDECTOTALFEEAMOUNTBYPLAN,&#xD;&#xA;0 IDECOTHERRHICAMOUNT,&#xD;&#xA;0 IDECJSRHICAMOUNT,&#xD;&#xA;0 IDECHSAAMOUNT,&#xD;&#xA;0 IDECVENDORAMOUNT,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,0)) * -1 IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALRHICERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,0)) * -1 IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN,0)) * -1 IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN, &#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEEPRETAXREPORTEDBYPLAN,0)) * -1 IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,0)) * -1 IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,0)) * -1 IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALERPRETAXMATCHCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALADECCALCULATEDBYPLAN,&#xD;&#xA;'FALSE' AS IBLNISFORORG&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID,EPD.PERSON_ID IINTPERSONID, EPD.PLAN_ID IINTPLANID, &#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_CALCULATED,0)) * -1 IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_CALCULATED,0)) * -1 IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_CALCULATED,0)) * -1 IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_CALCULATED,0)) * -1 IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.MEMBER_INTEREST_CALCULATED,0)) * -1 IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_REPORTED,0)) * -1 IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_REPORTED,0)) * -1 IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_REPORTED,0)) * -1 IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN, -- go back to member&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_REPORTED,0)) * -1 IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_POST_TAX_ADDL_CALCULATED,0)) * -1 IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRETAX_ADDL_CALCULATED,0)) * -1 IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD WITH(NOLOCK), SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK)&#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= @EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA;AND EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE='PSTD' &#xD;&#xA;AND HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA;AND EPD.PLAN_ID != 8&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, EPD.PLAN_ID,EPD.PERSON_ID&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID,EPD.PERSON_ID IINTPERSONID, EPD.PLAN_ID IINTPLANID, &#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_CALCULATED,0)) IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_CALCULATED,0)) IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_CALCULATED,0)) IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_CALCULATED,0)) IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.MEMBER_INTEREST_CALCULATED,0)) IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_REPORTED,0)) IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_REPORTED,0)) IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_REPORTED,0)) IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN, -- go back to member&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_REPORTED,0)) IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_POST_TAX_ADDL_CALCULATED,0)) IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRETAX_ADDL_CALCULATED,0)) IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD WITH(NOLOCK), SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK)&#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= @EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA;AND EPD.RECORD_TYPE_VALUE IN ('+ADJ','BONS') AND EPD.STATUS_VALUE='PSTD' &#xD;&#xA;AND HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA;AND EPD.PLAN_ID != 8&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, EPD.PLAN_ID,EPD.PERSON_ID&#xD;&#xA;)AS TEMP&#xD;&#xA;GROUP BY IINTEMLOYERPAYROLLHEADERID, IINTPLANID,IINTPERSONID&#xD;&#xA;)AS X&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;-------------------THIS BLOCK FOR  &lt;= 0 SCENARIO&#xD;&#xA;&#xD;&#xA;SELECT IINTEMLOYERPAYROLLHEADERID, IINTPLANID, IINTPERSONID&#xD;&#xA;INTO #TEMP2 &#xD;&#xA;FROM #Temp WHERE IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN &lt;= 0 &#xD;&#xA;AND IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPRETAXCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPRETAXREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN &lt;= 0 AND IBLNISFORORG ='FALSE' AND IINTEMLOYERPAYROLLHEADERID=@EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA;AND 1  = CASE WHEN (SELECT COUNT(1) FROM SGT_EMPLOYER_PAYROLL_DETAIL WHERE EMPLOYER_PAYROLL_HEADER_ID=@EMPLOYER_PAYROLL_HEADER_ID  AND PERSON_ID = IINTPERSONID AND PLAN_ID = IINTPLANID AND RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND STATUS_VALUE='PSTD' ) &gt; 0 THEN 1 ELSE 0 END&#xD;&#xA;GROUP BY IINTEMLOYERPAYROLLHEADERID, IINTPLANID, IINTPERSONID&#xD;&#xA;&#xD;&#xA;SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID,0 IINTPERSONID, EPD.PLAN_ID IINTPLANID, &#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_CALCULATED,0)) IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_CALCULATED,0))  IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_CALCULATED,0))  IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_CALCULATED,0))  IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.MEMBER_INTEREST_CALCULATED,0))  IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_REPORTED,0))  IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_REPORTED,0))  IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_REPORTED,0))  IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN, -- go back to member&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_REPORTED,0))  IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_POST_TAX_ADDL_CALCULATED,0))  IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRETAX_ADDL_CALCULATED,0))  IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN &#xD;&#xA;INTO #TEMPZERODETAILS &#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD&#xD;&#xA;INNER JOIN #TEMP2 T2 ON T2.IINTEMLOYERPAYROLLHEADERID = EPD.EMPLOYER_PAYROLL_HEADER_ID AND T2.IINTPERSONID = EPD.PERSON_ID AND T2.IINTPLANID = EPD.PLAN_ID&#xD;&#xA;WHERE RECORD_TYPE_VALUE IN ('-ADJ','NBON')&#xD;&#xA;AND 1  = CASE WHEN (SELECT COUNT(1) FROM SGT_EMPLOYER_PAYROLL_DETAIL WHERE EMPLOYER_PAYROLL_HEADER_ID=@EMPLOYER_PAYROLL_HEADER_ID  AND PERSON_ID = IINTPERSONID AND PLAN_ID = IINTPLANID AND RECORD_TYPE_VALUE IN ('-ADJ','NBON')) &gt; 0 THEN 1 ELSE 0 END&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, EPD.PLAN_ID --,EPD.PERSON_ID&#xD;&#xA;&#xD;&#xA;UPDATE #Temp  SET IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN= T.IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN ,&#xD;&#xA;IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN = T.IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN ,&#xD;&#xA;IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN = T.IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN ,&#xD;&#xA;IDECTOTALEEPRETAXCALCULATEDBYPLAN = T.IDECTOTALEEPRETAXCALCULATEDBYPLAN ,&#xD;&#xA;IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN = T.IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN ,&#xD;&#xA;IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN = T.IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN ,&#xD;&#xA;IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN = T.IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN ,&#xD;&#xA;IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN = T.IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN ,&#xD;&#xA;IDECTOTALEEPRETAXREPORTEDBYPLAN = T.IDECTOTALEEPRETAXREPORTEDBYPLAN ,&#xD;&#xA;IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN = T.IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN ,&#xD;&#xA;IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN = T.IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN &#xD;&#xA;FROM #TEMPZERODETAILS T, #Temp T1 WHERE  T.IINTEMLOYERPAYROLLHEADERID = T1.IINTEMLOYERPAYROLLHEADERID AND T.IINTPLANID = T1.IINTPLANID AND IINTORGID &gt; 0 AND IBLNISFORORG ='TRUE' &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;DELETE FROM #Temp WHERE IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN &lt;= 0 &#xD;&#xA;AND IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPRETAXCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPRETAXREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN &lt;= 0 AND IBLNISFORORG ='FALSE'&#xD;&#xA;----------------------------- END BLOCK -------------------&#xD;&#xA;DECLARE @ORGID INT = 0;&#xD;&#xA;SELECT @ORGID = ORG_ID FROM SGT_EMPLOYER_PAYROLL_HEADER WHERE EMPLOYER_PAYROLL_HEADER_ID = @EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;&#xD;&#xA;SELECT IINTEMLOYERPAYROLLHEADERID , @ORGID AS IINTORGID, 0 AS IINTPERSONID,    IINTPLANID, &#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,0)), 0) IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALERCONTRIBUTIONCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALERCONTRIBUTIONCALCULATEDBYPLAN,0)), 0) IDECTOTALERCONTRIBUTIONCALCULATEDBYPLAN ,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALRHICERCONTRIBUTIONCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALRHICERCONTRIBUTIONCALCULATEDBYPLAN,0)), 0) IDECTOTALRHICERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,0)), 0) IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,0)), 0) IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALEEPRETAXCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALEEPRETAXCALCULATEDBYPLAN,0)), 0) IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,0)), 0) IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALEMPLOYERINTERESTCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALEMPLOYERINTERESTCALCULATEDBYPLAN,0)), 0) IDECTOTALEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALRHICEMPLOYERINTERESTCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALRHICEMPLOYERINTERESTCALCULATEDBYPLAN,0)), 0) IDECTOTALRHICEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,0)), 0) IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALERCONTRIBUTIONREPORTEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALERCONTRIBUTIONREPORTEDBYPLAN,0)), 0) IDECTOTALERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALRHICERCONTRIBUTIONREPORTEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALRHICERCONTRIBUTIONREPORTEDBYPLAN,0)), 0) IDECTOTALRHICERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,0)), 0) IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN,0)), 0) IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN, &#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALEEPRETAXREPORTEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALEEPRETAXREPORTEDBYPLAN,0)), 0) IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,0)), 0) IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,0)), 0) IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALERPRETAXMATCHCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALERPRETAXMATCHCALCULATEDBYPLAN,0)), 0) IDECTOTALERPRETAXMATCHCALCULATEDBYPLAN,&#xD;&#xA;IIF(SUM(ISNULL(IDECTOTALADECCALCULATEDBYPLAN,0)) &gt; 0, SUM(ISNULL(IDECTOTALADECCALCULATEDBYPLAN,0)), 0) IDECTOTALADECCALCULATEDBYPLAN&#xD;&#xA;FROM #Temp&#xD;&#xA;GROUP BY IINTEMLOYERPAYROLLHEADERID, IINTPLANID">
      <parameters>
        <parameter ID="@EMPLOYER_PAYROLL_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllNegativeAdjAmountByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * INTO #Temp&#xD;&#xA;FROM (&#xD;&#xA;SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID,EPH.ORG_ID IINTORGID, 0 AS IINTPERSONID, EPD.PLAN_ID IINTPLANID, &#xD;&#xA;0 IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ER_CONTRIBUTION_CALCULATED,0)) IDECTOTALERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_ER_CONTRIBUTION_CALCULATED,0)) IDECTOTALRHICERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EMPLOYER_INTEREST_CALCULATED,0)) IDECTOTALEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EMPLOYER_RHIC_INTEREST_CALCULATED,0)) IDECTOTALRHICEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT1,0)) IDECTOTALCONTRIBUTIONAMOUNT1REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT2,0)) IDECTOTALCONTRIBUTIONAMOUNT2REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT3,0)) IDECTOTALCONTRIBUTIONAMOUNT3REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT4,0)) IDECTOTALCONTRIBUTIONAMOUNT4REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT5,0)) IDECTOTALCONTRIBUTIONAMOUNT5REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT6,0)) IDECTOTALCONTRIBUTIONAMOUNT6REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.CONTRIBUTION_AMOUNT7,0)) IDECTOTALCONTRIBUTIONAMOUNT7REPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.PREMIUM_AMOUNT,0)) IDECTOTALPREMIUMAMOUNTBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.GROUP_HEALTH_FEE_AMOUNT,0)) IDECTOTALFEEAMOUNTBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.OTHR_RHIC_AMOUNT,0)) IDECOTHERRHICAMOUNT,&#xD;&#xA;SUM(ISNULL(EPD.JS_RHIC_AMOUNT,0)) IDECJSRHICAMOUNT,&#xD;&#xA;SUM(ISNULL(EPD.HSA_AMOUNT,0)) IDECHSAAMOUNT,&#xD;&#xA;SUM(ISNULL(EPD.VENDOR_AMOUNT,0)) IDECVENDORAMOUNT,&#xD;&#xA;0 IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ER_CONTRIBUTION_REPORTED,0)) IDECTOTALERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_ER_CONTRIBUTION_REPORTED,0)) IDECTOTALRHICERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ER_PRETAX_MATCH_CALCULATED,0)) IDECTOTALERPRETAXMATCHCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.ADEC_CALCULATED,0)) IDECTOTALADECCALCULATEDBYPLAN,&#xD;&#xA;'TRUE' AS IBLNISFORORG&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD, SGT_EMPLOYER_PAYROLL_HEADER EPH &#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= @EMPLOYER_PAYROLL_HEADER_ID AND EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE='VALD'&#xD;&#xA;AND EPD.PLAN_ID != 8&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, EPD.PLAN_ID,EPH.ORG_ID&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;--Note : Please don't change  * -1 condition from main selection because that calculated amount will refund to member&#xD;&#xA;SELECT IINTEMLOYERPAYROLLHEADERID, 0 AS IINTORGID, IINTPERSONID, IINTPLANID, &#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,0)) * -1 IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALRHICERCONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,0)) * -1 IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,0)) * -1 IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEEPRETAXCALCULATEDBYPLAN,0)) * -1 IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,0)) * -1 IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALRHICEMPLOYERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT1REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT2REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT3REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT4REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT5REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT6REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALCONTRIBUTIONAMOUNT7REPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALPREMIUMAMOUNTBYPLAN,&#xD;&#xA;0 IDECTOTALFEEAMOUNTBYPLAN,&#xD;&#xA;0 IDECOTHERRHICAMOUNT,&#xD;&#xA;0 IDECJSRHICAMOUNT,&#xD;&#xA;0 IDECHSAAMOUNT,&#xD;&#xA;0 IDECVENDORAMOUNT,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,0)) * -1 IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;0 IDECTOTALRHICERCONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,0)) * -1 IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN,0)) * -1 IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN, &#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEEPRETAXREPORTEDBYPLAN,0)) * -1 IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,0)) * -1 IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(TEMP.IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,0)) * -1 IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALERPRETAXMATCHCALCULATEDBYPLAN,&#xD;&#xA;0 IDECTOTALADECCALCULATEDBYPLAN,&#xD;&#xA;'FALSE' AS IBLNISFORORG&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID,EPD.PERSON_ID IINTPERSONID, EPD.PLAN_ID IINTPLANID, &#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_CALCULATED,0)) * -1 IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_CALCULATED,0)) * -1 IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_CALCULATED,0)) * -1 IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_CALCULATED,0)) * -1 IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.MEMBER_INTEREST_CALCULATED,0)) * -1 IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_REPORTED,0)) * -1 IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_REPORTED,0)) * -1 IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_REPORTED,0)) * -1 IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN, -- go back to member&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_REPORTED,0)) * -1 IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_POST_TAX_ADDL_CALCULATED,0)) * -1 IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRETAX_ADDL_CALCULATED,0)) * -1 IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD WITH(NOLOCK), SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK)&#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= @EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA;AND EPD.RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND EPD.STATUS_VALUE='VALD' &#xD;&#xA;AND HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA;AND EPD.PLAN_ID != 8&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, EPD.PLAN_ID,EPD.PERSON_ID&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID,EPD.PERSON_ID IINTPERSONID, EPD.PLAN_ID IINTPLANID, &#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_CALCULATED,0)) IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_CALCULATED,0)) IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_CALCULATED,0)) IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_CALCULATED,0)) IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.MEMBER_INTEREST_CALCULATED,0)) IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_REPORTED,0)) IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_REPORTED,0)) IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_REPORTED,0)) IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN, -- go back to member&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_REPORTED,0)) IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_POST_TAX_ADDL_CALCULATED,0)) IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRETAX_ADDL_CALCULATED,0)) IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN&#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD WITH(NOLOCK), SGT_EMPLOYER_PAYROLL_HEADER EPH WITH(NOLOCK)&#xD;&#xA;WHERE EPD.EMPLOYER_PAYROLL_HEADER_ID=EPH.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;AND EPH.EMPLOYER_PAYROLL_HEADER_ID= @EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA;AND EPD.RECORD_TYPE_VALUE IN ('+ADJ','BONS') AND EPD.STATUS_VALUE='VALD' &#xD;&#xA;AND HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA;AND EPD.PLAN_ID != 8&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, EPD.PLAN_ID,EPD.PERSON_ID&#xD;&#xA;)AS TEMP&#xD;&#xA;GROUP BY IINTEMLOYERPAYROLLHEADERID, IINTPLANID,IINTPERSONID&#xD;&#xA;)AS X&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;-------------------THIS BLOCK FOR  &lt;= 0 SCENARIO&#xD;&#xA;&#xD;&#xA;SELECT IINTEMLOYERPAYROLLHEADERID, IINTPLANID, IINTPERSONID&#xD;&#xA;INTO #TEMP2 &#xD;&#xA;FROM #Temp WHERE IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN &lt;= 0 &#xD;&#xA;AND IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPRETAXCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPRETAXREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN &lt;= 0 AND IBLNISFORORG ='FALSE' AND IINTEMLOYERPAYROLLHEADERID=@EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA;AND 1  = CASE WHEN (SELECT COUNT(1) FROM SGT_EMPLOYER_PAYROLL_DETAIL WHERE EMPLOYER_PAYROLL_HEADER_ID=@EMPLOYER_PAYROLL_HEADER_ID  AND PERSON_ID = IINTPERSONID AND PLAN_ID = IINTPLANID AND RECORD_TYPE_VALUE IN ('-ADJ','NBON') AND STATUS_VALUE='VALD' ) &gt; 0 THEN 1 ELSE 0 END&#xD;&#xA;GROUP BY IINTEMLOYERPAYROLLHEADERID, IINTPLANID, IINTPERSONID&#xD;&#xA;&#xD;&#xA;SELECT EPD.EMPLOYER_PAYROLL_HEADER_ID IINTEMLOYERPAYROLLHEADERID,0 IINTPERSONID, EPD.PLAN_ID IINTPLANID, &#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_CALCULATED,0)) IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_CALCULATED,0))  IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_CALCULATED,0))  IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_CALCULATED,0))  IDECTOTALEEPRETAXCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.MEMBER_INTEREST_CALCULATED,0))  IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_CONTRIBUTION_REPORTED,0))  IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.RHIC_EE_CONTRIBUTION_REPORTED,0))  IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_EMPLOYER_PICKUP_REPORTED,0))  IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN, -- go back to member&#xD;&#xA;SUM(ISNULL(EPD.EE_PRE_TAX_REPORTED,0))  IDECTOTALEEPRETAXREPORTEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_POST_TAX_ADDL_CALCULATED,0))  IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN,&#xD;&#xA;SUM(ISNULL(EPD.EE_PRETAX_ADDL_CALCULATED,0))  IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN &#xD;&#xA;INTO #TEMPZERODETAILS &#xD;&#xA;FROM SGT_EMPLOYER_PAYROLL_DETAIL EPD&#xD;&#xA;INNER JOIN #TEMP2 T2 ON T2.IINTEMLOYERPAYROLLHEADERID = EPD.EMPLOYER_PAYROLL_HEADER_ID AND T2.IINTPERSONID = EPD.PERSON_ID AND T2.IINTPLANID = EPD.PLAN_ID&#xD;&#xA;WHERE RECORD_TYPE_VALUE IN ('-ADJ','NBON')&#xD;&#xA;AND 1  = CASE WHEN (SELECT COUNT(1) FROM SGT_EMPLOYER_PAYROLL_DETAIL WHERE EMPLOYER_PAYROLL_HEADER_ID=@EMPLOYER_PAYROLL_HEADER_ID  AND PERSON_ID = IINTPERSONID AND PLAN_ID = IINTPLANID AND RECORD_TYPE_VALUE IN ('-ADJ','NBON')) &gt; 0 THEN 1 ELSE 0 END&#xD;&#xA;GROUP BY EPD.EMPLOYER_PAYROLL_HEADER_ID, EPD.PLAN_ID --,EPD.PERSON_ID&#xD;&#xA;&#xD;&#xA;UPDATE #Temp  SET IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN= T.IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN ,&#xD;&#xA;IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN = T.IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN ,&#xD;&#xA;IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN = T.IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN ,&#xD;&#xA;IDECTOTALEEPRETAXCALCULATEDBYPLAN = T.IDECTOTALEEPRETAXCALCULATEDBYPLAN ,&#xD;&#xA;IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN = T.IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN ,&#xD;&#xA;IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN = T.IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN ,&#xD;&#xA;IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN = T.IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN ,&#xD;&#xA;IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN = T.IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN ,&#xD;&#xA;IDECTOTALEEPRETAXREPORTEDBYPLAN = T.IDECTOTALEEPRETAXREPORTEDBYPLAN ,&#xD;&#xA;IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN = T.IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN ,&#xD;&#xA;IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN = T.IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN &#xD;&#xA;FROM #TEMPZERODETAILS T, #Temp T1 WHERE  T.IINTEMLOYERPAYROLLHEADERID = T1.IINTEMLOYERPAYROLLHEADERID AND T.IINTPLANID = T1.IINTPLANID AND IINTORGID &gt; 0 AND IBLNISFORORG ='TRUE' &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;DELETE FROM #Temp WHERE IDECTOTALEECONTRIBUTIONCALCULATEDBYPLAN &lt;= 0 &#xD;&#xA;AND IDECTOTALRHICEECONTRIBUTIONCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEEMPLOYERPICKUPCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPRETAXCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALMEMBERINTERESTCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEECONTRIBUTIONREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALRHICEECONTRIBUTIONREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEEMPLOYERPICKUPREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPRETAXREPORTEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPOSTTAXADDLCALCULATEDBYPLAN &lt;= 0&#xD;&#xA;AND IDECTOTALEEPRETAXADDLCALCULATEDBYPLAN &lt;= 0 AND IBLNISFORORG ='FALSE'&#xD;&#xA;----------------------------- END BLOCK -------------------&#xD;&#xA;SELECT * FROM #Temp">
      <parameters>
        <parameter ID="@EMPLOYER_PAYROLL_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="EmployerPayrollHeaderId" sfwType="Column" sfwValue="employer_payroll_header_id" sfwIsNull="False" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwIsSequence="False" />
    <attribute ID="OrgId" sfwType="Column" sfwValue="org_id" sfwIsNull="False" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsSequence="False" />
    <attribute ID="HeaderTypeDescription" sfwType="Description" sfwValue="header_type_description" />
    <attribute ID="HeaderTypeId" sfwType="Column" sfwValue="header_type_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwCodeID="1212" sfwIsSequence="False" />
    <attribute ID="HeaderTypeValue" sfwType="Column" sfwValue="header_type_value" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" sfwIsSequence="False" />
    <attribute ID="ReportingSourceDescription" sfwType="Description" sfwValue="reporting_source_description" />
    <attribute ID="ReportingSourceId" sfwType="Column" sfwValue="reporting_source_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwCodeID="1204" sfwIsSequence="False" />
    <attribute ID="ReportingSourceValue" sfwType="Column" sfwValue="reporting_source_value" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" sfwIsSequence="False" />
    <attribute ID="ReportTypeDescription" sfwType="Description" sfwValue="report_type_description" />
    <attribute ID="ReportTypeId" sfwType="Column" sfwValue="report_type_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwCodeID="1206" sfwIsSequence="False" />
    <attribute ID="ReportTypeValue" sfwType="Column" sfwValue="report_type_value" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" sfwIsSequence="False" />
    <attribute ID="PayrollPaidDate" sfwType="Column" sfwValue="payroll_paid_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="PayPeriodStartDate" sfwType="Column" sfwValue="pay_period_start_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="PayPeriodEndDate" sfwType="Column" sfwValue="pay_period_end_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="StatusDescription" sfwType="Description" sfwValue="status_description" />
    <attribute ID="StatusId" sfwType="Column" sfwValue="status_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwCodeID="1209" sfwIsSequence="False" />
    <attribute ID="StatusValue" sfwType="Column" sfwValue="status_value" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" sfwIsSequence="False" />
    <attribute ID="ReceivedDate" sfwType="Column" sfwValue="received_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="InterestWaiverFlag" sfwType="Column" sfwValue="interest_waiver_flag" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" sfwIsSequence="False" />
    <attribute ID="BalancingStatusDescription" sfwType="Description" sfwValue="balancing_status_description" />
    <attribute ID="BalancingStatusId" sfwType="Column" sfwValue="balancing_status_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwCodeID="1203" sfwIsSequence="False" />
    <attribute ID="BalancingStatusValue" sfwType="Column" sfwValue="balancing_status_value" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" sfwIsSequence="False" />
    <attribute ID="TotalContributionReported" sfwType="Column" sfwValue="total_contribution_reported" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="TotalContributionCalculated" sfwType="Column" sfwValue="total_contribution_calculated" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="TotalWagesReported" sfwType="Column" sfwValue="total_wages_reported" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="18,2" sfwIsSequence="False" />
    <attribute ID="TotalWagesCalculated" sfwType="Column" sfwValue="total_wages_calculated" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="18,2" sfwIsSequence="False" />
    <attribute ID="TotalInterestReported" sfwType="Column" sfwValue="total_interest_reported" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="TotalInterestCalculated" sfwType="Column" sfwValue="total_interest_calculated" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="TotalDetailRecordCount" sfwType="Column" sfwValue="total_detail_record_count" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsSequence="False" />
    <attribute ID="TotalPurchaseAmount" sfwType="Column" sfwValue="total_purchase_amount" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="TotalPremiumAmountReported" sfwType="Column" sfwValue="total_premium_amount_reported" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="TotalPurchaseAmountReported" sfwType="Column" sfwValue="total_purchase_amount_reported" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="Comments" sfwType="Column" sfwValue="comments" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="500" sfwIsSequence="False" />
    <attribute ID="SubmittedDate" sfwType="Column" sfwValue="submitted_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="ValidatedDate" sfwType="Column" sfwValue="validated_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="PostedDate" sfwType="Column" sfwValue="posted_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="CentralPayrollRecordId" sfwType="Column" sfwValue="central_payroll_record_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsSequence="False" />
    <attribute ID="IgnoreBalancingStatusFlag" sfwType="Column" sfwValue="ignore_balancing_status_flag" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" sfwIsSequence="False" />
    <attribute ID="LastReloadRunDate" sfwType="Column" sfwValue="last_reload_run_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwIsNull="False" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" sfwIsSequence="False" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwIsNull="False" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwIsNull="False" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" sfwIsSequence="False" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwIsNull="False" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwIsNull="False" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsSequence="False" />
    <attribute ID="PayCheckDate" sfwType="Column" sfwValue="pay_check_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="SuppressSalaryVarianceValidationFlag" sfwType="Column" sfwValue="suppress_salary_variance_validation_flag" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" sfwIsSequence="False" />
    <attribute ID="TotalWagesOriginal" sfwType="Column" sfwValue="total_wages_original" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" />
    <attribute ID="TotalContributionOriginal" sfwType="Column" sfwValue="total_contribution_original" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" />
    <attribute ID="TotalPurchaseAmountOriginal" sfwType="Column" sfwValue="total_purchase_amount_original" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" />
    <attribute ID="Suppress3rdPayrollFlag" sfwType="Column" sfwValue="suppress_3rd_payroll_flag" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" />
    <attribute sfwValue="original_employer_payroll_header_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="OriginalEmployerPayrollHeaderId" sfwCaption="Original Employer Payroll Header Id" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintFileRecordType" sfwValue="iintFileRecordType" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrOrgCodeId" sfwValue="istrOrgCodeId" />
    <attribute ID="objOrganization" sfwType="Object" sfwEntity="entOrganization" sfwValue="ibusOrganization" />
    <attribute sfwDataType="string" sfwType="Property" ID="PayPeriod" sfwValue="icdoEmployerPayrollHeader.pay_period" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPayPeriodSortOrder" sfwValue="icdoEmployerPayrollHeader.istrPayPeriodSortOrder" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrEmptyPayPeriod" sfwValue="istrEmptyPayPeriod" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrlookupComment" sfwValue="icdoEmployerPayrollHeader.istrlookupComment" />
    <attribute sfwType="Collection" sfwEntity="entEmployerPayrollDetail" ID="lstEmployerPayrollDetail" sfwValue="iclbEmployerPayrollDetail" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="TotalEmployerInterestCalculated" sfwValue="icdoEmployerPayrollHeader.TotalEmployerInterestCalculated" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="TotalEmployerRhicInterestCalculated" sfwValue="icdoEmployerPayrollHeader.TotalEmployerRhicInterestCalculated" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="TotalMemberInterestCalculated" sfwValue="icdoEmployerPayrollHeader.TotalMemberInterestCalculated" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalContributionCalculatedForOther457" sfwValue="idecTotalContributionCalculatedForOther457" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalPremiumReportedForIns" sfwValue="idecTotalPremiumReportedForIns" />
    <attribute sfwType="Collection" sfwEntity="entComments" ID="lstPayrollHeaderCommentsHistory" sfwValue="iclbPayrollHeaderCommentsHistory" />
    <attribute sfwType="Collection" sfwEntity="entEmployerPayrollHeader" ID="lstRetirementContributionByPlan" sfwValue="iclbRetirementContributionByPlan" />
    <attribute ID="objPlan" sfwType="Object" sfwEntity="entPlan" sfwValue="ibusPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalCalculatedRetrContributionByPlan" sfwValue="idecTotalCalculatedRetrContributionByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalReportedRetrContributionByPlan" sfwValue="idecTotalReportedRetrContributionByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalAppliedRetrContributionByPlan" sfwValue="idecTotalAppliedRetrContributionByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalNegAdjContribution" sfwValue="idecTotalNegAdjContribution" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOutstandingRetirementBalance" sfwValue="idecOutstandingRetirementBalance" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalCalculatedRHICContributionByPlan" sfwValue="idecTotalCalculatedRHICContributionByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalReportedRHICContributionByPlan" sfwValue="idecTotalReportedRHICContributionByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalAppliedRHICContributionByPlan" sfwValue="idecTotalAppliedRHICContributionByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalNegativeReportedRHICContributionByPlan" sfwValue="idecTotalNegativeReportedRHICContributionByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOutstandingRHICBalance" sfwValue="idecOutstandingRHICBalance" />
    <attribute sfwType="Collection" sfwEntity="entEmployerPayrollHeader" ID="lstInsuranceContributionByPlan" sfwValue="iclbInsuranceContributionByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalReportedByPlan" sfwValue="idecTotalReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalAppliedPremiumByPlan" sfwValue="idecTotalAppliedPremiumByPlan" />
    <attribute sfwType="Collection" sfwEntity="entEmployerPayrollHeader" ID="lstDeferredCompContributionByPlan" sfwValue="iclbDeferredCompContributionByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalAppliedContributionByPlan" sfwValue="idecTotalAppliedContributionByPlan" />
    <attribute sfwType="Collection" sfwEntity="entEmployerPayrollHeader" ID="lstPurchaseContributionByPlan" sfwValue="iclbPurchaseContributionByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalAppliedPurchaseByPlan" sfwValue="idecTotalAppliedPurchaseByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalRemittanceApplied" sfwValue="idecTotalRemittanceApplied" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalEEContributionReportedByPlan" sfwValue="idecTotalEEContributionReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalEEPreTaxReportedByPlan" sfwValue="idecTotalEEPreTaxReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalEEEmployerPickupReportedByPlan" sfwValue="idecTotalEEEmployerPickupReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalERContributionReportedByPlan" sfwValue="idecTotalERContributionReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalMemberInterestCalculatedByPlan" sfwValue="idecTotalMemberInterestCalculatedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalEmployerInterestCalculatedByPlan" sfwValue="idecTotalEmployerInterestCalculatedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalRHICEEContributionReportedByPlan" sfwValue="idecTotalRHICEEContributionReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalRHICERContributionReportedByPlan" sfwValue="idecTotalRHICERContributionReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalRHICEmployerInterestCalculatedByPlan" sfwValue="idecTotalRHICEmployerInterestCalculatedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalPremiumAmountByPlan" sfwValue="idecTotalPremiumAmountByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalContributionAmount1ReportedByPlan" sfwValue="idecTotalContributionAmount1ReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalContributionAmount2ReportedByPlan" sfwValue="idecTotalContributionAmount2ReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalContributionAmount3ReportedByPlan" sfwValue="idecTotalContributionAmount3ReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalContributionAmount4ReportedByPlan" sfwValue="idecTotalContributionAmount4ReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalContributionAmount5ReportedByPlan" sfwValue="idecTotalContributionAmount5ReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalContributionAmount6ReportedByPlan" sfwValue="idecTotalContributionAmount6ReportedByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalContributionAmount7ReportedByPlan" sfwValue="idecTotalContributionAmount7ReportedByPlan" />
    <attribute sfwType="Collection" sfwEntity="entEmployerRemittanceAllocation" ID="lstEmployerRemittanceAllocation" sfwValue="iclbEmployerRemittanceAllocation" />
    <attribute sfwType="Collection" sfwEntity="entbusErrorSummary" ID="lstDetailError" sfwValue="iclbDetailError" />
    <attribute sfwType="Collection" sfwEntity="entbusStatusSummary" ID="lstStatusSummary" sfwValue="iclbStatusSummary" />
    <attribute sfwType="Collection" sfwEntity="entRemittance" ID="lstAvailableRemittance" sfwValue="iclbAvailableRemittance" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrTotalWagesReported" sfwValue="icdoEmployerPayrollHeader.istrTotalWagesReported" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrTotalContributionsReported" sfwValue="icdoEmployerPayrollHeader.istrTotalContributionsReported" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrEmployerSelectionEnrollment" sfwValue="istrEmployerSelectionEnrollment" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrOnlyOther457Text" sfwValue="istrOnlyOther457Text" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtPayPeriod" sfwValue="idtPayPeriod" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="SORTORDERDATE" sfwValue="icdoEmployerPayrollHeader.SORT_ORDER_DATE" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPayrollPaidDateAsMonthYear" sfwValue="icdoEmployerPayrollHeader.istrPayrollPaidDateAsMonthYear" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalWagesCalculated" sfwValue="idecTotalWagesCalculated" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="TotalContributionsFromDetails" sfwValue="icdoEmployerPayrollHeader.total_contributions_from_details" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalContributionsAndInterestDue" sfwValue="icdoEmployerPayrollHeader.idecTotalContributionsAndInterestDue" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecRoundingDifference" sfwValue="icdoEmployerPayrollHeader.idecRoundingDifference" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalNegAdjContributionCalculated" sfwValue="idecTotalNegAdjContributionCalculated" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalNegativeCalculatedRHICContributionByPlan" sfwValue="idecTotalNegativeCalculatedRHICContributionByPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalBasicPremium" sfwValue="idecTotalBasicPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalSupplementPremium" sfwValue="idecTotalSupplementPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalDependentPremium" sfwValue="idecTotalDependentPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalSpousePremium" sfwValue="idecTotalSpousePremium" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintContactid" sfwValue="iintContactid" />
    <attribute sfwType="Collection" sfwEntity="entEmployerPayrollDetailError" ID="lstESSError" sfwValue="iclbESSError" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOutstandingInsuranceBalance" sfwValue="idecOutstandingInsuranceBalance" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOutstandingDeferredCompBalance" sfwValue="idecOutstandingDeferredCompBalance" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtDueDate" sfwValue="idtDueDate" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalProviderDeductions" sfwValue="idecTotalProviderDeductions" />
    <attribute sfwType="Collection" sfwEntity="entEmployerPayrollDetail" ID="lstCollectionForPostingDefCompCor" sfwValue="iclbCollectionForPostingDefCompCor" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalHealthInsPremium" sfwValue="idecTotalHealthInsPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalDentalInsPremium" sfwValue="idecTotalDentalInsPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalLTCInsPremium" sfwValue="idecTotalLTCInsPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalVisionInsPremium" sfwValue="idecTotalVisionInsPremium" />
    <attribute sfwType="Collection" sfwEntity="entEmployerPayrollDetail" ID="lstCollectionForPostingInsuranceCor" sfwValue="iclbCollectionForPostingInsuranceCor" />
    <attribute sfwType="Collection" sfwEntity="entEmployerPayrollHeaderError" ID="lstEmployerPayrollHeaderError" sfwValue="iclbEmployerPayrollHeaderError" />
    <attribute ID="lstError" sfwType="Collection" sfwValue="ibusSoftErrors.iclbError" sfwEntity="entError" sfwPrivate="False" />
    <attribute ID="lstrCreateReportNavigation" sfwDataType="string" sfwPrivate="False" sfwValue="istrCreateReportNavigation" sfwType="Property" />
    <attribute ID="ContactNDPERSFlag" sfwDataType="bool" sfwPrivate="False" sfwValue="iblnContactNDPERSFlag" sfwType="Property" />
    <attribute ID="IstrPaymentStatus" sfwDataType="string" sfwValue="icdoEmployerPayrollHeader.Payment_Status" sfwType="Property" />
    <attribute ID="lstErrorLOB" sfwType="Collection" sfwValue="iclbErrorLOB" sfwEntity="entEmployerPayrollHeaderError" sfwPrivate="False" />
    <attribute ID="IblnCheckDebitACHRequestExists" sfwDataType="bool" sfwPrivate="False" sfwValue="iblnCheckDebitACHRequestExists" sfwType="Property" />
    <attribute sfwValue="detail_comments" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="1" sfwIsNull="True" ID="DetailComments" sfwCaption="Detail Comments" />
    <attribute ID="IdecContributionOriginal" sfwDataType="int" sfwPrivate="False" sfwValue="idecContributionOriginal" sfwType="Property" />
    <attribute ID="IdecRemainingBalance" sfwDataType="decimal" sfwPrivate="False" sfwValue="icdoEmployerPayrollHeader.idecRemainingBalance" sfwType="Property" />
    <attribute ID="TotalADECAmountReported" sfwType="Column" sfwValue="total_adec_amount_reported" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="TotalADECAmountCalculated" sfwType="Column" sfwValue="total_adec_amount_calculated" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="TotalADECAmountOriginal" sfwType="Column" sfwValue="total_adec_amount_original" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="lstrTotalADECAmountReported" sfwDataType="decimal" sfwPrivate="False" sfwValue="icdoEmployerPayrollHeader.istrTotalADECAmountReported" sfwType="Property" />
    <attribute ID="IdecTotalADECCalculatedByPlan" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalADECCalculatedByPlan" sfwType="Property" />
    <attribute ID="IdecTotalADECReportedByPlan" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalADECReportedByPlan" sfwType="Property" />
    <attribute ID="IdecTotalEEPreTaxAddlCalculatedByPlan" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalEEPreTaxAddlCalculatedByPlan" sfwType="Property" />
    <attribute ID="IdecTotalEEPreTaxAddlReportedByPlan" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalEEPreTaxAddlReportedByPlan" sfwType="Property" />
    <attribute ID="IdecTotalEEPostTaxAddlCalculatedByPlan" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalEEPostTaxAddlCalculatedByPlan" sfwType="Property" />
    <attribute ID="IdecTotalEEPostTaxAddlReportedByPlan" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalEEPostTaxAddlReportedByPlan" sfwType="Property" />
    <attribute ID="IdecTotalERPreTaxMatchCalculatedByPlan" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalERPreTaxMatchCalculatedByPlan" sfwType="Property" />
    <attribute ID="IdecTotalERPreTaxMatchReportedByPlan" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalERPreTaxMatchReportedByPlan" sfwType="Property" />
    <attribute ID="IdecTotalNegativeERPreTaxMatchReportedByPlan" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalNegativeERPreTaxMatchReportedByPlan" sfwType="Property" />
    <attribute ID="IdecTotalADECAppliedByPlan" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalADECAppliedByPlan" sfwType="Property" />
    <attribute ID="IdecOutstandingADECBalance" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecOutstandingADECBalance" sfwType="Property" />
    <attribute ID="IdecTotalReportedRetrContributionWithoutADECAmtByPlan" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalReportedRetrContributionWithoutADECAmtByPlan" sfwType="Property" />
    <attribute ID="IdecTotalAppliedRetrContributionByPlanWithAdec" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalAppliedRetrContributionByPlanWithAdec" sfwType="Property" />
  </attributes>
  <objectmethods>
    <method ID="ExportToText_Click" sfwReturnType="ArrayList" />
    <method ID="btnCreatePayroll_Click" sfwReturnType="ArrayList" />
    <method ID="btnValidate_Click" sfwReturnType="Void" />
    <method ID="btnReadyToPost_Click" sfwReturnType="ArrayList" />
    <method ID="ReLoad_Click" sfwReturnType="Void" />
    <method ID="btnSaveComments_Click" sfwReturnType="Void">
      <parameters>
        <parameter ID="astrComment" sfwDataType="String" />
      </parameters>
    </method>
    <method ID="btnIgnore_Click" sfwReturnType="ArrayList" />
    <method ID="btnSuppress_Clicked" sfwReturnType="Void" />
    <method ID="ReloadHandButtonData" sfwReturnType="ArrayList" />
    <method ID="EnrollPrevious_Click" sfwReturnType="ArrayList" />
    <method ID="btnAcceptReport_Click" sfwReturnType="ArrayList" />
    <method ID="GenerateCSVFromCollection" sfwReturnType="String" />
    <method ID="btnDebitACHRequest_Click" sfwReturnType="Void" />
    <method ID="btnDeleteDebitACHRequest_Click" sfwReturnType="ArrayList" />
    <method ID="LoadEmployerPayrollHeaderError" sfwReturnType="Void" />
    <method ID="LoadEmployerPayrollDetail" sfwReturnType="Void" />
    <method ID="btnApplyPenalty_Click" sfwReturnType="ArrayList" />
    <method ID="btnCancelPenalty_Click" sfwReturnType="Void" />
    <method ID="btnApprovePenalty_Click" sfwReturnType="ArrayList" />
    <method ID="btnSavePenalty_Click" sfwReturnType="ArrayList" />
  </objectmethods>
  <constraint />
  <methods />
  <lifecycle />
  <ExtraFields />
</entity>