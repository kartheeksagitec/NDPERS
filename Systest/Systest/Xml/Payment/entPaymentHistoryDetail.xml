<?xml version="1.0" encoding="utf-8"?>
<entity ID="entPaymentHistoryDetail" sfwMainCDO="icdoPaymentHistoryDetail" sfwType="BusinessRule" sfwActive="True" sfwStatus="Review" sfwObjectID="busPaymentHistoryDetail" sfwTableName="sgt_payment_history_detail">
  <queries>
    <query ID="CreatePaymentHistoryDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @EXCESSCONTRIBUTIONTAXABLEID INT&#xD;&#xA;SELECT @EXCESSCONTRIBUTIONTAXABLEID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM501'&#xD;&#xA;&#xD;&#xA;DECLARE @EXCESSCONTRBUTIONNONTAXABLEID INT&#xD;&#xA;SELECT @EXCESSCONTRBUTIONNONTAXABLEID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM502'&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_DETAIL(PAYMENT_HISTORY_HEADER_ID,PAYMENT_ITEM_TYPE_ID,AMOUNT,&#xD;&#xA;VENDOR_ORG_ID,&#xD;&#xA;CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ, ROLLOVER_ORG_ID)&#xD;&#xA;&#xD;&#xA;SELECT PAYMENT_HISTORY_HEADER_ID,PAYMENT_ITEM_TYPE_ID,AMOUNT,&#xD;&#xA;VENDOR_ORG_ID,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY,GETDATE() AS CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ, ROLLOVER_ORG_ID  FROM&#xD;&#xA;(&#xD;&#xA;SELECT PAPIT.PAYEE_ACCOUNT_ID,PAYEE.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA; PAPIT.PAYMENT_ITEM_TYPE_ID,PAPIT.AMOUNT, &#xD;&#xA;PAPIT.VENDOR_ORG_ID, PAROD.ROLLOVER_ORG_ID AS ROLLOVER_ORG_ID FROM &#xD;&#xA;SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT INNER JOIN &#xD;&#xA;SGT_PAYMENT_ITEM_TYPE PIT ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID INNER JOIN &#xD;&#xA;(SELECT &#xD;&#xA; PA.PAYEE_ACCOUNT_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID &#xD;&#xA;   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA; AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL') &#xD;&#xA;) AS PAYEE&#xD;&#xA;ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND PADR&#xD;&#xA;ON PADR.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA; (SELECT PARP.PAYEE_ACCOUNT_ID,PARP.PAYMENT_OPTION_VALUE,PARPD.* FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT PARP &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL PARPD ON &#xD;&#xA; PARPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = PARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID &#xD;&#xA; where PAYMENT_HISTORY_HEADER_ID IS NULL) AS RETRO&#xD;&#xA;ON RETRO.PAYEE_ACCOUNT_ID = PAYEE.PAYEE_ACCOUNT_ID AND RETRO.PAYMENT_ITEM_TYPE_ID = PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT OUTER JOIN --TO GET THE ROLLOVER ORG ID TO BE USED WHILE INSERTING GL ENTRIES&#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK) ON PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PAROD WITH(NOLOCK) ON PAROD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID AND PAROD.STATUS_VALUE = 'ACTV'&#xD;&#xA;WHERE&#xD;&#xA;@PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA; AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA; AND (PADR.PAYMENT_OPTION_VALUE IS NULL OR PADR.PAYMENT_OPTION_VALUE = 'RGLR')&#xD;&#xA; AND (RETRO.PAYMENT_OPTION_VALUE IS NULL OR RETRO.PAYMENT_OPTION_VALUE = 'REGL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; ---AND PIT.ITEM_TYPE_CODE NOT IN ('ITEM216','ITEM215','ITEM219','ITEM218')&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PAPIT.PAYEE_ACCOUNT_ID,PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA; PIT1.PAYMENT_ITEM_TYPE_ID,SUM(PAPIT.AMOUNT) AS AMOUNT, &#xD;&#xA;NULL AS VENDOR_ORG_ID, NULL AS ROLLOVER_ORG_ID FROM &#xD;&#xA; SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;INNER JOIN  &#xD;&#xA; (SELECT &#xD;&#xA;  PA.PAYEE_ACCOUNT_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA  &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;  AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')  &#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA; ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 WITH(NOLOCK)&#xD;&#xA; ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA; ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA; ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;    AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA; ON PHH.PAYEE_ACCOUNT_ID=PAYEE.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA; AND PHH.ORG_ID = PARD.ROLLOVER_ORG_ID&#xD;&#xA;WHERE&#xD;&#xA; @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA; AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA; AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA; AND PARD.ROLLOVER_TYPE_VALUE NOT IN ('RIRA')&#xD;&#xA; AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PIT1.PAYMENT_ITEM_TYPE_ID,PHH.PAYMENT_HISTORY_HEADER_ID,PARD.ROLLOVER_ORG_ID &#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;--26652&#xD;&#xA;SELECT  NULL AS PAYEE_ACCOUNT_ID,&#xD;&#xA;&#x9;PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    EXREF.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    AMOUNT,&#xD;&#xA;    NULL AS VENDOR_ORG_ID,&#xD;&#xA;&#x9;NULL AS ROLLOVER_ORG_ID   &#xD;&#xA;FROM  SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA; INNER JOIN &#xD;&#xA; (&#xD;&#xA;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;CASE WHEN R.REFUND_TO_VALUE = 'SMME' THEN R.REFUND_TO_PERSON_ID ELSE NULL END AS PERSON_ID&#xD;&#xA;&#x9;&#x9;,NULL AS ORG_ID&#xD;&#xA;&#x9;&#x9;,CASE WHEN R.OVERRIDDEN_REFUND_AMOUNT &gt; 0 THEN R.OVERRIDDEN_REFUND_AMOUNT ELSE R.COMPUTED_REFUND_AMOUNT END AS AMOUNT&#xD;&#xA;&#x9;&#x9;,CASE WHEN R.REMITTANCE_TYPE_VALUE IN ('P501') THEN @EXCESSCONTRIBUTIONTAXABLEID ELSE &#xD;&#xA;&#x9;&#x9;&#x9;@EXCESSCONTRBUTIONNONTAXABLEID END AS PAYMENT_ITEM_TYPE_ID, R.PLAN_ID AS PLAN_ID&#xD;&#xA;&#x9;   &#xD;&#xA;    FROM &#xD;&#xA;&#x9;&#x9;SGT_REMITTANCE R WITH(NOLOCK) INNER JOIN SGT_PLAN P WITH(NOLOCK) ON P.PLAN_ID = R.PLAN_ID&#xD;&#xA;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;R.REFUND_STATUS_VALUE = 'APRD' AND R.REMITTANCE_TYPE_VALUE IN ('P501', 'P502', 'P503','P504','P505')&#xD;&#xA;) AS EXREF&#xD;&#xA;   ON ((PHH.PERSON_ID = EXREF.PERSON_ID&#xD;&#xA;   OR PHH.ORG_ID = EXREF.ORG_ID) AND (PHH.PLAN_ID = EXREF.PLAN_ID))&#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;       Where Phh.Payee_account_id is null&#xD;&#xA;       &#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PAPIT.PAYEE_ACCOUNT_ID,PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA; PIT1.PAYMENT_ITEM_TYPE_ID,SUM(PAPIT.AMOUNT) AS AMOUNT, &#xD;&#xA;NULL AS VENDOR_ORG_ID, NULL AS ROLLOVER_ORG_ID FROM &#xD;&#xA; SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;INNER JOIN  &#xD;&#xA; (SELECT &#xD;&#xA;  PA.PAYEE_ACCOUNT_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA  &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;  AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')  &#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA; ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 WITH(NOLOCK)&#xD;&#xA; ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA; ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA; ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;    AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA; ON PHH.PAYEE_ACCOUNT_ID=PAYEE.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA; AND PHH.ORG_ID = PARD.ROLLOVER_ORG_ID&#xD;&#xA;WHERE&#xD;&#xA; @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA; AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA; AND PARD.ROLLOVER_TYPE_VALUE in ('RIRA') &#xD;&#xA; AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PIT1.PAYMENT_ITEM_TYPE_ID,PHH.PAYMENT_HISTORY_HEADER_ID,PARD.ROLLOVER_ORG_ID &#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PAPIT.PAYEE_ACCOUNT_ID,PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;PIT.PAYMENT_ITEM_TYPE_ID,SUM(PAPIT.AMOUNT) AS AMOUNT, &#xD;&#xA;NULL AS VENDOR_ORG_ID, NULL AS ROLLOVER_ORG_ID FROM &#xD;&#xA; SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;INNER JOIN  &#xD;&#xA; (SELECT &#xD;&#xA;  PA.PAYEE_ACCOUNT_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA  &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;  AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')  &#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA; ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA; ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA; ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;    AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA; ON PHH.PAYEE_ACCOUNT_ID=PAYEE.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA; AND PHH.ORG_ID = PARD.ROLLOVER_ORG_ID&#xD;&#xA; WHERE&#xD;&#xA; @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA; AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA; AND PIT.ITEM_TYPE_CODE IN ('ITEM216','ITEM215','ITEM219','ITEM218')&#xD;&#xA; AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PIT.PAYMENT_ITEM_TYPE_ID,PHH.PAYMENT_HISTORY_HEADER_ID,PARD.ROLLOVER_ORG_ID,PAPIT.VENDOR_ORG_ID&#xD;&#xA;)TEMP &#xD;&#xA;order by PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;Update  EXREF &#xD;&#xA;  set EXREF.PAYMENT_HISTORY_HEADER_ID = PAYMENT.Payment_history_header_id ,&#xD;&#xA;   EXREF.modified_by='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;   EXREF.modified_date=getdate()&#xD;&#xA;FROM SGT_REMITTANCE EXREF INNER JOIN&#xD;&#xA;(  &#xD;&#xA;SELECT DEP.REMITTANCE_ID,PHH.Payment_history_header_id&#xD;&#xA;FROM SGT_REMITTANCE  DEP INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;ON ((PHH.PERSON_ID = DEP.REFUND_TO_PERSON_ID OR PHH.ORG_ID = DEP.REFUND_TO_ORG_ID) AND (DEP.PLAN_ID = PHH.PLAN_ID))&#xD;&#xA;WHERE DEP.REFUND_STATUS_VALUE = 'APRD' and&#xD;&#xA;PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID and&#xD;&#xA;PHH.Payee_account_id is null) PAYMENT ON EXREF.REMITTANCE_ID=PAYMENT.REMITTANCE_ID">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadDCTransferRecords" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SSN,SOURCE,SUM(AMOUNT) AS AMOUNT&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA; SELECT   PER.SSN,&#xD;&#xA;      CASE &#xD;&#xA;      WHEN PIT.ITEM_TYPE_CODE IN ('ITEM8','ITEM19','ITEM21')&#xD;&#xA;       THEN 3&#xD;&#xA;      WHEN PIT.ITEM_TYPE_CODE IN ('ITEM20','ITEM18','ITEM452','ITEM7','ITEM6','ITEM2')&#xD;&#xA;       THEN 4&#xD;&#xA;      WHEN PIT.ITEM_TYPE_CODE IN ('ITEM3','ITEM4')&#xD;&#xA;       THEN 5&#xD;&#xA;      ELSE 0&#xD;&#xA;      END AS SOURCE,&#xD;&#xA;      PD.AMOUNT&#xD;&#xA; FROM    SGT_PAYMENT_HISTORY_DETAIL PD WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PH WITH(NOLOCK)&#xD;&#xA;      ON PD.PAYMENT_HISTORY_HEADER_ID=PH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK)&#xD;&#xA;     ON PD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;      ON PH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;      ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA; WHERE    PIT.ITEM_TYPE_CODE IN ('ITEM20','ITEM18','ITEM452','ITEM7','ITEM8','ITEM19','ITEM3','ITEM4','ITEM6','ITEM2','ITEM21')&#xD;&#xA;    AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;    AND PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE IN ('DBCT','SPEL')&#xD;&#xA;    AND PH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;) TBL&#xD;&#xA;GROUP BY SSN,SOURCE">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPaymentDeductionRecords" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @PAYMENTDATE DATETIME&#xD;&#xA;SELECT @PAYMENTDATE = PAYMENT_DATE FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;&#xD;&#xA;SELECT   B.PAYEE_ACCOUNT_ID , B.PERSON_ID, B.ORG_ID,C.ITEM_TYPE_DIRECTION,C.ITEM_PRIORITY,A.PAYMENT_ITEM_TYPE_ID, C.ITEM_TYPE_DESCRIPTION,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_DIRECTION = 1 AND C.REISSUE_ITEMS_FLAG = 'N' THEN A.AMOUNT ELSE 0 END)  AS LTD_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN B.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND C.ITEM_TYPE_DIRECTION = 1 AND PHDN.PAYMENT_METHOD_VALUE ='CHK' THEN AMOUNT ELSE 0 END) AS FTM_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN YEAR(B.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND C.ITEM_TYPE_DIRECTION = 1 AND C.REISSUE_ITEMS_FLAG = 'N' THEN AMOUNT ELSE 0 END) AS YTD_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_DIRECTION = -1 THEN AMOUNT ELSE 0 END)  AS LTD_DEDUCTION,&#xD;&#xA;     SUM(CASE WHEN B.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND C.ITEM_TYPE_DIRECTION = -1 AND PHDN.PAYMENT_METHOD_VALUE ='CHK' THEN AMOUNT ELSE 0 END) AS FTM_DEDUCTION,&#xD;&#xA;     SUM(CASE WHEN YEAR(B.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND C.ITEM_TYPE_DIRECTION = -1 THEN AMOUNT ELSE 0 END) AS YTD_DEDUCTION&#xD;&#xA;FROM    SGT_PAYMENT_HISTORY_DETAIL A WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER B WITH(NOLOCK) &#xD;&#xA;     ON A.PAYMENT_HISTORY_HEADER_ID = B.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE C WITH(NOLOCK) &#xD;&#xA;     ON C.PAYMENT_ITEM_TYPE_ID = A.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN (SELECT PAYEE_ACCOUNT_ID &#xD;&#xA;    FROM SGT_PAYMENT_HISTORY_HEADER HED &#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION DIST&#xD;&#xA;    ON DIST.PAYMENT_HISTORY_HEADER_ID = HED.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;    WHERE HED.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND DIST.PAYMENT_METHOD_VALUE = 'CHK') D&#xD;&#xA;     ON B.PAYEE_ACCOUNT_ID = D.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN (&#xD;&#xA;     SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID,PAYMENT_METHOD_VALUE,PAYMENT_METHOD_ID FROM &#xD;&#xA;      SGT_PAYMENT_HISTORY_DISTRIBUTION WITH(NOLOCK)&#xD;&#xA;    ) AS PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = A.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;WHERE (C.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET' OR C.ITEM_TYPE_CODE IN('ITEM215','ITEM216','ITEM218','ITEM219'))&#xD;&#xA;GROUP BY   B.PAYEE_ACCOUNT_ID , B.PERSON_ID, B.ORG_ID,C.ITEM_TYPE_DIRECTION,C.ITEM_PRIORITY,A.PAYMENT_ITEM_TYPE_ID, C.ITEM_TYPE_DESCRIPTION&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT   B.PAYEE_ACCOUNT_ID ,B.PERSON_ID, B.ORG_ID,C.ITEM_TYPE_DIRECTION,C.ITEM_PRIORITY, A.PAYMENT_ITEM_TYPE_ID, C.ITEM_TYPE_DESCRIPTION,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_DIRECTION = 1 AND C.REISSUE_ITEMS_FLAG = 'N' THEN AMOUNT ELSE 0 END)  AS LTD_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN B.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND C.ITEM_TYPE_DIRECTION = 1 AND PHDN.PAYMENT_METHOD_VALUE ='RCHK' THEN AMOUNT ELSE 0 END) AS FTM_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN YEAR(B.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND C.ITEM_TYPE_DIRECTION = 1 AND C.REISSUE_ITEMS_FLAG = 'N' THEN AMOUNT ELSE 0 END) AS YTD_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_DIRECTION = -1 THEN AMOUNT ELSE 0 END)  AS LTD_DEDUCTION,&#xD;&#xA;     SUM(CASE WHEN B.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND C.ITEM_TYPE_DIRECTION = -1 AND PHDN.PAYMENT_METHOD_VALUE ='RCHK' THEN AMOUNT ELSE 0 END) AS FTM_DEDUCTION,&#xD;&#xA;     SUM(CASE WHEN YEAR(B.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND C.ITEM_TYPE_DIRECTION = -1 THEN AMOUNT ELSE 0 END) AS YTD_DEDUCTION&#xD;&#xA;FROM    SGT_PAYMENT_HISTORY_DETAIL A WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER B WITH(NOLOCK) &#xD;&#xA;     ON A.PAYMENT_HISTORY_HEADER_ID = B.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE C WITH(NOLOCK) &#xD;&#xA;     ON C.PAYMENT_ITEM_TYPE_ID = A.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN (SELECT DIST.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;    FROM SGT_PAYMENT_HISTORY_DISTRIBUTION DIST &#xD;&#xA;&#x9;JOIN SGT_PAYMENT_HISTORY_HEADER HEADER ON HEADER.PAYMENT_HISTORY_HEADER_ID = DIST.PAYMENT_HISTORY_HEADER_ID AND HEADER.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;    WHERE DIST.PAYMENT_METHOD_VALUE = 'RCHK') D&#xD;&#xA;     ON D.PAYMENT_HISTORY_HEADER_ID = B.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; LEFT OUTER JOIN (&#xD;&#xA;     SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID,PAYMENT_METHOD_VALUE,PAYMENT_METHOD_ID,ORG_ID FROM &#xD;&#xA;      SGT_PAYMENT_HISTORY_DISTRIBUTION WITH(NOLOCK)&#xD;&#xA;    ) AS PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = A.PAYMENT_HISTORY_HEADER_ID AND PHDN.ORG_ID = B.ORG_ID&#xD;&#xA;WHERE    C.ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;GROUP BY   B.PAYEE_ACCOUNT_ID ,B.PERSON_ID, B.ORG_ID,C.ITEM_TYPE_DIRECTION,C.ITEM_PRIORITY, A.PAYMENT_ITEM_TYPE_ID, C.ITEM_TYPE_DESCRIPTION&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT   B.PAYEE_ACCOUNT_ID ,B.PERSON_ID, B.ORG_ID,C.ITEM_TYPE_DIRECTION,C.ITEM_PRIORITY, A.PAYMENT_ITEM_TYPE_ID, C.ITEM_TYPE_DESCRIPTION,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_DIRECTION = 1 AND C.REISSUE_ITEMS_FLAG = 'N' THEN AMOUNT ELSE 0 END)  AS LTD_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN B.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND C.ITEM_TYPE_DIRECTION = 1 AND PHDN.PAYMENT_METHOD_VALUE ='CHK' THEN AMOUNT ELSE 0 END) AS FTM_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN YEAR(B.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND C.ITEM_TYPE_DIRECTION = 1 AND C.REISSUE_ITEMS_FLAG = 'N' THEN AMOUNT ELSE 0 END) AS YTD_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_DIRECTION = -1 THEN AMOUNT ELSE 0 END)  AS LTD_DEDUCTION,&#xD;&#xA;     SUM(CASE WHEN B.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND C.ITEM_TYPE_DIRECTION = -1 AND PHDN.PAYMENT_METHOD_VALUE ='CHK' THEN AMOUNT ELSE 0 END) AS FTM_DEDUCTION,&#xD;&#xA;     SUM(CASE WHEN YEAR(B.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND C.ITEM_TYPE_DIRECTION = -1 THEN AMOUNT ELSE 0 END) AS YTD_DEDUCTION&#xD;&#xA;FROM    SGT_PAYMENT_HISTORY_DETAIL A WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER B WITH(NOLOCK) &#xD;&#xA;     ON A.PAYMENT_HISTORY_HEADER_ID = B.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE C WITH(NOLOCK) &#xD;&#xA;     ON C.PAYMENT_ITEM_TYPE_ID = A.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN (SELECT PAYEE_ACCOUNT_ID ,HED.PERSON_ID,HED.ORG_ID&#xD;&#xA;    FROM SGT_PAYMENT_HISTORY_HEADER HED &#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION DIST&#xD;&#xA;    ON DIST.PAYMENT_HISTORY_HEADER_ID = HED.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;    WHERE HED.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID &#xD;&#xA;    AND DIST.PAYMENT_METHOD_VALUE = 'CHK'&#xD;&#xA;    AND PAYEE_ACCOUNT_ID IS NULL) D&#xD;&#xA;     ON ISNULL(B.ORG_ID,0)  = ISNULL(D.ORG_ID,0) AND &#xD;&#xA;     ISNULL(B.PERSON_ID,0)  = ISNULL(D.PERSON_ID,0) AND &#xD;&#xA;     ISNULL(B.PAYEE_ACCOUNT_ID,0)  = ISNULL(D.PAYEE_ACCOUNT_ID,0)   &#xD;&#xA; LEFT OUTER JOIN (&#xD;&#xA;     SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID,PAYMENT_METHOD_VALUE,PAYMENT_METHOD_ID,ORG_ID FROM &#xD;&#xA;      SGT_PAYMENT_HISTORY_DISTRIBUTION WITH(NOLOCK)&#xD;&#xA;    ) AS PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = A.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;WHERE (C.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET' OR C.ITEM_TYPE_CODE IN('ITEM215','ITEM216','ITEM218','ITEM219'))&#xD;&#xA;GROUP BY   B.PAYEE_ACCOUNT_ID ,B.PERSON_ID, B.ORG_ID,C.ITEM_TYPE_DIRECTION,C.ITEM_PRIORITY,&#xD;&#xA;      A.PAYMENT_ITEM_TYPE_ID, C.ITEM_TYPE_DESCRIPTION">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRHICDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT   B.PAYMENT_HISTORY_HEADER_ID, B.PAYEE_ACCOUNT_ID, C.ITEM_TYPE_CODE,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_CODE = '' THEN A.AMOUNT ELSE 0 END) AS RHIC_AMOUNT,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_CODE = 'ITEM76' THEN A.AMOUNT ELSE 0 END) AS HEALTH_PREMIUM,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_CODE = 'ITEM120' THEN A.AMOUNT ELSE 0 END) AS MEDICARE_PREMIUM,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_CODE = '' THEN A.AMOUNT ELSE 0 END) AS RHIC_APPLIED&#xD;&#xA;FROM    SGT_PAYMENT_HISTORY_DETAIL A WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER B WITH(NOLOCK) &#xD;&#xA;     ON A.PAYMENT_HISTORY_HEADER_ID = B.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN (&#xD;&#xA;     SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID,PAYMENT_METHOD_VALUE,PAYMENT_METHOD_ID FROM &#xD;&#xA;      SGT_PAYMENT_HISTORY_DISTRIBUTION WITH(NOLOCK) WHERE PAYMENT_METHOD_VALUE ='CHK'&#xD;&#xA;    ) AS PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = A.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE C WITH(NOLOCK) &#xD;&#xA;     ON C.PAYMENT_ITEM_TYPE_ID = A.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;   ON B.PERSON_ID = PA.PERSON_ID&#xD;&#xA;  LEFT JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION ELEC WITH(NOLOCK)&#xD;&#xA;     ON PA.PERSON_ACCOUNT_ID = ELEC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE    C.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;      AND (PA.PLAN_ID = 9 OR PA.PLAN_ID = 12)&#xD;&#xA;      AND ELEC.PAYMENT_METHOD_VALUE = 'PNCH'&#xD;&#xA;      AND B.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;GROUP BY   B.PAYMENT_HISTORY_HEADER_ID,B.PAYEE_ACCOUNT_ID, C.ITEM_TYPE_CODE&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT   B.PAYMENT_HISTORY_HEADER_ID, B.PAYEE_ACCOUNT_ID, C.ITEM_TYPE_CODE,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_CODE = '' THEN A.AMOUNT ELSE 0 END) AS RHIC_AMOUNT,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_CODE = 'ITEM76' THEN A.AMOUNT ELSE 0 END) AS HEALTH_PREMIUM,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_CODE = 'ITEM120' THEN A.AMOUNT ELSE 0 END) AS MEDICARE_PREMIUM,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_CODE = '' THEN A.AMOUNT ELSE 0 END) AS RHIC_APPLIED&#xD;&#xA;FROM    SGT_PAYMENT_HISTORY_DETAIL A WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER B WITH(NOLOCK) &#xD;&#xA;     ON A.PAYMENT_HISTORY_HEADER_ID = B.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN (&#xD;&#xA;     SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID,PAYMENT_METHOD_VALUE,PAYMENT_METHOD_ID FROM &#xD;&#xA;      SGT_PAYMENT_HISTORY_DISTRIBUTION WITH(NOLOCK) WHERE PAYMENT_METHOD_VALUE ='RCHK'&#xD;&#xA;    ) AS PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = A.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE C WITH(NOLOCK) &#xD;&#xA;     ON C.PAYMENT_ITEM_TYPE_ID = A.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;WHERE  C.ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;   AND B.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;GROUP BY   B.PAYMENT_HISTORY_HEADER_ID,B.PAYEE_ACCOUNT_ID, C.ITEM_TYPE_CODE">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreatePaymentHistoryDetailAdhoc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LASTDATE DATETIME&#xD;&#xA;SELECT @LASTDATE = MAX(PAYMENT_DATE) FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA;WHERE PROCESS_DATE &lt;= @PAYMENTDATE&#xD;&#xA;AND SCHEDULE_TYPE_VALUE = 'MTLY'&#xD;&#xA;AND STATUS_VALUE = 'PRCD'&#xD;&#xA;&#xD;&#xA;DECLARE @EXCESSREFUNDID INT&#xD;&#xA;SELECT @EXCESSREFUNDID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM1'&#xD;&#xA;&#xD;&#xA;DECLARE @EXCESS_INSURANCE_REFUND_ID INT&#xD;&#xA;SELECT @EXCESS_INSURANCE_REFUND_ID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM459'&#xD;&#xA;&#xD;&#xA;DECLARE @EXCESS_PURCHASE_REFUND_ID INT&#xD;&#xA;SELECT @EXCESS_PURCHASE_REFUND_ID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM460'&#xD;&#xA;&#xD;&#xA;DECLARE @EXCESS_SEMINAR_REFUND_ID INT&#xD;&#xA;SELECT @EXCESS_SEMINAR_REFUND_ID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM461'&#xD;&#xA;&#xD;&#xA;DECLARE @EXCESS_RHIC_REFUND_ID INT&#xD;&#xA;SELECT @EXCESS_RHIC_REFUND_ID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM462'&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_DETAIL&#xD;&#xA;    (PAYMENT_HISTORY_HEADER_ID, PAYMENT_ITEM_TYPE_ID, AMOUNT,VENDOR_ORG_ID,&#xD;&#xA;    CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ, ROLLOVER_ORG_ID)&#xD;&#xA;&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    PAPIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PAPIT.AMOUNT,&#xD;&#xA;    PAPIT.VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;NULL AS ROLLOVER_ORG_ID  &#xD;&#xA;FROM   SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT    &#xD;&#xA; INNER JOIN  (SELECT PA.PAYEE_ACCOUNT_ID,PA.PAYEE_ORG_ID,PA.PAYEE_PERSLINK_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;        AND PA.BENEFIT_OPTION_VALUE IN ('DBCT','DTCT','DBDC','DBTT','SPEL')       &#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID     &#xD;&#xA;WHERE   @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)  &#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    PAPIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PAPIT.AMOUNT,&#xD;&#xA;    PAPIT.VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;PAROD.ROLLOVER_ORG_ID AS ROLLOVER_ORG_ID    &#xD;&#xA;FROM   SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT  &#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;on PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID  &#xD;&#xA; INNER JOIN  (SELECT PA.PAYEE_ACCOUNT_ID,PA.PAYEE_ORG_ID,PA.PAYEE_PERSLINK_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;        AND PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;        AND BA.HARDSHIP_APPROVED_FLAG = 'Y'&#xD;&#xA;        AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE --PROD PIR 4919&#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID --AND PIT.ITEM_TYPE_CODE NOT IN ('ITEM216','ITEM215','ITEM219','ITEM218')&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;     AND ISNULL(PHH.ORG_ID,0) = ISNULL(PAYEE.PAYEE_ORG_ID,0) AND ISNULL(PHH.PERSON_ID,0) = ISNULL(PAYEE.PAYEE_PERSLINK_ID,0)&#xD;&#xA;LEFT OUTER JOIN --TO GET THE ROLLOVER ORG ID TO BE USED WHILE INSERTING GL ENTRIES&#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK) ON PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PAROD WITH(NOLOCK) ON PAROD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID AND PAROD.STATUS_VALUE = 'ACTV'&#xD;&#xA;WHERE   @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)  &#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--Rollover Items&#xD;&#xA;----Original block For Rollover Items other Roth IRA&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    PIT1.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PAPIT.AMOUNT,&#xD;&#xA;    PAPIT.VENDOR_ORG_ID AS VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;NULL AS ROLLOVER_ORG_ID  &#xD;&#xA;FROM   SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT    &#xD;&#xA; INNER JOIN  (SELECT PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;        AND PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;        AND BA.HARDSHIP_APPROVED_FLAG = 'Y'&#xD;&#xA;        AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE --PROD PIR 4919&#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 WITH(NOLOCK)&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;     AND PHH.ORG_ID = PARD.ROLLOVER_ORG_ID&#xD;&#xA;WHERE   @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA;     AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;     AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;     AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;&#x9; AND PARD.ROLLOVER_TYPE_VALUE NOT IN ('RIRA')&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;----Rollover Items for Roth IRA&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    PIT1.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    SUM(PAPIT.AMOUNT),&#xD;&#xA;    NULL AS VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;NULL AS ROLLOVER_ORG_ID  &#xD;&#xA;FROM   SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT    &#xD;&#xA; INNER JOIN  (SELECT PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;        AND PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;        AND BA.HARDSHIP_APPROVED_FLAG = 'Y'&#xD;&#xA;        AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE --PROD PIR 4919&#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 WITH(NOLOCK)&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;     AND PHH.ORG_ID = PARD.ROLLOVER_ORG_ID&#xD;&#xA;WHERE   @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA;     AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;     AND PARD.ROLLOVER_TYPE_VALUE = 'RIRA'&#xD;&#xA;        AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;&#x9;&#x9;GROUP BY PIT1.PAYMENT_ITEM_TYPE_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    PIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PAPIT.AMOUNT,&#xD;&#xA;    NULL AS VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;NULL AS ROLLOVER_ORG_ID  &#xD;&#xA;FROM   SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT    &#xD;&#xA; INNER JOIN  (SELECT PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;        AND PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;        AND BA.HARDSHIP_APPROVED_FLAG = 'Y'&#xD;&#xA;        AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE --PROD PIR 4919&#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;     AND PHH.ORG_ID = PARD.ROLLOVER_ORG_ID&#xD;&#xA;WHERE   @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA;     AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;&#x9; AND PIT.ITEM_TYPE_CODE IN ('ITEM216','ITEM215','ITEM219','ITEM218')&#xD;&#xA;     AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID, &#xD;&#xA;    PAPIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PAPIT.AMOUNT,&#xD;&#xA;    PAPIT.VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;PAROD.ROLLOVER_ORG_ID AS ROLLOVER_ORG_ID    &#xD;&#xA;FROM   SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;   on PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID --AND PIT.ITEM_TYPE_CODE NOT IN ('ITEM216','ITEM215','ITEM219','ITEM218')&#xD;&#xA; INNER JOIN  &#xD;&#xA;    (SELECT &#xD;&#xA;      PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;       ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;      INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;       ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;     WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;      AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;       (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;        FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;        WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;        AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;       )&#xD;&#xA;      AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;      AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;      AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN DBO.SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND PADR&#xD;&#xA;    ON PADR.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID   &#xD;&#xA;    AND PADR.PAYMENT_OPTION_VALUE = 'SPCL' AND PADR.PAYMENT_HISTORY_HEADER_ID IS NULL&#xD;&#xA;&#x9;LEFT OUTER JOIN --TO GET THE ROLLOVER ORG ID TO BE USED WHILE INSERTING GL ENTRIES&#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK) ON PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9;LEFT OUTER JOIN &#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PAROD WITH(NOLOCK) ON PAROD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID AND PAROD.STATUS_VALUE = 'ACTV'&#xD;&#xA;WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID, &#xD;&#xA;    PAPIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PAPIT.AMOUNT,&#xD;&#xA;    PAPIT.VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;PAROD.ROLLOVER_ORG_ID AS ROLLOVER_ORG_ID    &#xD;&#xA;FROM   SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;   on PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID --AND PIT.ITEM_TYPE_CODE NOT IN ('ITEM216','ITEM215','ITEM219','ITEM218')&#xD;&#xA; INNER JOIN  &#xD;&#xA;    (SELECT &#xD;&#xA;      PA.PAYEE_ACCOUNT_ID,PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;       ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;      INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;       ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;      INNER JOIN&#xD;&#xA;        (&#xD;&#xA;         SELECT  PAYEE_ACCOUNT_ID ,PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;         FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;         WHERE APPROVED_FLAG = 'Y' &#xD;&#xA;           AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;           AND (PAYMENT_HISTORY_HEADER_ID IS  NULL)           &#xD;&#xA;        ) AS RETRO&#xD;&#xA;       ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;      AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;       (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;        FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;        WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;        AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;       )&#xD;&#xA;      AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;      AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;      AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL RPD &#xD;&#xA;   ON PAYEE.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = RPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;   and PAPIT.PAYMENT_ITEM_TYPE_ID =RPD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   LEFT OUTER JOIN --TO GET THE ROLLOVER ORG ID TO BE USED WHILE INSERTING GL ENTRIES&#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK) ON PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PAROD WITH(NOLOCK) ON PAROD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID AND PAROD.STATUS_VALUE = 'ACTV'&#xD;&#xA;WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;---- PIR 2010&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID, &#xD;&#xA;    PAPIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PAPIT.AMOUNT,&#xD;&#xA;    PAPIT.VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;PAROD.ROLLOVER_ORG_ID AS ROLLOVER_ORG_ID    &#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID &#xD;&#xA; INNER JOIN  &#xD;&#xA;    (&#xD;&#xA;     SELECT &#xD;&#xA;      PA.PAYEE_ACCOUNT_ID,PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;       ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;      INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;       ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;      INNER JOIN&#xD;&#xA;        (&#xD;&#xA;         SELECT  PAYEE_ACCOUNT_ID ,PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;         FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;         WHERE APPROVED_FLAG = 'Y' &#xD;&#xA;           AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;           AND (PAYMENT_HISTORY_HEADER_ID IS  NULL)&#xD;&#xA;           AND RETRO_PAYMENT_TYPE_VALUE IN ('IRPM','REAC')&#xD;&#xA;         &#xD;&#xA;        ) AS RETRO&#xD;&#xA;       ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD')  &#xD;&#xA;      AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;       (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;        FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;        WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;        AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;       )&#xD;&#xA;      AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;      AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;      AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   LEFT OUTER JOIN --TO GET THE ROLLOVER ORG ID TO BE USED WHILE INSERTING GL ENTRIES&#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK) ON PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PAROD WITH(NOLOCK) ON PAROD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID AND PAROD.STATUS_VALUE = 'ACTV'&#xD;&#xA;  WHERE PAPIT.END_DATE IS NOT NULL&#xD;&#xA;   AND @PAYMENTDATE &lt; PAPIT.END_DATE &#xD;&#xA;   AND MONTH(PAPIT.START_DATE) = MONTH(PAPIT.END_DATE)&#xD;&#xA;   AND YEAR(PAPIT.START_DATE) = YEAR(PAPIT.END_DATE)&#xD;&#xA;   AND RECEIAVABLE_ITEM_FOR_RETRO_FLAG  = 'Y' &#xD;&#xA; -- AND PIT.ITEM_TYPE_CODE NOT IN ('ITEM216','ITEM215','ITEM219','ITEM218')&#xD;&#xA;&#xD;&#xA;----&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    EXREF.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    AMOUNT,&#xD;&#xA;    NULL AS VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;NULL AS ROLLOVER_ORG_ID    &#xD;&#xA;FROM  SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA; INNER JOIN &#xD;&#xA; (&#xD;&#xA;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;CASE WHEN R.REFUND_TO_VALUE = 'SMME' OR R.REFUND_TO_VALUE = 'ESME' OR R.REFUND_TO_VALUE ='DFME' THEN R.REFUND_TO_PERSON_ID ELSE NULL END AS PERSON_ID&#xD;&#xA;&#x9;&#x9;,CASE WHEN R.REFUND_TO_VALUE = 'SMOR' OR R.REFUND_TO_VALUE = 'DFOR' THEN R.REFUND_TO_ORG_ID ELSE NULL END AS ORG_ID&#xD;&#xA;&#x9;&#x9;,CASE WHEN R.OVERRIDDEN_REFUND_AMOUNT &gt; 0 THEN R.OVERRIDDEN_REFUND_AMOUNT ELSE R.COMPUTED_REFUND_AMOUNT END AS AMOUNT&#xD;&#xA;&#x9;&#x9;,CASE WHEN R.REMITTANCE_TYPE_VALUE IN ('SMNR','SESE') THEN @EXCESS_SEMINAR_REFUND_ID ELSE &#xD;&#xA;&#x9;&#x9;&#x9;CASE WHEN R.REMITTANCE_TYPE_VALUE IN ('PURC','PURE', 'PUER') THEN @EXCESS_PURCHASE_REFUND_ID ELSE&#xD;&#xA;&#x9;&#x9;&#x9;CASE WHEN R.REMITTANCE_TYPE_VALUE IN ( 'RHCO','RHPU','RERC','REMC','JSRH','JSRD','RHIC','RHIN','PREE','PRER','UREE','URER','P004') &#xD;&#xA;&#x9;&#x9;&#x9;THEN @EXCESS_RHIC_REFUND_ID ELSE&#xD;&#xA;&#x9;&#x9;&#x9;CASE WHEN R.REMITTANCE_TYPE_VALUE &lt;&gt; 'IBSD' AND P.BENEFIT_TYPE_VALUE = 'INSR' THEN @EXCESS_INSURANCE_REFUND_ID ELSE &#xD;&#xA;&#x9;&#x9;@EXCESSREFUNDID END END END END AS PAYMENT_ITEM_TYPE_ID, R.PLAN_ID AS PLAN_ID&#xD;&#xA;&#x9;   &#xD;&#xA;    FROM &#xD;&#xA;&#x9;&#x9;SGT_REMITTANCE R INNER JOIN SGT_PLAN P ON P.PLAN_ID = R.PLAN_ID&#xD;&#xA;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;R.REFUND_STATUS_VALUE = 'APRD' AND REMITTANCE_TYPE_VALUE NOT IN ('P501', 'P502', 'P503','P504','P505')&#xD;&#xA;) AS EXREF&#xD;&#xA;   ON ((PHH.PERSON_ID = EXREF.PERSON_ID&#xD;&#xA;   OR PHH.ORG_ID = EXREF.ORG_ID) AND (PHH.PLAN_ID = EXREF.PLAN_ID))&#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;       Where Phh.Payee_account_id is null&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID, &#xD;&#xA;    PAPIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PAPIT.AMOUNT,&#xD;&#xA;    PAPIT.VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;PAROD.ROLLOVER_ORG_ID AS ROLLOVER_ORG_ID   &#xD;&#xA;FROM   SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID &#xD;&#xA; INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID --AND PIT.ITEM_TYPE_CODE NOT IN ('ITEM216','ITEM215','ITEM219','ITEM218')&#xD;&#xA; INNER JOIN  &#xD;&#xA;    (SELECT &#xD;&#xA;      PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;       ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;      INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;       ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;     WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;      AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;       (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;        FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;        WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;        AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;       )&#xD;&#xA;      AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;      AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;      AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;      OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD')))&#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   LEFT OUTER JOIN --TO GET THE ROLLOVER ORG ID TO BE USED WHILE INSERTING GL ENTRIES&#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK) ON PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PAROD WITH(NOLOCK) ON PAROD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID AND PAROD.STATUS_VALUE = 'ACTV'    &#xD;&#xA;WHERE PAPIT.START_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND @PAYMENTDATE &lt;= (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE = 'SPCK'&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--PROD PIR 5695&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID, &#xD;&#xA;    PAPIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PAPIT.AMOUNT,&#xD;&#xA;    PAPIT.VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;PAROD.ROLLOVER_ORG_ID AS ROLLOVER_ORG_ID    &#xD;&#xA;FROM   SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID &#xD;&#xA; INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   --AND PIT.ITEM_TYPE_CODE NOT IN ('ITEM216','ITEM215','ITEM219','ITEM218')&#xD;&#xA; INNER JOIN  &#xD;&#xA;    (SELECT &#xD;&#xA;      PA.PAYEE_ACCOUNT_ID,PA.PAYEE_ORG_ID,PA.PAYEE_PERSLINK_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;       ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;      INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;       ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;     WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;      AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;       (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;        FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;        WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;        AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;       )&#xD;&#xA;      AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;      AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;      AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;      AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN --TO GET THE ROLLOVER ORG ID TO BE USED WHILE INSERTING GL ENTRIES&#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK) ON PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PAROD WITH(NOLOCK) ON PAROD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID AND PAROD.STATUS_VALUE = 'ACTV'    &#xD;&#xA;WHERE @PAYMENTDATE &lt;= (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;and ISNULL(PHH.ORG_ID,0) = ISNULL(PAYEE.PAYEE_ORG_ID,0) AND ISNULL(PHH.PERSON_ID,0) = ISNULL(PAYEE.PAYEE_PERSLINK_ID,0)&#xD;&#xA; &#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--PIR 8301&#xD;&#xA;&#xD;&#xA;--Rollover Items&#xD;&#xA;-----Original block for Rollover items than Roth IRA&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    PIT1.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PAPIT.AMOUNT,&#xD;&#xA;    PAPIT.VENDOR_ORG_ID AS VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;NULL AS ROLLOVER_ORG_ID  --PIR 938 - SO AS TO USE THIS WHILE MAKING GL ENTRIES&#xD;&#xA;FROM   SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT    &#xD;&#xA; INNER JOIN  (SELECT PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') &#xD;&#xA;        AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;        AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 WITH(NOLOCK)&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;     AND PHH.ORG_ID = PARD.ROLLOVER_ORG_ID&#xD;&#xA;WHERE   @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA;     AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;     AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED' &#xD;&#xA;        AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;&#x9;&#x9;AND PARD.ROLLOVER_TYPE_VALUE NOT IN ('RIRA')&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;---------Rollover Items for Roth IRA&#xD;&#xA;&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    PIT1.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    SUM(PAPIT.AMOUNT),&#xD;&#xA;    NULL AS VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;NULL AS ROLLOVER_ORG_ID  --PIR 938 - SO AS TO USE THIS WHILE MAKING GL ENTRIES&#xD;&#xA;FROM   SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT    &#xD;&#xA; INNER JOIN  (SELECT PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') &#xD;&#xA;        AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;        AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 WITH(NOLOCK)&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;     AND PHH.ORG_ID = PARD.ROLLOVER_ORG_ID&#xD;&#xA;WHERE   @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA;     AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;        AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;&#x9;&#x9;AND PARD.ROLLOVER_TYPE_VALUE in ('RIRA')&#xD;&#xA;&#x9;&#x9;GROUP BY PIT1.PAYMENT_ITEM_TYPE_ID,PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;-----for Roth Rollover Tax Items&#xD;&#xA;&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    PIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PAPIT.AMOUNT,&#xD;&#xA;    NULL AS VENDOR_ORG_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;    GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;    GETDATE() AS MODIFIED_DATE,&#xD;&#xA;    0 UPDATE_SEQ,&#xD;&#xA;&#x9;NULL AS ROLLOVER_ORG_ID  --PIR 938 - SO AS TO USE THIS WHILE MAKING GL ENTRIES&#xD;&#xA;FROM   SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT    &#xD;&#xA; INNER JOIN  (SELECT PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') &#xD;&#xA;        AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;        AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA;    ) AS PAYEE&#xD;&#xA;   ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;     AND PHH.ORG_ID = PARD.ROLLOVER_ORG_ID&#xD;&#xA;WHERE   @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA;     AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;     AND PIT.ITEM_TYPE_CODE IN ('ITEM216','ITEM215','ITEM219','ITEM218')&#xD;&#xA;        AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;&#x9;&#x9;AND PARD.ROLLOVER_TYPE_VALUE = 'RIRA'&#xD;&#xA;&#xD;&#xA;Update  EXREF &#xD;&#xA;  set EXREF.PAYMENT_HISTORY_HEADER_ID = PAYMENT.Payment_history_header_id ,&#xD;&#xA;   EXREF.modified_by='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;   EXREF.modified_date=getdate()&#xD;&#xA;FROM SGT_REMITTANCE EXREF INNER JOIN&#xD;&#xA;(  &#xD;&#xA;SELECT DEP.REMITTANCE_ID,PHH.Payment_history_header_id&#xD;&#xA;FROM SGT_REMITTANCE  DEP INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;ON ((PHH.PERSON_ID = DEP.REFUND_TO_PERSON_ID OR PHH.ORG_ID = DEP.REFUND_TO_ORG_ID) AND (DEP.PLAN_ID = PHH.PLAN_ID))&#xD;&#xA;WHERE DEP.REFUND_STATUS_VALUE = 'APRD' and&#xD;&#xA;PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID and&#xD;&#xA;PHH.Payee_account_id is null) PAYMENT ON EXREF.REMITTANCE_ID=PAYMENT.REMITTANCE_ID">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreateVendorPaymentHistoryDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select  payment_item_type_id,sum(a.amount) as amount&#xD;&#xA;from sgt_provider_report_payment a      (nolock)&#xD;&#xA;     where a.batch_request_id is null and a.provider_org_id=@ProviderOrgID&#xD;&#xA;     and a.effective_date &lt;= @paymentdate&#xD;&#xA;group by  payment_item_type_id&#xD;&#xA;having sum(a.amount) &gt; 0 ">
      <parameters>
        <parameter ID="@ProviderOrgID" sfwDataType="int" />
        <parameter ID="@paymentdate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="CreateReissuePaymentDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @EXCESSREFUNDID INT&#xD;&#xA;SELECT @EXCESSREFUNDID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM448' &#xD;&#xA;&#xD;&#xA;DECLARE @NETROLLOVERREISSUEID INT&#xD;&#xA;SELECT @NETROLLOVERREISSUEID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM463' &#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_DETAIL&#xD;&#xA;(&#xD;&#xA;PAYMENT_HISTORY_HEADER_ID, PAYMENT_ITEM_TYPE_ID, AMOUNT, VENDOR_ORG_ID, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT PAYMENT_HISTORY_HEADER_ID,PAYMENT_ITEM_TYPE_ID,AMOUNT,&#xD;&#xA;  VENDOR_ORG_ID,'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY,GETDATE() AS CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ  &#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;-- Rollover Re-issued to Rollover Organization&#xD;&#xA;&#xD;&#xA;SELECT  PAPIT.PAYEE_ACCOUNT_ID,phh.PAYMENT_HISTORY_HEADER_ID,PARD.ROLLOVER_ORG_ID,&#xD;&#xA;     @NETROLLOVERREISSUEID as PAYMENT_ITEM_TYPE_ID,SUM(PAPIT.AMOUNT) AS AMOUNT, NULL AS VENDOR_ORG_ID &#xD;&#xA;  FROM SGT_PAYMENT_HISTORY_HEADER phh&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;    ON  PAPIT.PAYEE_ACCOUNT_ID=phh.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 WITH(NOLOCK)&#xD;&#xA;    ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;     ON PAS.PAYEE_ACCOUNT_ID = phh.PAYEE_ACCOUNT_ID   &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;     ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;     ON PHH.PAYEE_aCCOUNT_ID=PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;   LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID=PA.APPLICATION_ID&#xD;&#xA; WHERE  ((pa.benefit_account_type_value='RFND' and CV.DATA2 = 'RPCD')or&#xD;&#xA;   (pa.benefit_account_type_value='RETR' and (isnull(ba.plso_requested_flag,'')='Y' or&#xD;&#xA;    pa.benefit_option_value='5YTL')) OR&#xD;&#xA;   (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')))&#xD;&#xA;    AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (   &#xD;&#xA;    SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   ) &#xD;&#xA;   AND @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;   AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;   AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'AND PAPIT.REISSUE_ITEM_FLAG='Y'&#xD;&#xA;   AND PARD.STATUS_VALUE = 'ACTV' and PARD.old_rollover_dtl_id is not null and PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;   and phh.ORG_ID is not null&#xD;&#xA;GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PIT1.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;   phh.PAYMENT_HISTORY_HEADER_ID,PARD.ROLLOVER_ORG_ID &#xD;&#xA;Union All&#xD;&#xA; -- Member to Rollover - Member&#xD;&#xA;SELECT  PAPIT.PAYEE_ACCOUNT_ID,phh.PAYMENT_HISTORY_HEADER_ID,null as ROLLOVER_ORG_ID,&#xD;&#xA;     PIT.PAYMENT_ITEM_TYPE_ID,SUM(PAPIT.AMOUNT) AS AMOUNT, NULL AS VENDOR_ORG_ID &#xD;&#xA;  FROM SGT_PAYMENT_HISTORY_HEADER phh&#xD;&#xA;   INNER JOIN&#xD;&#xA;   (&#xD;&#xA;    SELECT OLDPHH.PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER OLDPHH&#xD;&#xA;     INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLDCHECK&#xD;&#xA;      ON OLDPHH.PAYMENT_HISTORY_HEADER_ID=OLDCHECK.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;    WHERE (OLDCHECK.DISTRIBUTION_STATUS_VALUE='CRSA' OR&#xD;&#xA;        OLDCHECK.DISTRIBUTION_STATUS_VALUE='RAP') &#xD;&#xA;        AND OLDPHH.PAYMENT_DATE  &lt;= @PAYMENTDATE&#xD;&#xA;        AND ISNULL(OLDCHECK.REISSUE_TO_ROLLOVER_ORG_FLAG,'N') = 'Y'&#xD;&#xA;    )OLDCHK ON OLDCHK.PAYEE_ACCOUNT_ID=phh.PAYEE_ACCOUNT_ID AND PHH.ORG_ID IS NULL&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;    ON  PAPIT.PAYEE_ACCOUNT_ID=phh.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID    &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   LEFT JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;     ON PAS.PAYEE_ACCOUNT_ID = phh.PAYEE_ACCOUNT_ID   &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;     ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;     ON PHH.PAYEE_aCCOUNT_ID=PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;   LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID=PA.APPLICATION_ID&#xD;&#xA; WHERE  ((pa.benefit_account_type_value='RFND' and CV.DATA2 = 'RPCD')or&#xD;&#xA;   (pa.benefit_account_type_value='RETR' and (isnull(ba.plso_requested_flag,'')='Y' or&#xD;&#xA;    pa.benefit_option_value='5YTL')) OR&#xD;&#xA;   (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')))&#xD;&#xA;    AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (   &#xD;&#xA;    SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   ) &#xD;&#xA;   AND @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;   AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;--   AND( PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED' or PIT.ITEM_TYPE_CODE='ITEM448' )&#xD;&#xA;   AND PAPIT.REISSUE_ITEM_FLAG = 'Y'&#xD;&#xA;   AND PARD.STATUS_VALUE = 'ACTV' and PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PIT.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;   phh.PAYMENT_HISTORY_HEADER_ID,PARD.ROLLOVER_ORG_ID &#xD;&#xA;Union All&#xD;&#xA;--  Member to Rollover -rollover org&#xD;&#xA;SELECT  PAPIT.PAYEE_ACCOUNT_ID,phh.PAYMENT_HISTORY_HEADER_ID,PARD.ROLLOVER_ORG_ID,&#xD;&#xA;     PIT1.PAYMENT_ITEM_TYPE_ID,SUM(PAPIT.AMOUNT) AS AMOUNT, NULL AS VENDOR_ORG_ID &#xD;&#xA;  FROM SGT_PAYMENT_HISTORY_HEADER phh&#xD;&#xA;   INNER JOIN&#xD;&#xA;   (&#xD;&#xA;    SELECT OLDPHH.PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER OLDPHH&#xD;&#xA;     INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLDCHECK&#xD;&#xA;      ON OLDPHH.PAYMENT_HISTORY_HEADER_ID=OLDCHECK.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;    WHERE (OLDCHECK.DISTRIBUTION_STATUS_VALUE='CRSA' OR&#xD;&#xA;        OLDCHECK.DISTRIBUTION_STATUS_VALUE='RAP') &#xD;&#xA;        AND OLDPHH.PAYMENT_DATE  &lt;= @PAYMENTDATE&#xD;&#xA;        AND ISNULL(OLDCHECK.REISSUE_TO_ROLLOVER_ORG_FLAG,'N') = 'Y'&#xD;&#xA;    )OLDCHK ON OLDCHK.PAYEE_ACCOUNT_ID=phh.PAYEE_ACCOUNT_ID AND PHH.ORG_ID IS NOT NULL&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;    ON  PAPIT.PAYEE_ACCOUNT_ID=phh.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 WITH(NOLOCK)&#xD;&#xA;    ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;     ON PAS.PAYEE_ACCOUNT_ID = phh.PAYEE_ACCOUNT_ID   &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;     ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;     ON PHH.PAYEE_aCCOUNT_ID=PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;   LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID=PA.APPLICATION_ID&#xD;&#xA; WHERE  ((pa.benefit_account_type_value='RFND' and CV.DATA2 = 'RPCD')or&#xD;&#xA;   (pa.benefit_account_type_value='RETR' and (isnull(ba.plso_requested_flag,'')='Y' or&#xD;&#xA;    pa.benefit_option_value='5YTL')) OR&#xD;&#xA;   (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')))&#xD;&#xA;    AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (   &#xD;&#xA;    SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   ) &#xD;&#xA;   AND @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;   AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;   AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED' AND PAPIT.REISSUE_ITEM_FLAG='Y'&#xD;&#xA;   AND PARD.STATUS_VALUE = 'ACTV' and PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PIT1.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;   phh.PAYMENT_HISTORY_HEADER_ID,PARD.ROLLOVER_ORG_ID &#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA;--Rollover Reissue to Member&#xD;&#xA;-- ‘Reissue Rollover Taxable Amount’  Change the query below to update into this item after satya creates it &#xD;&#xA;&#xD;&#xA;-- Use this query below and get the items and call the calculate tax method and update in payment history detail &#xD;&#xA;-- to take care while coding &#xD;&#xA;  SELECT  PAPIT.PAYEE_ACCOUNT_ID,phh.PAYMENT_HISTORY_HEADER_ID,PARD.ROLLOVER_ORG_ID,&#xD;&#xA;   PAPIT.PAYMENT_ITEM_TYPE_ID,SUM(PAPIT.AMOUNT) AS AMOUNT, PAPIT.VENDOR_ORG_ID &#xD;&#xA;  FROM SGT_PAYMENT_HISTORY_HEADER phh&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;    ON PAPIT.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;       ON PARD.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID AND PARD.STATUS_VALUE = 'CANC'&#xD;&#xA;   LEFT JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD1&#xD;&#xA;       ON PARD1.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;     ON PAS.PAYEE_ACCOUNT_ID = phh.PAYEE_ACCOUNT_ID   &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;     ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;     ON PHH.PAYEE_aCCOUNT_ID=PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;   LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID=PA.APPLICATION_ID&#xD;&#xA;  WHERE PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID AND PARD1.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA;     AND @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;     AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;     AND PAPIT.REISSUE_ITEM_FLAG='Y'&#xD;&#xA;     AND ((pa.benefit_account_type_value='RFND' and CV.DATA2 = 'RPCD')or&#xD;&#xA;    (pa.benefit_account_type_value='RETR' and (isnull(ba.plso_requested_flag,'')='Y' or&#xD;&#xA;     pa.benefit_option_value='5YTL')) OR&#xD;&#xA;   (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')))&#xD;&#xA;    AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (   &#xD;&#xA;    SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   ) &#xD;&#xA;   AND PHH.ORG_ID IS NULL&#xD;&#xA;  GROUP BY PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;   phh.PAYMENT_HISTORY_HEADER_ID,PARD.ROLLOVER_ORG_ID,&#xD;&#xA;   PAPIT.PAYMENT_ITEM_TYPE_ID,PAPIT.VENDOR_ORG_ID &#xD;&#xA;&#xD;&#xA;union all&#xD;&#xA;--non- refund reissue&#xD;&#xA;SELECT  PHH.PAYEE_ACCOUNT_ID,phh.PAYMENT_HISTORY_HEADER_ID,null as ROLLOVER_ORG_ID,&#xD;&#xA;      162 AS PAYMENT_ITEM_TYPE_ID,SUM(OLD_HISTORY.OLD_AMOUNT) AS AMOUNT, null as VENDOR_ORG_ID &#xD;&#xA;  FROM SGT_PAYMENT_HISTORY_HEADER phh&#xD;&#xA;   --INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;        --ON PAPIT.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID   &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;     ON PAS.PAYEE_ACCOUNT_ID = phh.PAYEE_ACCOUNT_ID   &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;     ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;     ON PHH.PAYEE_aCCOUNT_ID=PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;&#x9;INNER JOIN&#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;SELECT SUM(AMOUNT*PAPIT.ITEM_TYPE_DIRECTION) as OLD_AMOUNT,OLD_DETL.PAYMENT_HISTORY_HEADER_ID from SGT_PAYMENT_HISTORY_DETAIL OLD_DETL&#xD;&#xA;&#x9;INNER JOIN SGT_PAYMENT_ITEM_TYPE PAPIT&#xD;&#xA;&#x9;ON PAPIT.PAYMENT_ITEM_TYPE_ID=OLD_DETL.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;&#x9;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD ON PHD.PAYMENT_HISTORY_HEADER_ID = OLD_DETL.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#x9;WHERE PHD.DISTRIBUTION_STATUS_VALUE NOT IN ('CERA', 'RERA', 'CEST', 'RSST')&#xD;&#xA;&#x9;GROUP BY OLD_DETL.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#x9;)AS OLD_HISTORY ON OLD_HISTORY.PAYMENT_HISTORY_HEADER_ID=phh.OLD_PAYMENT_HISTORY_HEADER_ID  &#xD;&#xA;   WHERE  pa.benefit_account_type_value&lt;&gt;'RFND' AND PA.BENEFIT_OPTION_VALUE NOT IN ('AURD','REFD','RGRD') and CV.DATA2 &lt;&gt; 'CNLD'&#xD;&#xA;       AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;      (&#xD;&#xA;       SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      ) &#xD;&#xA;       AND PA.BENEFIT_BEGIN_DATE &lt;=@PAYMENTDATE&#xD;&#xA;       --AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;       --AND PAPIT.REISSUE_ITEM_FLAG='Y' &#xD;&#xA;&#x9;   and PHH.OLD_PAYMENT_HISTORY_HEADER_ID IS NOT NULL&#xD;&#xA;       --AND PAPIT.START_DATE &lt;&gt; ISNULL(PAPIT.END_DATE,'99991231')&#xD;&#xA;       AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;   GROUP BY PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;     phh.PAYMENT_HISTORY_HEADER_ID--,PAPIT.PAYMENT_ITEM_TYPE_ID    &#xD;&#xA; &#xD;&#xA;union all&#xD;&#xA;--refund member to memeber&#xD;&#xA;SELECT  PHH.PAYEE_ACCOUNT_ID,phh.PAYMENT_HISTORY_HEADER_ID,null as ROLLOVER_ORG_ID,&#xD;&#xA;      162 AS PAYMENT_ITEM_TYPE_ID,SUM(OLD_HISTORY.OLD_AMOUNT) AS AMOUNT, null as VENDOR_ORG_ID &#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER phh&#xD;&#xA;   INNER JOIN&#xD;&#xA;   (&#xD;&#xA;    SELECT DISTINCT OLDPHH.PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER OLDPHH&#xD;&#xA;     INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLDCHECK&#xD;&#xA;      ON OLDPHH.PAYMENT_HISTORY_HEADER_ID=OLDCHECK.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;    WHERE (OLDCHECK.DISTRIBUTION_STATUS_VALUE='CRSA' OR&#xD;&#xA;        OLDCHECK.DISTRIBUTION_STATUS_VALUE='RAP') &#xD;&#xA;        AND OLDPHH.PAYMENT_DATE  &lt;= @PAYMENTDATE  &#xD;&#xA;        AND ISNULL(OLDCHECK.REISSUE_TO_ROLLOVER_ORG_FLAG,'N') = 'N'  &#xD;&#xA;    )OLDCHK ON OLDCHK.PAYEE_ACCOUNT_ID=phh.PAYEE_ACCOUNT_ID &#xD;&#xA;   --INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;        --ON PAPIT.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID   &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;     ON PAS.PAYEE_ACCOUNT_ID = phh.PAYEE_ACCOUNT_ID   &#xD;&#xA;   --INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;     --ON PIT.PAYMENT_ITEM_TYPE_ID = PAPIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;     ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;     ON PHH.PAYEE_aCCOUNT_ID=PA.PAYEE_ACCOUNT_ID &#xD;&#xA;&#x9;INNER JOIN&#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;SELECT SUM(AMOUNT*PAPIT.ITEM_TYPE_DIRECTION) as OLD_AMOUNT,OLD_DETL.PAYMENT_HISTORY_HEADER_ID from SGT_PAYMENT_HISTORY_DETAIL OLD_DETL&#xD;&#xA;&#x9;INNER JOIN SGT_PAYMENT_ITEM_TYPE PAPIT&#xD;&#xA;&#x9;ON PAPIT.PAYMENT_ITEM_TYPE_ID=OLD_DETL.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;&#x9;GROUP BY OLD_DETL.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#x9;)AS OLD_HISTORY ON OLD_HISTORY.PAYMENT_HISTORY_HEADER_ID=phh.OLD_PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHDIS  &#xD;&#xA;     on PHDIS.payment_history_header_id = PHH.OLD_PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; WHERE (PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD') OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND') and CV.DATA2 IN ('RPCD','TRMD') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (&#xD;&#xA;    SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   ) &#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;=@PAYMENTDATE&#xD;&#xA;  --AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)  &#xD;&#xA;  AND ISNULL(PHDIS.REISSUE_TO_ROLLOVER_ORG_FLAG,'N') = 'N'&#xD;&#xA;  --AND PAPIT.REISSUE_ITEM_FLAG='Y' and pit.item_type_code&lt;&gt;'ITEM451'&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;  --AND PAPIT.START_DATE &lt;&gt; ISNULL(PAPIT.END_DATE,'99991231')&#xD;&#xA; GROUP BY PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PHH.PAYMENT_HISTORY_HEADER_ID--,PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  &#xD;&#xA;----&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT  Null as PAYEE_ACCOUNT_ID,&#xD;&#xA;   PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;   null as ROLLOVER_ORG_ID,&#xD;&#xA;   @EXCESSREFUNDID,&#xD;&#xA;   AMOUNT,&#xD;&#xA;   NULL AS VENDOR_ORG_ID&#xD;&#xA;FROM  SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA; INNER JOIN (SELECT  CASE WHEN REFUND_TO_VALUE = 'SMME' OR REFUND_TO_VALUE = 'ESME' OR REFUND_TO_VALUE ='DFME' THEN REFUND_TO_PERSON_ID ELSE NULL END AS PERSON_ID,&#xD;&#xA;    CASE WHEN REFUND_TO_VALUE = 'SMOR' OR REFUND_TO_VALUE = 'DFOR' THEN REFUND_TO_ORG_ID ELSE NULL END AS ORG_ID,&#xD;&#xA;    CASE WHEN OVERRIDDEN_REFUND_AMOUNT &gt; 0 THEN OVERRIDDEN_REFUND_AMOUNT &#xD;&#xA;      ELSE COMPUTED_REFUND_AMOUNT END AS AMOUNT, PLAN_ID &#xD;&#xA;    FROM SGT_REMITTANCE WHERE REFUND_STATUS_VALUE = 'RIA'&#xD;&#xA;    ) AS EXREF&#xD;&#xA;   ON ((PHH.PERSON_ID = EXREF.PERSON_ID&#xD;&#xA;   OR PHH.ORG_ID = EXREF.ORG_ID) AND (PHH.PLAN_ID = EXREF.PLAN_ID))&#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;       Where Phh.Payee_account_id is null&#xD;&#xA;    and OLD_PAYMENT_HISTORY_HEADER_ID is not null &#xD;&#xA;     &#xD;&#xA;)TEMP order by PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Update  EXREF &#xD;&#xA;  set EXREF.PAYMENT_HISTORY_HEADER_ID = PAYMENT.Payment_history_header_id ,&#xD;&#xA;   EXREF.modified_by='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;   EXREF.modified_date=getdate()&#xD;&#xA;FROM SGT_REMITTANCE EXREF INNER JOIN&#xD;&#xA;(  &#xD;&#xA;SELECT DEP.REMITTANCE_ID,PHH.Payment_history_header_id&#xD;&#xA;FROM SGT_REMITTANCE  DEP INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;ON ((PHH.PERSON_ID = DEP.REFUND_TO_PERSON_ID OR PHH.ORG_ID = DEP.REFUND_TO_ORG_ID) AND (DEP.PLAN_ID = PHH.PLAN_ID))&#xD;&#xA;WHERE DEP.REFUND_STATUS_VALUE = 'RIA' and&#xD;&#xA;PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID and&#xD;&#xA;PHH.Payee_account_id is null and OLD_PAYMENT_HISTORY_HEADER_ID is not null)&#xD;&#xA;PAYMENT ON EXREF.REMITTANCE_ID=PAYMENT.REMITTANCE_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPensionReceivableHistory" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PR.*,PHH.PAYMENT_HISTORY_HEADER_ID,PHH.PLAN_ID,PHH.PERSON_ID,PHH.ORG_ID&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_RECOVERY PR WITH(NOLOCK) &#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID=PR.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK)&#xD;&#xA;   ON PHH.PAYMENT_HISTORY_HEADER_ID=PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK)&#xD;&#xA;   ON PIT.PAYMENT_ITEM_TYPE_ID=PHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID AND PIT.ITEM_TYPE_CODE='ITEM65'&#xD;&#xA;AND (PR.STATUS_VALUE='APRD' OR PR.STATUS_VALUE='INPR')">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreateEscheatReissuePaymentDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="INSERT INTO SGT_PAYMENT_HISTORY_DETAIL&#xD;&#xA;(&#xD;&#xA;PAYMENT_HISTORY_HEADER_ID, PAYMENT_ITEM_TYPE_ID, AMOUNT, VENDOR_ORG_ID, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT PAYMENT_HISTORY_HEADER_ID,PAYMENT_ITEM_TYPE_ID,AMOUNT,&#xD;&#xA;  VENDOR_ORG_ID,'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY,GETDATE() AS CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ  &#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;&#xD;&#xA;SELECT  PAPIT.PAYEE_ACCOUNT_ID,PHH.PAYMENT_HISTORY_HEADER_ID,PHH.ORG_ID as ROLLOVER_ORG_ID,&#xD;&#xA;      PAPIT.PAYMENT_ITEM_TYPE_ID, OLD_HISTORY.OLD_AMOUNT AS AMOUNT, null as VENDOR_ORG_ID &#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;   INNER JOIN&#xD;&#xA;     &#xD;&#xA;   (&#xD;&#xA;      SELECT RIPHH.PAYEE_ACCOUNT_ID,PLAN_ID,RIPHH.PAYMENT_HISTORY_HEADER_ID ,RIPHH.PERSON_ID,RIPHH.ORG_ID&#xD;&#xA;    FROM SGT_PAYMENT_HISTORY_DISTRIBUTION RIPHD &#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_HEADER RIPHH&#xD;&#xA;     ON RIPHD.PAYMENT_HISTORY_HEADER_ID = RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;    WHERE DISTRIBUTION_STATUS_VALUE IN('CERA','RERA') AND RIPHH.PAYMENT_DATE&lt;=@PAYMENTDATE&#xD;&#xA;   ) AS RISSUE ON PHH.PAYEE_ACCOUNT_ID=RISSUE.PAYEE_ACCOUNT_ID AND PHH.OLD_PAYMENT_HISTORY_HEADER_ID =RISSUE.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;        ON PAPIT.PAYEE_ACCOUNT_ID=RISSUE.PAYEE_ACCOUNT_ID  &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;     ON PIT.PAYMENT_ITEM_TYPE_ID=PAPIT.PAYMENT_ITEM_TYPE_ID AND PIT.ITEM_TYPE_CODE='ITEM458'&#xD;&#xA;&#xD;&#xA;&#x9;INNER JOIN&#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;SELECT SUM(AMOUNT*PAPITS.ITEM_TYPE_DIRECTION) as OLD_AMOUNT,OLD_DETL.PAYMENT_HISTORY_HEADER_ID from SGT_PAYMENT_HISTORY_DETAIL OLD_DETL&#xD;&#xA;&#x9;INNER JOIN SGT_PAYMENT_ITEM_TYPE PAPITS&#xD;&#xA;&#x9;ON PAPITS.PAYMENT_ITEM_TYPE_ID=OLD_DETL.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;&#x9;GROUP BY OLD_DETL.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#x9;)AS OLD_HISTORY ON OLD_HISTORY.PAYMENT_HISTORY_HEADER_ID=PHH.OLD_PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;&#x9; &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;     ON PAS.PAYEE_ACCOUNT_ID = RISSUE.PAYEE_ACCOUNT_ID   &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;     ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE   &#xD;&#xA; WHERE  (CV.DATA2 &lt;&gt; 'CNLD')&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (&#xD;&#xA;    SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = RISSUE.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )   &#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;  AND PAPIT.REISSUE_ITEM_FLAG='Y' &#xD;&#xA;group by&#xD;&#xA; PAPIT.PAYEE_ACCOUNT_ID,PHH.PAYMENT_HISTORY_HEADER_ID,PHH.ORG_ID,&#xD;&#xA;      PAPIT.PAYMENT_ITEM_TYPE_ID, OLD_HISTORY.OLD_AMOUNT&#xD;&#xA;)TEMP order by PAYMENT_HISTORY_HEADER_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadGHDVAccounts" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PHH.PAYEE_ACCOUNT_ID,GHDV.*, PERACCT.*,PAYELEC.*&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PAY ON PHH.PAYEE_ACCOUNT_ID = PAY.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT JOIN (SELECT GHDVHIST.*,ACCT.PERSON_ID,ACCT.PERSON_ACCOUNT_ID,ACCT.PLAN_ID FROM SGT_PERSON_ACCOUNT ACCT &#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIST ON GHDVHIST.PERSON_ACCOUNT_GHDV_ID = GHDV.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;   WHERE @PAYMENTDATE BETWEEN GHDVHIST.START_DATE AND ISNULL(GHDVHIST.END_DATE,'99991231') AND GHDVHIST.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' --Backlog PIR 10982&#xD;&#xA;   AND GHDVHIST.START_DATE &lt;&gt; CASE WHEN GHDVHIST.END_DATE IS NOT NULL &#xD;&#xA;    THEN GHDVHIST.END_DATE ELSE '99991231' END) &#xD;&#xA; PERSACCT12 ON PAY.PAYEE_PERSLINK_ID = PERSACCT12.PERSON_ID AND PERSACCT12.PLAN_ID = 12&#xD;&#xA;LEFT JOIN (SELECT GHDVHIST.*,ACCT.PERSON_ID,ACCT.PERSON_ACCOUNT_ID,ACCT.PLAN_ID FROM SGT_PERSON_ACCOUNT ACCT &#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIST ON GHDVHIST.PERSON_ACCOUNT_GHDV_ID = GHDV.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;   WHERE @PAYMENTDATE BETWEEN GHDVHIST.START_DATE AND ISNULL(GHDVHIST.END_DATE,'99991231') AND GHDVHIST.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' --Backlog PIR 10982&#xD;&#xA;   AND GHDVHIST.START_DATE &lt;&gt; CASE WHEN GHDVHIST.END_DATE IS NOT NULL &#xD;&#xA;    THEN GHDVHIST.END_DATE ELSE '99991231' END) &#xD;&#xA; PERSACCT09 ON PAY.PAYEE_PERSLINK_ID = PERSACCT09.PERSON_ID AND PERSACCT09.PLAN_ID = 9&#xD;&#xA;LEFT JOIN SGT_PERSON_ACCOUNT_GHDV GHDV ON GHDV.PERSON_ACCOUNT_ID = COALESCE(PERSACCT12.PERSON_ACCOUNT_ID,PERSACCT09.PERSON_ACCOUNT_ID)&#xD;&#xA;LEFT JOIN SGT_PERSON_ACCOUNT PERACCT ON GHDV.PERSON_ACCOUNT_ID = PERACCT.PERSON_ACCOUNT_ID&#xD;&#xA;LEFT JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION PAYELEC ON PAYELEC.PERSON_ACCOUNT_ID = PERACCT.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;AND GHDV.PERSON_ACCOUNT_ID IS NOT NULL">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPaymentDeductionsForVendorPayment" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @PAYMENTDATE DATETIME&#xD;&#xA;SELECT @PAYMENTDATE = PAYMENT_DATE FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;&#xD;&#xA;SELECT   B.ORG_ID , A.PAYMENT_ITEM_TYPE_ID, C.ITEM_TYPE_DESCRIPTION, C.ITEM_TYPE_DIRECTION,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_DIRECTION = 1 AND C.REISSUE_ITEMS_FLAG = 'N' THEN A.AMOUNT ELSE 0 END)  AS LTD_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN B.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND C.ITEM_TYPE_DIRECTION = 1 AND PHDN.PAYMENT_METHOD_VALUE ='CHK' THEN AMOUNT ELSE 0 END) AS FTM_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN YEAR(B.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND C.ITEM_TYPE_DIRECTION = 1 AND C.REISSUE_ITEMS_FLAG = 'N' THEN AMOUNT ELSE 0 END) AS YTD_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_DIRECTION = -1 THEN AMOUNT ELSE 0 END)  AS LTD_DEDUCTION,&#xD;&#xA;     SUM(CASE WHEN B.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND C.ITEM_TYPE_DIRECTION = -1 AND PHDN.PAYMENT_METHOD_VALUE ='CHK' THEN AMOUNT ELSE 0 END) AS FTM_DEDUCTION,&#xD;&#xA;     SUM(CASE WHEN YEAR(B.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND C.ITEM_TYPE_DIRECTION = -1 THEN AMOUNT ELSE 0 END) AS YTD_DEDUCTION&#xD;&#xA;FROM    SGT_PAYMENT_HISTORY_DETAIL A WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER B WITH(NOLOCK) &#xD;&#xA;     ON A.PAYMENT_HISTORY_HEADER_ID = B.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE C WITH(NOLOCK) &#xD;&#xA;     ON C.PAYMENT_ITEM_TYPE_ID = A.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN (SELECT HED.ORG_ID &#xD;&#xA;    FROM SGT_PAYMENT_HISTORY_HEADER HED &#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION DIST&#xD;&#xA;    ON DIST.PAYMENT_HISTORY_HEADER_ID = HED.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;    WHERE HED.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND DIST.PAYMENT_METHOD_VALUE = 'CHK') D&#xD;&#xA;     ON B.ORG_ID = D.ORG_ID&#xD;&#xA; LEFT OUTER JOIN (&#xD;&#xA;     SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID,PAYMENT_METHOD_VALUE,PAYMENT_METHOD_ID FROM &#xD;&#xA;      SGT_PAYMENT_HISTORY_DISTRIBUTION WITH(NOLOCK)&#xD;&#xA;    ) AS PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = A.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;WHERE    C.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;GROUP BY   B.ORG_ID , A.PAYMENT_ITEM_TYPE_ID, C.ITEM_TYPE_DESCRIPTION,C.ITEM_TYPE_DIRECTION&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT   B.ORG_ID , A.PAYMENT_ITEM_TYPE_ID, C.ITEM_TYPE_DESCRIPTION, C.ITEM_TYPE_DIRECTION,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_DIRECTION = 1 AND C.REISSUE_ITEMS_FLAG = 'N' THEN AMOUNT ELSE 0 END)  AS LTD_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN B.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND C.ITEM_TYPE_DIRECTION = 1 AND PHDN.PAYMENT_METHOD_VALUE ='RCHK' THEN AMOUNT ELSE 0 END) AS FTM_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN YEAR(B.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND C.ITEM_TYPE_DIRECTION = 1 AND C.REISSUE_ITEMS_FLAG = 'N' THEN AMOUNT ELSE 0 END) AS YTD_PAYMENT,&#xD;&#xA;     SUM(CASE WHEN C.ITEM_TYPE_DIRECTION = -1 THEN AMOUNT ELSE 0 END)  AS LTD_DEDUCTION,&#xD;&#xA;     SUM(CASE WHEN B.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND C.ITEM_TYPE_DIRECTION = -1 AND PHDN.PAYMENT_METHOD_VALUE ='RCHK' THEN AMOUNT ELSE 0 END) AS FTM_DEDUCTION,&#xD;&#xA;     SUM(CASE WHEN YEAR(B.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND C.ITEM_TYPE_DIRECTION = -1 THEN AMOUNT ELSE 0 END) AS YTD_DEDUCTION&#xD;&#xA;FROM    SGT_PAYMENT_HISTORY_DETAIL A WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER B WITH(NOLOCK) &#xD;&#xA;     ON A.PAYMENT_HISTORY_HEADER_ID = B.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE C WITH(NOLOCK) &#xD;&#xA;     ON C.PAYMENT_ITEM_TYPE_ID = A.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN (SELECT HED.ORG_ID &#xD;&#xA;    FROM SGT_PAYMENT_HISTORY_HEADER HED &#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION DIST&#xD;&#xA;    ON DIST.PAYMENT_HISTORY_HEADER_ID = HED.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;    WHERE HED.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND DIST.PAYMENT_METHOD_VALUE = 'RCHK') D&#xD;&#xA;     ON B.ORG_ID = D.ORG_ID&#xD;&#xA; LEFT OUTER JOIN (&#xD;&#xA;     SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID,PAYMENT_METHOD_VALUE,PAYMENT_METHOD_ID,ORG_ID FROM &#xD;&#xA;      SGT_PAYMENT_HISTORY_DISTRIBUTION WITH(NOLOCK)&#xD;&#xA;    ) AS PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = A.PAYMENT_HISTORY_HEADER_ID AND PHDN.ORG_ID = B.ORG_ID&#xD;&#xA;WHERE    C.ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;GROUP BY   B.ORG_ID , A.PAYMENT_ITEM_TYPE_ID, C.ITEM_TYPE_DESCRIPTION,C.ITEM_TYPE_DIRECTION">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPaymentHistoryDetailsFromDB" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PAYMENT_HISTORY_HEADER H WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DETAIL D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID = D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON D.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE H.PAYMENT_HISTORY_HEADER_ID = @PAYMENTHISTORYHEADERID&#xD;&#xA;ORDER BY PIT.PAYMENT_ITEM_TYPE_ID">
      <parameters>
        <parameter ID="@PAYMENTHISTORYHEADERID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadYTDByPaymentItemTypeID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(D.AMOUNT) FROM SGT_PAYMENT_HISTORY_DETAIL D WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER H WITH(NOLOCK) ON D.PAYMENT_HISTORY_HEADER_ID = H.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = D.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE ISNULL(H.PAYEE_ACCOUNT_ID,0) = @PAYEEACCOUNTID &#xD;&#xA;AND D.PAYMENT_ITEM_TYPE_ID = @PAYMENTITEMTYPEID&#xD;&#xA;AND YEAR(H.PAYMENT_DATE) = YEAR(@PAYMENTDATE) &#xD;&#xA;AND PIT.REISSUE_ITEMS_FLAG = CASE WHEN PIT.ITEM_TYPE_DIRECTION = -1 THEN  PIT.REISSUE_ITEMS_FLAG &#xD;&#xA;ELSE 'N' END">
      <parameters>
        <parameter ID="@PAYEEACCOUNTID" sfwDataType="int" />
        <parameter ID="@PAYMENTITEMTYPEID" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="CreateEscheatToStatePaymentDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @PAYMENTTYPEID INT&#xD;&#xA;select @PAYMENTTYPEID = payment_item_type_id from SGT_PAYMENT_ITEM_TYPE where ITEM_TYPE_CODE = 'ITEM457'&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_DETAIL&#xD;&#xA;(&#xD;&#xA;PAYMENT_HISTORY_HEADER_ID, PAYMENT_ITEM_TYPE_ID, AMOUNT, VENDOR_ORG_ID, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#x9;,@PAYMENTTYPEID&#xD;&#xA;&#x9;,ESCHEATSTATE.Amount&#xD;&#xA;&#x9;,NULL&#xD;&#xA;&#x9;,'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid)&#xD;&#xA;&#x9;,getdate()&#xD;&#xA;&#x9;,'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid)&#xD;&#xA;&#x9;,getdate()&#xD;&#xA;&#x9;,0&#xD;&#xA;&#x9;&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;INNER JOIN &#xD;&#xA; &#xD;&#xA; ( SELECT STATEPHH.PAYMENT_HISTORY_HEADER_ID, SUM(DETAIL.AMOUNT * PIT.ITEM_TYPE_DIRECTION) as Amount&#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION STATEPHD WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER STATEPHH WITH(NOLOCK)&#xD;&#xA;    ON STATEPHD.PAYMENT_HISTORY_HEADER_ID = STATEPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;&#x9;INNER JOIN SGT_PAYMENT_HISTORY_DETAIL DETAIL WITH(NOLOCK) ON DETAIL.PAYMENT_HISTORY_HEADER_ID = STATEPHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#x9;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = DETAIL.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   WHERE STATEPHD.DISTRIBUTION_STATUS_VALUE IN('CEST','RSST') AND STATEPHH.PAYMENT_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   GROUP by STATEPHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  ) AS ESCHEATSTATE ON ESCHEATSTATE.PAYMENT_HISTORY_HEADER_ID = PHH.OLD_PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;WHERE PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="PaymentHistoryDetailId" sfwType="Column" sfwValue="payment_history_detail_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="True" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PaymentHistoryHeaderId" sfwType="Column" sfwValue="payment_history_header_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PaymentItemTypeId" sfwType="Column" sfwValue="payment_item_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="Amount" sfwType="Column" sfwValue="amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="RolloverOrgId" sfwType="Column" sfwValue="rollover_org_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="VendorOrgId" sfwType="Column" sfwValue="vendor_org_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="objPaymentItemType" sfwType="Object" sfwEntity="entPaymentItemType" sfwValue="ibusPaymentItemType" />
  </attributes>
</entity>