<entity ID="entPaymentSchedule" sfwActive="True" sfwStatus="Valid" sfwType="BusinessRule" sfwMainCDO="icdoPaymentSchedule" sfwObjectID="busPaymentSchedule" sfwTableName="sgt_payment_schedule">
  <rules>
    <rule ID="IsEffctiveDateLessThanPaymentDate" sfwMessageId="6412" sfwExpression="!(this.icdoPaymentSchedule.effective_date == DateTime.MinValue) &amp;&amp; &#xA;!(this.icdoPaymentSchedule.payment_date == DateTime.MinValue) &amp;&amp; &#xA;(!(this.icdoPaymentSchedule.action_status_value == &quot;RDFN&quot;) &amp;&amp; &#xA;!(this.icdoPaymentSchedule.status_value == &quot;PRCD&quot;)) &amp;&amp; &#xA;(this.icdoPaymentSchedule.effective_date &lt; this.icdoPaymentSchedule.payment_date)" sfwObjectBased="True" />
    <rule ID="IsEffectiveDateNotValid" sfwMessageId="6430" sfwExpression="(this.IsEffectiveDateSameMonthAsPaymentDate() == False)" sfwObjectBased="True" />
    <rule ID="IsEffectiveDateNull" sfwMessageId="6402" sfwExpression="(this.icdoPaymentSchedule.effective_date == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="IsPaymentDateInvalid" sfwMessageId="6406" sfwExpression="!(this.icdoPaymentSchedule.payment_date == DateTime.MinValue) &amp;&amp; &#xA;(this.icdoPaymentSchedule.schedule_type_value == &quot;MTLY&quot;) &amp;&amp; &#xA;(this.icdoPaymentSchedule.payment_date != this.idtNextBenefitPaymentDate)" sfwObjectBased="True" />
    <rule ID="IsPaymentDateNull" sfwMessageId="6401" sfwExpression="(this.icdoPaymentSchedule.payment_date == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="IsPaymentScheduleAlreadyExist" sfwMessageId="6405" sfwExpression="(this.IsRecordExistforNextPaymentDate() == True)" sfwObjectBased="True" />
    <rule ID="IsScheduleTypeNull" sfwMessageId="6403" sfwExpression="(string.IsNullOrEmpty(this.icdoPaymentSchedule.schedule_type_value))" sfwObjectBased="True" />
    <rule ID="VisbleRuleReadyForFinalButton" sfwExpression="((this.icdoPaymentSchedule.status_value == &quot;VALD&quot;) &amp;&amp; &#xA;(this.icdoPaymentSchedule.action_status_value == &quot;TREX&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleRuleCancelButton" sfwExpression="!(this.icdoPaymentSchedule.status_value == &quot;PRCD&quot;) &amp;&amp; &#xA;!(this.icdoPaymentSchedule.action_status_value == &quot;CNLD&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleFieldsNotReadOnly" sfwExpression="!(this.icdoPaymentSchedule.action_status_value == &quot;RDFN&quot;) &amp;&amp; &#xA;!(this.icdoPaymentSchedule.status_value == &quot;PRCD&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleFieldsReadonly" sfwExpression="(this.icdoPaymentSchedule.status_value == &quot;PRCD&quot;) || &#xA;(this.icdoPaymentSchedule.action_status_value == &quot;RDFN&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForSaveButton" sfwExpression="!(this.icdoPaymentSchedule.status_value == &quot;PRCD&quot;) &amp;&amp; &#xA;!(this.icdoPaymentSchedule.action_status_value == &quot;CNLD&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleRunTrialButton" sfwExpression="(this.IsRunTrialReportsbuttonVisible() == True)" sfwObjectBased="True" />
  </rules>
  <delete />
  <checklist />
  <initialload>
    <item ID="VisibleRuleCancelButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisbleRuleReadyForFinalButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleRunTrialButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForSaveButton" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleFieldsReadonly" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleFieldsNotReadOnly" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror />
  <harderror>
    <item ID="IsPaymentDateNull" sfwMode="All" sfwStatus="Active" />
    <item ID="IsEffectiveDateNull" sfwMode="All" sfwStatus="Active" />
    <item ID="IsScheduleTypeNull" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPaymentScheduleAlreadyExist" sfwMode="All" sfwStatus="Active" />
    <item ID="IsEffctiveDateLessThanPaymentDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPaymentDateInvalid" sfwMode="All" sfwStatus="Active" />
    <item ID="IsEffectiveDateNotValid" sfwMode="All" sfwStatus="Active" />
  </harderror>
  <validatedelete />
  <updateablecdo />
  <queries>
    <query ID="GetRecentPaymentDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MAX(PAYMENT_DATE) FROM SGT_PAYMENT_SCHEDULE (nolock) Where SCHEDULE_TYPE_VALUE = 'MTLY' and STATUS_VALUE = 'PRCD'">
      <parameters />
    </query>
    <query ID="Lookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select * from sgt_payment_schedule (nolock) where schedule_type_value &lt;&gt; 'VNPM'  order by payment_date desc">
      <parameters />
    </query>
    <query ID="LoadPaymentScheduleSteps" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgt_payment_schedule_step a (nolock) inner join &#xD;&#xA;sgt_payment_step_ref b on a.payment_step_id=b.payment_step_id&#xD;&#xA;where a.payment_schedule_id=@scheduleid">
      <parameters>
        <parameter ID="@scheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountsForPaymentProcess" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA; PA.*&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV (nolock)&#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD')  -- OR CV.DATA2 = 'DCRC'&#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA; AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadMonthlyScheduleSteps" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="WITH PARENT(PAYMENT_SCHEDULE_STEP_ID,PAYMENT_SCHEDULE_ID,PAYMENT_STEP_ID,STEP_NAME,ACTIVE_FLAG,STATUS_ID,STATUS_VALUE,RUN_SEQUENCE,UPDATE_SEQ)&#xD;&#xA;AS&#xD;&#xA;(&#xD;&#xA; SELECT PSS.PAYMENT_SCHEDULE_STEP_ID,PSS.PAYMENT_SCHEDULE_ID,PS.PAYMENT_STEP_ID,PS.STEP_NAME,&#xD;&#xA; PS.ACTIVE_FLAG,PSS.STATUS_ID,PSS.STATUS_VALUE,&#xD;&#xA; PS.RUN_SEQUENCE,PSS.UPDATE_SEQ&#xD;&#xA;  FROM SGT_PAYMENT_SCHEDULE_STEP PSS (nolock)&#xD;&#xA; INNER JOIN SGT_PAYMENT_STEP_REF PS (nolock) ON PSS.PAYMENT_STEP_ID = PS.PAYMENT_STEP_ID &#xD;&#xA; WHERE MAIN_STEP_ID IS NULL AND &#xD;&#xA; PSS.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA; &#xD;&#xA;    UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT PSS.PAYMENT_SCHEDULE_STEP_ID,PSS.PAYMENT_SCHEDULE_ID,PS.PAYMENT_STEP_ID,PS.STEP_NAME,&#xD;&#xA; PS.ACTIVE_FLAG,PSS.STATUS_ID,PSS.STATUS_VALUE,&#xD;&#xA; PS.RUN_SEQUENCE,PSS.UPDATE_SEQ&#xD;&#xA;  FROM SGT_PAYMENT_SCHEDULE_STEP PSS (nolock)&#xD;&#xA; INNER JOIN SGT_PAYMENT_STEP_REF PS  (nolock) ON PSS.PAYMENT_STEP_ID = PS.PAYMENT_STEP_ID &#xD;&#xA; INNER JOIN PARENT AS D ON PS.MAIN_STEP_ID  = D.PAYMENT_STEP_ID&#xD;&#xA; AND PSS.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID &#xD;&#xA;)&#xD;&#xA;SELECT * &#xD;&#xA; FROM PARENT  &#xD;&#xA; ORDER BY RUN_SEQUENCE&#xD;&#xA; OPTION (MAXRECURSION 32767);&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="ReloadPaymentStepRef" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select psr.* from sgt_payment_schedule_step pss   &#xD;&#xA;inner join sgt_payment_step_ref psr on  pss.payment_step_id=psr.payment_step_id&#xD;&#xA;where payment_schedule_id = @paymentScheduleid and active_flag = 'Y'&#xD;&#xA;union &#xD;&#xA;select * from sgt_payment_step_ref where active_flag = 'Y'&#xD;&#xA;and schedule_type_value = @sheduletype&#xD;&#xA;">
      <parameters>
        <parameter ID="@paymentScheduleid" sfwDataType="int" />
        <parameter ID="@sheduletype" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadSheduleTypes" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgs_code_value where code_id=2501 and data1='Y'">
      <parameters />
    </query>
    <query ID="GetRecentCheckEffectiveDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MAX(EFFECTIVE_DATE) FROM SGT_PAYMENT_SCHEDULE (nolock) Where SCHEDULE_TYPE_VALUE = 'MTLY' and STATUS_VALUE = 'PRCD'">
      <parameters />
    </query>
    <query ID="LoadTrialMonthlyRefundsWithPayrollAdjustments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="WITH CTE_MYCTE&#xD;&#xA;AS&#xD;&#xA;(&#x9;SELECT&#xD;&#xA;&#x9;   SPA.PERSON_ID&#xD;&#xA;&#x9;  ,PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;   ,SUM(ISNULL(SPARC.SALARY_AMOUNT, 0)) AS SALARY_AMOUNT&#xD;&#xA;&#x9;   ,SUM(ISNULL(SPARC.ER_VESTED_AMOUNT, 0)) AS ER_VESTED_AMOUNT&#xD;&#xA;&#x9;   ,SUM(ISNULL(SPARC.PRE_TAX_ER_AMOUNT, 0)) AS PRE_TAX_ER_AMOUNT&#xD;&#xA;&#x9;   ,CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0)) AS PAY_PERIOD_DATE&#xD;&#xA;&#x9;   ,(&#x9;&#xD;&#xA;&#x9;   &#xD;&#xA;&#x9;&#x9;&#x9;SELECT&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SUM(CONT.PAY_PERIOD_CONTRIBUTION_AMOUNT) AS CONTRIBUTION_AMOUNT&#xD;&#xA;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_DEFERRED_COMP_CONTRIBUTION CONT WITH (NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH (NOLOCK) ON ACCT.PERSON_ACCOUNT_ID = CONT.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE ACCT.PLAN_ID IN (8, 19)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  AND ACCT.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;      AND CONT.PAY_PERIOD_END_DATE &gt;= DATEADD(MM, DATEDIFF(MM, 0, CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0))), 0)&#xD;&#xA;&#x9;&#x9;&#x9;      AND CONT.PAY_PERIOD_END_DATE &lt;= DATEADD(DAY, -1, DATEADD(MONTH, DATEDIFF(MONTH, 0, CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0))) + 1, 0))&#xD;&#xA;&#x9;&#x9;&#x9;GROUP BY ACCT.PERSON_ID&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;) AS DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xD;&#xA;&#x9;   ,(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SUM(VESTED_SERVICE_CREDIT) AS VESTED_SERVICE_CREDIT&#xD;&#xA;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION CONT WITH (NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH (NOLOCK) ON ACCT.PERSON_ACCOUNT_ID = CONT.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE ACCT.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND EFFECTIVE_DATE &lt;= sparc.EFFECTIVE_DATE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND SUBSYSTEM_VALUE &lt;&gt; (CASE WHEN PLAN_PARTICIPATION_STATUS_VALUE &lt;&gt; 'WTN1' THEN 'PMNT' ELSE '' END)&#xD;&#xA;&#x9;&#x9;&#x9;GROUP BY ACCT.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;) AS MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE&#xD;&#xA;&#x9;FROM &#xD;&#xA;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH (NOLOCK)&#xD;&#xA;&#x9;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH (NOLOCK) ON SPARC.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;AND SPA.PLAN_PARTICIPATION_STATUS_VALUE NOT LIKE '%CAN%'&#xD;&#xA;&#x9;&#x9;AND SPA.PLAN_PARTICIPATION_STATUS_VALUE NOT IN ('TRDC', 'TICR')&#xD;&#xA;&#x9;&#x9;AND SPARC.EFFECTIVE_DATE &gt;= '07/01/2010'&#xD;&#xA;&#x9;INNER JOIN SGT_PLAN P WITH (NOLOCK)&#xD;&#xA;&#x9;&#x9;ON P.PLAN_ID = SPA.PLAN_ID&#xD;&#xA;&#x9;&#x9;AND P.BENEFIT_TYPE_VALUE = 'RETR' AND P.ALLOW_PEP_CALCULATION = 1&#xD;&#xA;&#x9;INNER JOIN (SELECT BAPA.PERSON_ACCOUNT_ID, BAA.BENEFIT_APPLICATION_ID FROM SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) INNER JOIN SGT_BENEFIT_APPLICATION BAA ON BAA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID AND BAA.ACTION_STATUS_VALUE != 'CANC' AND ISNULL(BAPA.IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y') BAAPA ON BAAPA.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.APPLICATION_ID = BAAPA .BENEFIT_APPLICATION_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE = 'REFD'))  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND ISNULL(PA.BENEFIT_BEGIN_DATE, '99991231') &lt;= @PAYMENTDATE&#xD;&#xA;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(PA.PAYEE_ACCOUNT_ID = PAS.PAYEE_ACCOUNT_ID)&#xD;&#xA;&#x9;INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE AND &#xD;&#xA;&#x9;(CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD') AND &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;WHERE SPARC.SUBSYSTEM_VALUE != 'PMNT'&#xD;&#xA;&#x9;GROUP BY &#xD;&#xA;&#x9;&#x9;&#x9; SPA.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9; ,PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;--,CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0))&#xD;&#xA;&#x9;&#x9;&#x9;,sparc.EFFECTIVE_DATE&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;),&#xD;&#xA;CTE_SECONDCTE&#xD;&#xA;AS&#xD;&#xA;(&#x9;SELECT&#xD;&#xA;&#x9;   PERSON_ID&#xD;&#xA;&#x9;  ,PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;   ,SALARY_AMOUNT&#xD;&#xA;&#x9;   ,ER_VESTED_AMOUNT&#xD;&#xA;&#x9;   ,PRE_TAX_ER_AMOUNT&#xD;&#xA;&#x9;   ,PAY_PERIOD_DATE&#xD;&#xA;&#x9;   ,ISNULL(DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE,0) AS DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xD;&#xA;&#x9;   ,ISNULL(MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE,0) AS MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE&#xD;&#xA;&#x9;   ,(&#xD;&#xA;&#x9;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 36.0001 AND 1000000.0000 THEN 0.04&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 24.0001 AND 36.0000 THEN 0.03&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 12.0001 AND 24.0000 THEN 0.02&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 0.0000 AND 12.0001 THEN 0.01&#xD;&#xA;&#x9;&#x9;&#x9;END&#xD;&#xA;&#x9;&#x9;) AS VESTED_ER_PERCENTAGE&#xD;&#xA;&#x9;   ,ROUND(((CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 36.0001 AND 1000000.0000 THEN 0.04&#xD;&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 24.0001 AND 36.0000 THEN 0.03&#xD;&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 12.0001 AND 24.0000 THEN 0.02&#xD;&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 0.0000 AND 12.0001 THEN 0.01&#xD;&#xA;&#x9;&#x9;END) * SALARY_AMOUNT), 2&#xD;&#xA;&#x9;&#x9;) AS VESTED_ER_CALCULATED_FROM_SALARY&#xD;&#xA;&#x9;FROM CTE_MYCTE&#xD;&#xA;),&#xD;&#xA;MY_UTILITY_CTE AS &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;*&#xD;&#xA;&#x9;&#x9;,CASE &#xD;&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &lt; 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; 0 THEN 0&#xD;&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE = 25 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &lt;= 25 THEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; 25 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &lt;= 25 THEN 25&#xD;&#xA;&#x9;&#x9;&#x9;WHEN VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; VESTED_ER_CALCULATED_FROM_SALARY THEN VESTED_ER_CALCULATED_FROM_SALARY &#xD;&#xA;&#x9;&#x9;&#x9;WHEN VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt;= 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &lt; VESTED_ER_CALCULATED_FROM_SALARY THEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE = 0 OR VESTED_ER_CALCULATED_FROM_SALARY = 0 THEN 0&#xD;&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND  DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE = VESTED_ER_CALCULATED_FROM_SALARY THEN VESTED_ER_CALCULATED_FROM_SALARY &#xD;&#xA;&#x9;&#x9;&#x9;ELSE 0&#xD;&#xA;&#x9;&#x9; END AS ER_VESTED_AMOUNT_CALCULATED&#xD;&#xA;&#x9;FROM &#xD;&#xA;&#x9;&#x9;CTE_SECONDCTE&#xD;&#xA;&#x9;&#xD;&#xA;)&#xD;&#xA;SELECT *&#xD;&#xA;&#x9;&#x9;,(SELECT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN COUNT(1) &gt; 0 THEN 'Y' ELSE 'N' END &#xD;&#xA;&#x9;&#x9;&#x9;FROM &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION CONTRIB WITH(NOLOCK) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID = CONTRIB.PERSON_ACCOUNT_ID AND SPA.PERSON_ID = FINAL_RESULT.MEMBER_PERSLINKID &#xD;&#xA;&#x9;&#x9;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;TRANSACTION_TYPE_VALUE IN ('IADJ', 'PRAD', 'PADJ')&#xD;&#xA;&#x9;&#x9;  ) AS ADJUSTMENTS&#xD;&#xA;&#x9;&#x9;  , (&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN COUNT(1) &gt; 0 THEN 'Y' ELSE 'N' END &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = PARC.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_SERVICE_PURCHASE_PAYMENT_ALLOCATION ALLOC WITH(NOLOCK) ON ALLOC.SERVICE_PURCHASE_HEADER_ID = PARC.SUBSYSTEM_REF_ID AND PARC.SUBSYSTEM_VALUE = 'PURC' AND ALLOC.EMPLOYER_PAYROLL_DETAIL_ID IS NULL --AND ALLOC.SERVICE_PURCHASE_PAYMENT_CLASS_VALUE IN ('INPO','INPR','ERUI','ERUL','DWPY')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_REMITTANCE R ON R.PERSON_ID = PA.PERSON_ID AND R.REMITTANCE_TYPE_VALUE = 'PURC' AND R.PLAN_ID = PA.PLAN_ID AND R.REMITTANCE_ID = ALLOC.REMITTANCE_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_DEPOSIT D ON D.DEPOSIT_ID = R.DEPOSIT_ID AND D.STATUS_VALUE = 'APLD'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PA.PERSON_ID = FINAL_RESULT.MEMBER_PERSLINKID&#x9;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9;&#x9; ) AS IS_SERVICE_PURCHASED&#xD;&#xA;&#x9;&#x9;&#x9; ,&#xD;&#xA;&#x9;&#x9;   --PIR 26186 Added PLAN_TRANSFER column to show DB DB Plan Transfer&#xD;&#xA;&#x9;&#x9;   (&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN COUNT(1) &gt; 0 THEN 'Y' ELSE 'N' END &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = PARC.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_DB_DB_TRANSFER SPARDDT WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = SPARDDT.FROM_PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PA.PERSON_ID = FINAL_RESULT.MEMBER_PERSLINKID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND SPARDDT.STATUS_VALUE = 'POST'&#xD;&#xA;&#x9;&#x9;&#x9; ) AS PLAN_TRANSFER  &#xD;&#xA;&#x9;&#x9;&#x9; &#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;CTE.PERSON_ID AS MEMBER_PERSLINKID&#xD;&#xA;&#x9;&#x9;,PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;,CASE WHEN ((SUM(ISNULL(ER_VESTED_AMOUNT, 0)) != 0) OR (SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) != 0)) THEN 'Y' ELSE 'N' END AS RECEIVED_PEP&#xD;&#xA;&#x9;&#x9;,SUM(ISNULL(ER_VESTED_AMOUNT, 0)) AS POSTED_ER_VESTED_AMOUNT&#xD;&#xA;&#x9;&#x9;,SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) AS CALCULATED_ER_VESTED_AMOUNT&#xD;&#xA;&#x9;&#x9;,SUM(ISNULL(ER_VESTED_AMOUNT, 0)) - SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) as [DIFFERENCE]&#xD;&#xA;&#x9;FROM &#xD;&#xA;&#x9;&#x9;MY_UTILITY_CTE CTE WITH(NOLOCK)&#xD;&#xA;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;EXISTS &#xD;&#xA;&#x9;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;--CONDITION NEEDED TO EXCLUDE PAYEE ACCOUNTS, WHICH ARE APPROVED AS OF PAYMENT DATE BUT NO PAPITS AS OF PAYMENT DATE LIKE (98844,103003)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;1 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE SPAPIT WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SPAPIT.PAYEE_ACCOUNT_ID = CTE.PAYEE_ACCOUNT_ID AND &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(@PAYMENTDATE BETWEEN SPAPIT.[START_DATE] AND ISNULL(SPAPIT.END_DATE, '99991231'))&#xD;&#xA;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;GROUP BY &#xD;&#xA;&#x9;&#x9;CTE.PERSON_ID, CTE.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;--HAVING ((SUM(ISNULL(ER_VESTED_AMOUNT, 0)) != 0) OR (SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) != 0))&#xD;&#xA;) &#xD;&#xA;AS FINAL_RESULT&#xD;&#xA;ORDER BY &#xD;&#xA;&#x9;FINAL_RESULT.MEMBER_PERSLINKID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadFinalMonthlyOrAdhocRefundsWithPayrollAdjustments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="WITH CTE_MYCTE_PERSON&#xA;AS&#xA;(&#x9;SELECT&#xA;&#x9;   SPA.PERSON_ID&#xA;&#x9;  ,PA.PAYEE_ACCOUNT_ID&#xA;&#x9;   ,SUM(ISNULL(SPARC.SALARY_AMOUNT, 0)) AS SALARY_AMOUNT&#xA;&#x9;   ,SUM(ISNULL(SPARC.ER_VESTED_AMOUNT, 0)) AS ER_VESTED_AMOUNT&#xA;&#x9;   ,SUM(ISNULL(SPARC.PRE_TAX_ER_AMOUNT, 0)) AS PRE_TAX_ER_AMOUNT&#xA;&#x9;   ,CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0)) AS PAY_PERIOD_DATE&#xA;&#x9;   ,(&#x9;&#xA;&#x9;   &#xA;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;SUM(CONT.PAY_PERIOD_CONTRIBUTION_AMOUNT) AS CONTRIBUTION_AMOUNT&#xA;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_DEFERRED_COMP_CONTRIBUTION CONT WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH (NOLOCK) ON ACCT.PERSON_ACCOUNT_ID = CONT.PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;WHERE ACCT.PLAN_ID IN (8, 19)&#xA;&#x9;&#x9;&#x9;&#x9;  AND ACCT.PERSON_ID = SPA.PERSON_ID&#xA;&#x9;&#x9;&#x9;      AND CONT.PAY_PERIOD_END_DATE &gt;= DATEADD(MM, DATEDIFF(MM, 0, CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0))), 0)&#xA;&#x9;&#x9;&#x9;      AND CONT.PAY_PERIOD_END_DATE &lt;= DATEADD(DAY, -1, DATEADD(MONTH, DATEDIFF(MONTH, 0, CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0))) + 1, 0))&#xA;&#x9;&#x9;&#x9;GROUP BY ACCT.PERSON_ID&#xA;&#xA;&#x9;&#x9;) AS DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xA;&#x9;   ,(&#xA;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;SUM(VESTED_SERVICE_CREDIT) AS VESTED_SERVICE_CREDIT&#xA;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION CONT WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH (NOLOCK) ON ACCT.PERSON_ACCOUNT_ID = CONT.PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;WHERE ACCT.PERSON_ID = SPA.PERSON_ID&#xA;&#x9;&#x9;&#x9;&#x9;AND EFFECTIVE_DATE &lt;= sparc.EFFECTIVE_DATE&#xA;&#x9;&#x9;&#x9;&#x9;AND SUBSYSTEM_VALUE &lt;&gt; (CASE WHEN PLAN_PARTICIPATION_STATUS_VALUE &lt;&gt; 'WTN1' THEN 'PMNT' ELSE '' END)&#xA;&#x9;&#x9;&#x9;GROUP BY ACCT.PERSON_ID&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;) AS MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE&#xA;&#x9;FROM &#xA;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH (NOLOCK)&#xA;&#x9;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH (NOLOCK) ON SPARC.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID &#xA;&#x9;&#x9;AND SPA.PLAN_PARTICIPATION_STATUS_VALUE NOT LIKE '%CAN%'&#xA;&#x9;&#x9;AND SPA.PLAN_PARTICIPATION_STATUS_VALUE NOT IN ('TRDC', 'TICR')&#xA;&#x9;&#x9;AND SPARC.EFFECTIVE_DATE &gt;= '07/01/2010'&#xA;&#x9;INNER JOIN SGT_PLAN P WITH (NOLOCK)&#xA;&#x9;&#x9;ON P.PLAN_ID = SPA.PLAN_ID&#xA;&#x9;&#x9;AND P.BENEFIT_TYPE_VALUE = 'RETR' AND P.ALLOW_PEP_CALCULATION = 1&#xA;&#x9;INNER JOIN (SELECT DISTINCT BAPA.PERSON_ACCOUNT_ID, BAA.BENEFIT_APPLICATION_ID FROM SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) INNER JOIN SGT_BENEFIT_APPLICATION BAA ON BAA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID AND BAA.ACTION_STATUS_VALUE != 'CANC' AND ISNULL(BAPA.IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y') BAAPA ON BAAPA.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xA;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.APPLICATION_ID = BAAPA .BENEFIT_APPLICATION_ID &#xA;&#x9;&#x9;&#x9;&#x9;AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE = 'REFD')) &#xA;&#x9;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND ISNULL(PHH.PERSON_ID, 0) &gt; 0&#xA;&#x9;WHERE SPARC.SUBSYSTEM_VALUE != 'PMNT'&#xA;&#x9;GROUP BY &#xA;&#x9;&#x9;&#x9; SPA.PERSON_ID&#xA;&#x9;&#x9;&#x9; ,PA.PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;--,CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0))&#xA;&#x9;&#x9;&#x9;,sparc.EFFECTIVE_DATE&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;),&#xA;CTE_SECONDCTE_PERSON&#xA;AS&#xA;(&#x9;SELECT&#xA;&#x9;   PERSON_ID&#xA;&#x9;  ,PAYEE_ACCOUNT_ID&#xA;&#x9;   ,SALARY_AMOUNT&#xA;&#x9;   ,ER_VESTED_AMOUNT&#xA;&#x9;   ,PRE_TAX_ER_AMOUNT&#xA;&#x9;   ,PAY_PERIOD_DATE&#xA;&#x9;   ,ISNULL(DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE,0) AS DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xA;&#x9;   ,ISNULL(MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE,0) AS MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE&#xA;&#x9;   ,(&#xA;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 36.0001 AND 1000000.0000 THEN 0.04&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 24.0001 AND 36.0000 THEN 0.03&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 12.0001 AND 24.0000 THEN 0.02&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 0.0000 AND 12.0001 THEN 0.01&#xA;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;) AS VESTED_ER_PERCENTAGE&#xA;&#x9;   ,ROUND(((CASE&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 36.0001 AND 1000000.0000 THEN 0.04&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 24.0001 AND 36.0000 THEN 0.03&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 12.0001 AND 24.0000 THEN 0.02&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 0.0000 AND 12.0001 THEN 0.01&#xA;&#x9;&#x9;END) * SALARY_AMOUNT), 2&#xA;&#x9;&#x9;) AS VESTED_ER_CALCULATED_FROM_SALARY&#xA;&#x9;FROM CTE_MYCTE_PERSON&#xA;),&#xA;MY_UTILITY_CTE_PERSON AS &#xA;(&#xA;&#x9;SELECT &#xA;&#x9;&#x9;*&#xA;&#x9;&#x9;,CASE &#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &lt; 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; 0 THEN 0&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE = 25 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &lt;= 25 THEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; 25 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &lt;= 25 THEN 25&#xA;&#x9;&#x9;&#x9;WHEN VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; VESTED_ER_CALCULATED_FROM_SALARY THEN VESTED_ER_CALCULATED_FROM_SALARY &#xA;&#x9;&#x9;&#x9;WHEN VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt;= 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &lt; VESTED_ER_CALCULATED_FROM_SALARY THEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE = 0 OR VESTED_ER_CALCULATED_FROM_SALARY = 0 THEN 0&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND  DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE = VESTED_ER_CALCULATED_FROM_SALARY THEN VESTED_ER_CALCULATED_FROM_SALARY &#xA;&#x9;&#x9;&#x9;ELSE 0&#xA;&#x9;&#x9; END AS ER_VESTED_AMOUNT_CALCULATED&#xA;&#x9;FROM &#xA;&#x9;&#x9;CTE_SECONDCTE_PERSON&#xA;&#x9;&#xA;),&#xA;MY_FINAL_RESULT_PERSON AS&#xA;(&#xA;SELECT DISTINCT *&#xA;&#x9;&#x9;,(SELECT &#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN COUNT(1) &gt; 0 THEN 'Y' ELSE 'N' END &#xA;&#x9;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION CONTRIB WITH(NOLOCK) &#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID = CONTRIB.PERSON_ACCOUNT_ID AND SPA.PERSON_ID = FINAL_RESULT_PERSON.MEMBER_PERSLINKID &#xA;&#x9;&#x9;&#x9;WHERE &#xA;&#x9;&#x9;&#x9;&#x9;TRANSACTION_TYPE_VALUE IN ('IADJ', 'PRAD', 'PADJ')&#xA;&#x9;&#x9;  ) AS ADJUSTMENTS,&#xA;&#x9;&#x9;  (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN COUNT(1) &gt; 0 THEN 'Y' ELSE 'N' END &#xA;&#x9;&#x9;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = PARC.PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_SERVICE_PURCHASE_PAYMENT_ALLOCATION ALLOC WITH(NOLOCK) ON ALLOC.SERVICE_PURCHASE_HEADER_ID = PARC.SUBSYSTEM_REF_ID AND PARC.SUBSYSTEM_VALUE = 'PURC' AND ALLOC.EMPLOYER_PAYROLL_DETAIL_ID IS NULL --AND ALLOC.SERVICE_PURCHASE_PAYMENT_CLASS_VALUE IN ('INPO','INPR','ERUI','ERUL','DWPY')&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_REMITTANCE R ON R.PERSON_ID = PA.PERSON_ID AND R.REMITTANCE_TYPE_VALUE = 'PURC' AND R.PLAN_ID = PA.PLAN_ID AND R.REMITTANCE_ID = ALLOC.REMITTANCE_ID&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_DEPOSIT D ON D.DEPOSIT_ID = R.DEPOSIT_ID AND D.STATUS_VALUE = 'APLD'&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PA.PERSON_ID = FINAL_RESULT_PERSON.MEMBER_PERSLINKID&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9; ) AS IS_SERVICE_PURCHASED,&#xA;&#x9;&#x9;&#x9; --PIR 25969 Added PLAN_TRANSFER column to show DB DB Plan Transfer&#xA;&#x9;&#x9;   (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN COUNT(1) &gt; 0 THEN 'Y' ELSE 'N' END &#xA;&#x9;&#x9;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = PARC.PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_DB_DB_TRANSFER SPARDDT WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = SPARDDT.FROM_PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PA.PERSON_ID = FINAL_RESULT_PERSON.MEMBER_PERSLINKID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND SPARDDT.STATUS_VALUE = 'POST'&#xA;&#x9;&#x9;&#x9; ) AS PLAN_TRANSFER  &#xA;&#xA;FROM &#xA;(&#xA;&#x9;SELECT &#xA;&#x9;&#x9;CTE.PERSON_ID AS MEMBER_PERSLINKID&#xA;&#x9;&#x9;,CTE.PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;,CASE WHEN ((SUM(ISNULL(ER_VESTED_AMOUNT, 0)) != 0) OR (SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) != 0)) THEN 'Y' ELSE 'N' END AS RECEIVED_PEP&#xA;&#x9;&#x9;,SUM(ISNULL(ER_VESTED_AMOUNT, 0)) AS POSTED_ER_VESTED_AMOUNT&#xA;&#x9;&#x9;,SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) AS CALCULATED_ER_VESTED_AMOUNT&#xA;&#x9;&#x9;,SUM(ISNULL(ER_VESTED_AMOUNT, 0)) - SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) as [DIFFERENCE]&#xA;&#x9;FROM &#xA;&#x9;&#x9;MY_UTILITY_CTE_PERSON CTE WITH(NOLOCK)&#xA;&#x9;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = CTE.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND ISNULL(PHH.PERSON_ID,0) &gt; 0&#xA;&#x9;GROUP BY &#xA;&#x9;&#x9;CTE.PERSON_ID, CTE.PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;&#xA;) &#xA;AS FINAL_RESULT_PERSON&#xA;), &#xA;CTE_MYCTE_ORG&#xA;AS&#xA;(&#x9;SELECT&#xA;&#x9;   SPA.PERSON_ID&#xA;&#x9;  ,PA.PAYEE_ACCOUNT_ID&#xA;&#x9;   ,SUM(ISNULL(SPARC.SALARY_AMOUNT, 0)) AS SALARY_AMOUNT&#xA;&#x9;   ,SUM(ISNULL(SPARC.ER_VESTED_AMOUNT, 0)) AS ER_VESTED_AMOUNT&#xA;&#x9;   ,SUM(ISNULL(SPARC.PRE_TAX_ER_AMOUNT, 0)) AS PRE_TAX_ER_AMOUNT&#xA;&#x9;   ,CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0)) AS PAY_PERIOD_DATE&#xA;&#x9;   ,(&#x9;&#xA;&#x9;   &#xA;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;SUM(CONT.PAY_PERIOD_CONTRIBUTION_AMOUNT) AS CONTRIBUTION_AMOUNT&#xA;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_DEFERRED_COMP_CONTRIBUTION CONT WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH (NOLOCK) ON ACCT.PERSON_ACCOUNT_ID = CONT.PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;WHERE ACCT.PLAN_ID IN (8, 19)&#xA;&#x9;&#x9;&#x9;&#x9;  AND ACCT.PERSON_ID = SPA.PERSON_ID&#xA;&#x9;&#x9;&#x9;      AND CONT.PAY_PERIOD_END_DATE &gt;= DATEADD(MM, DATEDIFF(MM, 0, CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0))), 0)&#xA;&#x9;&#x9;&#x9;      AND CONT.PAY_PERIOD_END_DATE &lt;= DATEADD(DAY, -1, DATEADD(MONTH, DATEDIFF(MONTH, 0, CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0))) + 1, 0))&#xA;&#x9;&#x9;&#x9;GROUP BY ACCT.PERSON_ID&#xA;&#xA;&#x9;&#x9;) AS DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xA;&#x9;   ,(&#xA;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;SUM(VESTED_SERVICE_CREDIT) AS VESTED_SERVICE_CREDIT&#xA;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION CONT WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH (NOLOCK) ON ACCT.PERSON_ACCOUNT_ID = CONT.PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;WHERE ACCT.PERSON_ID = SPA.PERSON_ID&#xA;&#x9;&#x9;&#x9;&#x9;AND EFFECTIVE_DATE &lt;= sparc.EFFECTIVE_DATE&#xA;&#x9;&#x9;&#x9;&#x9;AND SUBSYSTEM_VALUE &lt;&gt; (CASE WHEN PLAN_PARTICIPATION_STATUS_VALUE &lt;&gt; 'WTN1' THEN 'PMNT' ELSE '' END)&#xA;&#x9;&#x9;&#x9;GROUP BY ACCT.PERSON_ID&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;) AS MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE&#xA;&#x9;FROM &#xA;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH (NOLOCK)&#xA;&#x9;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH (NOLOCK) ON SPARC.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID &#xA;&#x9;&#x9;AND SPA.PLAN_PARTICIPATION_STATUS_VALUE NOT LIKE '%CAN%'&#xA;&#x9;&#x9;AND SPA.PLAN_PARTICIPATION_STATUS_VALUE NOT IN ('TRDC', 'TICR')&#xA;&#x9;&#x9;AND SPARC.EFFECTIVE_DATE &gt;= '07/01/2010'&#xA;&#x9;INNER JOIN SGT_PLAN P WITH (NOLOCK)&#xA;&#x9;&#x9;ON P.PLAN_ID = SPA.PLAN_ID&#xA;&#x9;&#x9;AND P.BENEFIT_TYPE_VALUE = 'RETR' AND P.ALLOW_PEP_CALCULATION = 1&#xA;&#x9;INNER JOIN (SELECT DISTINCT BAPA.PERSON_ACCOUNT_ID, BAA.BENEFIT_APPLICATION_ID FROM SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) INNER JOIN SGT_BENEFIT_APPLICATION BAA ON BAA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID AND BAA.ACTION_STATUS_VALUE != 'CANC' AND ISNULL(BAPA.IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y') BAAPA ON BAAPA.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xA;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.APPLICATION_ID = BAAPA .BENEFIT_APPLICATION_ID &#xA;&#x9;&#x9;&#x9;&#x9;AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE = 'REFD')) &#xA;&#x9;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND ISNULL(PHH.ORG_ID, 0) &gt; 0&#xA;&#x9;WHERE SPARC.SUBSYSTEM_VALUE != 'PMNT'&#xA;&#x9;GROUP BY &#xA;&#x9;&#x9;&#x9; SPA.PERSON_ID&#xA;&#x9;&#x9;&#x9; ,PA.PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;--,CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0))&#xA;&#x9;&#x9;&#x9;,sparc.EFFECTIVE_DATE&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;),&#xA;CTE_SECONDCTE_ORG&#xA;AS&#xA;(&#x9;SELECT&#xA;&#x9;   PERSON_ID&#xA;&#x9;  ,PAYEE_ACCOUNT_ID&#xA;&#x9;   ,SALARY_AMOUNT&#xA;&#x9;   ,ER_VESTED_AMOUNT&#xA;&#x9;   ,PRE_TAX_ER_AMOUNT&#xA;&#x9;   ,PAY_PERIOD_DATE&#xA;&#x9;   ,ISNULL(DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE,0) AS DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xA;&#x9;   ,ISNULL(MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE,0) AS MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE&#xA;&#x9;   ,(&#xA;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 36.0001 AND 1000000.0000 THEN 0.04&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 24.0001 AND 36.0000 THEN 0.03&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 12.0001 AND 24.0000 THEN 0.02&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 0.0000 AND 12.0001 THEN 0.01&#xA;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;) AS VESTED_ER_PERCENTAGE&#xA;&#x9;   ,ROUND(((CASE&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 36.0001 AND 1000000.0000 THEN 0.04&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 24.0001 AND 36.0000 THEN 0.03&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 12.0001 AND 24.0000 THEN 0.02&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 0.0000 AND 12.0001 THEN 0.01&#xA;&#x9;&#x9;END) * SALARY_AMOUNT), 2&#xA;&#x9;&#x9;) AS VESTED_ER_CALCULATED_FROM_SALARY&#xA;&#x9;FROM CTE_MYCTE_ORG&#xA;),&#xA;MY_UTILITY_CTE_ORG AS &#xA;(&#xA;&#x9;SELECT &#xA;&#x9;&#x9;*&#xA;&#x9;&#x9;,CASE &#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &lt; 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; 0 THEN 0&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE = 25 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &lt;= 25 THEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; 25 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &lt;= 25 THEN 25&#xA;&#x9;&#x9;&#x9;WHEN VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; VESTED_ER_CALCULATED_FROM_SALARY THEN VESTED_ER_CALCULATED_FROM_SALARY &#xA;&#x9;&#x9;&#x9;WHEN VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt;= 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &lt; VESTED_ER_CALCULATED_FROM_SALARY THEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE = 0 OR VESTED_ER_CALCULATED_FROM_SALARY = 0 THEN 0&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND  DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE = VESTED_ER_CALCULATED_FROM_SALARY THEN VESTED_ER_CALCULATED_FROM_SALARY &#xA;&#x9;&#x9;&#x9;ELSE 0&#xA;&#x9;&#x9; END AS ER_VESTED_AMOUNT_CALCULATED&#xA;&#x9;FROM &#xA;&#x9;&#x9;CTE_SECONDCTE_ORG&#xA;&#x9;&#xA;),&#xA;MY_FINAL_RESULT_ORG AS&#xA;(&#xA;SELECT DISTINCT *&#xA;&#x9;&#x9;,(SELECT &#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN COUNT(1) &gt; 0 THEN 'Y' ELSE 'N' END &#xA;&#x9;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION CONTRIB WITH(NOLOCK) &#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID = CONTRIB.PERSON_ACCOUNT_ID AND SPA.PERSON_ID = FINAL_RESULT_ORG.MEMBER_PERSLINKID &#xA;&#x9;&#x9;&#x9;WHERE &#xA;&#x9;&#x9;&#x9;&#x9;TRANSACTION_TYPE_VALUE IN ('IADJ', 'PRAD', 'PADJ')&#xA;&#x9;&#x9;  ) AS ADJUSTMENTS,&#xA;&#x9;&#x9;  (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN COUNT(1) &gt; 0 THEN 'Y' ELSE 'N' END &#xA;&#x9;&#x9;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = PARC.PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_SERVICE_PURCHASE_PAYMENT_ALLOCATION ALLOC WITH(NOLOCK) ON ALLOC.SERVICE_PURCHASE_HEADER_ID = PARC.SUBSYSTEM_REF_ID AND PARC.SUBSYSTEM_VALUE = 'PURC' AND ALLOC.EMPLOYER_PAYROLL_DETAIL_ID IS NULL --AND ALLOC.SERVICE_PURCHASE_PAYMENT_CLASS_VALUE IN ('INPO','INPR','ERUI','ERUL','DWPY')&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_REMITTANCE R ON R.PERSON_ID = PA.PERSON_ID AND R.REMITTANCE_TYPE_VALUE = 'PURC' AND R.PLAN_ID = PA.PLAN_ID AND R.REMITTANCE_ID = ALLOC.REMITTANCE_ID&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_DEPOSIT D ON D.DEPOSIT_ID = R.DEPOSIT_ID AND D.STATUS_VALUE = 'APLD'&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PA.PERSON_ID = FINAL_RESULT_ORG.MEMBER_PERSLINKID&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9; ) AS IS_SERVICE_PURCHASED,&#xA;&#xA;&#x9;&#x9;&#x9; --PIR 25969 Added PLAN_TRANSFER column to show DB DB Plan Transfer&#xA;&#x9;&#x9;   (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN COUNT(1) &gt; 0 THEN 'Y' ELSE 'N' END &#xA;&#x9;&#x9;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = PARC.PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_DB_DB_TRANSFER SPARDDT WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = SPARDDT.FROM_PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PA.PERSON_ID = FINAL_RESULT_ORG.MEMBER_PERSLINKID&#xA;&#x9;&#x9;&#x9;&#x9;AND SPARDDT.STATUS_VALUE = 'POST'&#xA;&#x9;&#x9;&#x9; ) AS PLAN_TRANSFER &#x9;&#x9;&#x9; &#xA;FROM &#xA;(&#xA;&#x9;SELECT &#xA;&#x9;&#x9;CTE.PERSON_ID AS MEMBER_PERSLINKID&#xA;&#x9;&#x9;,CTE.PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;,CASE WHEN ((SUM(ISNULL(ER_VESTED_AMOUNT, 0)) != 0) OR (SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) != 0)) THEN 'Y' ELSE 'N' END AS RECEIVED_PEP&#xA;&#x9;&#x9;,SUM(ISNULL(ER_VESTED_AMOUNT, 0)) AS POSTED_ER_VESTED_AMOUNT&#xA;&#x9;&#x9;,SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) AS CALCULATED_ER_VESTED_AMOUNT&#xA;&#x9;&#x9;,SUM(ISNULL(ER_VESTED_AMOUNT, 0)) - SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) as [DIFFERENCE]&#xA;&#x9;FROM &#xA;&#x9;&#x9;MY_UTILITY_CTE_ORG CTE WITH(NOLOCK)&#xA;&#x9;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = CTE.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID AND ISNULL(PHH.ORG_ID,0) &gt; 0&#xA;&#x9;GROUP BY &#xA;&#x9;&#x9;CTE.PERSON_ID, CTE.PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;&#xA;) &#xA;AS FINAL_RESULT_ORG&#xA;)&#xA;SELECT * FROM MY_FINAL_RESULT_PERSON&#xA;UNION&#xA;SELECT * FROM MY_FINAL_RESULT_ORG&#xA;ORDER BY MEMBER_PERSLINKID">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadTrialAdhocRefundsWithPayrollAdjustments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LASTDATE DATETIME&#xD;&#xA;SELECT @LASTDATE = MAX(PAYMENT_DATE) FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA;WHERE PROCESS_DATE &lt;= @PAYMENTDATE&#xD;&#xA;AND SCHEDULE_TYPE_VALUE = 'MTLY'&#xD;&#xA;AND STATUS_VALUE = 'PRCD' &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;;WITH CTE_MYCTE&#xD;&#xA;AS&#xD;&#xA;(&#x9;SELECT&#xD;&#xA;&#x9;   SPA.PERSON_ID&#xD;&#xA;&#x9;  ,SAPAYEE.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;   ,SUM(ISNULL(SPARC.SALARY_AMOUNT, 0)) AS SALARY_AMOUNT&#xD;&#xA;&#x9;   ,SUM(ISNULL(SPARC.ER_VESTED_AMOUNT, 0)) AS ER_VESTED_AMOUNT&#xD;&#xA;&#x9;   ,SUM(ISNULL(SPARC.PRE_TAX_ER_AMOUNT, 0)) AS PRE_TAX_ER_AMOUNT&#xD;&#xA;&#x9;   ,CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0)) AS PAY_PERIOD_DATE&#xD;&#xA;&#x9;   ,(&#x9;&#xD;&#xA;&#x9;   &#xD;&#xA;&#x9;&#x9;&#x9;SELECT&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SUM(CONT.PAY_PERIOD_CONTRIBUTION_AMOUNT) AS CONTRIBUTION_AMOUNT&#xD;&#xA;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_DEFERRED_COMP_CONTRIBUTION CONT WITH (NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH (NOLOCK) ON ACCT.PERSON_ACCOUNT_ID = CONT.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE ACCT.PLAN_ID IN (8, 19)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  AND ACCT.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;      AND CONT.PAY_PERIOD_END_DATE &gt;= DATEADD(MM, DATEDIFF(MM, 0, CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0))), 0)&#xD;&#xA;&#x9;&#x9;&#x9;      AND CONT.PAY_PERIOD_END_DATE &lt;= DATEADD(DAY, -1, DATEADD(MONTH, DATEDIFF(MONTH, 0, CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0))) + 1, 0))&#xD;&#xA;&#x9;&#x9;&#x9;GROUP BY ACCT.PERSON_ID&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;) AS DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xD;&#xA;&#x9;   ,(&#xD;&#xA;&#x9;&#x9;&#x9;SELECT&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SUM(VESTED_SERVICE_CREDIT) AS VESTED_SERVICE_CREDIT&#xD;&#xA;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION CONT WITH (NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH (NOLOCK) ON ACCT.PERSON_ACCOUNT_ID = CONT.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;WHERE ACCT.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND EFFECTIVE_DATE &lt;= sparc.EFFECTIVE_DATE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND SUBSYSTEM_VALUE &lt;&gt; (CASE WHEN PLAN_PARTICIPATION_STATUS_VALUE &lt;&gt; 'WTN1' THEN 'PMNT' ELSE '' END)&#xD;&#xA;&#x9;&#x9;&#x9;GROUP BY ACCT.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;) AS MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE&#xD;&#xA;&#x9;FROM &#xD;&#xA;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC WITH (NOLOCK)&#xD;&#xA;&#x9;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH (NOLOCK) ON SPARC.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;AND SPA.PLAN_PARTICIPATION_STATUS_VALUE NOT LIKE '%CAN%' &#xD;&#xA;&#x9;&#x9;AND SPA.PLAN_PARTICIPATION_STATUS_VALUE NOT IN ('TRDC', 'TICR') &#xD;&#xA;&#x9;&#x9;AND SPARC.EFFECTIVE_DATE &gt;= '07/01/2010'&#xD;&#xA;&#x9;INNER JOIN SGT_PLAN P WITH (NOLOCK)&#xD;&#xA;&#x9;&#x9;ON P.PLAN_ID = SPA.PLAN_ID&#xD;&#xA;&#x9;&#x9;AND P.BENEFIT_TYPE_VALUE = 'RETR' AND P.ALLOW_PEP_CALCULATION = 1&#xD;&#xA;&#x9;INNER JOIN (SELECT BAPA.PERSON_ACCOUNT_ID, BAA.BENEFIT_APPLICATION_ID FROM SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) INNER JOIN SGT_BENEFIT_APPLICATION BAA ON BAA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID AND BAA.ACTION_STATUS_VALUE != 'CANC' AND ISNULL(BAPA.IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y') BAAPA ON BAAPA.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;INNER JOIN &#xD;&#xA;&#x9;&#xD;&#xA;&#x9;( &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;SELECT&#xD;&#xA;&#x9;PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;&#x9;,PA.BENEFIT_OPTION_VALUE&#xD;&#xA;&#x9;,PA.APPLICATION_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;   WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;     AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;     AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;     AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;     AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;     AND (PA.BENEFIT_OPTION_VALUE IN ('DBCT','DTCT','DBDC','DBTT','SPEL') &#xD;&#xA;   OR (PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;     AND ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') = CASE WHEN PA.APPLICATION_ID IS NOT NULL THEN 'Y' ELSE ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') END&#xD;&#xA;     AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE)) --PROD PIR 4919&#xD;&#xA;     and @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA; &#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;&#x9;PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;&#x9;,PA.BENEFIT_OPTION_VALUE&#xD;&#xA;&#x9;,PA.APPLICATION_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;   WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;     AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;     AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;     AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;     AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;     AND (PA.BENEFIT_OPTION_VALUE IN ('DBCT','DTCT','DBDC','DBTT','SPEL') &#xD;&#xA;   OR (PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;     AND ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') = CASE WHEN PA.APPLICATION_ID IS NOT NULL THEN 'Y' ELSE ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') END&#xD;&#xA;     AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE)) --PROD PIR 4919&#xD;&#xA;     and @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;   AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;   AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA; SELECT &#xD;&#xA;&#x9;PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;&#x9;,PA.BENEFIT_OPTION_VALUE&#xD;&#xA;&#x9;,PA.APPLICATION_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND PADR ON PADR.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID &#xD;&#xA;    AND PADR.PAYMENT_OPTION_VALUE = 'SPCL' AND PADR.PAYMENT_HISTORY_HEADER_ID IS NULL&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID &#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;   WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA;      AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;      (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;      AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;      AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;      AND @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;      AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA; SELECT &#xD;&#xA;&#x9;PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;&#x9;,PA.BENEFIT_OPTION_VALUE&#xD;&#xA;&#x9;,PA.APPLICATION_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT  PAYEE_ACCOUNT_ID ,PAYMENT_ITEM_TYPE_ID FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL RPD ON RP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = RPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;   WHERE APPROVED_FLAG = 'Y' AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;     AND (PAYMENT_HISTORY_HEADER_ID IS NULL)     &#xD;&#xA;  ) AS RETRO&#xD;&#xA;  ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID and RETRO.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA;       AND @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;&#xD;&#xA;--- PIR 2010&#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA; SELECT &#xD;&#xA;&#x9;PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;&#x9;,PA.BENEFIT_OPTION_VALUE&#xD;&#xA;&#x9;,PA.APPLICATION_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT  PAYEE_ACCOUNT_ID &#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;   WHERE APPROVED_FLAG = 'Y' AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;     AND (PAYMENT_HISTORY_HEADER_ID IS NULL) &#xD;&#xA;     AND RETRO_PAYMENT_TYPE_VALUE IN ('IRPM','REAC')    &#xD;&#xA;&#xD;&#xA;  ) AS RETRO&#xD;&#xA;  ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA;       AND PAPI.END_DATE IS NOT NULL&#xD;&#xA;   AND @PAYMENTDATE &lt; PAPI.END_DATE &#xD;&#xA;   AND MONTH(PAPI.START_DATE) = MONTH(PAPI.END_DATE)&#xD;&#xA;   AND YEAR(PAPI.START_DATE) = YEAR(PAPI.END_DATE)&#xD;&#xA;   AND RECEIAVABLE_ITEM_FOR_RETRO_FLAG  = 'Y' &#xD;&#xA; &#xD;&#xA;---&#xD;&#xA;Union All&#xD;&#xA;--supplemental check&#xD;&#xA; SELECT &#xD;&#xA;&#x9;PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;&#x9;,PA.BENEFIT_OPTION_VALUE&#xD;&#xA;&#x9;,PA.APPLICATION_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE  &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;   OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD')))&#xD;&#xA;       AND PAPI.START_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND @PAYMENTDATE &lt;= (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;   AND PIT.CHECK_TYPE_VALUE = 'SPCK'&#xD;&#xA; &#xD;&#xA;Union&#xD;&#xA;--reissue check&#xD;&#xA; SELECT &#xD;&#xA;&#x9;PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;&#x9;,PA.BENEFIT_OPTION_VALUE&#xD;&#xA;&#x9;,PA.APPLICATION_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE  &#xD;&#xA;  WHERE CV.DATA2 &lt;&gt; 'CNLD'&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;--   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)   &#xD;&#xA;       AND @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;   AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') = 'Y'&#xD;&#xA; &#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT &#xD;&#xA;&#x9;PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;&#x9;,PA.BENEFIT_OPTION_VALUE&#xD;&#xA;&#x9;,PA.APPLICATION_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;      AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE  &#xD;&#xA;  WHERE CV.DATA2 &lt;&gt; 'CNLD'&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;--   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)   &#xD;&#xA;       AND @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;   AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') = 'Y'&#xD;&#xA;   AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;   AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; &#xD;&#xA;Union All&#xD;&#xA;--prod PIR 5695&#xD;&#xA; SELECT &#xD;&#xA;&#x9;PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;&#x9;,PA.BENEFIT_OPTION_VALUE&#xD;&#xA;&#x9;,PA.APPLICATION_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE  &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD')&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;       AND @PAYMENTDATE &lt;= (CASE WHEN PAPI.END_DATE IS NULL &#xD;&#xA;     THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;   AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA; &#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA;--PIR 8301&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;&#x9;PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;&#x9;,PA.BENEFIT_OPTION_VALUE&#xD;&#xA;&#x9;,PA.APPLICATION_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;   WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA;     AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;     AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;     AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;     AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD')&#xD;&#xA;     AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;      AND @PAYMENTDATE &lt;= (CASE WHEN PAPI.END_DATE IS NULL &#xD;&#xA;     THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;   AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA;   AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;   AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;) AS SAPAYEE ON SAPAYEE.APPLICATION_ID = BAAPA.BENEFIT_APPLICATION_ID AND (SAPAYEE.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' OR (SAPAYEE.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND SAPAYEE.BENEFIT_OPTION_VALUE = 'REFD'))  &#xD;&#xA;&#x9;   &#x9;  &#xD;&#xA;&#x9;WHERE SPARC.SUBSYSTEM_VALUE != 'PMNT'&#xD;&#xA;&#x9;GROUP BY &#xD;&#xA;&#x9;&#x9;&#x9; SPA.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9; ,SAPAYEE.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;--,CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, SPARC.EFFECTIVE_DATE), 0))&#xD;&#xA;&#x9;&#x9;&#x9;,sparc.EFFECTIVE_DATE&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;),&#xD;&#xA;CTE_SECONDCTE&#xD;&#xA;AS&#xD;&#xA;(&#x9;SELECT&#xD;&#xA;&#x9;   PERSON_ID&#xD;&#xA;&#x9;  ,PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;   ,SALARY_AMOUNT&#xD;&#xA;&#x9;   ,ER_VESTED_AMOUNT&#xD;&#xA;&#x9;   ,PRE_TAX_ER_AMOUNT&#xD;&#xA;&#x9;   ,PAY_PERIOD_DATE&#xD;&#xA;&#x9;   ,ISNULL(DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE,0) AS DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xD;&#xA;&#x9;   ,ISNULL(MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE,0) AS MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE&#xD;&#xA;&#x9;   ,(&#xD;&#xA;&#x9;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 36.0001 AND 1000000.0000 THEN 0.04&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 24.0001 AND 36.0000 THEN 0.03&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 12.0001 AND 24.0000 THEN 0.02&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 0.0000 AND 12.0001 THEN 0.01&#xD;&#xA;&#x9;&#x9;&#x9;END&#xD;&#xA;&#x9;&#x9;) AS VESTED_ER_PERCENTAGE&#xD;&#xA;&#x9;   ,ROUND(((CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 36.0001 AND 1000000.0000 THEN 0.04&#xD;&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 24.0001 AND 36.0000 THEN 0.03&#xD;&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 12.0001 AND 24.0000 THEN 0.02&#xD;&#xA;&#x9;&#x9;&#x9;WHEN MEMBER_VSC_BY_PAY_PERIOD_DATE_AS_EFFECTIVE_DATE BETWEEN 0.0000 AND 12.0001 THEN 0.01&#xD;&#xA;&#x9;&#x9;END) * SALARY_AMOUNT), 2&#xD;&#xA;&#x9;&#x9;) AS VESTED_ER_CALCULATED_FROM_SALARY&#xD;&#xA;&#x9;FROM CTE_MYCTE&#xD;&#xA;),&#xD;&#xA;MY_UTILITY_CTE AS &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;*&#xD;&#xA;&#x9;&#x9;,CASE &#xD;&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &lt; 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; 0 THEN 0&#xD;&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE = 25 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &lt;= 25 THEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; 25 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &lt;= 25 THEN 25&#xD;&#xA;&#x9;&#x9;&#x9;WHEN VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; VESTED_ER_CALCULATED_FROM_SALARY THEN VESTED_ER_CALCULATED_FROM_SALARY &#xD;&#xA;&#x9;&#x9;&#x9;WHEN VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt;= 25 AND DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &lt; VESTED_ER_CALCULATED_FROM_SALARY THEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE = 0 OR VESTED_ER_CALCULATED_FROM_SALARY = 0 THEN 0&#xD;&#xA;&#x9;&#x9;&#x9;WHEN DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE &gt; 0 AND VESTED_ER_CALCULATED_FROM_SALARY &gt; 0 AND  DEF_COMP_CONTRI_PER_PAY_PERIOD_DATE = VESTED_ER_CALCULATED_FROM_SALARY THEN VESTED_ER_CALCULATED_FROM_SALARY &#xD;&#xA;&#x9;&#x9;&#x9;ELSE 0&#xD;&#xA;&#x9;&#x9; END AS ER_VESTED_AMOUNT_CALCULATED&#xD;&#xA;&#x9;FROM &#xD;&#xA;&#x9;&#x9;CTE_SECONDCTE&#xD;&#xA;&#x9;&#xD;&#xA;)&#xD;&#xA;SELECT *&#xD;&#xA;&#x9;&#x9;,(SELECT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN COUNT(1) &gt; 0 THEN 'Y' ELSE 'N' END &#xD;&#xA;&#x9;&#x9;&#x9;FROM &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION CONTRIB WITH(NOLOCK) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID = CONTRIB.PERSON_ACCOUNT_ID AND SPA.PERSON_ID = FINAL_RESULT.MEMBER_PERSLINKID &#xD;&#xA;&#x9;&#x9;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;TRANSACTION_TYPE_VALUE IN ('IADJ', 'PRAD', 'PADJ')&#xD;&#xA;&#x9;&#x9;  ) AS ADJUSTMENTS,&#xD;&#xA;&#x9;&#x9;  (&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN COUNT(1) &gt; 0 THEN 'Y' ELSE 'N' END &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = PARC.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_SERVICE_PURCHASE_PAYMENT_ALLOCATION ALLOC WITH(NOLOCK) ON ALLOC.SERVICE_PURCHASE_HEADER_ID = PARC.SUBSYSTEM_REF_ID AND PARC.SUBSYSTEM_VALUE = 'PURC' AND ALLOC.EMPLOYER_PAYROLL_DETAIL_ID IS NULL --AND ALLOC.SERVICE_PURCHASE_PAYMENT_CLASS_VALUE IN ('INPO','INPR','ERUI','ERUL','DWPY')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_REMITTANCE R ON R.PERSON_ID = PA.PERSON_ID AND R.REMITTANCE_TYPE_VALUE = 'PURC' AND R.PLAN_ID = PA.PLAN_ID AND R.REMITTANCE_ID = ALLOC.REMITTANCE_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_DEPOSIT D ON D.DEPOSIT_ID = R.DEPOSIT_ID AND D.STATUS_VALUE = 'APLD'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PA.PERSON_ID = FINAL_RESULT.MEMBER_PERSLINKID&#x9;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9;&#x9; ) AS IS_SERVICE_PURCHASED &#xD;&#xA;&#x9;&#x9;&#x9; ,&#xD;&#xA;&#x9;&#x9; --PIR 26186 Added PLAN_TRANSFER column to show DB DB Plan Transfer&#xD;&#xA;&#x9;&#x9;   (&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN COUNT(1) &gt; 0 THEN 'Y' ELSE 'N' END &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = PARC.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_DB_DB_TRANSFER SPARDDT WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = SPARDDT.FROM_PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PA.PERSON_ID = FINAL_RESULT.MEMBER_PERSLINKID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND SPARDDT.STATUS_VALUE = 'POST'&#xD;&#xA;&#x9;&#x9;&#x9; ) AS PLAN_TRANSFER &#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;CTE.PERSON_ID AS MEMBER_PERSLINKID&#xD;&#xA;&#x9;&#x9;,PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;,CASE WHEN ((SUM(ISNULL(ER_VESTED_AMOUNT, 0)) != 0) OR (SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) != 0)) THEN 'Y' ELSE 'N' END AS RECEIVED_PEP&#xD;&#xA;&#x9;&#x9;,SUM(ISNULL(ER_VESTED_AMOUNT, 0)) AS POSTED_ER_VESTED_AMOUNT&#xD;&#xA;&#x9;&#x9;,SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) AS CALCULATED_ER_VESTED_AMOUNT&#xD;&#xA;&#x9;&#x9;,SUM(ISNULL(ER_VESTED_AMOUNT, 0)) - SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) as [DIFFERENCE]&#xD;&#xA;&#x9;FROM &#xD;&#xA;&#x9;&#x9;MY_UTILITY_CTE CTE WITH(NOLOCK)&#xD;&#xA;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;EXISTS &#xD;&#xA;&#x9;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;--CONDITION NEEDED TO EXCLUDE PAYEE ACCOUNTS, WHICH ARE APPROVED AS OF PAYMENT DATE BUT NO PAPITS AS OF PAYMENT DATE LIKE (98844,103003)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;1 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE SPAPIT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SPAPIT.PAYEE_ACCOUNT_ID = CTE.PAYEE_ACCOUNT_ID AND &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(@PAYMENTDATE BETWEEN SPAPIT.[START_DATE] AND ISNULL(SPAPIT.END_DATE, '99991231'))&#xD;&#xA;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;GROUP BY &#xD;&#xA;&#x9;&#x9;CTE.PERSON_ID, CTE.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;--HAVING ((SUM(ISNULL(ER_VESTED_AMOUNT, 0)) != 0) OR (SUM(ISNULL(ER_VESTED_AMOUNT_CALCULATED,0)) != 0))&#xD;&#xA;) &#xD;&#xA;AS FINAL_RESULT&#xD;&#xA;ORDER BY &#xD;&#xA;&#x9;FINAL_RESULT.MEMBER_PERSLINKID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadTransferPaymentDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--Change Payment Date to the date the payments were issued (Check/ACH Effective Date of the Payment Schedule in which the payments were issued)&#xD;&#xA;--DECLARE @PAYMENT_DATE DATE = '2/1/2025'&#xD;&#xA;&#xD;&#xA;SELECT HDI.FBO_CO, P.SSN, SUM(HD.AMOUNT) AS 'BEF1', 0 AS 'AFT1', 0 AS 'ERB1'&#xD;&#xA;into #transferpayment&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER HH INNER JOIN&#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT PA ON HH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID INNER JOIN&#xD;&#xA;&#x9;SGT_PAYMENT_HISTORY_DETAIL HD ON HH.PAYMENT_HISTORY_HEADER_ID = HD.PAYMENT_HISTORY_HEADER_ID INNER JOIN&#xD;&#xA;&#x9;SGT_PAYMENT_HISTORY_DISTRIBUTION HDI ON HH.PAYMENT_HISTORY_HEADER_ID = HDI.PAYMENT_HISTORY_HEADER_ID INNER JOIN&#xD;&#xA;&#x9;SGT_PERSON P ON PA.PAYEE_PERSLINK_ID = P.PERSON_ID&#xD;&#xA;WHERE PA.BENEFIT_OPTION_VALUE = 'SPEL' &#xD;&#xA;&#x9;AND HH.STATUS_VALUE = 'OUST'&#xD;&#xA;&#x9;AND HH.PAYMENT_DATE = @PAYMENT_DATE&#xD;&#xA;&#x9;AND HD.PAYMENT_ITEM_TYPE_ID IN (1,5,6,17,199)&#xD;&#xA;GROUP BY HDI.FBO_CO, P.SSN&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT HDI.FBO_CO, P.SSN, 0 AS 'BEF1', SUM(HD.AMOUNT) AS 'AFT1', 0 AS 'ERB1'&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER HH INNER JOIN&#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT PA ON HH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID INNER JOIN&#xD;&#xA;&#x9;SGT_PAYMENT_HISTORY_DETAIL HD ON HH.PAYMENT_HISTORY_HEADER_ID = HD.PAYMENT_HISTORY_HEADER_ID INNER JOIN&#xD;&#xA;&#x9;SGT_PAYMENT_HISTORY_DISTRIBUTION HDI ON HH.PAYMENT_HISTORY_HEADER_ID = HDI.PAYMENT_HISTORY_HEADER_ID INNER JOIN&#xD;&#xA;&#x9;SGT_PERSON P ON PA.PAYEE_PERSLINK_ID = P.PERSON_ID &#xD;&#xA;WHERE PA.BENEFIT_OPTION_VALUE = 'SPEL'  &#xD;&#xA;&#x9;AND HH.STATUS_VALUE = 'OUST'&#xD;&#xA;&#x9;AND HH.PAYMENT_DATE = @PAYMENT_DATE&#xD;&#xA;&#x9;AND HD.PAYMENT_ITEM_TYPE_ID IN (2)&#xD;&#xA;GROUP BY HDI.FBO_CO, P.SSN&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT HDI.FBO_CO, P.SSN, 0 AS 'BEF1', 0 AS 'AFT1', SUM(HD.AMOUNT) AS 'ERB1'&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER HH INNER JOIN&#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT PA ON HH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID INNER JOIN&#xD;&#xA;&#x9;SGT_PAYMENT_HISTORY_DETAIL HD ON HH.PAYMENT_HISTORY_HEADER_ID = HD.PAYMENT_HISTORY_HEADER_ID INNER JOIN&#xD;&#xA;&#x9;SGT_PAYMENT_HISTORY_DISTRIBUTION HDI ON HH.PAYMENT_HISTORY_HEADER_ID = HDI.PAYMENT_HISTORY_HEADER_ID INNER JOIN&#xD;&#xA;&#x9;SGT_PERSON P ON PA.PAYEE_PERSLINK_ID = P.PERSON_ID&#xD;&#xA;WHERE PA.BENEFIT_OPTION_VALUE = 'SPEL'  &#xD;&#xA;&#x9;AND HH.STATUS_VALUE = 'OUST'&#xD;&#xA;&#x9;AND HH.PAYMENT_DATE = @PAYMENT_DATE&#xD;&#xA;&#x9;AND HD.PAYMENT_ITEM_TYPE_ID IN (7,107)&#xD;&#xA;GROUP BY HDI.FBO_CO, P.SSN&#xD;&#xA;ORDER BY SSN&#xD;&#xA;&#xD;&#xA;--Report output&#xD;&#xA;SELECT FBO_CO, SSN, SUM(BEF1) AS BEF1, SUM(AFT1) AS AFT1, SUM(ERB1) AS ERB1 FROM #TRANSFERPAYMENT GROUP BY FBO_CO, SSN&#xD;&#xA;&#xD;&#xA;--DROP TABLE #transferpayment">
      <parameters>
        <parameter ID="@PAYMENT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="PaymentScheduleId" sfwType="Column" sfwValue="payment_schedule_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="True" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PaymentDate" sfwType="Column" sfwValue="payment_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ProcessDate" sfwType="Column" sfwValue="process_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ProcessStartTime" sfwType="Column" sfwValue="process_start_time" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ProcessEndTime" sfwType="Column" sfwValue="process_end_time" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="BackupTablePrefix" sfwType="Column" sfwValue="backup_table_prefix" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="EffectiveDate" sfwType="Column" sfwValue="effective_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ScheduleTypeDescription" sfwType="Description" sfwValue="schedule_type_description" />
    <attribute ID="ScheduleTypeId" sfwType="Column" sfwValue="schedule_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="2501" sfwDataType="int" sfwRequired="False" />
    <attribute ID="ScheduleTypeValue" sfwType="Column" sfwValue="schedule_type_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="StatusDescription" sfwType="Description" sfwValue="status_description" />
    <attribute ID="StatusId" sfwType="Column" sfwValue="status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="2502" sfwDataType="int" sfwRequired="False" />
    <attribute ID="StatusValue" sfwType="Column" sfwValue="status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="ActionStatusDescription" sfwType="Description" sfwValue="action_status_description" />
    <attribute ID="ActionStatusId" sfwType="Column" sfwValue="action_status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="2503" sfwDataType="int" sfwRequired="False" />
    <attribute ID="ActionStatusValue" sfwType="Column" sfwValue="action_status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="CheckMessage" sfwType="Column" sfwValue="check_message" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="200" />
    <attribute ID="Notes" sfwType="Column" sfwValue="notes" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="2000" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute sfwType="Collection" sfwEntity="entPaymentScheduleStep" ID="lstPaymentScheduleStep" sfwValue="iclbPaymentScheduleStep" />
  </attributes>
  <objectmethods>
    <method ID="btnRunTrialReports_Click" sfwReturnType="ArrayList" />
    <method ID="btnApproveForFinal_Click" sfwReturnType="ArrayList" />
    <method ID="btnCancel_Click" sfwReturnType="ArrayList" />
  </objectmethods>
  <constraint />
  <groupslist />
  <methods />
  <lifecycle />
  <ExtraFields />
</entity>