<entity ID="entPersonAccount" sfwActive="True" sfwStatus="Review" sfwType="BusinessRule" sfwErrorTable="sgt_person_account_error" sfwParentKey="person_account_id" sfwParentKeyValue="icdoPersonAccount.person_account_id" sfwMainCDO="icdoPersonAccount" sfwStatusColumn="status_value" sfwObjectID="busPersonAccount" sfwTableName="sgt_person_account" sfwView="False" sfwParentEntity="entPersonBase">
  <rules>
    <rule ID="CheckIfAnyPayeeAccountWithCompletedOrCancelledStatus" sfwMessageId="7656" sfwExpression="(this.IfAnyPayeeAccountWithCompletedOrCancelledStatus() == False)" sfwObjectBased="True" />
    <rule ID="CheckOrgPlanValidForPersonAccountStartDate" sfwMessageId="6650" sfwExpression="!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;!(this.IsPlanStartDateOverlapWithEmployerOrgPlan() == True)" sfwObjectBased="True" />
    <rule ID="IsACHDetailNotEnteredForACHPaymentMethod" sfwMessageId="5560" sfwExpression="(this.IsACHDetailNotEnteredForACHPaymentMethod() == True)" sfwObjectBased="True" />
    <rule ID="IsEnnrollmentDateNotValidForEapDentalLifeHealthVisionFlex457" sfwMessageId="6513" sfwExpression="!(this.icdoPersonAccount.person_employment_dtl_id == 0) &amp;&amp; &#xA;!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;(this.IsPlanStartDateLessThanFirstDayofFollowingMonthEmpDate() == True)" sfwObjectBased="True" />
    <rule ID="IsEnrollmentDayNOTFirstDay" sfwMessageId="7063" sfwExpression="!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;(this.IsEnrollmentDateFirstDay() == False)" sfwObjectBased="True" />
    <rule ID="IsHistoryChangeDateRequired" sfwMessageId="5025" sfwExpression="(this.IsHistoryEntryRequired == True) &amp;&amp; &#xA;!(this.icdoPersonAccount.person_account_id == 0) &amp;&amp; &#xA;(this.icdoPersonAccount.history_change_date == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="IsHistoryChangeDateStartsWithFirstDayOfMonth" sfwMessageId="5028" sfwExpression="(this.IsHistoryChangeDateStartsWithFirstDayOfMonth() == False)" sfwObjectBased="True" />
    <rule ID="IsMSSElectionStatusEligible" sfwExpression="(this.istrMSSElectionStatus == &quot;Eligible&quot;)" sfwObjectBased="True" />
    <rule ID="IsMSSElectionStatusEnrolled" sfwExpression="(this.istrMSSElectionStatus == &quot;Enrolled&quot;)" sfwObjectBased="True" />
    <rule ID="IsPersonAccountOverlaps" sfwMessageId="6588" sfwExpression="(this.CheckOverlapping() == True) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPerson.icdoPerson.db_addl_contrib&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="IsPersonAgeLessThan18" sfwMessageId="6505" sfwExpression="!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;(this.ValidatePersonEnrollmentAge() == True)" sfwObjectBased="True" />
    <rule ID="IsPlanParticipationStatusNull" sfwMessageId="6504" sfwExpression="(string.IsNullOrEmpty(this.icdoPersonAccount.plan_participation_status_value))" sfwObjectBased="True" />
    <rule ID="IsPostEnrollmentDate" sfwMessageId="6536" sfwExpression="(this.iblnIsNewMode == True) &amp;&amp; &#xA;!(this.icdoPersonAccount.person_employment_dtl_id == 0) &amp;&amp; &#xA;!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;(this.IsPostEnrollmentDate() == True)" sfwObjectBased="True" />
    <rule ID="IsRetirementPlanStatusIsWithdrawan" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.benefit_type_value&quot;) == &quot;RETR&quot;) &amp;&amp; &#xA;!(this.icdoPersonAccount.plan_participation_status_value == &quot;WTN1&quot;)" sfwObjectBased="True" />
    <rule ID="IsStartDateGreaterThanEmploymentEndDate" sfwMessageId="6663" sfwExpression="!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;!(RFunc.GetValue&lt;DateTime&gt;(this, &quot;ibusPersonEmploymentDetail.icdoPersonEmploymentDetail.end_date&quot;) == DateTime.MinValue) &amp;&amp; &#xA;(this.icdoPersonAccount.start_date &gt; RFunc.GetValue&lt;DateTime&gt;(this, &quot;ibusPersonEmploymentDetail.icdoPersonEmploymentDetail.end_date&quot;))" sfwObjectBased="True" />
    <rule ID="IsStartDateLessThanEmploymentDate" sfwMessageId="6618" sfwExpression="!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;!(this.IsPlanStartDateOverlapWithEmployment() == True)" sfwObjectBased="True" />
    <rule ID="IsStartDateNull" sfwMessageId="4032" sfwExpression="(this.icdoPersonAccount.start_date == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsACHApplicable" sfwExpression="(this.IsAchApplicable == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForOverlap" sfwRuleType="Validation" sfwObjectBased="False" sfwExpression="(this.IsResourceForOverlap == True)" />
    <rule ID="IsIBSCheckedAndPaymentMethodPensionCheck" sfwRuleType="Validation" sfwObjectBased="False" sfwExpression="(this.IsResourceForEnhancedOverlapIBS()) &amp;&amp; &#xA;(this.ibusPaymentElection.icdoPersonAccountPaymentElection.ibs_flag == &quot;Y&quot;) &amp;&amp;&#xA;(this.ibusPaymentElection.icdoPersonAccountPaymentElection.payment_method_value == &quot;PNCH&quot;)" sfwMessageId="10410" />
    <rule ID="IsEnnrollmentDateNotValidFor457" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="!(this.icdoPersonAccount.person_employment_dtl_id == 0) &amp;&amp; &#xA;!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;(this.IsPlanStartDateLessThanFirstDayofFollowingMonthEmpDate() == True) &amp;&amp; &#xA;(this.icdoPersonAccount.plan_id == 8 || this.icdoPersonAccount.plan_id == 19)" sfwMessageId="10424" />
  </rules>
  <delete />
  <checklist />
  <initialload>
    <item ID="VisibleRuleIsACHApplicable" sfwMode="All" sfwStatus="Active" />
    <item ID="IsMSSElectionStatusEnrolled" sfwMode="All" sfwStatus="Active" />
    <item ID="IsMSSElectionStatusEligible" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForOverlap" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror>
    <item ID="IsPostEnrollmentDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsIBSCheckedAndPaymentMethodPensionCheck" sfwMode="All" sfwStatus="InActive" />
  </softerror>
  <harderror>
    <item ID="IsStartDateLessThanEmploymentDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsEnrollmentDayNOTFirstDay" sfwMode="All" sfwStatus="Active" />
    <item ID="IsHistoryChangeDateRequired" sfwMode="All" sfwStatus="Active" />
    <item ID="IsStartDateGreaterThanEmploymentEndDate" sfwMode="All" sfwStatus="Active" />
    <item ID="CheckOrgPlanValidForPersonAccountStartDate" sfwMode="All" sfwStatus="Active" />
  </harderror>
  <validatedelete />
  <groupslist />
  <updateablecdo />
  <commonproperties />
  <expressionfields />
  <queries>
    <query ID="DeterminePlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from SGT_PLAN_JOB_CLASS_CROSSREF A inner join SGT_PLAN B&#xD;&#xA;on A.PLAN_ID=B.PLAN_ID&#xD;&#xA;where JOB_TYPE_VALUE=@JOB_TYPE_VALUE &#xD;&#xA;and JOB_CLASS_VALUE=@JOB_CLASS_VALUE&#xD;&#xA;AND RETIREMENT_TYPE_VALUE IN ('DB','HB')&#xD;&#xA;AND A.PLAN_ID NOT IN(10,11)">
      <parameters>
        <parameter ID="@JOB_TYPE_VALUE" sfwDataType="string" />
        <parameter ID="@JOB_CLASS_VALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetActivePersonAccount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_ACCOUNT PA(NOLOCK)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV(NOLOCK) &#xD;&#xA;  ON PA.PLAN_PARTICIPATION_STATUS_ID = CV.CODE_ID &#xD;&#xA;  AND PA.PLAN_PARTICIPATION_STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; WHERE  PERSON_ID=@PERSON_ID AND PLAN_ID=@PLANID  AND CV.DATA2 NOT IN ('WTDN', 'CNLD')&#xD;&#xA; ORDER BY PERSON_ACCOUNT_ID DESC">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLANID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetProviderOrgPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select * from sgt_org_plan where plan_id=@planid and &#xD;&#xA;org_id in (Select provider_org_id from sgt_Org_plan_provider where Org_plan_id=@Orgplanid)">
      <parameters>
        <parameter ID="@planid" sfwDataType="int" />
        <parameter ID="@Orgplanid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetEAPProviders" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;&#xD;&#xA;Select * from dbo.SGT_ORG_PLAN_PROVIDER A inner join &#xD;&#xA;dbo.SGT_ORGANIZATION B on A.provider_org_id=B.org_id &#xD;&#xA;Where A.org_plan_id=@orgplanid">
      <parameters>
        <parameter ID="@orgplanid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadInsuranceYTD" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select RIGHT('00'+CAST(MONTH(EFFECTIVE_DATE) AS VARCHAR(2)),2)+'/'+ CAST(YEAR(EFFECTIVE_DATE) AS VARCHAR(4)) AS PremiumMonth, *&#xD;&#xA;From dbo.SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;Where EFFECTIVE_DATE &gt;= @StartDate and EFFECTIVE_DATE &lt;= @EndDate and &#xD;&#xA;PERSON_ACCOUNT_ID= @PersonAccountID&#xD;&#xA;order by effective_date desc">
      <parameters>
        <parameter ID="@StartDate" sfwDataType="DateTime" />
        <parameter ID="@EndDate" sfwDataType="DateTime" />
        <parameter ID="@PersonAccountID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Delete" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;delete from SGT_PERSON_ACCOUNT_RETIREMENT_ADJUSTMENT_CONTRIBUTION&#xD;&#xA;where PERSON_ACCOUNT_ADJUSTMENT_ID in (Select PERSON_ACCOUNT_ADJUSTMENT_ID from &#xD;&#xA;SGT_PERSON_ACCOUNT_ADJUSTMENT &#xD;&#xA;where person_account_id = @person_account_id  )&#xD;&#xA;delete from SGT_PERSON_ACCOUNT_ADJUSTMENT where person_account_id = @person_account_id &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_RETIREMENT_DB_DB_TRANSFER_CONTRIBUTION where DB_DB_TRANSFER_ID in  &#xD;&#xA;(Select DB_DB_TRANSFER_ID from SGT_PERSON_ACCOUNT_RETIREMENT_DB_DB_TRANSFER&#xD;&#xA; where from_person_account_id = @person_account_id  or from_person_account_id = @person_account_id )&#xD;&#xA;delete from SGT_PERSON_ACCOUNT_RETIREMENT_DB_DB_TRANSFER where from_person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_RETIREMENT_DB_DB_TRANSFER where to_person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_RETIREMENT_DB_DC_TRANSFER_ESTIMATE where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_RETIREMENT where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_ADJUSTMENT where person_account_id = @person_account_id  &#xD;&#xA;&#xD;&#xA;delete from SGT_PERSON_ACCOUNT_DEFERRED_COMP_CONTRIBUTION where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_DEFERRED_COMP_HISTORY where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_DEFERRED_COMP_PROVIDER where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_DEFERRED_COMP where person_account_id = @person_account_id  &#xD;&#xA;&#xD;&#xA;delete from SGT_PERSON_ACCOUNT_FLEXCOMP_CONVERSION where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_FLEX_COMP_OPTION where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_FLEX_COMP where person_account_id = @person_account_id  &#xD;&#xA;&#xD;&#xA;delete from SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_PAYMENT_ELECTION where person_account_id = @person_account_id  &#xD;&#xA;&#xD;&#xA;delete from SGT_PERSON_ACCOUNT_LIFE_HISTORY where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_LIFE_OPTION where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_LIFE where person_account_id = @person_account_id  &#xD;&#xA;&#xD;&#xA;delete from SGT_PERSON_ACCOUNT_EAP_HISTORY where person_account_id = @person_account_id  &#xD;&#xA;&#xD;&#xA;delete from SGT_PERSON_ACCOUNT_GHDV_HISTORY&#xD;&#xA;where PERSON_ACCOUNT_GHDV_ID in(&#xD;&#xA;select PERSON_ACCOUNT_GHDV_ID from SGT_PERSON_ACCOUNT_GHDV&#xD;&#xA;where person_account_id = @person_account_id  )&#xD;&#xA;delete from SGT_PERSON_ACCOUNT_OTHER_COVERAGE_DETAIL where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_WORKER_COMPENSATION where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_GHDV where person_account_id = @person_account_id  &#xD;&#xA;&#xD;&#xA;delete from SGT_PERSON_ACCOUNT_LTC_OPTION_HISTORY&#xD;&#xA;where PERSON_ACCOUNT_LTC_OPTION_ID in(Select PERSON_ACCOUNT_LTC_OPTION_ID&#xD;&#xA;from SGT_PERSON_ACCOUNT_LTC_OPTION where person_account_id = @person_account_id  ) &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_LTC_OPTION where person_account_id = @person_account_id  &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_TFFRTIAA_HISTORY where person_account_id = @person_account_id &#xD;&#xA;delete from SGT_PERSON_ACCOUNT_ERROR where person_account_id = @person_account_id  &#xD;&#xA;delete from sgt_person_account where person_account_id = @person_account_id  ">
      <parameters>
        <parameter ID="@person_account_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPersonAccountIDWithEndDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 1 PERSON_ACCOUNT_ID FROM SGT_PERSON_ACCOUNT &#xD;&#xA;WHERE PERSON_ID=@PERSON_ID AND PLAN_ID=@PLAN_ID AND END_DATE IS NOT NULL ORDER BY END_DATE DESC">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetLastEmploymentDetailID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 1 SPAED.PERSON_EMPLOYMENT_DTL_ID FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL SPAED&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL SPED ON SPED.PERSON_EMPLOYMENT_DTL_ID=SPAED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT SPE ON SPE.PERSON_EMPLOYMENT_ID=SPED.PERSON_EMPLOYMENT_ID&#xD;&#xA;WHERE SPAED.PERSON_ACCOUNT_ID=@PERSON_ACCOUNT_ID AND SPE.END_DATE IS NOT NULL ORDER BY SPED.END_DATE DESC">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadProviderOrgPlanIfEmploymentNotExists" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select A.* from sgt_org_plan A WITH(NOLOCK) inner join sgt_organization B WITH(NOLOCK)&#xD;&#xA;on A.org_id=B.org_id where B.org_type_value='PRVD' and A.plan_id=@planid&#xD;&#xA;ORDER BY A.ORG_PLAN_ID">
      <parameters>
        <parameter ID="@planid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetActiveEmploymentDetailByPersonAndOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT A.* FROM SGT_PERSON_EMPLOYMENT_DETAIL A&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT B ON A.PERSON_EMPLOYMENT_ID = B.PERSON_EMPLOYMENT_ID&#xD;&#xA;WHERE (A.END_DATE IS NULL OR A.END_DATE &gt; getDate())&#xD;&#xA;AND B.PERSON_ID = @PERSON_ID AND B.ORG_ID = @ORG_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetEmploymentDetailIDByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select a.* from sgt_person_account_employment_detail a &#xD;&#xA;inner join sgt_person_employment_detail b on b.PERSON_EMPLOYMENT_DTL_ID = a.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment c on c.PERSON_EMPLOYMENT_ID = b.PERSON_EMPLOYMENT_ID&#xD;&#xA;where a.plan_id = @planID and c.person_id = @personID and a.election_value = 'ENLD'&#xD;&#xA; AND b.END_DATE IS NULL ">
      <parameters>
        <parameter ID="@planID" sfwDataType="int" />
        <parameter ID="@personID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetEAPDefaultProvider" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;&#xD;&#xA;Select * from dbo.SGT_ORG_PLAN_PROVIDER A inner join &#xD;&#xA;dbo.SGT_ORGANIZATION B on A.provider_org_id=B.org_id &#xD;&#xA;Where A.org_plan_id=@orgplanid order by  A.org_plan_id desc">
      <parameters>
        <parameter ID="@orgplanid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="NonPayeeEmployeeTerminationLetter" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_EMPLOYMENT EMP&#xD;&#xA;INNER JOIN SGT_PERSON PER ON PER.PERSON_ID=EMP.PERSON_ID&#xD;&#xA;WHERE &#xD;&#xA;EMP.END_DATE IS NOT NULL AND&#xD;&#xA;EMP.TERMINATION_LETTER_STATUS_VALUE='LNS'&#xD;&#xA;AND PER.DATE_OF_DEATH IS NULL&#xD;&#xA;AND NOT EXISTS (SELECT 1 FROM SGT_PERSON_EMPLOYMENT EMP&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_ORGANIZATION ORG ON ORG.ORG_ID = EMP.ORG_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGS_CODE_VALUE CV ON CV.DATA1 = ORG.ORG_CODE AND CV.CODE_ID = 7022&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE EMP.PERSON_ID = PER.PERSON_ID )">
      <parameters />
    </query>
    <query ID="LoadEAPProvidersForEAPFileOut" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select a.org_id from sgt_organization a inner join sgt_org_plan b on a.org_id=b.org_id &#xD;&#xA;where a.org_type_value='PRVD' and b.plan_id=14">
      <parameters />
    </query>
    <query ID="GetLatestTFFRTIAAHistoryRecord" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select top 1 * from SGT_PERSON_ACCOUNT_TFFRTIAA_HISTORY &#xD;&#xA;where person_account_id = @PersonAccountID&#xD;&#xA;order by end_date,start_date desc,PERSON_ACCOUNT_TFFRTIAA_HISTORY_ID desc">
      <parameters>
        <parameter ID="@PersonAccountID" />
      </parameters>
    </query>
    <query ID="NDPERS_EAP_Enrollment" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select per.first_name,per.last_name,per.middle_name,o.org_name,oca.addr_line_1,oca.addr_line_2, oca.city,oca.state_value,oca.zip_code,&#xD;&#xA;pe.start_date,pe.end_date&#xD;&#xA;from sgt_person_account_employment_detail paed WITH(NOLOCK)&#xD;&#xA;inner join sgt_person_employment_detail ped WITH(NOLOCK) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join sgt_person_employment pe WITH(NOLOCK) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person per WITH(NOLOCK) on pe.person_id = per.person_id&#xD;&#xA;inner join sgt_organization o WITH(NOLOCK) on pe.org_id = o.org_id&#xD;&#xA;left join sgt_org_contact_address oca WITH(NOLOCK) on o.primary_address_id = oca.contact_org_address_id&#xD;&#xA;inner join sgt_person_account pa WITH(NOLOCK) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_person_account_eap_history paeh WITH(NOLOCK) on paeh.person_account_id = pa.person_account_id&#xD;&#xA;where paeh.provider_org_id=@provider_org_id and paed.election_value = 'ENLD' AND&#xD;&#xA;paeh.plan_participation_status_value = 'ENL2' and&#xD;&#xA;@effectiveDate between paeh.start_date and isnull(paeh.end_date,'01/01/2900') and&#xD;&#xA;paeh.start_date &lt;&gt; isnull(paeh.end_date,'01/01/2900') and --ignore same dated history records&#xD;&#xA;@effectiveDate between ped.start_date and isnull(ped.end_date,'01/01/2900') and&#xD;&#xA;@effectiveDate between pe.start_date and isnull(pe.end_date,'01/01/2900') and&#xD;&#xA;paed.plan_id = 14">
      <parameters>
        <parameter ID="@provider_org_id" sfwDataType="int" />
        <parameter ID="@effectiveDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="flePeopleSoftPlanFileOut" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select pa.*,per.*,p.*,pag.*,pal.*,o.* from &#xD;&#xA;sgt_person_account pa WITH(NOLOCK) &#xD;&#xA;inner join sgt_plan p WITH(NOLOCK) on p.plan_id = pa.plan_id&#xD;&#xA;inner join sgt_person per WITH(NOLOCK) on per.person_id = pa.person_id  &#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT pe WITH(NOLOCK) ON pe.PERSON_ID=pa.PERSON_ID AND PE.END_DATE IS NULL&#xD;&#xA;INNER JOIN sgt_organization ORG WITH(NOLOCK) ON ORG.ORG_ID=pe.ORG_ID&#xD;&#xA;left join sgt_person_account_ghdv pag WITH(NOLOCK) on pag.person_account_id = pa.person_account_id&#xD;&#xA;left join sgt_person_account_life pal WITH(NOLOCK) on pal.person_account_id = pa.person_account_id&#xD;&#xA;left join sgt_person_account_deferred_comp padc WITH(NOLOCK) on padc.person_account_id=pa.person_account_id&#xD;&#xA;left join sgt_organization o WITH(NOLOCK)  on pa.provider_org_id=o.org_id&#xD;&#xA;where (people_soft_file_sent_flag='N' or people_soft_file_sent_flag is null)&#xD;&#xA;and PA.ps_file_change_event_value &lt;&gt; 'ANNE'  AND ORG.PEOPLESOFT_ORG_GROUP_VALUE IN ('STAT','BND')">
      <parameters />
    </query>
    <query ID="UpdatePersonAccountPlanParticipationStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT A.PERSON_ACCOUNT_ID ,PLAN_PARTICIPATION_STATUS,&#xD;&#xA; HISTORY_CHANGE_DATE=@PAYMENTDATE&#xD;&#xA;INTO #TEMP &#xD;&#xA;FROM SGT_PERSON_ACCOUNT A INNER JOIN &#xD;&#xA;(&#xD;&#xA; SELECT &#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,PA.BENEFIT_BEGIN_DATE,&#xD;&#xA;  BA.MEMBER_PERSON_ID,BA.PLAN_ID,BAPA.PERSON_ACCOUNT_ID,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA; CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE ='RETR' THEN 'RTRD'&#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE ='RFND' THEN 'WTN1'&#xD;&#xA;    when PA.BENEFIT_ACCOUNT_TYPE_VALUE ='DETH' then 'DSW1'&#xD;&#xA; END&#xD;&#xA; AS PLAN_PARTICIPATION_STATUS,@PAYMENTDATE AS HISTORY_CHANGE_DATE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS  &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA  &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;   and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA;  WHERE (CV.DATA2 = 'APRD' OR CV.DATA2 = 'RECV') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 &#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;  AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE Not in  ('DISA','PSTD')&#xD;&#xA;  &#xD;&#xA;  union all&#xD;&#xA;  -- PIR 6556&#xD;&#xA;  SELECT &#xD;&#xA;   NULL AS PAYEE_ACCOUNT_ID,NULL AS BENEFIT_BEGIN_DATE,&#xD;&#xA;   BA.MEMBER_PERSON_ID,BA.PLAN_ID,BAPA.PERSON_ACCOUNT_ID,&#xD;&#xA;   NULL AS BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;   NULL AS BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  CASE WHEN calc.BENEFIT_ACCOUNT_TYPE_VALUE ='RETR' THEN 'RTRD'&#xD;&#xA;     WHEN calc.BENEFIT_ACCOUNT_TYPE_VALUE ='RFND' THEN 'WTN1'&#xD;&#xA;     when calc.BENEFIT_ACCOUNT_TYPE_VALUE ='DETH' then 'DSW1'&#xD;&#xA;  END&#xD;&#xA;  AS PLAN_PARTICIPATION_STATUS,@PAYMENTDATE AS HISTORY_CHANGE_DATE&#xD;&#xA;   FROM SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;   ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;  INNER JOIN SGT_BENEFIT_CALCULATION CALC &#xD;&#xA;   ON CALC.BENEFIT_APPLICATION_ID = BA.BENEFIT_APPLICATION_ID     &#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT PA &#xD;&#xA;   ON BAPA.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PACT&#xD;&#xA;   ON  BA.BENEFIT_APPLICATION_ID = PACT.APPLICATION_ID&#xD;&#xA;    AND BA.RECIPIENT_PERSON_ID = PACT.PAYEE_PERSLINK_ID &#xD;&#xA;  WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' &#xD;&#xA;   AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC') &#xD;&#xA;   AND (BA.PLAN_ID = 7 OR BA.PLAN_ID = 28 OR BA.PLAN_ID = 30)&#xD;&#xA;   AND CALC.ACTION_STATUS_VALUE ='APPR'  &#xD;&#xA;   AND PLAN_PARTICIPATION_STATUS_VALUE in( 'SUS2' , 'ENL1') &#xD;&#xA;   AND ISNULL(BA.PAYMENT_DATE,PACT.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE -- ADDED&#xD;&#xA;) B &#xD;&#xA;ON A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE A.PLAN_PARTICIPATION_STATUS_VALUE IN('ENL1','SUS2')&#xD;&#xA;AND A.PERSON_ACCOUNT_ID NOT IN&#xD;&#xA;(&#xD;&#xA;SELECT distinct BEN.PERSON_ACCOUNT_ID &#xD;&#xA;From (&#xD;&#xA;select PA.PAYEE_PERSLINK_ID ,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS  &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; WHERE (CV.DATA2 = 'APRD' OR CV.DATA2 = 'RECV') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;) AS P &#xD;&#xA;RIGHT OUTER JOIN &#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;PAB.BENEFICIARY_PERSON_ID ,PAB.BENIFICIARY_ORG_ID ,PAB.PERSON_ACCOUNT_ID&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS  &#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_BENEFIT_APPLICATION BA  &#xD;&#xA;  ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA; INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA &#xD;&#xA;  ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;  and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA; INNER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT PB.BENEFICIARY_PERSON_ID ,PB.BENIFICIARY_ORG_ID ,PAB.PERSON_ACCOUNT_ID&#xD;&#xA;   FROM SGT_PERSON_ACCOUNT_BENEFICIARY PAB&#xD;&#xA;   INNER JOIN SGT_PERSON_BENEFICIARY PB&#xD;&#xA;    ON PAB.BENEFICIARY_ID = PB.BENEFICIARY_ID &#xD;&#xA;   INNER JOIN SGT_PERSON BPER ON PB.PERSON_ID = BPER.PERSON_ID&#xD;&#xA;   WHERE BPER.DATE_OF_DEATH BETWEEN PAB.START_DATE &#xD;&#xA;   AND (CASE WHEN PAB.END_DATE IS NULL THEN '99991231' ELSE PAB.END_DATE END)&#xD;&#xA;   AND BPER.DATE_OF_DEATH  IS NOT NULL&#xD;&#xA;   AND BENEFICIARY_TYPE_VALUE = 'PRIM'&#xD;&#xA; ) AS PAB &#xD;&#xA; ON PAB.PERSON_ACCOUNT_ID = BAPA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE (CV.DATA2 = 'APRD' OR CV.DATA2 = 'RECV') &#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA; AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA; AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; and PA.BENEFIT_ACCOUNT_TYPE_VALUE  in ('DETH')&#xD;&#xA;AND PAB.BENEFICIARY_PERSON_ID IS  NOT NULL&#xD;&#xA;) AS BEN &#xD;&#xA;ON BEN.BENEFICIARY_PERSON_ID = P.PAYEE_PERSLINK_ID  and P.BENEFIT_ACCOUNT_TYPE_VALUE  = 'DETH'&#xD;&#xA;WHERE P.PAYEE_PERSLINK_ID IS NULL&#xD;&#xA;&#xD;&#xA;UNION ALL &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT BEN.PERSON_ACCOUNT_ID &#xD;&#xA;From (&#xD;&#xA;select PA.PAYEE_ORG_ID ,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS  &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; WHERE (CV.DATA2 = 'APRD' OR CV.DATA2 = 'RECV') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE  &#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;) AS P &#xD;&#xA;RIGHT OUTER JOIN &#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;PAB.BENEFICIARY_PERSON_ID ,PAB.BENIFICIARY_ORG_ID ,PAB.PERSON_ACCOUNT_ID&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS  &#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_BENEFIT_APPLICATION BA  &#xD;&#xA;  ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA; INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA &#xD;&#xA;  ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;  and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA; INNER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT PB.BENEFICIARY_PERSON_ID ,PB.BENIFICIARY_ORG_ID ,PAB.PERSON_ACCOUNT_ID&#xD;&#xA;   FROM SGT_PERSON_ACCOUNT_BENEFICIARY PAB&#xD;&#xA;   INNER JOIN SGT_PERSON_BENEFICIARY PB&#xD;&#xA;    ON PAB.BENEFICIARY_ID = PB.BENEFICIARY_ID &#xD;&#xA;   INNER JOIN SGT_PERSON BPER ON PB.PERSON_ID = BPER.PERSON_ID&#xD;&#xA;   WHERE BPER.DATE_OF_DEATH BETWEEN PAB.START_DATE &#xD;&#xA;   AND (CASE WHEN PAB.END_DATE IS NULL THEN '99991231' ELSE PAB.END_DATE END)&#xD;&#xA;   AND BPER.DATE_OF_DEATH  IS NOT NULL&#xD;&#xA;   AND BENEFICIARY_TYPE_VALUE = 'PRIM'&#xD;&#xA; ) AS PAB &#xD;&#xA; ON PAB.PERSON_ACCOUNT_ID = BAPA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE (CV.DATA2 = 'APRD' OR CV.DATA2 = 'RECV') &#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA; AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA; AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; and PA.BENEFIT_ACCOUNT_TYPE_VALUE  in ('DETH')&#xD;&#xA;AND PAB.BENIFICIARY_ORG_ID IS  NOT NULL&#xD;&#xA;) AS BEN &#xD;&#xA;ON BEN.BENIFICIARY_ORG_ID = P.PAYEE_ORG_ID  and P.BENEFIT_ACCOUNT_TYPE_VALUE  in ('DETH')&#xD;&#xA;WHERE P.PAYEE_ORG_ID IS NULL&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE A&#xD;&#xA; SET PLAN_PARTICIPATION_STATUS_VALUE=PLAN_PARTICIPATION_STATUS,&#xD;&#xA; HISTORY_CHANGE_DATE=@PAYMENTDATE,&#xD;&#xA; END_DATE=dateadd(d,-1,@PAYMENTDATE),&#xD;&#xA; MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), &#xD;&#xA; MODIFIED_DATE = GETDATE(),&#xD;&#xA; UPDATE_SEQ = UPDATE_SEQ+1&#xD;&#xA;FROM SGT_PERSON_ACCOUNT A INNER JOIN #TEMP b&#xD;&#xA;ON A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID &#xD;&#xA;&#xD;&#xA;UPDATE A SET END_DATE = CASE WHEN A.START_DATE &lt; @PAYMENTDATE THEN @PAYMENTDATE -1 ELSE A.START_DATE END,&#xD;&#xA; MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), &#xD;&#xA; MODIFIED_DATE = GETDATE(),&#xD;&#xA; UPDATE_SEQ = UPDATE_SEQ+1&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY A&#xD;&#xA;INNER JOIN #TEMP B ON  A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID AND END_DATE IS NULL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY&#xD;&#xA;(&#xD;&#xA;PERSON_ACCOUNT_ID,START_DATE, END_DATE, PROVIDER_ORG_ID, &#xD;&#xA;PLAN_PARTICIPATION_STATUS_ID, PLAN_PARTICIPATION_STATUS_VALUE, STATUS_ID, STATUS_VALUE, FROM_PERSON_ACCOUNT_ID, &#xD;&#xA;TO_PERSON_ACCOUNT_ID, SUPPRESS_WARNINGS_FLAG, SUPPRESS_WARNINGS_BY, SUPPRESS_WARNINGS_DATE, DC_ELIGIBILITY_DATE,&#xD;&#xA;MUTUAL_FUND_WINDOW_FLAG, CAPITAL_GAIN, RHIC_BENFIT_AMOUNT, VESTING_LETTER_SENT_FLAG, &#xD;&#xA;CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT&#xD;&#xA;A.PERSON_ACCOUNT_ID ,&#xD;&#xA;A.HISTORY_CHANGE_DATE AS START_DATE,&#xD;&#xA;NULL AS END_DATE,A.PROVIDER_ORG_ID,&#xD;&#xA;A.PLAN_PARTICIPATION_STATUS_ID,A.PLAN_PARTICIPATION_STATUS_VALUE,&#xD;&#xA;A.STATUS_ID,A.STATUS_VALUE,NULL AS FROM_PERSON_ACCOUNT_ID,NULL AS TO_PERSON_ACCOUNT_ID,&#xD;&#xA;A.SUPPRESS_WARNINGS_FLAG,A.SUPPRESS_WARNINGS_BY,A.SUPPRESS_WARNINGS_DATE,&#xD;&#xA;C.DC_ELIGIBILITY_DATE,C.MUTUAL_FUND_WINDOW_FLAG,C.CAPITAL_GAIN,C.RHIC_BENFIT_AMOUNT,&#xD;&#xA;C.VESTING_LETTER_SENT_FLAG,'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY,GETDATE() AS CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ&#xD;&#xA;FROM SGT_PERSON_ACCOUNT A&#xD;&#xA;INNER JOIN &#xD;&#xA; (&#xD;&#xA;  Select Distinct PERSON_ACCOUNT_ID from  #TEMP &#xD;&#xA; ) b  ON A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT C ON  A.PERSON_ACCOUNT_ID = c.PERSON_ACCOUNT_ID &#xD;&#xA;&#xD;&#xA;-- BR-054-39 &#xD;&#xA;SELECT PAC.PERSON_ACCOUNT_ID into #Temp1&#xD;&#xA;  FROM SGT_PERSON_ACCOUNT PAC&#xD;&#xA; Inner Join&#xD;&#xA; (&#xD;&#xA;  SELECT DISTINCT BAPA.PERSON_ACCOUNT_ID,&#xD;&#xA;   AP.ORIGINATING_PAYEE_ACCOUNT_ID as PAYEE_ACCOUNT_ID &#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;     ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;     ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID    &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;     ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;     INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;     ON BAPA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID   &#xD;&#xA;     and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA;     INNER JOIN SGT_BENEFIT_APPLICATION AP &#xD;&#xA;     ON PA.APPLICATION_ID = AP.BENEFIT_APPLICATION_ID&#xD;&#xA;     LEFT OUTER JOIN &#xD;&#xA;     (&#xD;&#xA;      SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER &#xD;&#xA;       WHERE PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;       AND ISNULL(PAYMENT_SCHEDULE_ID,0) &lt;&gt; @PAYMENTSCHEDULEID&#xD;&#xA;     ) PHH1&#xD;&#xA;      ON PA.PAYEE_ACCOUNT_ID = PHH1.PAYEE_ACCOUNT_ID &#xD;&#xA;   WHERE ( CV.DATA2 = 'APRD' ) &#xD;&#xA;     AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;    AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;    AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;    AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;    AND PA.BENEFIT_ACCOUNT_TYPE_VALUE ='PSTD'&#xD;&#xA;    AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;    AND PHH1.PAYEE_ACCOUNT_ID IS NULL -- exclude records even if there is one payment made &#xD;&#xA; ) PAYEE&#xD;&#xA; ON PAC.PERSON_ACCOUNT_ID = PAYEE.PERSON_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;   ON PAYEE.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  WHERE PAC.PLAN_PARTICIPATION_STATUS_VALUE = 'SUS2'  &#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'&#xD;&#xA;   AND PAYEE.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;&#xD;&#xA;UPDATE A&#xD;&#xA; SET PLAN_PARTICIPATION_STATUS_VALUE='RTRD',&#xD;&#xA; HISTORY_CHANGE_DATE=@PAYMENTDATE,&#xD;&#xA; END_DATE=dateadd(d,-1,@PAYMENTDATE),&#xD;&#xA; MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), &#xD;&#xA; MODIFIED_DATE = GETDATE(),&#xD;&#xA; UPDATE_SEQ = UPDATE_SEQ+1&#xD;&#xA;FROM SGT_PERSON_ACCOUNT A INNER JOIN #TEMP1 b&#xD;&#xA;ON A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE A SET END_DATE = CASE WHEN A.START_DATE &lt; @PAYMENTDATE THEN @PAYMENTDATE -1 ELSE A.START_DATE END ,&#xD;&#xA; MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), &#xD;&#xA; MODIFIED_DATE = GETDATE(),&#xD;&#xA; UPDATE_SEQ = UPDATE_SEQ+1&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY A&#xD;&#xA;INNER JOIN #TEMP1 B ON  A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID AND END_DATE IS NULL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY&#xD;&#xA;(&#xD;&#xA; PERSON_ACCOUNT_ID,START_DATE, END_DATE, PROVIDER_ORG_ID, &#xD;&#xA; PLAN_PARTICIPATION_STATUS_ID, PLAN_PARTICIPATION_STATUS_VALUE, STATUS_ID, STATUS_VALUE, FROM_PERSON_ACCOUNT_ID, &#xD;&#xA; TO_PERSON_ACCOUNT_ID, SUPPRESS_WARNINGS_FLAG, SUPPRESS_WARNINGS_BY, SUPPRESS_WARNINGS_DATE, DC_ELIGIBILITY_DATE,&#xD;&#xA; MUTUAL_FUND_WINDOW_FLAG, CAPITAL_GAIN, RHIC_BENFIT_AMOUNT, VESTING_LETTER_SENT_FLAG, &#xD;&#xA; CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT&#xD;&#xA; A.PERSON_ACCOUNT_ID ,&#xD;&#xA; A.HISTORY_CHANGE_DATE AS START_DATE,&#xD;&#xA; NULL AS END_DATE,A.PROVIDER_ORG_ID,&#xD;&#xA; A.PLAN_PARTICIPATION_STATUS_ID,A.PLAN_PARTICIPATION_STATUS_VALUE,&#xD;&#xA; A.STATUS_ID,A.STATUS_VALUE,NULL AS FROM_PERSON_ACCOUNT_ID,NULL AS TO_PERSON_ACCOUNT_ID,&#xD;&#xA; A.SUPPRESS_WARNINGS_FLAG,A.SUPPRESS_WARNINGS_BY,A.SUPPRESS_WARNINGS_DATE,&#xD;&#xA; C.DC_ELIGIBILITY_DATE,C.MUTUAL_FUND_WINDOW_FLAG,C.CAPITAL_GAIN,C.RHIC_BENFIT_AMOUNT,&#xD;&#xA; C.VESTING_LETTER_SENT_FLAG,'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY,GETDATE() AS CREATED_DATE,&#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ&#xD;&#xA; FROM SGT_PERSON_ACCOUNT A&#xD;&#xA; INNER JOIN &#xD;&#xA; (&#xD;&#xA;  Select Distinct PERSON_ACCOUNT_ID from  #TEMP1 &#xD;&#xA; ) B&#xD;&#xA; ON A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT C ON  A.PERSON_ACCOUNT_ID = c.PERSON_ACCOUNT_ID&#xD;&#xA; &#xD;&#xA;UPDATE A SET END_DATE =  DATEADD(d, -1,B.HISTORY_CHANGE_DATE),&#xD;&#xA; MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), &#xD;&#xA; MODIFIED_DATE = GETDATE(),&#xD;&#xA; UPDATE_SEQ = UPDATE_SEQ+1&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_BENEFICIARY A&#xD;&#xA; INNER JOIN #TEMP B  &#xD;&#xA; ON A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE B.PLAN_PARTICIPATION_STATUS = 'WTN1'&#xD;&#xA;AND A.END_DATE IS NULL">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePersonAccountPlanParticipationStatusAdhoc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PERSON_ACCOUNT_ID,PLAN_PARTIPATION_STATUS,HISTORY_CHANGE_DATE INTO #TEMP&#xD;&#xA;FROM(&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,PLAN_PARTIPATION_STATUS,HISTORY_CHANGE_DATE&#xD;&#xA;FROM(&#xD;&#xA;SELECT &#xD;&#xA; PA.PAYEE_ACCOUNT_ID,pa.BENEFIT_BEGIN_DATE,&#xD;&#xA; BA.MEMBER_PERSON_ID,BA.PLAN_ID,BAPA.PERSON_ACCOUNT_ID,&#xD;&#xA; PA.BENEFIT_ACCOUNT_TYPE_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA; 'WTN1' AS PLAN_PARTIPATION_STATUS,@PAYMENTDATE AS HISTORY_CHANGE_DATE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK)&#xD;&#xA;   ON PA.Application_id = ba.benefit_application_id &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) &#xD;&#xA;    ON BA.BENEFIT_APPLICATION_ID=BAPA.BENEFIT_APPLICATION_ID&#xD;&#xA;    and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA; WHERE (CV.DATA2 = 'APRD' )  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;  AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE in ('RGRD','AURD')&#xD;&#xA;  AND BA.HARDSHIP_APPROVED_FLAG = 'Y'&#xD;&#xA;  AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE  --PROD PIR 4919&#xD;&#xA;  &#xD;&#xA;  UNION ALL&#xD;&#xA;  -- PIR 6556&#xD;&#xA;  SELECT &#xD;&#xA;   NULL AS PAYEE_ACCOUNT_ID,NULL AS BENEFIT_BEGIN_DATE,&#xD;&#xA;   BA.MEMBER_PERSON_ID,BA.PLAN_ID,BAPA.PERSON_ACCOUNT_ID,&#xD;&#xA;   NULL AS BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;   NULL AS BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  CASE WHEN calc.BENEFIT_ACCOUNT_TYPE_VALUE ='RETR' THEN 'RTRD'&#xD;&#xA;     WHEN calc.BENEFIT_ACCOUNT_TYPE_VALUE ='RFND' THEN 'WTN1'&#xD;&#xA;     when calc.BENEFIT_ACCOUNT_TYPE_VALUE ='DETH' then 'DSW1'&#xD;&#xA;  END&#xD;&#xA;  AS PLAN_PARTICIPATION_STATUS,@PAYMENTDATE AS HISTORY_CHANGE_DATE&#xD;&#xA;   FROM SGT_BENEFIT_APPLICATION BA &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) &#xD;&#xA;   ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;  INNER JOIN SGT_BENEFIT_CALCULATION CALC WITH(NOLOCK) &#xD;&#xA;   ON CALC.BENEFIT_APPLICATION_ID = BA.BENEFIT_APPLICATION_ID     &#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) &#xD;&#xA;   ON BAPA.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PACT&#xD;&#xA;   ON  BA.BENEFIT_APPLICATION_ID = PACT.APPLICATION_ID&#xD;&#xA;    AND BA.RECIPIENT_PERSON_ID = PACT.PAYEE_PERSLINK_ID    &#xD;&#xA;  WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' &#xD;&#xA;   AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC') &#xD;&#xA;   AND (BA.PLAN_ID = 7 OR BA.PLAN_ID = 28 OR BA.PLAN_ID = 30)&#xD;&#xA;   AND CALC.ACTION_STATUS_VALUE ='APPR'  &#xD;&#xA;   AND PLAN_PARTICIPATION_STATUS_VALUE in( 'SUS2' , 'ENL1')&#xD;&#xA;   AND ISNULL(BA.PAYMENT_DATE,PACT.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE -- ADDED&#xD;&#xA;   &#xD;&#xA;   -- ADDED FOR 'RETR'&#xD;&#xA;   UNION ALL&#xD;&#xA;&#xD;&#xA;   SELECT &#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,PA.BENEFIT_BEGIN_DATE,&#xD;&#xA;  BA.MEMBER_PERSON_ID,BA.PLAN_ID,BAPA.PERSON_ACCOUNT_ID,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  'RTRD' AS PLAN_PARTICIPATION_STATUS,@PAYMENTDATE AS HISTORY_CHANGE_DATE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS  &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA  &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;   and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA;  WHERE (CV.DATA2 = 'APRD' OR CV.DATA2 = 'RECV') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 &#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;  AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR' &#xD;&#xA;)PERSONACCOUNT&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;--prod pir 5695&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,PLAN_PARTIPATION_STATUS,HISTORY_CHANGE_DATE&#xD;&#xA;FROM(&#xD;&#xA;SELECT &#xD;&#xA; PA.PAYEE_ACCOUNT_ID,pa.BENEFIT_BEGIN_DATE,&#xD;&#xA; BA.MEMBER_PERSON_ID,BA.PLAN_ID,BAPA.PERSON_ACCOUNT_ID,&#xD;&#xA; PA.BENEFIT_ACCOUNT_TYPE_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA; CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DETH' THEN 'DSW1'&#xD;&#xA;   WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE =  'PSTD' THEN 'RTRD' END&#xD;&#xA;  AS PLAN_PARTIPATION_STATUS,@PAYMENTDATE AS HISTORY_CHANGE_DATE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK)&#xD;&#xA;   ON PA.Application_id = ba.benefit_application_id &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) &#xD;&#xA;    ON BA.BENEFIT_APPLICATION_ID=BAPA.BENEFIT_APPLICATION_ID&#xD;&#xA;    and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT PACT WITH(NOLOCK) &#xD;&#xA;    on BAPA.PERSON_ACCOUNT_ID = PACT.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE (CV.DATA2 = 'APRD' )  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;  AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;  AND ( PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DETH' &#xD;&#xA;  OR  (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'PSTD' &#xD;&#xA;    AND PACT.PLAN_PARTICIPATION_STATUS_VALUE = 'SUS2'))&#xD;&#xA;  --AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;  --AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA;)PERSONACCOUNT&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PERSONACCOUNT.PERSON_ACCOUNT_ID,PERSONACCOUNT.PLAN_PARTIPATION_STATUS,PERSONACCOUNT.HISTORY_CHANGE_DATE &#xD;&#xA;FROM (&#xD;&#xA; SELECT &#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,pa.BENEFIT_BEGIN_DATE,&#xD;&#xA;  BA.MEMBER_PERSON_ID,BA.PLAN_ID,BAPA.PERSON_ACCOUNT_ID,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  case when PA.BENEFIT_OPTION_VALUE  = 'DBDC' then 'TRTF' &#xD;&#xA;    when PA.BENEFIT_OPTION_VALUE  = 'DBTT' then 'TRTF' &#xD;&#xA;    when PA.BENEFIT_OPTION_VALUE  = 'DBCT' then 'TRDC'&#xD;&#xA;    when PA.BENEFIT_OPTION_VALUE  = 'SPEL' then 'TRDC'&#xD;&#xA;    when PA.BENEFIT_OPTION_VALUE  = 'DTCT' then 'TICR'&#xD;&#xA;    when PA.BENEFIT_OPTION_VALUE  = 'SPEL' then 'TRDC'&#xD;&#xA;  end&#xD;&#xA; AS PLAN_PARTIPATION_STATUS,@PAYMENTDATE AS HISTORY_CHANGE_DATE,&#xD;&#xA; (isNull(BRC.POST_TAX_EE_CONTRIBUTION_AMOUNT,0.00) + isNull(BRC.PRE_TAX_EE_CONTRIBUTION_AMOUNT,0.00)+ isNull(BRC.EE_ER_PICKUP_AMOUNT,0.00)&#xD;&#xA; + isNull(BRC.RHIC_EE_AMOUNT,0.00)+isNull(BRC.EE_INTEREST_AMOUNT,0.00)+isNull(BRC.VESTED_ER_CONTRIBUTION_AMOUNT ,0.00)) AS TOTALAMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK)&#xD;&#xA;    ON PA.Application_id = ba.benefit_application_id &#xD;&#xA;   INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) &#xD;&#xA;    ON BA.BENEFIT_APPLICATION_ID=BAPA.BENEFIT_APPLICATION_ID&#xD;&#xA;    and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA;   INNER JOIN SGT_BENEFIT_REFUND_CALCULATION BRC WITH(NOLOCK)&#xD;&#xA;    ON BRC.BENEFIT_CALCULATION_ID=PA.CALCULATION_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID    &#xD;&#xA;   WHERE (CV.DATA2 = 'APRD' )  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE in ('DBDC','DBTT')) PERSONACCOUNT &#xD;&#xA;  INNER JOIN &#xD;&#xA;  (&#xD;&#xA;  SELECT PERSON_ACCOUNT_ID,sum(isNull(POST_TAX_EE_AMOUNT,0.00) + &#xD;&#xA;     isNull(PRE_TAX_EE_AMOUNT,0.00) + &#xD;&#xA;     isNull(EE_RHIC_AMOUNT,0.00) + &#xD;&#xA;     isNull(EE_ER_PICKUP_AMOUNT,0.00) + &#xD;&#xA;     isNull(ER_VESTED_AMOUNT,0.00) + &#xD;&#xA;     isNull(INTEREST_AMOUNT,0.00)) AS CONTRIBAMT&#xD;&#xA;  FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK) &#xD;&#xA;  GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;  )CONTR &#xD;&#xA;   ON PERSONACCOUNT.PERSON_ACCOUNT_ID=CONTR.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE TOTALAMOUNT= CONTR.CONTRIBAMT&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PERSONACCOUNT.PERSON_ACCOUNT_ID,PERSONACCOUNT.PLAN_PARTIPATION_STATUS,PERSONACCOUNT.HISTORY_CHANGE_DATE &#xD;&#xA;FROM (&#xD;&#xA; SELECT &#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,pa.BENEFIT_BEGIN_DATE,&#xD;&#xA;  BA.MEMBER_PERSON_ID,BA.PLAN_ID,BAPA.PERSON_ACCOUNT_ID,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  case when PA.BENEFIT_OPTION_VALUE  = 'DBDC' then 'TRTF' &#xD;&#xA;    when PA.BENEFIT_OPTION_VALUE  = 'DBTT' then 'TRTF' &#xD;&#xA;    when PA.BENEFIT_OPTION_VALUE  = 'DBCT' then 'TRDC' &#xD;&#xA;    when PA.BENEFIT_OPTION_VALUE  = 'SPEL' then 'TRDC' &#xD;&#xA;    when PA.BENEFIT_OPTION_VALUE  = 'DTCT' then 'TICR'  &#xD;&#xA;  end&#xD;&#xA; AS PLAN_PARTIPATION_STATUS,@PAYMENTDATE AS HISTORY_CHANGE_DATE,&#xD;&#xA; (isNull(BRC.POST_TAX_EE_CONTRIBUTION_AMOUNT,0.00) + isNull(BRC.PRE_TAX_EE_CONTRIBUTION_AMOUNT,0.00)+ isNull(BRC.EE_ER_PICKUP_AMOUNT,0.00)&#xD;&#xA; + isNull(BRC.RHIC_EE_AMOUNT,0.00)+isNull(BRC.EE_INTEREST_AMOUNT,0.00)+isNull(BRC.VESTED_ER_CONTRIBUTION_AMOUNT ,0.00)) AS TOTALAMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK)&#xD;&#xA;    ON PA.Application_id = ba.benefit_application_id &#xD;&#xA;   INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) &#xD;&#xA;    ON BA.BENEFIT_APPLICATION_ID=BAPA.BENEFIT_APPLICATION_ID&#xD;&#xA;    and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA;   INNER JOIN SGT_BENEFIT_REFUND_CALCULATION BRC WITH(NOLOCK)&#xD;&#xA;    ON BRC.BENEFIT_CALCULATION_ID=PA.CALCULATION_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID    &#xD;&#xA;   WHERE (CV.DATA2 = 'APRD' )  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE in ('DBCT','DTCT','SPEL')&#xD;&#xA;) PERSONACCOUNT &#xD;&#xA;)Rec&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE A&#xD;&#xA; SET A.PLAN_PARTICIPATION_STATUS_VALUE=b.PLAN_PARTIPATION_STATUS,&#xD;&#xA; HISTORY_CHANGE_DATE=@PAYMENTDATE,&#xD;&#xA; END_DATE=dateadd(d,-1,@PAYMENTDATE),&#xD;&#xA; MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), &#xD;&#xA; MODIFIED_DATE = GETDATE(),&#xD;&#xA; UPDATE_SEQ = UPDATE_SEQ+1&#xD;&#xA;FROM SGT_PERSON_ACCOUNT A WITH(NOLOCK) INNER JOIN #TEMP b WITH(NOLOCK)&#xD;&#xA;ON A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID &#xD;&#xA;&#xD;&#xA;UPDATE A SET A.END_DATE = CASE WHEN A.START_DATE &lt; @PAYMENTDATE THEN @PAYMENTDATE -1 ELSE A.START_DATE END ,&#xD;&#xA; MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), &#xD;&#xA; MODIFIED_DATE = GETDATE(),&#xD;&#xA; UPDATE_SEQ = UPDATE_SEQ+1&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY A WITH(NOLOCK)&#xD;&#xA;INNER JOIN #TEMP B WITH(NOLOCK) ON  A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID AND END_DATE IS NULL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY&#xD;&#xA;(&#xD;&#xA;PERSON_ACCOUNT_ID,START_DATE, END_DATE, PROVIDER_ORG_ID, &#xD;&#xA;PLAN_PARTICIPATION_STATUS_ID, PLAN_PARTICIPATION_STATUS_VALUE, STATUS_ID, STATUS_VALUE, FROM_PERSON_ACCOUNT_ID, &#xD;&#xA;TO_PERSON_ACCOUNT_ID, SUPPRESS_WARNINGS_FLAG, SUPPRESS_WARNINGS_BY, SUPPRESS_WARNINGS_DATE, DC_ELIGIBILITY_DATE,&#xD;&#xA;MUTUAL_FUND_WINDOW_FLAG, CAPITAL_GAIN, RHIC_BENFIT_AMOUNT, VESTING_LETTER_SENT_FLAG, &#xD;&#xA;CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT&#xD;&#xA;A.PERSON_ACCOUNT_ID ,&#xD;&#xA;A.HISTORY_CHANGE_DATE AS START_DATE,&#xD;&#xA;NULL AS END_DATE,A.PROVIDER_ORG_ID,&#xD;&#xA;A.PLAN_PARTICIPATION_STATUS_ID,A.PLAN_PARTICIPATION_STATUS_VALUE,&#xD;&#xA;A.STATUS_ID,A.STATUS_VALUE,NULL AS FROM_PERSON_ACCOUNT_ID,NULL AS TO_PERSON_ACCOUNT_ID,&#xD;&#xA;A.SUPPRESS_WARNINGS_FLAG,A.SUPPRESS_WARNINGS_BY,A.SUPPRESS_WARNINGS_DATE,&#xD;&#xA;C.DC_ELIGIBILITY_DATE,C.MUTUAL_FUND_WINDOW_FLAG,C.CAPITAL_GAIN,C.RHIC_BENFIT_AMOUNT,&#xD;&#xA;C.VESTING_LETTER_SENT_FLAG,'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY,GETDATE() AS CREATED_DATE,&#xD;&#xA;'PERSLink Batch' AS MODIFIED_BY,GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ&#xD;&#xA;FROM SGT_PERSON_ACCOUNT A WITH(NOLOCK)&#xD;&#xA;INNER JOIN &#xD;&#xA; (Select Distinct PERSON_ACCOUNT_ID from  #TEMP WITH(NOLOCK)) b  ON A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT C WITH(NOLOCK) ON  A.PERSON_ACCOUNT_ID = c.PERSON_ACCOUNT_ID  &#xD;&#xA;&#xD;&#xA;UPDATE A SET END_DATE = DATEADD(d, -1,B.HISTORY_CHANGE_DATE),&#xD;&#xA; MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), &#xD;&#xA; MODIFIED_DATE = GETDATE(),&#xD;&#xA; UPDATE_SEQ = UPDATE_SEQ+1&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_BENEFICIARY A WITH(NOLOCK)&#xD;&#xA; INNER JOIN #TEMP B WITH(NOLOCK)  &#xD;&#xA; ON A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE B.PLAN_PARTIPATION_STATUS = 'WTN1'&#xD;&#xA;AND A.END_DATE IS NULL">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadInsuranceLTD" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT RIGHT('00'+CAST(MONTH(EFFECTIVE_DATE) AS VARCHAR(2)),2)+'/'+ CAST(YEAR(EFFECTIVE_DATE) AS VARCHAR(4)) AS PREMIUMMONTH,B.ORG_CODE AS STRORG, *&#xD;&#xA;FROM DBO.SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION A WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_ORGANIZATION B WITH(NOLOCK)&#xD;&#xA;ON A.PROVIDER_ORG_ID=B.ORG_ID&#xD;&#xA;WHERE PERSON_ACCOUNT_ID= @PersonAccountId&#xD;&#xA;ORDER BY EFFECTIVE_DATE DESC">
      <parameters>
        <parameter ID="@PersonAccountId" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadInsuranceTransferDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select    &#xD;&#xA;CAST(p2.person_id as varchar(50))+' '+ISNULL(p2.last_name,'') +', '+ ISNULL(p2.first_name,'') +' '+ ISNULL(p2.middle_name,'') as istrFromPersonName,&#xD;&#xA;CAST(p1.person_id as varchar(50))+' '+ISNULL(p1.last_name,'') +', '+ ISNULL(p1.first_name,'')+' '+ISNULL(p1.middle_name,'') as istrToPersonName,&#xD;&#xA;tr.*&#xD;&#xA; from SGT_PERSON_ACCOUNT_INSURANCE_TRANSFER tr WITH(NOLOCK) &#xD;&#xA;inner join sgt_person_account pa1 WITH(NOLOCK) on pa1.person_account_id = tr.to_person_account_id&#xD;&#xA;inner join sgt_person p1 WITH(NOLOCK) on p1.person_id = pa1.person_id&#xD;&#xA;inner join sgt_person_account pa2 WITH(NOLOCK) on pa2.person_account_id = tr.from_person_account_id&#xD;&#xA;inner join sgt_person p2 WITH(NOLOCK) on p2.person_id = pa2.person_id&#xD;&#xA;where (tr.to_person_account_id =  @personAccountID&#xD;&#xA;or tr.from_person_account_id = @personAccountID)  ">
      <parameters>
        <parameter ID="@personAccountID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePersonAccountBeneficiaryAdhoc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PAB.*,PA.PERSON_ID INTO #BENE&#xD;&#xA;  FROM SGT_PERSON_ACCOUNT_BENEFICIARY PAB &#xD;&#xA;   INNER JOIN SGT_PERSON_BENEFICIARY PB &#xD;&#xA;    ON PAB.BENEFICIARY_ID =PB.BENEFICIARY_ID &#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT PA&#xD;&#xA;    ON PAB.PERSON_ACCOUNT_ID=PA.PERSON_ACCOUNT_ID&#xD;&#xA;   INNER JOIN (&#xD;&#xA;SELECT DISTINCT BAPA.PERSON_ACCOUNT_ID,PA.PAYEE_PERSLINK_ID &#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID    &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;    ON BAPA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID   &#xD;&#xA;    and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA;  WHERE (CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE &#xD;&#xA;   AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;   AND PA.CALCULATION_ID IS NOT NULL &#xD;&#xA;   AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE IN ('DBCT','SPEL')&#xD;&#xA;   AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID)TEMP &#xD;&#xA;    ON TEMP.PERSON_ACCOUNT_ID=PAB.PERSON_ACCOUNT_ID AND TEMP.PAYEE_PERSLINK_ID =PB.PERSON_ID&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;SELECT DISTINCT DCPA.PERSON_ACCOUNT_ID,DCPA.PERSON_ID ,DCPA.PLAN_ID,&#xD;&#xA;  DCPA.PLAN_PARTICIPATION_STATUS_VALUE INTO #DCPERSONACCOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID    &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_APPLICATION BA&#xD;&#xA;    ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT DCPA   &#xD;&#xA;    ON BA.MEMBER_PERSON_ID=DCPA.PERSON_ID&#xD;&#xA;  WHERE (CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE &#xD;&#xA;   AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;   AND PA.CALCULATION_ID IS NOT NULL &#xD;&#xA;   AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE IN ('DBCT','SPEL')&#xD;&#xA;   AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;   AND (DCPA.PLAN_ID=7 OR DCPA.PLAN_ID=28 OR DCPA.PLAN_ID=30) AND (DCPA.PLAN_PARTICIPATION_STATUS_VALUE='ENL1' OR DCPA.PLAN_PARTICIPATION_STATUS_VALUE='SUS2')&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;update PAB &#xD;&#xA; set PAB.end_date=@paymentdate,&#xD;&#xA;  pab.modified_by='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;  pab.modified_date=getdate()&#xD;&#xA; from SGT_PERSON_ACCOUNT_BENEFICIARY PAB &#xD;&#xA;  inner join #BENE a on a.PERSON_ACCOUNT_ID=PAB.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PERSON_ACCOUNT_BENEFICIARY&#xD;&#xA;(&#xD;&#xA;BENEFICIARY_ID, PERSON_ACCOUNT_ID, START_DATE, END_DATE, DIST_PERCENT, BENEFICIARY_TYPE_ID, BENEFICIARY_TYPE_VALUE, NMSO_CO_FLAG, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;select &#xD;&#xA;a.BENEFICIARY_ID,b.PERSON_ACCOUNT_ID as PERSON_ACCOUNT_ID,@paymentdate as START_DATE,null as END_DATE,&#xD;&#xA;a.DIST_PERCENT,a.BENEFICIARY_TYPE_ID,a.BENEFICIARY_TYPE_VALUE,a.NMSO_CO_FLAG,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,getdate() as CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,getdate() as MODIFIED_DATE,0 as UPDATE_SEQ&#xD;&#xA; from #BENE a &#xD;&#xA;  inner join #DCPERSONACCOUNT b&#xD;&#xA;   on a.person_id=b.person_id">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptDBPensionPlans" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT      ISNULL(A.PLAN_NAME,B.PLAN_NAME) AS PLAN_NAME,A.MEM_COUNT,B.RET_COUNT&#xD;&#xA;FROM                        (&#xD;&#xA;       SELECT PL.PLAN_NAME,PL.PLAN_ID,COUNT(PERSON_ACCOUNT_ID) AS MEM_COUNT&#xD;&#xA;       FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;        INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK) ON ACCT.PLAN_ID = PL.PLAN_ID        &#xD;&#xA;       WHERE PL.RETIREMENT_TYPE_VALUE = 'DB'&#xD;&#xA;         AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL1'&#xD;&#xA;         AND ACCT.START_DATE &lt;= @EFFECTIVEDATE &#xD;&#xA;         AND ISNULL(ACCT.END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;       GROUP BY PL.PLAN_NAME,PL.PLAN_ID &#xD;&#xA;       ) AS A&#xD;&#xA;      FULL OUTER JOIN&#xD;&#xA;       (&#xD;&#xA;       SELECT PL.PLAN_NAME,PL.PLAN_ID,COUNT(DISTINCT PA.PAYEE_ACCOUNT_ID) AS RET_COUNT&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;        INNER JOIN SGS_CODE_VALUE CV3 WITH(NOLOCK) ON PA.BENEFIT_OPTION_ID = CV3.CODE_ID AND PA.BENEFIT_OPTION_VALUE = CV3.CODE_VALUE&#xD;&#xA;        INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;        INNER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK) ON PAS.STATUS_ID = CV2.CODE_ID AND PAS.STATUS_VALUE = CV2.CODE_VALUE&#xD;&#xA;        INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;        LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;        LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DRO WITH(NOLOCK) ON PA.DRO_APPLICATION_ID = DRO.DRO_APPLICATION_ID&#xD;&#xA;        INNER JOIN SGT_PLAN PL WITH(NOLOCK) ON ISNULL(BA.PLAN_ID,DRO.PLAN_ID) = PL.PLAN_ID       &#xD;&#xA;       WHERE PL.RETIREMENT_TYPE_VALUE = 'DB'&#xD;&#xA;        AND PAS.PAYEE_ACCOUNT_STATUS_ID = (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;                 FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;                 WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;                 AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;                 ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC)&#xD;&#xA;        AND CV2.DATA2 NOT IN ('CNLD','SPND','TRMD')&#xD;&#xA;        AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DISA','RETR') &#xD;&#xA;        OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND ISNULL(CV3.DATA2,'') &lt;&gt; 'RFND'))&#xD;&#xA;        AND PHH.STATUS_VALUE NOT IN ('RCCD','CNLD')&#xD;&#xA;       GROUP BY PL.PLAN_NAME,PL.PLAN_ID &#xD;&#xA;       ) AS B&#xD;&#xA;       ON A.PLAN_ID = B.PLAN_ID&#xD;&#xA;ORDER BY     PLAN_NAME">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptDCPensionPlans" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT      ISNULL(A.PLAN_NAME,B.PLAN_NAME) AS PLAN_NAME,A.MEM_COUNT,B.RET_COUNT&#xD;&#xA;FROM                        (&#xD;&#xA;       SELECT PL.PLAN_NAME,PL.PLAN_ID,COUNT(PERSON_ACCOUNT_ID) AS MEM_COUNT&#xD;&#xA;       FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;        INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK) ON ACCT.PLAN_ID = PL.PLAN_ID        &#xD;&#xA;       WHERE PL.RETIREMENT_TYPE_VALUE IN ('DC','HB')&#xD;&#xA;         AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE  = 'ENL1'&#xD;&#xA;         AND ACCT.START_DATE &lt;= @EFFECTIVEDATE &#xD;&#xA;         AND ISNULL(ACCT.END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;       GROUP BY PL.PLAN_NAME,PL.PLAN_ID &#xD;&#xA;       ) AS A&#xD;&#xA;      FULL OUTER JOIN&#xD;&#xA;       (&#xD;&#xA;       SELECT PL.PLAN_NAME,PL.PLAN_ID,COUNT(DISTINCT PA.PAYEE_ACCOUNT_ID) AS RET_COUNT&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;        INNER JOIN SGS_CODE_VALUE CV3 WITH(NOLOCK) ON PA.BENEFIT_OPTION_ID = CV3.CODE_ID AND PA.BENEFIT_OPTION_VALUE = CV3.CODE_VALUE&#xD;&#xA;        INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;        INNER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK) ON PAS.STATUS_ID = CV2.CODE_ID AND PAS.STATUS_VALUE = CV2.CODE_VALUE&#xD;&#xA;        LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;        LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;        LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DRO WITH(NOLOCK) ON PA.DRO_APPLICATION_ID = DRO.DRO_APPLICATION_ID&#xD;&#xA;        INNER JOIN SGT_PLAN PL WITH(NOLOCK) ON ISNULL(BA.PLAN_ID,DRO.PLAN_ID) = PL.PLAN_ID        &#xD;&#xA;       WHERE PL.RETIREMENT_TYPE_VALUE IN ('DC','HB')&#xD;&#xA;        AND PAS.PAYEE_ACCOUNT_STATUS_ID = (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;                 FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;                 WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;                 AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;                 ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC)&#xD;&#xA;        AND CV2.DATA2 IN ('APRD','DCRC')&#xD;&#xA;        AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DISA','RETR') &#xD;&#xA;        OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND ISNULL(CV3.DATA2,'') &lt;&gt; 'RFND'))&#xD;&#xA;        AND isnull(PHH.PAYMENT_DATE,@EFFECTIVEDATE) &lt;= @EFFECTIVEDATE&#xD;&#xA;       GROUP BY PL.PLAN_NAME,PL.PLAN_ID &#xD;&#xA;       ) AS B&#xD;&#xA;       ON A.PLAN_ID = B.PLAN_ID&#xD;&#xA;ORDER BY     PLAN_NAME">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptDBLifeGHDVSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--i. Defined Benefit Pension Plans &#xD;&#xA;-- 3. Number of State Agencies participating in at least one DB plan: Count of all Organization in DB plan with Plan Participation &#xD;&#xA;--  of  'Active' and 'Employer_Type' = 'State'&#xD;&#xA;-- 4. Number of Political subdivisions participating in at least one DB plan: Count of all Organization in DB plan with Plan Participation &#xD;&#xA;--  of  'Active' and 'Employer_Type' not equal to 'State' or 'District Health Unit'&#xD;&#xA;-- 5. Number of DHU participating in at least one DB plan: Count of all Organization in DB plan with Plan Participation &#xD;&#xA;--  of  'Active' and 'Employer_Type' = ' District Health Unit'&#xD;&#xA;&#xD;&#xA;SELECT      'Number of State Agencies participating in DB plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'DB' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA; INNER JOIN    SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.PLAN_ID = PL.PLAN_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE &#xD;&#xA;      AND ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE = 'STAT'&#xD;&#xA;      AND PL.RETIREMENT_TYPE_VALUE = 'DB'&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;UNION&#xD;&#xA;SELECT      'Number of Political subdivisions participating in DB plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'DB' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA; INNER JOIN    SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.PLAN_ID = PL.PLAN_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE NOT IN ('STAT','DHSU')&#xD;&#xA;      AND PL.RETIREMENT_TYPE_VALUE = 'DB'&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;UNION&#xD;&#xA;SELECT      'Number of DHU participating in DB plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'DB' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA; INNER JOIN    SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.PLAN_ID = PL.PLAN_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE = 'DHSU'&#xD;&#xA;      AND PL.RETIREMENT_TYPE_VALUE = 'DB'&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--4. Number of State Agencies participating in the health insurance plan: Count of Organization in any 'Health Insurance Plan' &#xD;&#xA;-- with Plan Participation is 'Active' and 'Employer Type' equal to 'State'. For Example: if an Employer is offering Group Health and HMO then count it as 'ONE'&#xD;&#xA;--5. Number of Political subdivisions participating in the health insurance plan: Count of Organization in any 'Health Insurance Plan' &#xD;&#xA;-- with Plan Participation is 'Active' and 'Employer Type' not equal to 'State' or 'District Health Unit'&#xD;&#xA;--6. Number of DHU participating in health plan: Count of Organization in any 'Health Insurance Plan' &#xD;&#xA;-- with Plan Participation is 'Active' and 'Employer Type' equal to 'District Health Unit'&#xD;&#xA;SELECT      'Number of State Agencies participating in health insurance plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'HI' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE = 'STAT'&#xD;&#xA;      AND ORGPL.PLAN_ID IN (12,22)&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;UNION&#xD;&#xA;SELECT      'Number of Political subdivisions participating in health insurance plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'HI' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE NOT IN ('STAT','DHSU')&#xD;&#xA;      AND ORGPL.PLAN_ID IN (12,22)&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;UNION&#xD;&#xA;SELECT      'Number of DHU participating in health insurance plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'HI' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE = 'DHSU'&#xD;&#xA;      AND ORGPL.PLAN_ID IN (12,22)&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--10. Number of State Agencies participating in the life insurance plan: Count of Organization in 'Group Life' &#xD;&#xA;--  with Plan Participation is 'Active' and 'Employer Type' equal to 'State'&#xD;&#xA;--11. Number of Political subdivisions participating in the life insurance plan: Count of Organization in 'Group Life' &#xD;&#xA;--  with Plan Participation is 'Active' and 'Employer Type' not equal to 'State' or 'District Health Unit'&#xD;&#xA;--12. Number of DHU participating in 'Group Life' plan: Count of Organization in 'Group Life' &#xD;&#xA;--  with Plan Participation is 'Active' and 'Employer Type' equal to 'District Health Unit'&#xD;&#xA;&#xD;&#xA;SELECT      'Number of State Agencies participating in life insurance plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'LI' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE = 'STAT'&#xD;&#xA;      AND ORGPL.PLAN_ID = 13&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;UNION&#xD;&#xA;SELECT      'Number of Political subdivisions participating in life insurance plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'LI' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE NOT IN ('STAT','DHSU')&#xD;&#xA;      AND ORGPL.PLAN_ID = 13&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;UNION&#xD;&#xA;SELECT      'Number of DHU participating in life insurance plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'LI' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE = 'DHSU'&#xD;&#xA;      AND ORGPL.PLAN_ID = 13&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--4. Number of State Agencies participating in the Dental insurance plan: Count of Organization in 'Dental' &#xD;&#xA;--  with Plan Participation is 'Active' and 'Employer Type' equal to 'State'&#xD;&#xA;--5. Number of Political subdivisions participating in the Dental insurance plan: Count of Organization in 'Dental' &#xD;&#xA;--  with Plan Participation is 'Active' and 'Employer Type' not equal to 'State' or 'District Health Unit'&#xD;&#xA;--6. Number of DHU participating in 'Dental' plan: Count of Organization in 'Dental' with Plan Participation is 'Active' &#xD;&#xA;--  and 'Employer Type' equal to 'District Health Unit'&#xD;&#xA;SELECT      'Number of State Agencies participating in dental insurance plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'D' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE = 'STAT'&#xD;&#xA;      AND ORGPL.PLAN_ID = 16&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;UNION&#xD;&#xA;SELECT      'Number of Political subdivisions participating in dental insurance plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'D' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE NOT IN ('STAT','DHSU')&#xD;&#xA;      AND ORGPL.PLAN_ID = 16&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;UNION&#xD;&#xA;SELECT      'Number of DHU participating in dental insurance plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'D' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE = 'DHSU'&#xD;&#xA;      AND ORGPL.PLAN_ID = 16&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;      &#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--4. Number of State Agencies participating in the Vision insurance plan: Count of Organization in 'Vision' &#xD;&#xA;--  with Plan Participation is 'Active' and 'Employer Type' equal to 'State'&#xD;&#xA;--5. Number of Political subdivisions participating in the Vision insurance plan: Count of Organization in 'Vision' &#xD;&#xA;--  with Plan Participation is 'Active' and 'Employer Type' not equal to 'State' or 'District Health Unit'&#xD;&#xA;--6. Number of DHU participating in 'Vision' plan: Count of Organization in 'Vision' with Plan Participation is 'Active' &#xD;&#xA;--  and 'Employer Type' equal to 'District Health Unit'&#xD;&#xA;SELECT      'Number of State Agencies participating in vision insurance plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'V' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE = 'STAT'&#xD;&#xA;      AND ORGPL.PLAN_ID = 17&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;UNION&#xD;&#xA;SELECT      'Number of Political subdivisions participating in vision insurance plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'V' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE NOT IN ('STAT','DHSU')&#xD;&#xA;      AND ORGPL.PLAN_ID = 17&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;UNION&#xD;&#xA;SELECT      'Number of DHU participating in vision insurance plan' AS DESCR,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG,'V' AS INDICATOR&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE AND &#xD;&#xA;       ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      AND ORG.EMP_CATEGORY_VALUE = 'DHSU'&#xD;&#xA;      AND ORGPL.PLAN_ID = 17&#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      --AND ORG.STATUS_VALUE = 'ACTV'">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptRHICProgram" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="---------------------------------------------------------------&#xD;&#xA;--entPersonAccount.rptRHICProgram&#xD;&#xA;---------------------------------------------------------------&#xD;&#xA;--iii. Retiree Health Insurance Credit Program&#xD;&#xA;&#xD;&#xA;--1. Count of Contributing Members: Count of 'Person Plan Account' &#xD;&#xA;--      DB (except Job Service) and DC Plan with 'Plan Participation Status' &#xD;&#xA;--      equal to 'Enrolled'&#xD;&#xA;&#xD;&#xA;SELECT -1 AS PLAN_ID,COUNT(PERSON_ACCOUNT_ID) AS COUNT_CONTR,&#xD;&#xA; NULL AS COUNT_RHIC,&#xD;&#xA; NULL AS COUNT_NONMED,&#xD;&#xA; NULL AS COUNT_AVAILABLE_RHIC&#xD;&#xA; INTO #TEMP&#xD;&#xA;FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;  ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK)&#xD;&#xA;  ON ACCT.PLAN_PARTICIPATION_STATUS_ID = CV1.CODE_ID &#xD;&#xA;     AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = CV1.CODE_VALUE      &#xD;&#xA;WHERE PL.RETIREMENT_TYPE_VALUE IN ('DB','DC')&#xD;&#xA; AND PL.PLAN_ID &lt;&gt; 6&#xD;&#xA; AND CV1.DATA2 = 'ERLD'&#xD;&#xA; AND ACCT.START_DATE &lt;= @EFFECTIVEDATE &#xD;&#xA; AND ISNULL(ACCT.END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;      &#xD;&#xA;--2. Count of person currently receiving RHIC under GHDV: &#xD;&#xA;--    Count of 'Person Plan Account' for 'Plan' equal to 'Group Health' or 'Medicare Part D', &#xD;&#xA;--  'Plan Participation Status' is 'Enrolled' &#xD;&#xA;--    and 'RHIC Benefit Amount' exists in the enrolment record.&#xD;&#xA;&#xD;&#xA;UPDATE A&#xD;&#xA;SET A.COUNT_RHIC = B.COUNT_RHIC&#xD;&#xA;FROM #TEMP A WITH(NOLOCK) &#xD;&#xA;INNER JOIN (&#xD;&#xA;    SELECT -1 AS PLAN_ID,COUNT(ACCT.PERSON_ACCOUNT_ID) AS COUNT_RHIC&#xD;&#xA;    FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;     INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;      ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA;     INNER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK)&#xD;&#xA;      ON ACCT.PLAN_PARTICIPATION_STATUS_ID = CV1.CODE_ID &#xD;&#xA;       AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = CV1.CODE_VALUE&#xD;&#xA;     INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;      ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    WHERE PL.PLAN_ID IN (9,12)&#xD;&#xA;      AND CV1.DATA2 = 'ERLD'&#xD;&#xA;      AND EXISTS&#xD;&#xA;       (&#xD;&#xA;        SELECT 1 FROM SGT_BENEFIT_RHIC_COMBINE_HEALTH_SPLIT BS &#xD;&#xA;          INNER JOIN SGT_BENEFIT_RHIC_COMBINE BC &#xD;&#xA;           ON BS.BENEFIT_RHIC_COMBINE_ID = &#xD;&#xA;            BC.BENEFIT_RHIC_COMBINE_ID&#xD;&#xA;        WHERE BS.PERSON_ACCOUNT_ID = &#xD;&#xA;         GHDV.PERSON_ACCOUNT_ID &#xD;&#xA;         AND BC.STATUS_VALUE = 'VALD' &#xD;&#xA;        AND BC.ACTION_STATUS_VALUE IN ('APPR','ENDD')&#xD;&#xA;       )&#xD;&#xA;       AND ACCT.START_DATE &lt;= @EFFECTIVEDATE &#xD;&#xA;       AND ISNULL(ACCT.END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;   ) B ON A.PLAN_ID = B.PLAN_ID&#xD;&#xA;&#xD;&#xA;--3.Count of person currently who are participating in health insurance &#xD;&#xA;--  in a non-medicare coverage code: Count of 'Person Plan Account' &#xD;&#xA;-- for 'Plan' equal to 'Group Health', 'Plan Participation Status' is 'Enrolled' &#xD;&#xA;--  and 'Health_Insurance_Type' equal to 'Retiree' &#xD;&#xA;-- and Coverage Code equal to 21, 22, 23, 24, 25, and 26&#xD;&#xA;&#xD;&#xA;UPDATE A&#xD;&#xA;SET A.COUNT_NONMED = B.COUNT_NONMED&#xD;&#xA;FROM #TEMP A WITH(NOLOCK) &#xD;&#xA;INNER JOIN (&#xD;&#xA;   SELECT -1 AS PLAN_ID,COUNT(ACCT.PERSON_ACCOUNT_ID) AS COUNT_NONMED&#xD;&#xA;    FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;     ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK)&#xD;&#xA;     ON ACCT.PLAN_PARTICIPATION_STATUS_ID = CV1.CODE_ID &#xD;&#xA;      AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = CV1.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;     ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;   WHERE PL.PLAN_ID = 12&#xD;&#xA;    AND CV1.DATA2 = 'ERLD'&#xD;&#xA;    AND GHDV.HEALTH_INSURANCE_TYPE_VALUE = 'RT12'&#xD;&#xA;    AND GHDV.COVERAGE_CODE IN ('0021', '0022', '0023', '0024', '0025', '0026') &#xD;&#xA;    AND ACCT.START_DATE &lt;= @EFFECTIVEDATE &#xD;&#xA;    AND ISNULL(ACCT.END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;   ) B ON A.PLAN_ID = B.PLAN_ID &#xD;&#xA;   &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;--4. PIR 8903 - On page 1 in the Retiree Health Insurance Credit Program Section, &#xD;&#xA;--  add a column that shows the count of Persons with RHIC available &#xD;&#xA;--  (this would include anyone with an RHIC maintenance record that is in â€˜approvedâ€™ &#xD;&#xA;--  status on the effective date of the report.&#xD;&#xA;&#xD;&#xA;UPDATE A&#xD;&#xA;SET A.COUNT_AVAILABLE_RHIC = B.COUNT_AVAILABLE_RHIC&#xD;&#xA;FROM #TEMP A WITH(NOLOCK) &#xD;&#xA;INNER JOIN (&#xD;&#xA;    SELECT -1 AS PLAN_ID,COUNT(0) AS COUNT_AVAILABLE_RHIC &#xD;&#xA;    FROM SGT_BENEFIT_RHIC_COMBINE BC &#xD;&#xA;    WHERE BC.STATUS_VALUE = 'VALD' &#xD;&#xA;     AND BC.ACTION_STATUS_VALUE  = 'APPR' &#xD;&#xA;     AND  START_DATE &lt;= @EFFECTIVEDATE &#xD;&#xA;     AND ISNULL(END_DATE,'29001231') &gt;= @EFFECTIVEDATE&#xD;&#xA;   ) B ON A.PLAN_ID = B.PLAN_ID&#xD;&#xA;   &#xD;&#xA;SELECT * FROM #TEMP WITH(NOLOCK)&#xD;&#xA;&#xD;&#xA;DROP TABLE #TEMP&#xD;&#xA;&#xD;&#xA;">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptGHDV_LTC_EAP_DCDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="---------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;--entPersonAccount.rptGHDV_LTC_EAP_DCDetails&#xD;&#xA;&#xD;&#xA;--2. PIR 8903 - On page 1, the count of Total Covered Lives &#xD;&#xA;--   for the Health plan appears low should be more like 58,000.  &#xD;&#xA;--  It should be counting the number of people covered on a &#xD;&#xA;--   contract as of the report effective date.  The health plan &#xD;&#xA;--   should be in â€˜enrolledâ€™ status and the count should include &#xD;&#xA;--   the member and any dependents that are on the contract &#xD;&#xA;--   as of the effective date of the report.  &#xD;&#xA;---------------------------------------------------------------&#xD;&#xA;--iv. Health Insurance Plan (currently includes Group Health, Medicare Part D, and HMO)&#xD;&#xA;&#xD;&#xA;SELECT ISNULL(A.PLAN_NAME,B.PLAN_NAME) AS PLAN_NAME,&#xD;&#xA;   A.COUNT_MEM,A.COUNT_RET,&#xD;&#xA;    isnull(B.COUNT_COV,0)+&#xD;&#xA;    isnull(A.COUNT_MEM,0)+&#xD;&#xA;    isnull(A.COUNT_RET,0) as COUNT_COV,&#xD;&#xA;  'HI' AS INDICATOR&#xD;&#xA;  FROM(&#xD;&#xA;   SELECT ISNULL(A.PLAN_ID,B.PLAN_ID) AS PLAN_ID,&#xD;&#xA;    ISNULL(A.PLAN_NAME,B.PLAN_NAME) AS PLAN_NAME,&#xD;&#xA;    A.COUNT_MEM,B.COUNT_RET&#xD;&#xA;   FROM(&#xD;&#xA;&#xD;&#xA;    --1.Count of members enrolled through an employer group (actives): Per Plan&#xD;&#xA;    -- a. Count of 'Person Plan Account' for 'Plan' equal to 'Group Health', 'Plan Participation Status' is 'Enrolled' and &#xD;&#xA;    --  Health Insurance Type equal to 'State' or 'Non State' and 'COBRA Type' is BLANK&#xD;&#xA;    -- b. Count of 'Person Plan Account' for 'Plan' equal to 'HMO', 'Plan Participation Status' is 'Enrolled'&#xD;&#xA;&#xD;&#xA;    SELECT PL.PLAN_ID,PL.PLAN_NAME,COUNT(ACCT.PERSON_ACCOUNT_ID) AS COUNT_MEM&#xD;&#xA;     FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;      INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;       ON ACCT.PLAN_ID = PL.PLAN_ID   &#xD;&#xA;      INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;       ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;      INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIST WITH(NOLOCK)&#xD;&#xA;       ON GHDVHIST.PERSON_ACCOUNT_GHDV_ID = GHDV.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;      WHERE PL.PLAN_ID = 12&#xD;&#xA;        AND GHDVHIST.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;        AND ISNULL(GHDVHIST.HEALTH_INSURANCE_TYPE_VALUE,'') IN ('NS12','ST12')&#xD;&#xA;        AND GHDVHIST.COBRA_TYPE_VALUE IS NULL&#xD;&#xA;        AND GHDVHIST.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;        AND (GHDVHIST.END_DATE IS NULL OR GHDVHIST.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;        AND GHDVHIST.START_DATE &lt;&gt; ISNULL(GHDVHIST.END_DATE,'99991231')&#xD;&#xA;      GROUP BY PL.PLAN_ID,PL.PLAN_NAME&#xD;&#xA;    &#xD;&#xA;    UNION&#xD;&#xA;    &#xD;&#xA;    SELECT PL.PLAN_ID,PL.PLAN_NAME,COUNT(ACCT.PERSON_ACCOUNT_ID) AS COUNT_MEM&#xD;&#xA;      FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;      INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;       ON ACCT.PLAN_ID = PL.PLAN_ID      &#xD;&#xA;      WHERE PL.PLAN_ID = 22&#xD;&#xA;       AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;       AND ACCT.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;       AND (ACCT.END_DATE IS NULL OR ACCT.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;      GROUP BY PL.PLAN_ID,PL.PLAN_NAME&#xD;&#xA;   ) AS A&#xD;&#xA;   &#xD;&#xA; FULL OUTER JOIN&#xD;&#xA; &#xD;&#xA;   --2. Count WITH(NOLOCK) of COBRA and retiree contracts: Count of 'Person Plan Account' for per plan when 'Plan' equal to 'Group Health' or 'Medicare Part D', &#xD;&#xA;   --  'Plan Participation Status' is 'Enrolled' and &#xD;&#xA;   --  a. 'Health Insurance Type' equal to 'State' or 'Non State' and 'COBRA Type' is not BLANK&#xD;&#xA;   --  b. 'Health Insurance Type' equal to 'Retiree'&#xD;&#xA;   (&#xD;&#xA;    SELECT PL.PLAN_ID,PL.PLAN_NAME,&#xD;&#xA;      COUNT(ACCT.PERSON_ACCOUNT_ID) AS COUNT_RET&#xD;&#xA;     FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;     INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;       ON ACCT.PLAN_ID = PL.PLAN_ID   &#xD;&#xA;     INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;       ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;     INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIST WITH(NOLOCK)&#xD;&#xA;       ON GHDVHIST.PERSON_ACCOUNT_GHDV_ID = GHDV.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;     WHERE PL.PLAN_ID IN (9,12)&#xD;&#xA;      AND GHDVHIST.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;      AND ((ISNULL(GHDVHIST.HEALTH_INSURANCE_TYPE_VALUE,'') IN ('NS12','ST12') AND GHDV.COBRA_TYPE_VALUE IS NOT NULL)&#xD;&#xA;      OR ISNULL(GHDVHIST.HEALTH_INSURANCE_TYPE_VALUE,'') IN ('RT09','RT12'))&#xD;&#xA;      AND GHDVHIST.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;      AND (GHDVHIST.END_DATE IS NULL OR GHDVHIST.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;      AND GHDVHIST.START_DATE &lt;&gt; ISNULL(GHDVHIST.END_DATE,'99991231')&#xD;&#xA;     GROUP BY PL.PLAN_ID,PL.PLAN_NAME&#xD;&#xA;   ) AS B&#xD;&#xA; ON A.PLAN_ID = B.PLAN_ID&#xD;&#xA; ) AS A&#xD;&#xA;&#xD;&#xA; FULL OUTER JOIN&#xD;&#xA; &#xD;&#xA;  (&#xD;&#xA; &#xD;&#xA;   --3. Total covered lives: Count per plan of 'Person Plan Account' PLUS count of dependents linked to the 'Person Plan Account' &#xD;&#xA;   -- for 'Health Insurance Plan' and 'Plan Participation Status' is 'Enrolled'&#xD;&#xA; &#xD;&#xA;   SELECT PL.PLAN_ID,PL.PLAN_NAME,&#xD;&#xA;     COUNT(DISTINCT DEP.PERSON_ACCOUNT_DEPENDENT_ID) AS COUNT_COV&#xD;&#xA;    FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;     ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;      ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIST WITH(NOLOCK)&#xD;&#xA;      ON GHDVHIST.PERSON_ACCOUNT_GHDV_ID = GHDV.PERSON_ACCOUNT_GHDV_ID   &#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_DEPENDENT DEP WITH(NOLOCK)&#xD;&#xA;     ON DEP.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    WHERE PL.PLAN_ID IN (9,12,22)  &#xD;&#xA;     AND GHDVHIST.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;     AND GHDVHIST.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;     AND (GHDVHIST.END_DATE IS NULL OR GHDVHIST.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;     AND GHDVHIST.START_DATE &lt;&gt; ISNULL(GHDVHIST.END_DATE,'99991231')&#xD;&#xA;     AND DEP.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;     AND (DEP.END_DATE IS NULL OR DEP.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;    GROUP BY PL.PLAN_ID,PL.PLAN_NAME &#xD;&#xA;  ) AS B&#xD;&#xA;  &#xD;&#xA; ON A.PLAN_ID=B.PLAN_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--vi. Dental Plan&#xD;&#xA;&#xD;&#xA;SELECT ISNULL(A.PLAN_NAME,B.PLAN_NAME) AS PLAN_NAME,&#xD;&#xA;   A.COUNT_MEM,&#xD;&#xA;   A.COUNT_RET,&#xD;&#xA;   isnull(B.COUNT_COV,0)+&#xD;&#xA;   isnull(A.COUNT_MEM,0)+&#xD;&#xA;   isnull(A.COUNT_RET,0) as COUNT_COV,&#xD;&#xA;   'D' AS INDICATOR&#xD;&#xA;FROM (&#xD;&#xA; -- 1. Count of members enrolled in the dental plan through an employer group (actives): Count of 'Person Plan Account' in 'Dental' &#xD;&#xA; --  with 'Plan Participation Status' is 'Enrolled' and 'Dental Insurance Type' equal to 'Active'&#xD;&#xA; -- 2. Count of COBRA and retiree contracts: Count of 'Person Plan Account' in 'Dental' with 'Plan Participation Status' is 'Enrolled' &#xD;&#xA; --  and 'Dental Insurance Type' not equal to 'Active'&#xD;&#xA;&#xD;&#xA;  SELECT PL.PLAN_ID,PL.PLAN_NAME,&#xD;&#xA;    SUM(CASE WHEN ISNULL(GHDVHIST.DENTAL_INSURANCE_TYPE_VALUE,'') = 'AC16' THEN 1 &#xD;&#xA;      ELSE 0 END) AS COUNT_MEM,&#xD;&#xA;    SUM(CASE WHEN  ISNULL(GHDVHIST.DENTAL_INSURANCE_TYPE_VALUE,'') &lt;&gt; 'AC16' THEN 1&#xD;&#xA;      ELSE 0 END) AS COUNT_RET&#xD;&#xA;   FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;    ON ACCT.PLAN_ID = PL.PLAN_ID  &#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;    ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIST WITH(NOLOCK)&#xD;&#xA;    ON GHDVHIST.PERSON_ACCOUNT_GHDV_ID = GHDV.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;   WHERE PL.PLAN_ID = 16&#xD;&#xA;    AND GHDVHIST.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;    AND GHDVHIST.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;    AND (GHDVHIST.END_DATE IS NULL OR GHDVHIST.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;    AND GHDVHIST.START_DATE &lt;&gt; ISNULL(GHDVHIST.END_DATE,'99991231')&#xD;&#xA;   GROUP BY PL.PLAN_ID,PL.PLAN_NAME&#xD;&#xA;  ) AS A&#xD;&#xA;  &#xD;&#xA;FULL OUTER JOIN &#xD;&#xA;&#xD;&#xA; (&#xD;&#xA; &#xD;&#xA; -- 3. Total covered lives: Count of 'Person Plan Account' PLUS count of dependents linked to the 'Person Plan Account' &#xD;&#xA; --  for 'Plan' equal to 'Dental' and 'Plan Participation Status' is 'Enrolled'&#xD;&#xA;   &#xD;&#xA;  SELECT PL.PLAN_ID,PL.PLAN_NAME,&#xD;&#xA;     COUNT(DISTINCT DEP.PERSON_ACCOUNT_DEPENDENT_ID) AS COUNT_COV&#xD;&#xA;    FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;     ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;      ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIST WITH(NOLOCK)&#xD;&#xA;      ON GHDVHIST.PERSON_ACCOUNT_GHDV_ID = GHDV.PERSON_ACCOUNT_GHDV_ID   &#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_DEPENDENT DEP WITH(NOLOCK)&#xD;&#xA;     ON DEP.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    WHERE PL.PLAN_ID = 16  &#xD;&#xA;     AND GHDVHIST.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;     AND GHDVHIST.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;     AND (GHDVHIST.END_DATE IS NULL OR GHDVHIST.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;     AND GHDVHIST.START_DATE &lt;&gt; ISNULL(GHDVHIST.END_DATE,'99991231')&#xD;&#xA;     AND DEP.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;     AND (DEP.END_DATE IS NULL OR DEP.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;    GROUP BY PL.PLAN_ID,PL.PLAN_NAME &#xD;&#xA; ) AS B&#xD;&#xA;ON A.PLAN_ID = B.PLAN_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--vii. Vision Plan&#xD;&#xA;&#xD;&#xA;SELECT ISNULL(A.PLAN_NAME,B.PLAN_NAME) AS PLAN_NAME,&#xD;&#xA;  A.COUNT_MEM,A.COUNT_RET,&#xD;&#xA;  isnull(B.COUNT_COV,0)+&#xD;&#xA;  isnull(A.COUNT_MEM,0)+&#xD;&#xA;  isnull(A.COUNT_RET,0) as COUNT_COV,&#xD;&#xA;  'V' AS INDICATOR&#xD;&#xA;FROM (&#xD;&#xA;&#xD;&#xA; -- 1. Count of members enrolled in the Vision plan through an employer group (actives): Count of 'Person Plan Account' in 'Vision' &#xD;&#xA; --  with 'Plan Participation Status' is 'Enrolled' and 'Vision Insurance Type' equal to 'Active'&#xD;&#xA; -- 2. Count of COBRA and retiree contracts: Count of 'Person Plan Account' in 'Vision' with 'Plan Participation Status' is 'Enrolled' &#xD;&#xA; --  and 'Vision Insurance Type' not equal to 'Active'&#xD;&#xA;&#xD;&#xA;  SELECT PL.PLAN_ID,PL.PLAN_NAME,&#xD;&#xA;   SUM(CASE WHEN ISNULL(GHDVHIST.VISION_INSURANCE_TYPE_VALUE,'') = 'ACTV' THEN 1 &#xD;&#xA;     ELSE 0 END) AS COUNT_MEM,&#xD;&#xA;   SUM(CASE WHEN ISNULL(GHDVHIST.VISION_INSURANCE_TYPE_VALUE,'') &lt;&gt; 'ACTV' THEN 1&#xD;&#xA;     ELSE 0 END) AS COUNT_RET&#xD;&#xA;  FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;   ON ACCT.PLAN_ID = PL.PLAN_ID  &#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIST WITH(NOLOCK)&#xD;&#xA;   ON GHDVHIST.PERSON_ACCOUNT_GHDV_ID = GHDV.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;  WHERE PL.PLAN_ID = 17&#xD;&#xA;   AND GHDVHIST.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;   AND GHDVHIST.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;   AND (GHDVHIST.END_DATE IS NULL OR GHDVHIST.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;   AND GHDVHIST.START_DATE &lt;&gt; ISNULL(GHDVHIST.END_DATE,'99991231')&#xD;&#xA;  GROUP BY PL.PLAN_ID,PL.PLAN_NAME&#xD;&#xA; ) AS A&#xD;&#xA;&#xD;&#xA;FULL OUTER JOIN&#xD;&#xA; (&#xD;&#xA;  --3. Total covered lives: Count of 'Person Plan Account' PLUS count of dependents linked to the 'Person Plan Account' &#xD;&#xA;  -- for 'Plan' equal to 'Vision' and 'Plan Participation Status' is 'Enrolled'&#xD;&#xA; &#xD;&#xA;   SELECT PL.PLAN_ID,PL.PLAN_NAME,&#xD;&#xA;     COUNT(DISTINCT DEP.PERSON_ACCOUNT_DEPENDENT_ID) AS COUNT_COV&#xD;&#xA;    FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;     ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;      ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIST WITH(NOLOCK)&#xD;&#xA;      ON GHDVHIST.PERSON_ACCOUNT_GHDV_ID = GHDV.PERSON_ACCOUNT_GHDV_ID   &#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_DEPENDENT DEP WITH(NOLOCK)&#xD;&#xA;     ON DEP.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    WHERE PL.PLAN_ID = 17  &#xD;&#xA;     AND GHDVHIST.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;     AND GHDVHIST.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;     AND (GHDVHIST.END_DATE IS NULL OR GHDVHIST.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;     AND GHDVHIST.START_DATE &lt;&gt; ISNULL(GHDVHIST.END_DATE,'99991231')&#xD;&#xA;     AND DEP.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;     AND (DEP.END_DATE IS NULL OR DEP.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;    GROUP BY PL.PLAN_ID,PL.PLAN_NAME &#xD;&#xA; ) AS B&#xD;&#xA;ON A.PLAN_ID = B.PLAN_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--viii. Long Term Care (LTC) Plan&#xD;&#xA;-- 1. Count of members enrolled in the LTC plan through an employer group (actives): Select 'Person Plan Account' in 'LTC' &#xD;&#xA;--  with 'Plan Participation Status' is 'Enrolled' and 'Individual Billing' is not checked. Count 'ONE' for 'Member' PLUS 'ONE' for 'SPOUSE' enrolment.&#xD;&#xA;-- 2. Count of retiree contracts: Select of 'Person Plan Account' in 'LTC' with 'Plan Participation Status' is 'Enrolled' &#xD;&#xA;--  and 'Individual Billing' is checked. Count 'ONE' for 'Member' PLUS 'ONE' for 'SPOUSE' enrolment.&#xD;&#xA;&#xD;&#xA;SELECT PL.PLAN_NAME,&#xD;&#xA;  SUM(CASE WHEN ISNULL(PAYELEC.ACCOUNT_PAYMENT_ELECTION_ID,0) = 0 THEN 1 &#xD;&#xA;    ELSE 0 END) AS COUNT_MEM,&#xD;&#xA;  SUM(CASE WHEN  ISNULL(PAYELEC.ACCOUNT_PAYMENT_ELECTION_ID,0) &lt;&gt; 0 THEN 1&#xD;&#xA;    ELSE 0 END) AS COUNT_RET&#xD;&#xA;  ,NULL AS COUNT_COV&#xD;&#xA;  ,'LED' AS INDICATOR&#xD;&#xA;FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;  ON ACCT.PLAN_ID = PL.PLAN_ID &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_LTC_OPTION LTC WITH(NOLOCK)&#xD;&#xA;  ON LTC.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_LTC_OPTION_HISTORY LTCHIST WITH(NOLOCK)&#xD;&#xA;  ON LTCHIST.PERSON_ACCOUNT_LTC_OPTION_ID = LTC.PERSON_ACCOUNT_LTC_OPTION_ID&#xD;&#xA; LEFT OUTER JOIN (SELECT PERSON_ACCOUNT_ID,MAX(ACCOUNT_PAYMENT_ELECTION_ID) AS ACCOUNT_PAYMENT_ELECTION_ID&#xD;&#xA;      FROM SGT_PERSON_ACCOUNT_PAYMENT_ELECTION ELEC&#xD;&#xA;      WHERE IBS_EFFECTIVE_DATE  = &#xD;&#xA;       (SELECT MAX(IBS_EFFECTIVE_DATE) FROM SGT_PERSON_ACCOUNT_PAYMENT_ELECTION E1 WHERE E1.PERSON_ACCOUNT_ID  = ELEC.PERSON_ACCOUNT_ID &#xD;&#xA;        AND IBS_EFFECTIVE_DATE &lt;= @EFFECTIVEDATE &#xD;&#xA;         AND IBS_FLAG = 'Y')&#xD;&#xA;        GROUP BY PERSON_ACCOUNT_ID) PAYELEC&#xD;&#xA;     ON PAYELEC.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PL.PLAN_ID = 15&#xD;&#xA; AND LTC.PLAN_OPTION_STATUS_VALUE = 'ENLD'&#xD;&#xA; AND LTCHIST.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA; AND (LTCHIST.END_DATE IS NULL OR LTCHIST.END_DATE &gt;= @EFFECTIVEDATE) &#xD;&#xA; AND LTCHIST.START_DATE &lt;&gt; ISNULL(LTCHIST.END_DATE,'99991231')     &#xD;&#xA;GROUP BY PL.PLAN_NAME&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--ix. Employee Assistance Program&#xD;&#xA;-- 1. Count of members enrolled in the EAP plan: Count of 'Person Plan Account' in 'EAP' with 'Plan Participation Status' is 'Enrolled'&#xD;&#xA;&#xD;&#xA;SELECT PL.PLAN_NAME,&#xD;&#xA; COUNT(ACCT.PERSON_ACCOUNT_ID) AS COUNT_MEM,&#xD;&#xA; NULL AS COUNT_RET,&#xD;&#xA; NULL AS COUNT_COV,&#xD;&#xA; 'LED' AS INDICATOR      &#xD;&#xA;FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;  ON ACCT.PLAN_ID = PL.PLAN_ID &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_EAP_HISTORY EAPHIST WITH(NOLOCK)&#xD;&#xA;  ON EAPHIST.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE PL.PLAN_ID = 14&#xD;&#xA;  AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;  AND EAPHIST.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;  AND (EAPHIST.END_DATE IS NULL OR EAPHIST.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA; GROUP BY PL.PLAN_NAME&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--x. Deferred Compensation Program&#xD;&#xA;-- 1. Count of non-retired members: Count of 'Person Plan Account' in 'Deferred Compensation' with 'Plan Participation Status' is 'Enrolled' &#xD;&#xA;--  or 'Plan Participation Status' is 'Suspended' and 'Payee Status' under 'Deferred Comp Plan Maintenance' for none of the Provider is 'Receiving'&#xD;&#xA;-- 2. Count of retirees and beneficiaries with assets remaining with providers: Count of 'Person Plan Account' in 'Deferred Compensation' &#xD;&#xA;--  with 'Plan Participation Status' is 'Suspended' and 'Payee Status' under 'Deferred Comp Plan Maintenance' for at least one Provider is 'Receiving'&#xD;&#xA;&#xD;&#xA;SELECT ISNULL(A.PLAN_NAME,B.PLAN_NAME) AS PLAN_NAME,A.COUNT_MEM,B.COUNT_RET,NULL AS COUNT_COV,&#xD;&#xA;  'LED' AS INDICATOR&#xD;&#xA;FROM (&#xD;&#xA;  SELECT PL.PLAN_ID,PL.PLAN_NAME,COUNT(DISTINCT ACCT.PERSON_ACCOUNT_ID) AS COUNT_MEM&#xD;&#xA;  FROM SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;    ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT_DEFERRED_COMP DEF WITH(NOLOCK)&#xD;&#xA;     ON DEF.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT_DEFERRED_COMP_HISTORY DEFHIST WITH(NOLOCK)&#xD;&#xA;     ON DEFHIST.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN (SELECT * FROM SGT_PERSON_ACCOUNT_DEFERRED_COMP_PROVIDER A&#xD;&#xA;       WHERE PERSON_ACCOUNT_ID NOT IN (SELECT PERSON_ACCOUNT_ID FROM SGT_PERSON_ACCOUNT_DEFERRED_COMP_PROVIDER B &#xD;&#xA;         WHERE A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID AND B.PAYMENT_STATUS_VALUE = 'RECV') &#xD;&#xA;      )PROV&#xD;&#xA;     ON PROV.PERSON_ACCOUNT_ID = DEF.PERSON_ACCOUNT_ID&#xD;&#xA;  WHERE PL.PLAN_ID = 19&#xD;&#xA;   AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL3','SUS1')&#xD;&#xA;   AND DEFHIST.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;   AND (DEFHIST.END_DATE IS NULL OR DEFHIST.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;  GROUP BY PL.PLAN_ID,PL.PLAN_NAME&#xD;&#xA;  ) A&#xD;&#xA;FULL OUTER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT PL.PLAN_ID,PL.PLAN_NAME,COUNT(DISTINCT ACCT.PERSON_ACCOUNT_ID) AS COUNT_RET&#xD;&#xA;   FROM SGT_PLAN PL&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;     ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_DEFERRED_COMP DEF WITH(NOLOCK)&#xD;&#xA;     ON DEF.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_DEFERRED_COMP_HISTORY DEFHIST WITH(NOLOCK)&#xD;&#xA;     ON DEFHIST.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_DEFERRED_COMP_PROVIDER PROV WITH(NOLOCK)&#xD;&#xA;     ON PROV.PERSON_ACCOUNT_ID = DEF.PERSON_ACCOUNT_ID&#xD;&#xA;   WHERE PL.PLAN_ID = 19&#xD;&#xA;    AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL3','SUS1')&#xD;&#xA;    AND PROV.PAYMENT_STATUS_VALUE = 'RECV'&#xD;&#xA;    AND DEFHIST.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;    AND (DEFHIST.END_DATE IS NULL OR DEFHIST.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;    AND DEFHIST.START_DATE &lt;&gt; ISNULL(DEFHIST.END_DATE,'99991231')  &#xD;&#xA;    AND PROV.START_DATE &lt;&gt; ISNULL(PROV.END_DATE,'99991231')  &#xD;&#xA;   GROUP BY PL.PLAN_ID,PL.PLAN_NAME&#xD;&#xA;  ) B&#xD;&#xA;ON A.PLAN_ID = B.PLAN_ID &#xD;&#xA;">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptGroupLife" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--v. Group Life Insurance Plan (Member should not have 'Waiver of Premium' checked)&#xD;&#xA;-- 1. Count of members enrolled in Basic Life through an employer group: Count of 'Person Plan Account' in 'Group Life' &#xD;&#xA;--  with 'Plan Participation Status' is 'Enrolled' and 'Life Insurance Type' equal to 'Active' and 'Level of Coverage' equal to 'Basic Life'&#xD;&#xA;-- 2. Count of retiree enrolled in Basic Life: Count of 'Person Plan Account' in 'Group Life' &#xD;&#xA;--  with 'Plan Participation Status' is 'Enrolled' and 'Life Insurance Type' equal to 'Retiree' and 'Level of Coverage' equal to 'Basic Life'&#xD;&#xA;-- 3. Count of members enrolled in employee supplemental life: Count of 'Person Plan Account' in 'Group Life' &#xD;&#xA;--  with 'Plan Participation Status' is 'Enrolled' and 'Life Insurance Type' equal to 'Active' and 'Level of Coverage' equal to 'Supplemental Life'&#xD;&#xA;-- 4. Count of retirees enrolled in employee supplemental life: Count of 'Person Plan Account' in 'Group Life' &#xD;&#xA;--  with 'Plan Participation Status' is 'Enrolled' and 'Life Insurance Type' equal to 'Retiree' and 'Level of Coverage' equal to 'Supplemental Life'&#xD;&#xA;-- 5. Count of members enrolled in dependent supplemental life: Count of 'Person Plan Account' in 'Group Life' &#xD;&#xA;--  with 'Plan Participation Status' is 'Enrolled' and 'Life Insurance Type' equal to 'Active' and 'Level of Coverage' equal to 'Dependent'&#xD;&#xA;-- 6. Count of retirees enrolled in dependent supplemental life: Count of 'Person Plan Account' in 'Group Life' &#xD;&#xA;--  with 'Plan Participation Status' is 'Enrolled' and 'Life Insurance Type' equal to 'Retiree' and 'Level of Coverage' equal to 'Dependent'&#xD;&#xA;-- 7. Count of members enrolled in spouse supplemental life: Count of 'Person Plan Account' in 'Group Life' &#xD;&#xA;--  with 'Plan Participation Status' is 'Enrolled' and 'Life Insurance Type' equal to 'Active' and 'Level of Coverage' equal to 'Spouse Supplemental'&#xD;&#xA;-- 8. Count of retirees enrolled in spouse supplemental life: Count of 'Person Plan Account' in 'Group Life' &#xD;&#xA;--  with 'Plan Participation Status' is 'Enrolled' and 'Life Insurance Type' equal to 'Retiree' and 'Level of Coverage' equal to 'Spouse Supplemental'&#xD;&#xA;SELECT      PL.PLAN_NAME,&#xD;&#xA;       SUM(CASE WHEN ISNULL(LIFE.LIFE_INSURANCE_TYPE_VALUE,'') = 'NREM' AND ISNULL(LFOPT.LEVEL_OF_COVERAGE_VALUE,'') = 'BASC' THEN 1 &#xD;&#xA;          ELSE 0 END) AS COUNT_MEM_BL,&#xD;&#xA;       SUM(CASE WHEN ISNULL(LIFE.LIFE_INSURANCE_TYPE_VALUE,'') = 'REME' AND ISNULL(LFOPT.LEVEL_OF_COVERAGE_VALUE,'') = 'BASC' THEN 1 &#xD;&#xA;          ELSE 0 END) AS COUNT_RET_BL,&#xD;&#xA;       SUM(CASE WHEN ISNULL(LIFE.LIFE_INSURANCE_TYPE_VALUE,'') = 'NREM' AND ISNULL(LFOPT.LEVEL_OF_COVERAGE_VALUE,'') = 'SPML' THEN 1 &#xD;&#xA;          ELSE 0 END) AS COUNT_MEM_SUPP,&#xD;&#xA;       SUM(CASE WHEN ISNULL(LIFE.LIFE_INSURANCE_TYPE_VALUE,'') = 'REME' AND ISNULL(LFOPT.LEVEL_OF_COVERAGE_VALUE,'') = 'SPML' THEN 1 &#xD;&#xA;          ELSE 0 END) AS COUNT_RET_SUPP,&#xD;&#xA;       SUM(CASE WHEN ISNULL(LIFE.LIFE_INSURANCE_TYPE_VALUE,'') = 'NREM' AND ISNULL(LFOPT.LEVEL_OF_COVERAGE_VALUE,'') = 'DSPL' THEN 1 &#xD;&#xA;          ELSE 0 END) AS COUNT_MEM_DEP,&#xD;&#xA;       SUM(CASE WHEN ISNULL(LIFE.LIFE_INSURANCE_TYPE_VALUE,'') = 'REME' AND ISNULL(LFOPT.LEVEL_OF_COVERAGE_VALUE,'') = 'DSPL' THEN 1 &#xD;&#xA;          ELSE 0 END) AS COUNT_RET_DEP,&#xD;&#xA;       SUM(CASE WHEN ISNULL(LIFE.LIFE_INSURANCE_TYPE_VALUE,'') = 'NREM' AND ISNULL(LFOPT.LEVEL_OF_COVERAGE_VALUE,'') = 'SPSL' THEN 1 &#xD;&#xA;          ELSE 0 END) AS COUNT_MEM_SPSUPP,&#xD;&#xA;       SUM(CASE WHEN ISNULL(LIFE.LIFE_INSURANCE_TYPE_VALUE,'') = 'REME' AND ISNULL(LFOPT.LEVEL_OF_COVERAGE_VALUE,'') = 'SPSL' THEN 1 &#xD;&#xA;          ELSE 0 END) AS COUNT_RET_SPSUPP&#xD;&#xA;FROM      SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA; INNER JOIN   SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;     ON  ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA; INNER JOIN   SGT_PERSON_ACCOUNT_LIFE LIFE WITH(NOLOCK)&#xD;&#xA;     ON  LIFE.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN   SGT_PERSON_ACCOUNT_LIFE_OPTION LFOPT WITH(NOLOCK)&#xD;&#xA;     ON  LFOPT.PERSON_ACCOUNT_ID = LIFE.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE      PL.PLAN_ID = 13&#xD;&#xA;      AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;      AND ISNULL(LIFE.PREMIUM_WAIVER_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;      AND LFOPT.EFFECTIVE_START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;      AND (LFOPT.EFFECTIVE_END_DATE IS NULL OR LFOPT.EFFECTIVE_END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;GROUP BY     PL.PLAN_NAME">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptTotalDollarsLI" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--9. Total dollars of life insurance in-force: Sum of 'Coverage Amount' for each 'Level Of Coverage' and grand total in the last line&#xD;&#xA;SELECT      CV2.DESCRIPTION,SUM(LFOPT.COVERAGE_AMOUNT) AS SUM_COVERAGE_AMT&#xD;&#xA;FROM      SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA; INNER JOIN   SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;     ON  ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA; INNER JOIN   SGS_CODE_VALUE CV1 WITH(NOLOCK)&#xD;&#xA;     ON  ACCT.PLAN_PARTICIPATION_STATUS_ID = CV1.CODE_ID &#xD;&#xA;      AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = CV1.CODE_VALUE&#xD;&#xA; INNER JOIN   SGT_PERSON_ACCOUNT_LIFE LIFE WITH(NOLOCK)&#xD;&#xA;     ON  LIFE.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN   SGT_PERSON_ACCOUNT_LIFE_OPTION LFOPT WITH(NOLOCK)&#xD;&#xA;     ON  LFOPT.PERSON_ACCOUNT_ID = LIFE.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN   SGS_CODE_VALUE CV2 WITH(NOLOCK)&#xD;&#xA;     ON  LFOPT.LEVEL_OF_COVERAGE_ID = CV2.CODE_ID&#xD;&#xA;      AND LFOPT.LEVEL_OF_COVERAGE_VALUE = CV2.CODE_VALUE&#xD;&#xA;WHERE      PL.PLAN_ID = 13&#xD;&#xA;      AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;      AND LFOPT.EFFECTIVE_START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;      AND (LFOPT.EFFECTIVE_END_DATE IS NULL OR LFOPT.EFFECTIVE_END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;GROUP BY     CV2.DESCRIPTION&#xD;&#xA;ORDER BY     CV2.DESCRIPTION">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptFlexComp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--xi. Flex Comp Plan&#xD;&#xA;-- 1. Count of members enrolled in the medical spending account, and total $ pledged for the calendar year: Count of 'Person Plan Account' in 'Flex Comp' &#xD;&#xA;--  with 'Plan Participation Status' is 'Enrolled' and 'Level of Coverage' is 'Medical Spending Account'&#xD;&#xA;-- 2. Count of members enrolled in the dependent care spending account, and total $ pledged for the calendar year: Count of 'Person Plan Account' in 'Flex Comp' &#xD;&#xA;--  with 'Plan Participation Status' is 'Enrolled' and 'Level of Coverage' is 'Dependent Care Spending Account'&#xD;&#xA;-- 3. Count of members having a premium pre-taxed: Count of 'Person Plan Account' in 'Flex Comp' &#xD;&#xA;--  with 'Plan Participation Status' is 'Enrolled' and 'Level of Coverage' is 'Premium Conversion'&#xD;&#xA;SELECT PL.PLAN_NAME,&#xD;&#xA; SUM(CASE WHEN ISNULL(FLXOPT.LEVEL_OF_COVERAGE_VALUE,'') = 'MSRA' THEN 1 &#xD;&#xA;  ELSE 0 END) AS COUNT_MEM_MSP,&#xD;&#xA; SUM(CASE WHEN ISNULL(FLXOPT.LEVEL_OF_COVERAGE_VALUE,'') = 'MSRA' THEN FLXOPT.ANNUAL_PLEDGE_AMOUNT &#xD;&#xA;  ELSE 0 END) AS SUM_APM_MEM_MSP,&#xD;&#xA; SUM(CASE WHEN ISNULL(FLXOPT.LEVEL_OF_COVERAGE_VALUE,'') = 'DCRA' THEN 1 &#xD;&#xA;  ELSE 0 END) AS COUNT_MEM_DSP,&#xD;&#xA; SUM(CASE WHEN ISNULL(FLXOPT.LEVEL_OF_COVERAGE_VALUE,'') = 'DCRA' THEN FLXOPT.ANNUAL_PLEDGE_AMOUNT  &#xD;&#xA;  ELSE 0 END) AS SUM_APM_MEM_DSP,&#xD;&#xA; SUM (CASE WHEN PA1.PERSON_ACCOUNT_ID &gt; 0 THEN 1 ELSE 0 END) AS COUNT_PRETAXED_DENTAL,&#xD;&#xA; SUM (CASE WHEN PA2.PERSON_ACCOUNT_ID &gt; 0 THEN 1 ELSE 0 END) AS COUNT_PRETAXED_VISION,&#xD;&#xA; SUM (CASE WHEN PA3.PERSON_ACCOUNT_ID &gt; 0 THEN 1 ELSE 0 END) AS COUNT_PRETAXED_LIFE&#xD;&#xA;&#xD;&#xA;FROM SGT_PLAN PL&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT ACCT ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA;INNER JOIN &#xD;&#xA;  (&#xD;&#xA;   Select * from SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY &#xD;&#xA;   Where PLAN_PARTICIPATION_STATUS_VALUE = 'ENL4'&#xD;&#xA;    AND EFFECTIVE_START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;    AND (EFFECTIVE_END_DATE IS NULL OR &#xD;&#xA;      EFFECTIVE_END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;      AND ANNUAL_PLEDGE_AMOUNT &gt; 0&#xD;&#xA;  )FLXOPT&#xD;&#xA;  ON FLXOPT.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;LEFT JOIN SGT_PERSON_ACCOUNT PA1 ON PA1.PERSON_ID = ACCT.PERSON_ID AND PA1.PLAN_ID = 16 &#xD;&#xA;AND PA1.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND &#xD;&#xA;PA1.PERSON_ACCOUNT_ID IN (SELECT PERSON_ACCOUNT_ID FROM SGT_PERSON_ACCOUNT_GHDV GHDV&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  WHERE GHDV.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' )&#xD;&#xA;&#xD;&#xA;LEFT JOIN SGT_PERSON_ACCOUNT PA2 ON PA2.PERSON_ID = ACCT.PERSON_ID AND PA2.PLAN_ID = 17 &#xD;&#xA;AND PA2.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND &#xD;&#xA;PA2.PERSON_ACCOUNT_ID IN (SELECT PERSON_ACCOUNT_ID FROM SGT_PERSON_ACCOUNT_GHDV GHDV&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  WHERE GHDV.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' )&#xD;&#xA;&#xD;&#xA;LEFT JOIN SGT_PERSON_ACCOUNT PA3 ON PA3.PERSON_ID = ACCT.PERSON_ID AND PA3.PLAN_ID = 13&#xD;&#xA;AND PA3.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND &#xD;&#xA;PA3.PERSON_ACCOUNT_ID IN (SELECT LIFE.PERSON_ACCOUNT_ID FROM SGT_PERSON_ACCOUNT_LIFE LIFE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  INNER JOIN SGT_PERSON_ACCOUNT_LIFE_OPTION LIFEOPTION ON LIFE.PERSON_ACCOUNT_ID = LIFEOPTION.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  WHERE LIFEOPTION.COVERAGE_AMOUNT !=0 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  AND LIFEOPTION.LEVEL_OF_COVERAGE_VALUE = 'SPML'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  AND LIFEOPTION.EFFECTIVE_START_DATE != ISNULL(LIFEOPTION.EFFECTIVE_END_DATE, '01/01/1753')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  AND LIFEOPTION.EFFECTIVE_END_DATE IS NULL &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  AND LIFE.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y')&#xD;&#xA;&#xD;&#xA;WHERE PL.PLAN_ID = 18&#xD;&#xA;GROUP BY PL.PLAN_NAME">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptDualPlanAndEmp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--(2) Retirement Membership Statistics&#xD;&#xA;-- a. Description: &#xD;&#xA;--  i. Count of Members with Dual Plan: Count of 'Person' in more than one DB Plan with 'Plan Participation Status' in 'Enrolled' or 'Suspended' &#xD;&#xA;--   and there does not exists a payee account with 'Benefit Account Type' of 'Disability' and 'Payee Status' not in 'Cancelled' or 'Payments Complete'.&#xD;&#xA;&#xD;&#xA;SELECT      'Count of Members with Dual Plan' AS DESCR,COUNT(ACCT.PERSON_ID) AS COUNT_PER&#xD;&#xA;FROM      (SELECT      ACCT.PERSON_ID,COUNT(ACCT.PERSON_ID) AS COUNT_PER&#xD;&#xA;       FROM      SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA;        LEFT OUTER JOIN   SGS_CODE_VALUE CV1 WITH(NOLOCK)&#xD;&#xA;            ON  ACCT.PLAN_PARTICIPATION_STATUS_ID = CV1.CODE_ID &#xD;&#xA;             AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = CV1.CODE_VALUE&#xD;&#xA;        LEFT OUTER JOIN   SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;            ON  ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA;       WHERE      ISNULL(CV1.DATA2,'') IN ('ERLD','SPND')&#xD;&#xA;             AND PL.RETIREMENT_TYPE_VALUE = 'DB'&#xD;&#xA;             AND ACCT.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;             AND (ACCT.END_DATE IS NULL OR ACCT.END_DATE &gt;= @EFFECTIVEDATE)&#xD;&#xA;       GROUP BY     ACCT.PERSON_ID&#xD;&#xA;       HAVING      COUNT(ACCT.PERSON_ID) &gt; 1) &#xD;&#xA;       AS ACCT&#xD;&#xA; LEFT OUTER JOIN   SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;     ON  ACCT.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA; LEFT OUTER JOIN   SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;     ON  PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN   SGS_CODE_VALUE CV2 WITH(NOLOCK)&#xD;&#xA;     ON  PAS.STATUS_ID = CV2.CODE_ID&#xD;&#xA;      AND PAS.STATUS_VALUE = CV2.CODE_VALUE&#xD;&#xA;WHERE      (ISNULL(PA.BENEFIT_ACCOUNT_TYPE_VALUE,'') &lt;&gt; 'DISA' &#xD;&#xA;      OR (ISNULL(PA.BENEFIT_ACCOUNT_TYPE_VALUE,'') = 'DISA' &#xD;&#xA;      AND ISNULL(CV2.DATA2,'') IN ('TRMD','CNLD')))&#xD;&#xA;      AND (PAS.PAYEE_ACCOUNT_STATUS_ID IS NULL &#xD;&#xA;      OR PAS.PAYEE_ACCOUNT_STATUS_ID = (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;               FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;               WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;               AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;               ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC))&#xD;&#xA;UNION ALL&#xD;&#xA;--ii. Count of Members with Dual Employment: Count of 'Person' having multiple&#xD;&#xA;--  'Employment History Detail' with 'Status' not equal to 'Non-Contributing' and 'End Date' of 'Employment History Detail' &#xD;&#xA;--  greater than 'Effective Date' and 'Start Date' less than 'Effective Date'.&#xD;&#xA;SELECT      'Count of Members with Dual Employment' AS DESCR,COUNT(PERSON_ID) AS COUNT_PER&#xD;&#xA;FROM      (&#xD;&#xA;        SELECT A.PERSON_ID,COUNT(A.PERSON_ID) AS COUNT_PER&#xD;&#xA;        FROM SGT_PERSON_EMPLOYMENT A WITH(NOLOCK)&#xD;&#xA;        INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL B WITH(NOLOCK)&#xD;&#xA;        ON B.PERSON_EMPLOYMENT_ID = A.PERSON_EMPLOYMENT_ID&#xD;&#xA;        WHERE B.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;        AND ISNULL(B.END_DATE,'99991231') &gt;= @EFFECTIVEDATE&#xD;&#xA;        AND B.STATUS_VALUE &lt;&gt; 'NCON' &#xD;&#xA;        GROUP BY A.PERSON_ID&#xD;&#xA;        HAVING COUNT(A.PERSON_ID) &gt; 1&#xD;&#xA;       ) AS EMP">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptDBPlansBrokenbyEmp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--iii. Count of non-retired members in defined benefit pension plans, broken out by plan, &#xD;&#xA;--  and by Employer Type (State, City, County, School District, District Health Unit, Other Political Subdivision)&#xD;&#xA;-- 1. Count of 'Person Plan Account' in DB Plan with 'Plan Participation Status' in 'Enrolled' or 'Suspended' and &#xD;&#xA;--  there does not exists a payee account with 'Benefit Account Type' of 'Disability' and 'Payee Status' not in 'Cancelled' or 'Payments Complete'. &#xD;&#xA;--  Group the data in grid for each Plan and each 'Employer Type' of Latest (last) 'Employment History'. &#xD;&#xA;--  (Members with 2 employments will be counted as only 1 i.e. the latest)&#xD;&#xA;--iv. Count of retirees &amp; beneficiaries in defined benefit pension plans, broken out by plan: Count of all payee account per plan with:&#xD;&#xA;-- 1. 'Payee Status' not in 'Payment Complete' or 'Cancelled' AND &#xD;&#xA;-- 2. 'Benefit Account Type' not equal to 'Refunds and Transfer' or 'Benefit Option' is not equal to 'Refunds'&#xD;&#xA;--v. Total Membership per plan: Totals of counts from 'iii' &amp; 'iv' for each Plan and 'Grand Total' in the end&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;WITH PARENT(PERSON_ACCOUNT_ID,&#xD;&#xA; START_DATE,&#xD;&#xA; END_DATE,ORG_ID,&#xD;&#xA; ROWRANK)&#xD;&#xA;AS&#xD;&#xA;(&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,&#xD;&#xA; EH.START_DATE,&#xD;&#xA; EH.END_DATE,EH.ORG_ID&#xD;&#xA; ,ROW_NUMBER() OVER (PARTITION BY PAED.PERSON_ACCOUNT_ID ORDER BY PAED.PERSON_ACCOUNT_ID,&#xD;&#xA; EH.START_DATE DESC,ISNULL(EH.END_DATE,@EFFECTIVEDATE) DESC ) &#xD;&#xA; AS ROWRANK &#xD;&#xA; FROM SGT_PERSON_EMPLOYMENT EH&#xD;&#xA;  INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL ED&#xD;&#xA;   ON EH.PERSON_EMPLOYMENT_ID = ED.PERSON_EMPLOYMENT_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED &#xD;&#xA;   ON ED.PERSON_EMPLOYMENT_DTL_ID = PAED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;   WHERE EH.START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;   AND PERSON_ACCOUNT_ID IS NOT NULL&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT *&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA; SELECT PER.PLAN_NAME,CV3.DESCRIPTION AS EMP_TYPE,&#xD;&#xA;  COUNT(PER.PERSON_ID) AS COUNT_MEM,0 AS COUNT_RET&#xD;&#xA; FROM (&#xD;&#xA;   SELECT DISTINCT PL.PLAN_NAME,PL.PLAN_ID,ACCT.PERSON_ID,EMP.ORG_ID&#xD;&#xA;    FROM (&#xD;&#xA;      SELECT DISTINCT PA.PERSON_ACCOUNT_ID,PA.PERSON_ID,PA.PLAN_ID, &#xD;&#xA;       PAH.PLAN_PARTICIPATION_STATUS_ID,PAH.PLAN_PARTICIPATION_STATUS_VALUE &#xD;&#xA;       FROM SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY  PAH WITH(NOLOCK) &#xD;&#xA;       INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON&#xD;&#xA;       PAH.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;       WHERE @EFFECTIVEDATE BETWEEN&#xD;&#xA;       PAH.START_DATE AND ISNULL(PAH.END_DATE,@EFFECTIVEDATE)&#xD;&#xA;       and PAH.START_DATE &lt;&gt; ISNULL(PAH.END_DATE,@EFFECTIVEDATE)&#xD;&#xA;&#xD;&#xA;     )ACCT  &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK)&#xD;&#xA;     ON ACCT.PLAN_PARTICIPATION_STATUS_ID = CV1.CODE_ID &#xD;&#xA;      AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = CV1.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;     ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA;    INNER JOIN &#xD;&#xA;     (&#xD;&#xA;      SELECT * FROM PARENT WHERE ROWRANK = 1&#xD;&#xA;     ) AS  EMP&#xD;&#xA;    ON EMP.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    LEFT OUTER JOIN (SELECT BAPA.PERSON_ACCOUNT_ID&#xD;&#xA;         FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;         LEFT OUTER JOIN  SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) &#xD;&#xA;          ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;         LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;          ON BAPA.BENEFIT_APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;           and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'                &#xD;&#xA;         LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;          ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;         LEFT OUTER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK)&#xD;&#xA;          ON PAS.STATUS_ID = CV2.CODE_ID&#xD;&#xA;         AND PAS.STATUS_VALUE = CV2.CODE_VALUE  &#xD;&#xA;          WHERE  ISNULL(PA.BENEFIT_ACCOUNT_TYPE_VALUE,'') = 'DISA' &#xD;&#xA;           AND ISNULL(CV2.DATA2,'') NOT IN ('TRMD','CNLD')&#xD;&#xA;           AND PAS.PAYEE_ACCOUNT_STATUS_ID = &#xD;&#xA;           (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;            FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;            WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;            AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;            ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC)  &#xD;&#xA;         ) PAYEE &#xD;&#xA;     ON PAYEE.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID                  &#xD;&#xA;   WHERE ISNULL(CV1.DATA2,'') IN ('ERLD','SPND')&#xD;&#xA;    AND PL.RETIREMENT_TYPE_VALUE in ('DB','DC','HB')               &#xD;&#xA;    AND PAYEE.PERSON_ACCOUNT_ID IS NULL&#xD;&#xA;  ) AS PER&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;  ON PER.ORG_ID = ORG.ORG_ID&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CV3 WITH(NOLOCK)&#xD;&#xA;  ON ORG.EMP_CATEGORY_ID = CV3.CODE_ID&#xD;&#xA;  AND ORG.EMP_CATEGORY_VALUE = CV3.CODE_VALUE&#xD;&#xA; GROUP BY PER.PLAN_NAME,CV3.DESCRIPTION&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT PL.PLAN_NAME,NULL AS EMP_TYPE,0 AS COUNT_MEM,&#xD;&#xA;  COUNT(DISTINCT PA.PAYEE_ACCOUNT_ID) AS COUNT_RET&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK)&#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID&#xD;&#xA;    AND PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID = CV2.CODE_ID&#xD;&#xA;    AND PAS.STATUS_VALUE = CV2.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP WITH(NOLOCK)&#xD;&#xA;   ON PA.APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DRO WITH(NOLOCK)&#xD;&#xA;   ON PA.DRO_APPLICATION_ID = DRO.DRO_APPLICATION_ID&#xD;&#xA;  INNER JOIN SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;   ON ISNULL(APP.PLAN_ID,DRO.PLAN_ID) = PL.PLAN_ID&#xD;&#xA; WHERE ISNULL(CV2.DATA2,'') NOT IN ('TRMD','CNLD')&#xD;&#xA;    AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA;   OR CV1.DATA2 &lt;&gt; 'RFND')&#xD;&#xA;   AND PAS.PAYEE_ACCOUNT_STATUS_ID &#xD;&#xA;    = (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,&#xD;&#xA;      PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA; GROUP BY PL.PLAN_NAME&#xD;&#xA;&#xD;&#xA; ) AS FINAL&#xD;&#xA;ORDER BY PLAN_NAME">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptPlanEmpSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT      PL.PLAN_NAME,CV.DESCRIPTION AS EMP_CATEGORY,COUNT(DISTINCT ORG.ORG_ID) AS NUM_ORG&#xD;&#xA;FROM      SGT_ORG_PLAN ORGPL WITH(NOLOCK)&#xD;&#xA; INNER JOIN    SGT_ORGANIZATION ORG WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.ORG_ID = ORG.ORG_ID&#xD;&#xA; INNER JOIN    SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;     ON  ORGPL.PLAN_ID = PL.PLAN_ID&#xD;&#xA; INNER JOIN    SGS_CODE_VALUE CV&#xD;&#xA;     ON  ORG.EMP_CATEGORY_ID = CV.CODE_ID AND ORG.EMP_CATEGORY_VALUE = CV.CODE_VALUE&#xD;&#xA;WHERE      ORGPL.PARTICIPATION_START_DATE &lt;= @EFFECTIVEDATE &#xD;&#xA;      AND ISNULL(ORGPL.PARTICIPATION_END_DATE,'99991231') &gt;= @EFFECTIVEDATE            &#xD;&#xA;      AND ISNULL(ORGPL.RESTRICTION,'N') &lt;&gt; 'Y'&#xD;&#xA;      AND ORG.STATUS_VALUE = 'ACTV'&#xD;&#xA;GROUP BY     PL.PLAN_NAME,CV.DESCRIPTION&#xD;&#xA;ORDER BY     PL.PLAN_NAME,CV.DESCRIPTION">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="ESSLoadPayeeNonPayee" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF @PERSONTYPE = 'NPYE'&#xD;&#xA;BEGIN&#xD;&#xA; SELECT   PERSACCT.*&#xD;&#xA; FROM   SGT_PERSON_ACCOUNT PERSACCT WITH(NOLOCK)&#xD;&#xA; INNER JOIN  SGS_CODE_VALUE CV2 WITH(NOLOCK)&#xD;&#xA;    ON PERSACCT.PLAN_PARTICIPATION_STATUS_ID = CV2.CODE_ID AND PERSACCT.PLAN_PARTICIPATION_STATUS_VALUE = CV2.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN (&#xD;&#xA;    SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID &#xD;&#xA;      from SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;     inner JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;     ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;     where isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA;    ) AS BAA ON BAA.PERSON_ACCOUNT_ID = PERSACCT.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DRO WITH(NOLOCK)&#xD;&#xA;    ON DRO.PERSON_ACCOUNT_ID = PERSACCT.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PA1 WITH(NOLOCK)&#xD;&#xA;    ON PA1.APPLICATION_ID = BAA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PA2 WITH(NOLOCK)&#xD;&#xA;    ON PA2.DRO_APPLICATION_ID = DRO.DRO_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = ISNULL(PA1.PAYEE_ACCOUNT_ID,PA2.PAYEE_ACCOUNT_ID)&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) &#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; WHERE   ((ISNULL(CV.DATA2,'') IN ('TRMD', 'CNLD') &#xD;&#xA;    AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PAS.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= GETDATE()&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     ))&#xD;&#xA;    OR PAS.PAYEE_ACCOUNT_ID IS NULL)&#xD;&#xA;    AND CV2.DATA2 NOT IN ( &#xD;&#xA;          'TTCF',&#xD;&#xA;          'TDDC',&#xD;&#xA;          'TFFR',&#xD;&#xA;          'WTDN',&#xD;&#xA;          'WTDN',&#xD;&#xA;          'RTRD',&#xD;&#xA;          'CNLD',&#xD;&#xA;          'DCSD',&#xD;&#xA;          'DSDW'&#xD;&#xA;         )&#xD;&#xA;    AND PERSACCT.PLAN_ID = CASE WHEN @PLANID = -999 THEN PERSACCT.PLAN_ID ELSE @PLANID END&#xD;&#xA;    AND PERSACCT.PERSON_ID = CASE WHEN @PERSONID = -999 THEN PERSACCT.PERSON_ID ELSE @PERSONID END&#xD;&#xA;    &#xD;&#xA;END&#xD;&#xA;ELSE IF @PERSONTYPE = 'PAYE'&#xD;&#xA;BEGIN&#xD;&#xA; SELECT   PERSACCT.*&#xD;&#xA; FROM   SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)    &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) &#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN (&#xD;&#xA;    SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID &#xD;&#xA;      from SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;     inner JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;     ON  BA.BENEFIT_APPLICATION_ID = bapa.BENEFIT_APPLICATION_ID  &#xD;&#xA;     where isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA;    ) AS BAA ON PA.APPLICATION_ID = BAA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DRO WITH(NOLOCK)&#xD;&#xA;    ON PA.DRO_APPLICATION_ID = DRO.DRO_APPLICATION_ID&#xD;&#xA; INNER JOIN  SGT_PERSON_ACCOUNT PERSACCT WITH(NOLOCK)&#xD;&#xA;    ON ISNULL(BAA.PERSON_ACCOUNT_ID,DRO.PERSON_ACCOUNT_ID) = PERSACCT.PERSON_ACCOUNT_ID &#xD;&#xA; WHERE   CV.DATA2 NOT IN ('TRMD', 'CNLD') &#xD;&#xA;    AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= GETDATE()&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;    AND PERSACCT.PLAN_ID = CASE WHEN @PLANID = -999 THEN PERSACCT.PLAN_ID ELSE @PLANID END&#xD;&#xA;    AND PERSACCT.PERSON_ID = CASE WHEN @PERSONID = -999 THEN PERSACCT.PERSON_ID ELSE @PERSONID END&#xD;&#xA;END">
      <parameters>
        <parameter ID="@PERSONTYPE" sfwDataType="string" />
        <parameter ID="@PLANID" sfwDataType="int" />
        <parameter ID="@PERSONID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="ESSLoadByPlanId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  PERACCT.*&#xD;&#xA;FROM  SGT_PERSON_ACCOUNT PERACCT WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;  ON PERACCT.PLAN_PARTICIPATION_STATUS_ID = CV.CODE_ID AND PERACCT.PLAN_PARTICIPATION_STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;WHERE  PERACCT.PLAN_ID = @PLANID&#xD;&#xA;  AND CV.DATA2 IN ('ERLD','RTRD','SPND')">
      <parameters>
        <parameter ID="@PLANID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadEnrolledPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ACCT.*&#xD;&#xA;FROM SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;  ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA;WHERE ACCT.PERSON_ID = @PERSONID&#xD;&#xA; AND ISNULL(ACCT.END_DATE,GETDATE()) &gt;= GETDATE()&#xD;&#xA; AND PL.BENEFIT_TYPE_VALUE = 'INSR'&#xD;&#xA; AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'">
      <parameters>
        <parameter ID="@PERSONID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptMemberPlanAccountDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM  &#xD;&#xA;(&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID,PER.LAST_NAME+' '+PER.FIRST_NAME  AS PERSON_NAME,PL.PLAN_NAME,ORG.ORG_NAME,CV.DESCRIPTION AS PLAN_STATUS&#xD;&#xA; , ACCT.MODIFIED_BY+'  '+ CONVERT(varchar(50), ACCT.MODIFIED_DATE, 101) as MODIFIED_BY&#xD;&#xA; FROM   SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK) ON         ACCT.PERSON_ID = PER.PERSON_ID AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND ACCT.PLAN_ID = 12&#xD;&#xA; INNER JOIN SGT_PLAN PL WITH(NOLOCK) ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA; LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON ACCT.STATUS_ID = CV.CODE_ID AND ACCT.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT JOIN  SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK) ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION PAPE ON ACCT.PERSON_ACCOUNT_ID=PAPE.PERSON_ACCOUNT_ID  -- PROD PIR 8611 &#xD;&#xA; LEFT JOIN  (&#xD;&#xA;      SELECT * FROM &#xD;&#xA;      (&#xD;&#xA;       SELECT PE.*,PED.END_DATE AS EMPDTL_END_DATE,PAED.PERSON_ACCOUNT_ID &#xD;&#xA;       ,RANK() OVER (PARTITION BY PAED.PERSON_ACCOUNT_ID ORDER BY &#xD;&#xA;        ISNULL(PED.END_DATE,'01/01/2900') DESC,ISNULL(PE.END_DATE,'01/01/2900') DESC,&#xD;&#xA;        PED.START_DATE DESC , PE.START_DATE DESC,  PED.PERSON_EMPLOYMENT_DTL_ID DESC ) &#xD;&#xA;        AS ROWRANK  &#xD;&#xA;       FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED(NOLOCK)&#xD;&#xA;       INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;       INNER JOIN SGT_PERSON_EMPLOYMENT PE(NOLOCK) ON PE.PERSON_EMPLOYMENT_ID = PED.PERSON_EMPLOYMENT_ID&#xD;&#xA;       WHERE PAED.ELECTION_VALUE = 'ENLD' AND PAED.PLAN_ID = 12&#xD;&#xA;      )A WHERE ROWRANK = 1&#xD;&#xA;     ) EMP ON EMP.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID      &#xD;&#xA; LEFT JOIN   SGT_ORGANIZATION ORG WITH(NOLOCK) ON EMP.ORG_ID = ORG.ORG_ID&#xD;&#xA; WHERE       ((HEALTH_INSURANCE_TYPE_VALUE &lt;&gt; 'RT12' AND COBRA_TYPE_VALUE IS NULL AND &#xD;&#xA;    (EMP.PERSON_EMPLOYMENT_ID IS NULL OR EMP.END_DATE IS NOT NULL OR EMP.EMPDTL_END_DATE IS NOT NULL))&#xD;&#xA;    OR    (HEALTH_INSURANCE_TYPE_VALUE = 'RT12' AND EMP.PERSON_EMPLOYMENT_ID IS NOT NULL AND (EMP.END_DATE IS NULL OR EMP.EMPDTL_END_DATE IS NULL))&#xD;&#xA;    OR    (HEALTH_INSURANCE_TYPE_VALUE &lt;&gt; 'RT12' AND COBRA_TYPE_VALUE IS NOT NULL AND &#xD;&#xA;       EMP.PERSON_EMPLOYMENT_ID IS NOT NULL AND (EMP.END_DATE IS NULL OR EMP.EMPDTL_END_DATE IS NULL)))&#xD;&#xA;       AND ISNULL(PAPE.IBS_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID,PER.LAST_NAME+' '+PER.FIRST_NAME  AS PERSON_NAME,PL.PLAN_NAME,ORG.ORG_NAME,CV.DESCRIPTION AS PLAN_STATUS&#xD;&#xA; , ACCT.MODIFIED_BY+'  '+ CONVERT(varchar(50), ACCT.MODIFIED_DATE, 101) as MODIFIED_BY&#xD;&#xA; FROM        SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA; INNER JOIN  SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK) ON         ACCT.PERSON_ID = PER.PERSON_ID AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND ACCT.PLAN_ID = 16&#xD;&#xA; INNER JOIN  SGT_PLAN PL WITH(NOLOCK) ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA; LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON ACCT.STATUS_ID = CV.CODE_ID AND ACCT.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT JOIN   SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK) ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION PAPE ON ACCT.PERSON_ACCOUNT_ID=PAPE.PERSON_ACCOUNT_ID  -- PROD PIR 8611&#xD;&#xA; LEFT JOIN  (&#xD;&#xA;      SELECT * FROM &#xD;&#xA;      (&#xD;&#xA;       SELECT PE.*,PED.END_DATE AS EMPDTL_END_DATE,PAED.PERSON_ACCOUNT_ID &#xD;&#xA;       ,RANK() OVER (PARTITION BY PAED.PERSON_ACCOUNT_ID ORDER BY &#xD;&#xA;        ISNULL(PED.END_DATE,'01/01/2900') DESC,ISNULL(PE.END_DATE,'01/01/2900') DESC,&#xD;&#xA;        PED.START_DATE DESC , PE.START_DATE DESC,  PED.PERSON_EMPLOYMENT_DTL_ID DESC ) &#xD;&#xA;        AS ROWRANK  &#xD;&#xA;       FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED(NOLOCK)&#xD;&#xA;       INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;       INNER JOIN SGT_PERSON_EMPLOYMENT PE(NOLOCK) ON PE.PERSON_EMPLOYMENT_ID = PED.PERSON_EMPLOYMENT_ID&#xD;&#xA;       WHERE PAED.ELECTION_VALUE = 'ENLD' AND PAED.PLAN_ID = 16&#xD;&#xA;      )A WHERE ROWRANK = 1&#xD;&#xA;     ) EMP ON EMP.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID      &#xD;&#xA; LEFT JOIN   SGT_ORGANIZATION ORG WITH(NOLOCK) ON EMP.ORG_ID = ORG.ORG_ID&#xD;&#xA; WHERE ((DENTAL_INSURANCE_TYPE_VALUE = 'AC16' AND (EMP.PERSON_EMPLOYMENT_ID IS NULL OR EMP.END_DATE IS NOT NULL OR EMP.EMPDTL_END_DATE IS NOT NULL))&#xD;&#xA; OR (DENTAL_INSURANCE_TYPE_VALUE = 'RT16' AND EMP.PERSON_EMPLOYMENT_ID IS NOT NULL AND (EMP.END_DATE IS NULL OR EMP.EMPDTL_END_DATE IS NULL))&#xD;&#xA; OR (DENTAL_INSURANCE_TYPE_VALUE = 'CB16' AND EMP.PERSON_EMPLOYMENT_ID IS NOT NULL AND (EMP.END_DATE IS NULL OR EMP.EMPDTL_END_DATE IS NULL)))&#xD;&#xA; AND ISNULL(PAPE.IBS_FLAG,'N') != 'Y'&#xD;&#xA;&#xD;&#xA; UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID,PER.LAST_NAME+' '+PER.FIRST_NAME  AS PERSON_NAME,PL.PLAN_NAME,ORG.ORG_NAME,CV.DESCRIPTION AS PLAN_STATUS&#xD;&#xA; , ACCT.MODIFIED_BY+'  '+ CONVERT(varchar(50), ACCT.MODIFIED_DATE, 101) as MODIFIED_BY&#xD;&#xA; FROM        SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA; INNER JOIN  SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK) ON         ACCT.PERSON_ID = PER.PERSON_ID AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND ACCT.PLAN_ID = 17&#xD;&#xA; INNER JOIN  SGT_PLAN PL WITH(NOLOCK) ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA; LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON ACCT.STATUS_ID = CV.CODE_ID AND ACCT.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT JOIN   SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK) ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION PAPE ON ACCT.PERSON_ACCOUNT_ID=PAPE.PERSON_ACCOUNT_ID  -- PROD PIR 8611&#xD;&#xA; LEFT JOIN  (&#xD;&#xA;      SELECT * FROM &#xD;&#xA;      (&#xD;&#xA;       SELECT PE.*,PED.END_DATE AS EMPDTL_END_DATE,PAED.PERSON_ACCOUNT_ID &#xD;&#xA;       ,RANK() OVER (PARTITION BY PAED.PERSON_ACCOUNT_ID ORDER BY &#xD;&#xA;        ISNULL(PED.END_DATE,'01/01/2900') DESC,ISNULL(PE.END_DATE,'01/01/2900') DESC,&#xD;&#xA;        PED.START_DATE DESC , PE.START_DATE DESC,  PED.PERSON_EMPLOYMENT_DTL_ID DESC ) &#xD;&#xA;        AS ROWRANK  &#xD;&#xA;       FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED(NOLOCK)&#xD;&#xA;       INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;       INNER JOIN SGT_PERSON_EMPLOYMENT PE(NOLOCK) ON PE.PERSON_EMPLOYMENT_ID = PED.PERSON_EMPLOYMENT_ID&#xD;&#xA;       WHERE PAED.ELECTION_VALUE = 'ENLD' AND PAED.PLAN_ID = 17&#xD;&#xA;      )A WHERE ROWRANK = 1&#xD;&#xA;     ) EMP ON EMP.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID      &#xD;&#xA; LEFT JOIN   SGT_ORGANIZATION ORG WITH(NOLOCK) ON EMP.ORG_ID = ORG.ORG_ID&#xD;&#xA; WHERE ((VISION_INSURANCE_TYPE_VALUE = 'ACTV' AND (EMP.PERSON_EMPLOYMENT_ID IS NULL OR EMP.END_DATE IS NOT NULL OR EMP.EMPDTL_END_DATE IS NOT NULL))&#xD;&#xA; OR (VISION_INSURANCE_TYPE_VALUE = 'RETR' AND EMP.PERSON_EMPLOYMENT_ID IS NOT NULL AND (EMP.END_DATE IS NULL OR EMP.EMPDTL_END_DATE IS NULL))&#xD;&#xA; OR (VISION_INSURANCE_TYPE_VALUE = 'COBR' AND EMP.PERSON_EMPLOYMENT_ID IS NOT NULL AND (EMP.END_DATE IS NULL OR EMP.EMPDTL_END_DATE IS NULL)))&#xD;&#xA; AND ISNULL(PAPE.IBS_FLAG,'N') != 'Y'&#xD;&#xA;&#xD;&#xA; UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID,PER.LAST_NAME+' '+PER.FIRST_NAME  AS PERSON_NAME,PL.PLAN_NAME,ORG.ORG_NAME,CV.DESCRIPTION AS PLAN_STATUS&#xD;&#xA; , ACCT.MODIFIED_BY+'  '+ CONVERT(varchar(50), ACCT.MODIFIED_DATE, 101) as MODIFIED_BY&#xD;&#xA; FROM        SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA; INNER JOIN  SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK) ON         ACCT.PERSON_ID = PER.PERSON_ID AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND ACCT.PLAN_ID = 13&#xD;&#xA; INNER JOIN  SGT_PLAN PL WITH(NOLOCK) ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA; LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON ACCT.STATUS_ID = CV.CODE_ID AND ACCT.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT JOIN   SGT_PERSON_ACCOUNT_LIFE LIFE WITH(NOLOCK) ON LIFE.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION PAPE ON ACCT.PERSON_ACCOUNT_ID=PAPE.PERSON_ACCOUNT_ID -- PROD PIR 8611&#xD;&#xA; LEFT JOIN  (&#xD;&#xA;      SELECT * FROM &#xD;&#xA;      (&#xD;&#xA;       SELECT PE.*,PED.END_DATE AS EMPDTL_END_DATE,PAED.PERSON_ACCOUNT_ID &#xD;&#xA;       ,RANK() OVER (PARTITION BY PAED.PERSON_ACCOUNT_ID ORDER BY &#xD;&#xA;        ISNULL(PED.END_DATE,'01/01/2900') DESC,ISNULL(PE.END_DATE,'01/01/2900') DESC,&#xD;&#xA;        PED.START_DATE DESC , PE.START_DATE DESC,  PED.PERSON_EMPLOYMENT_DTL_ID DESC ) &#xD;&#xA;        AS ROWRANK  &#xD;&#xA;       FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED(NOLOCK)&#xD;&#xA;       INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;       INNER JOIN SGT_PERSON_EMPLOYMENT PE(NOLOCK) ON PE.PERSON_EMPLOYMENT_ID = PED.PERSON_EMPLOYMENT_ID&#xD;&#xA;       WHERE PAED.ELECTION_VALUE = 'ENLD' AND PAED.PLAN_ID = 13&#xD;&#xA;      )A WHERE ROWRANK = 1&#xD;&#xA;     ) EMP ON EMP.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID      &#xD;&#xA; LEFT JOIN   SGT_ORGANIZATION ORG WITH(NOLOCK) ON EMP.ORG_ID = ORG.ORG_ID&#xD;&#xA; WHERE       ((LIFE_INSURANCE_TYPE_VALUE = 'NREM' AND (EMP.PERSON_EMPLOYMENT_ID IS NULL OR EMP.END_DATE IS NOT NULL OR EMP.EMPDTL_END_DATE IS NOT NULL))&#xD;&#xA;     OR (LIFE_INSURANCE_TYPE_VALUE = 'REME' AND EMP.PERSON_EMPLOYMENT_ID IS NOT NULL AND (EMP.END_DATE IS NULL OR EMP.EMPDTL_END_DATE IS NULL)))&#xD;&#xA;      AND ISNULL(PAPE.IBS_FLAG,'N') != 'Y'&#xD;&#xA;           &#xD;&#xA; UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID,PER.LAST_NAME+' '+PER.FIRST_NAME  AS PERSON_NAME,PL.PLAN_NAME,ORG.ORG_NAME,CV.DESCRIPTION AS PLAN_STATUS&#xD;&#xA; , ACCT.MODIFIED_BY+'  '+ CONVERT(varchar(50), ACCT.MODIFIED_DATE, 101) as MODIFIED_BY&#xD;&#xA; FROM        SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA; INNER JOIN  SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK) ON         ACCT.PERSON_ID = PER.PERSON_ID AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND PLAN_ID = 14&#xD;&#xA; INNER JOIN  SGT_PLAN PL WITH(NOLOCK) ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA; LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON ACCT.STATUS_ID = CV.CODE_ID AND ACCT.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION PAPE ON ACCT.PERSON_ACCOUNT_ID=PAPE.PERSON_ACCOUNT_ID -- PROD PIR 8611&#xD;&#xA; LEFT JOIN  (&#xD;&#xA;      SELECT * FROM &#xD;&#xA;      (&#xD;&#xA;       SELECT PE.*,PED.END_DATE AS EMPDTL_END_DATE,PAED.PERSON_ACCOUNT_ID &#xD;&#xA;       ,RANK() OVER (PARTITION BY PAED.PERSON_ACCOUNT_ID ORDER BY &#xD;&#xA;        ISNULL(PED.END_DATE,'01/01/2900') DESC,ISNULL(PE.END_DATE,'01/01/2900') DESC,&#xD;&#xA;        PED.START_DATE DESC , PE.START_DATE DESC,  PED.PERSON_EMPLOYMENT_DTL_ID DESC ) &#xD;&#xA;        AS ROWRANK  &#xD;&#xA;       FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED(NOLOCK)&#xD;&#xA;       INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;       INNER JOIN SGT_PERSON_EMPLOYMENT PE(NOLOCK) ON PE.PERSON_EMPLOYMENT_ID = PED.PERSON_EMPLOYMENT_ID&#xD;&#xA;       WHERE PAED.ELECTION_VALUE = 'ENLD' AND PAED.PLAN_ID = 14&#xD;&#xA;      )A WHERE ROWRANK = 1&#xD;&#xA;     ) EMP ON EMP.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID      &#xD;&#xA; LEFT JOIN   SGT_ORGANIZATION ORG WITH(NOLOCK) ON EMP.ORG_ID = ORG.ORG_ID&#xD;&#xA; WHERE       (EMP.PERSON_EMPLOYMENT_ID IS NULL OR EMP.END_DATE IS NOT NULL OR EMP.EMPDTL_END_DATE IS NOT NULL)&#xD;&#xA;  AND ISNULL(PAPE.IBS_FLAG,'N') != 'Y'&#xD;&#xA;  &#xD;&#xA;-- PIR 9701&#xD;&#xA; UNION&#xD;&#xA;   &#xD;&#xA; SELECT DISTINCT PER.PERSON_ID,PER.LAST_NAME+' '+PER.FIRST_NAME  AS PERSON_NAME,PL.PLAN_NAME,ORG.ORG_NAME,CV.DESCRIPTION AS PLAN_STATUS&#xD;&#xA; , ACCT.MODIFIED_BY+'  '+ CONVERT(varchar(50), ACCT.MODIFIED_DATE, 101) as MODIFIED_BY&#xD;&#xA; FROM   SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT ACCT WITH(NOLOCK) ON         ACCT.PERSON_ID = PER.PERSON_ID AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND ACCT.PLAN_ID IN (12,13,14,16,17) AND ACCT.STATUS_VALUE = 'REVW'&#xD;&#xA; INNER JOIN SGT_PLAN PL WITH(NOLOCK) ON ACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA; LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON ACCT.STATUS_ID = CV.CODE_ID AND ACCT.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT JOIN  SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK) ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID &#xD;&#xA; LEFT JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION PAPE ON ACCT.PERSON_ACCOUNT_ID=PAPE.PERSON_ACCOUNT_ID  -- PROD PIR 8611 &#xD;&#xA; LEFT JOIN  (&#xD;&#xA;      SELECT * FROM &#xD;&#xA;      (&#xD;&#xA;       SELECT PE.*,PED.END_DATE AS EMPDTL_END_DATE,PAED.PERSON_ACCOUNT_ID &#xD;&#xA;       ,RANK() OVER (PARTITION BY PAED.PERSON_ACCOUNT_ID ORDER BY &#xD;&#xA;        ISNULL(PED.END_DATE,'01/01/2900') DESC,ISNULL(PE.END_DATE,'01/01/2900') DESC,&#xD;&#xA;        PED.START_DATE DESC , PE.START_DATE DESC,  PED.PERSON_EMPLOYMENT_DTL_ID DESC ) &#xD;&#xA;        AS ROWRANK  &#xD;&#xA;       FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED(NOLOCK)&#xD;&#xA;       INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;       INNER JOIN SGT_PERSON_EMPLOYMENT PE(NOLOCK) ON PE.PERSON_EMPLOYMENT_ID = PED.PERSON_EMPLOYMENT_ID&#xD;&#xA;       WHERE PAED.ELECTION_VALUE = 'ENLD' AND PAED.PLAN_ID IN (12,13,14,16,17)&#xD;&#xA;      )A WHERE ROWRANK = 1&#xD;&#xA;     ) EMP ON EMP.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID      &#xD;&#xA; LEFT JOIN   SGT_ORGANIZATION ORG WITH(NOLOCK) ON EMP.ORG_ID = ORG.ORG_ID&#xD;&#xA;  &#xD;&#xA;)EMP&#xD;&#xA;ORDER BY EMP.PERSON_ID">
      <parameters />
    </query>
    <query ID="flePeopleSoftPlanAnnualFileOut" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; *&#xA;FROM&#xA;&#x9; SGT_ENROLLMENT_DATA ENROLLDATA WITH(NOLOCK)&#xA;WHERE&#xA;&#x9; ISNULL(PEOPLESOFT_FILE_SENT_FLAG,'N') = 'N'&#xA;&#x9; AND ISNULL(ENROLLDATA.CHANGE_REASON_VALUE,'') IN ('ANNE', 'ANNT')&#xA;&#x9; AND ISNULL(ENROLLDATA.PEOPLESOFT_CHANGE_REASON_VALUE,'') IN ('ANNE', 'ANNT') &#xA;&#x9; AND @EFFECTIVEDATE BETWEEN ENROLLDATA.START_DATE AND ISNULL(ENROLLDATA.END_DATE,'01/01/2900')">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadActiveProviderByPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select top 1 o.* from sgt_org_plan op(nolock)&#xD;&#xA;inner join sgt_organization o(nolock) on o.org_id = op.org_id and o.org_type_value='PRVD'&#xD;&#xA;where plan_id = @planID and @batchDate between op.participation_start_date and &#xD;&#xA;isnull(op.participation_end_date,'01/01/2900') ">
      <parameters>
        <parameter ID="@planID" sfwDataType="int" />
        <parameter ID="@batchDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="UpdateHistory" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF EXISTS(SELECT 0 FROM SGT_PLAN WHERE BENEFIT_TYPE_VALUE='INSR' AND PLAN_ID = @PLAN_ID)&#xD;&#xA;BEGIN&#xD;&#xA;        If @Plan_ID in (9,12,16,17,22) ----Medicare, Health, Dental &amp; Vision&#xD;&#xA;          Begin &#xD;&#xA;          --             SELECT PERSON_ACCOUNT_GHDV_HISTORY_ID, PA.START_DATE, PA.END_DATE, PA.HISTORY_CHANGE_DATE, PAGH.START_DATE, PAGH.END_DATE, PAGH.PLAN_PARTICIPATION_STATUS_VALUE AS HISTORY_STATUS, PAGH.COVERAGE_CODE, PAGH.RATE_STRUCTURE_CODE, PAGH.COBRA_TYPE_VALUE, PA.PERSON_ACCOUNT_ID&#xD;&#xA;                   UPDATE PAGH SET END_DATE = DATEADD(d,-1,@NEW_CHANGE_DATE), MODIFIED_BY = @USER_ID, MODIFIED_DATE = GETDATE()&#xD;&#xA;                 From sgt_person_Account PA &#xD;&#xA;                                         Join sgt_person_Account_GHDV PAG on PA.Person_Account_ID = PAG.Person_Account_ID&#xD;&#xA;                                     Join sgt_person_Account_GHDV_History PAGH on PAGH.Person_Account_Ghdv_ID = PAG.Person_Account_Ghdv_ID&#xD;&#xA;                      Where plan_ID = @Plan_ID and Person_ID = @Person_ID and PAGH.END_DATE = dateadd(d,-1,@Old_Change_Date)&#xD;&#xA;&#xD;&#xA;              --             SELECT PERSON_ACCOUNT_GHDV_HISTORY_ID, PA.START_DATE, PA.END_DATE, PA.HISTORY_CHANGE_DATE, PAGH.START_DATE, PAGH.END_DATE, PAGH.PLAN_PARTICIPATION_STATUS_VALUE AS HISTORY_STATUS, PAGH.COVERAGE_CODE, PAGH.RATE_STRUCTURE_CODE, PAGH.COBRA_TYPE_VALUE, PA.PERSON_ACCOUNT_ID&#xD;&#xA;                 UPDATE PAGH SET START_DATE = @NEW_CHANGE_DATE, MODIFIED_BY = @USER_ID, MODIFIED_DATE = GETDATE()&#xD;&#xA;                 From sgt_person_Account PA &#xD;&#xA;                                         Join sgt_person_Account_GHDV PAG on PA.Person_Account_ID = PAG.Person_Account_ID&#xD;&#xA;                                            Join sgt_person_Account_GHDV_History PAGH on PAGH.Person_Account_Ghdv_ID = PAG.Person_Account_Ghdv_ID&#xD;&#xA;                      Where plan_ID = @Plan_ID and Person_ID = @Person_ID and PAGH.START_DATE = @Old_Change_Date&#xD;&#xA; End&#xD;&#xA;               Else if @Plan_ID = 13 ---LIFE&#xD;&#xA;                Begin &#xD;&#xA;          --Select PERSON_ACCOUNT_LIFE_HISTORY_ID, PA.Person_Account_ID, PA.Start_Date, PA.End_Date, Effective_Start_Date, Effective_end_date, PALH.Plan_Participation_Status_Value, Level_OF_Coverage_value, COVERAGE_AMOUNT &#xD;&#xA;                                UPDATE PALH SET Effective_end_date = DATEADD(D,-1,@NEW_CHANGE_DATE), MODIFIED_BY = @USER_ID, MODIFIED_DATE = GETDATE()&#xD;&#xA;                             From sgt_person_Account PA &#xD;&#xA;                                         Join sgt_person_Account_Life_History PALH on PA.Person_Account_ID = PALH.Person_Account_ID&#xD;&#xA;                              Where plan_ID = @Plan_ID and Person_ID = @Person_ID and PALH.EFFECTIVE_END_DATE = DATEADD(D,-1,@Old_Change_Date) &#xD;&#xA;                                      and PALH.LEVEL_OF_COVERAGE_VALUE = ISNULL(@LVL_COVERAGE, PALH.LEVEL_OF_COVERAGE_VALUE)&#xD;&#xA;&#xD;&#xA;  --Select PERSON_ACCOUNT_LIFE_HISTORY_ID, PA.Person_Account_ID, PA.Start_Date, PA.End_Date, EFFECTIVE_Start_Date, Effective_end_date, PALH.Plan_Participation_Status_Value, Level_OF_Coverage_value, COVERAGE_AMOUNT &#xD;&#xA;                               UPDATE PALH SET EFFECTIVE_START_DATE = @NEW_CHANGE_DATE, MODIFIED_BY = @USER_ID, MODIFIED_DATE = GETDATE()&#xD;&#xA;                          From sgt_person_Account PA &#xD;&#xA;                                         Join sgt_person_Account_Life_History PALH on PA.Person_Account_ID = PALH.Person_Account_ID&#xD;&#xA;                     Where plan_ID = @Plan_ID and Person_ID = @Person_ID and PALH.EFFECTIVE_START_DATE = @Old_Change_Date&#xD;&#xA;                                                             and PALH.LEVEL_OF_COVERAGE_VALUE = ISNULL(@LVL_COVERAGE, PALH.LEVEL_OF_COVERAGE_VALUE)&#xD;&#xA;    End&#xD;&#xA;               Else if @Plan_ID = 14 ---EAP&#xD;&#xA;    Begin &#xD;&#xA;          --             Select PERSON_ACCOUNT_EAP_HISTORY_ID, PA.Person_Account_ID, PA.Start_Date, PA.End_Date, History_Change_Date, PALH.Start_Date, PALH.End_Date, PALH.Plan_Participation_Status_Value&#xD;&#xA;                        UPDATE PALH SET END_DATE = DATEADD(D,-1,@NEW_CHANGE_DATE), MODIFIED_BY = @USER_ID, MODIFIED_DATE = GETDATE()&#xD;&#xA;                        From sgt_person_Account PA &#xD;&#xA;                                     Join sgt_person_Account_EAP_History PALH on PA.Person_Account_ID = PALH.Person_Account_ID&#xD;&#xA;                              Where plan_ID = @Plan_ID and Person_ID = @Person_ID and PALH.END_DATE = DATEADD(D,-1,@Old_Change_Date)&#xD;&#xA;                               &#xD;&#xA;       --                Select PERSON_ACCOUNT_EAP_HISTORY_ID, PA.Person_Account_ID, PA.Start_Date, PA.End_Date, History_Change_Date, PALH.Start_Date, PALH.End_Date, PALH.Plan_Participation_Status_Value&#xD;&#xA;                   UPDATE PALH SET START_DATE = @NEW_CHANGE_DATE, MODIFIED_BY = @USER_ID, MODIFIED_DATE = GETDATE()&#xD;&#xA;                 From sgt_person_Account PA &#xD;&#xA;                                         Join sgt_person_Account_EAP_History PALH on PA.Person_Account_ID = PALH.Person_Account_ID&#xD;&#xA;                     Where plan_ID = @Plan_ID and Person_ID = @Person_ID and PALH.START_DATE = @Old_Change_Date&#xD;&#xA;             End&#xD;&#xA;               Else if @Plan_ID = 15 --LTC&#xD;&#xA; Begin &#xD;&#xA;--                                SELECT PA.Person_ID, PERSON_ACCOUNT_LTC_OPTION_HISTORY_ID, PA.START_DATE, PA.END_DATE, PA.HISTORY_CHANGE_DATE, PAGH.START_DATE, PAGH.END_DATE, PAGH.PLAN_PARTICIPATION_STATUS_VALUE AS HISTORY_STATUS, PA.PERSON_ACCOUNT_ID&#xD;&#xA;                           UPDATE PAGH SET END_DATE = DATEADD(D,-1,@NEW_CHANGE_DATE), MODIFIED_BY = @USER_ID, MODIFIED_DATE = GETDATE()&#xD;&#xA;                        From sgt_person_Account PA &#xD;&#xA;                     Join SGT_PERSON_ACCOUNT_LTC_OPTION PAG on PA.Person_Account_ID = PAG.Person_Account_ID&#xD;&#xA;                                Join SGT_PERSON_ACCOUNT_LTC_OPTION_HISTORY PAGH on PAGH.PERSON_ACCOUNT_LTC_OPTION_ID = PAG.PERSON_ACCOUNT_LTC_OPTION_ID&#xD;&#xA;                   Where plan_ID = @Plan_ID and PA.Person_ID = @Person_ID and PAGH.END_DATE = DATEADD(D,-1,@Old_Change_Date)&#xD;&#xA;&#xD;&#xA;--                           SELECT PA.Person_ID, PERSON_ACCOUNT_LTC_OPTION_HISTORY_ID, PA.START_DATE, PA.END_DATE, PA.HISTORY_CHANGE_DATE, PAGH.START_DATE, PAGH.END_DATE, PAGH.PLAN_PARTICIPATION_STATUS_VALUE AS HISTORY_STATUS, PA.PERSON_ACCOUNT_ID&#xD;&#xA;                 UPDATE PAGH SET START_DATE = @NEW_CHANGE_DATE, MODIFIED_BY = @USER_ID, MODIFIED_DATE = GETDATE()&#xD;&#xA;                 From sgt_person_Account PA &#xD;&#xA;                         Join SGT_PERSON_ACCOUNT_LTC_OPTION PAG on PA.Person_Account_ID = PAG.Person_Account_ID&#xD;&#xA;                               Join SGT_PERSON_ACCOUNT_LTC_OPTION_HISTORY PAGH on PAGH.PERSON_ACCOUNT_LTC_OPTION_ID = PAG.PERSON_ACCOUNT_LTC_OPTION_ID&#xD;&#xA;                 Where plan_ID = @Plan_ID and PA.Person_ID = @Person_ID and PAGH.START_DATE = @Old_Change_Date&#xD;&#xA;              End&#xD;&#xA;&#xD;&#xA;      --SELECT PA.START_DATE, PA.END_DATE, PA.HISTORY_CHANGE_DATE, PA.*&#xD;&#xA;              UPDATE PA SET HISTORY_CHANGE_DATE = @NEW_CHANGE_DATE, MODIFIED_BY = @USER_ID, MODIFIED_DATE = GETDATE()&#xD;&#xA; From sgt_person_Account PA &#xD;&#xA;         Where plan_ID = @Plan_ID and Person_ID = @Person_ID and PA.HISTORY_CHANGE_DATE = @Old_Change_Date&#xD;&#xA;&#xD;&#xA;  --SELECT PA.START_DATE, PA.END_DATE, PA.HISTORY_CHANGE_DATE, PA.*&#xD;&#xA; UPDATE PA SET END_DATE = DATEADD(D,-1,@NEW_CHANGE_DATE), MODIFIED_BY = @USER_ID, MODIFIED_DATE = GETDATE()&#xD;&#xA;        From sgt_person_Account PA &#xD;&#xA;     Where plan_ID = @Plan_ID and Person_ID = @Person_ID and PA.END_DATE = DATEADD(D,-1,@Old_Change_Date)&#xD;&#xA;END">
      <parameters>
        <parameter ID="@Plan_ID" sfwDataType="int" />
        <parameter ID="@NEW_CHANGE_DATE" sfwDataType="DateTime" />
        <parameter ID="@USER_ID" sfwDataType="string" />
        <parameter ID="@Person_ID" sfwDataType="int" />
        <parameter ID="@Old_Change_Date" sfwDataType="DateTime" />
        <parameter ID="@LVL_COVERAGE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="rptAnnualPledgeAmount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select MP.IS_FLEX_ENROLLED,&#xD;&#xA;SUM (CASE WHEN MF.COVERAGE_DESCRIPTION = 'Medical Spending Reimbursement Account' THEN MF.ANNUAL_PLEDGE_AMOUNT ELSE 0 END) +&#xD;&#xA;SUM (CASE WHEN MF.COVERAGE_DESCRIPTION = 'Dependent Care Reimbursement Account' THEN MF.ANNUAL_PLEDGE_AMOUNT ELSE 0 END) AS TOTAL_ANNUAL_PLEDGE_AMOUNT &#xD;&#xA; from SGT_MAS_PERSON MP LEFT JOIN SGT_MAS_FLEX_OPTION MF &#xD;&#xA;ON MP.MAS_PERSON_ID = MF.MAS_PERSON_ID &#xD;&#xA; where MP.MAS_PERSON_ID = @MAS_PERSON_ID group by MP.IS_FLEX_ENROLLED">
      <parameters>
        <parameter ID="@MAS_PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPremiumConversionPlans" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT distinct P.PLAN_NAME, PA.PERSON_ACCOUNT_ID, PA.PLAN_PARTICIPATION_STATUS_VALUE, &#xD;&#xA;  GHDVH.PREMIUM_CONVERSION_INDICATOR_FLAG,GHDVH.START_DATE, GHDVH.END_DATE&#xD;&#xA;FROM SGT_PLAN P&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA&#xD;&#xA; ON P.PLAN_ID = PA.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHD &#xD;&#xA; ON PA.PERSON_ACCOUNT_ID = GHD.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVH&#xD;&#xA; ON GHD.PERSON_ACCOUNT_GHDV_ID = GHDVH.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;WHERE PA.PERSON_ID = @PERSON_ID and GHDVH.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA; AND GHDVH.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA; AND GHDVH.START_DATE &lt;= @EFFECTIVE_DATE&#xD;&#xA; AND (GHDVH.END_DATE IS NULL OR GHDVH.END_DATE &gt;= @EFFECTIVE_DATE)&#xD;&#xA; AND GHDVH.START_DATE &lt;&gt; ISNULL(GHDVH.END_DATE,'99991231')&#xD;&#xA;&#xD;&#xA;UNION ALL  &#xD;&#xA;&#xD;&#xA;SELECT P.PLAN_NAME, PA.PERSON_ACCOUNT_ID, PA.PLAN_PARTICIPATION_STATUS_VALUE, &#xD;&#xA;  LIFEH.PREMIUM_CONVERSION_INDICATOR_FLAG,LIFEH.EFFECTIVE_START_DATE, LIFEH.EFFECTIVE_END_DATE&#xD;&#xA;FROM SGT_PLAN P&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA&#xD;&#xA; ON P.PLAN_ID = PA.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_LIFE LIFE &#xD;&#xA; ON PA.PERSON_ACCOUNT_ID = LIFE.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY LIFEH&#xD;&#xA; ON LIFE.PERSON_ACCOUNT_ID = LIFEH.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PA.PERSON_ID = @PERSON_ID and LIFEH.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y'&#xD;&#xA; AND LIFEH.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA; AND LIFEH.EFFECTIVE_START_DATE &lt;= @EFFECTIVE_DATE&#xD;&#xA; AND (LIFEH.EFFECTIVE_END_DATE IS NULL OR LIFEH.EFFECTIVE_END_DATE &gt;= @EFFECTIVE_DATE)&#xD;&#xA; AND LIFEH.EFFECTIVE_START_DATE &lt;&gt; ISNULL(LIFEH.EFFECTIVE_END_DATE,'99991231')&#xD;&#xA; AND LIFEH.LEVEL_OF_COVERAGE_VALUE = 'BASC' AND LIFEH.PLAN_OPTION_STATUS_VALUE = 'ENLD'&#xD;&#xA; ">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@EFFECTIVE_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="FSAEligibilityFile" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="-- ANY CHANGES IN THIS QUERY HAS IMPACT ON GETDISTINCTYEAR QUERY TOO.&#xD;&#xA;SELECT distinct YEAR(FLEXH.EFFECTIVE_START_DATE) AS START_YEAR,spa.*, flex.*, &#xD;&#xA;sp.first_name, sp.last_name, sp.middle_name, sp.date_of_birth, sp.ssn , sp.DATE_OF_DEATH&#xD;&#xA; FROM SGT_PERSON_ACCOUNT SPA WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_FLEX_COMP FLEX WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID=FLEX.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY FLEXH WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID=FLEXH.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON SP WITH(NOLOCK) ON SP.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;WHERE SPA.PLAN_ID=18 AND YEAR(FLEXH.EFFECTIVE_START_DATE) &gt;= YEAR(GETDATE()) AND&#xD;&#xA;((SPA.PLAN_PARTICIPATION_STATUS_VALUE='ENL4' AND SPA.END_DATE IS NULL) OR&#xD;&#xA;(SPA.PLAN_PARTICIPATION_STATUS_VALUE='SUS4' AND SPA.HISTORY_CHANGE_DATE &gt; DATEADD(YY, DATEDIFF(YY,0,GETDATE()), 0)))&#xD;&#xA;--AND EXISTS&#xD;&#xA;--(&#xD;&#xA;--SELECT * FROM SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY WHERE PERSON_ACCOUNT_FLEX_COMP_HISTORY_ID IN(&#xD;&#xA;--SELECT MAX(PERSON_ACCOUNT_FLEX_COMP_HISTORY_ID) AS PERSON_ACCOUNT_FLEX_COMP_HISTORY_ID&#xD;&#xA;-- FROM DBO.SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY  &#xD;&#xA;-- WHERE PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID AND ANNUAL_PLEDGE_AMOUNT &gt;0 &#xD;&#xA;--  GROUP BY LEVEL_OF_COVERAGE_VALUE&#xD;&#xA;--) &#xD;&#xA;AND ANNUAL_PLEDGE_AMOUNT &gt;0 AND (EFFECTIVE_END_DATE IS NULL OR YEAR(EFFECTIVE_END_DATE) = YEAR(GETDATE()))&#xD;&#xA;AND EFFECTIVE_START_DATE &lt;&gt; ISNULL(EFFECTIVE_END_DATE,'')&#xD;&#xA;--)&#xD;&#xA;ORDER BY SP.SSN">
      <parameters />
    </query>
    <query ID="GetDistinctFSAStartDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT YEAR(SPA.HISTORY_CHANGE_DATE) AS START_YEAR FROM SGT_PERSON_ACCOUNT SPA WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_FLEX_COMP FLEX WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID=FLEX.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON SP WITH(NOLOCK) ON SP.PERSON_ID = SPA.PERSON_ID&#xD;&#xA;WHERE SPA.PLAN_ID=18 AND &#xD;&#xA;((SPA.PLAN_PARTICIPATION_STATUS_VALUE='ENL4' AND SPA.END_DATE IS NULL) OR&#xD;&#xA;(SPA.PLAN_PARTICIPATION_STATUS_VALUE='SUS4' AND SPA.HISTORY_CHANGE_DATE &gt; GETDATE()))&#xD;&#xA;AND EXISTS&#xD;&#xA;(&#xD;&#xA;SELECT * FROM SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY WHERE PERSON_ACCOUNT_FLEX_COMP_HISTORY_ID IN(&#xD;&#xA;SELECT MAX(PERSON_ACCOUNT_FLEX_COMP_HISTORY_ID) AS PERSON_ACCOUNT_FLEX_COMP_HISTORY_ID&#xD;&#xA; FROM DBO.SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY  &#xD;&#xA; WHERE PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xD;&#xA;  GROUP BY LEVEL_OF_COVERAGE_VALUE&#xD;&#xA;) AND ANNUAL_PLEDGE_AMOUNT &gt;0 AND EFFECTIVE_END_DATE IS NULL&#xD;&#xA;)">
      <parameters />
    </query>
    <query ID="GetEnrolledPlansForPersonID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select  * &#xD;&#xA;from SGT_PERSON_ACCOUNT PAA &#xD;&#xA;inner join  SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED  on PAA.PERSON_ACCOUNT_ID = PAED.PERSON_ACCOUNT_ID&#xD;&#xA;inner join SGT_PERSON_EMPLOYMENT_DETAIL  PED  on PED.PERSON_EMPLOYMENT_DTL_ID= PAED.PERSON_EMPLOYMENT_DTL_ID  AND ELECTION_VALUE = 'ENLD' &#xD;&#xA;INNER join SGT_PERSON_EMPLOYMENT PE on PE.PERSON_EMPLOYMENT_ID= PED.PERSON_EMPLOYMENT_ID and PLAN_PARTICIPATION_STATUS_VALUE like '%enl%'&#xD;&#xA;where PE.PERSON_ID =@PERSON_ID  and PE.ORG_ID=@ORG_ID &#xD;&#xA;and (PED.END_DATE is null  or PED.END_DATE &gt; GETDATE())&#xD;&#xA;order by PED.START_DATE DESC, PED.END_DATE DESC">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadCurrentlyEnrolledPlans" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PAED.* FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON PAED.PERSON_ACCOUNT_ID = SPA.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN PL WITH(NOLOCK) ON PL.PLAN_ID = PAED.PLAN_ID&#xD;&#xA;WHERE PAED.PERSON_EMPLOYMENT_DTL_ID = @PERSONEMPLOYMENTDETAILID&#xD;&#xA;AND PL.BENEFIT_TYPE_VALUE = @BENEFITTYPEVALUE&#xD;&#xA;AND PAED.ELECTION_VALUE = 'ENLD'&#xD;&#xA;AND SPA.PLAN_PARTICIPATION_STATUS_VALUE = @PLANPARTICIPATIONSTATUSVALUE">
      <parameters>
        <parameter ID="@PERSONEMPLOYMENTDETAILID" sfwDataType="int" />
        <parameter ID="@BENEFITTYPEVALUE" sfwDataType="string" />
        <parameter ID="@PLANPARTICIPATIONSTATUSVALUE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadInsuranceYTDMedicare" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(TEMP.DUE_PREMIUM_AMOUNT) AS idecTotalDuePremiumAmount,&#xD;&#xA;SUM(TEMP.PAID_PREMIUM_AMOUNT) AS idecTotalPaidPremiumAmount,TEMP.PREMIUMMONTH,TEMP.SUBSYSTEM_VALUE &#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT RIGHT('00'+CAST(MONTH(CONT.EFFECTIVE_DATE) AS VARCHAR(2)),2)+'/'+ CAST(YEAR(CONT.EFFECTIVE_DATE) AS VARCHAR(4)) AS PREMIUMMONTH&#xD;&#xA;,CONT.HEALTH_INSURANCE_CONTRIBUTION_ID&#xD;&#xA;,CONT.DUE_PREMIUM_AMOUNT,CONT.PAID_PREMIUM_AMOUNT,CONT.SUBSYSTEM_VALUE&#xD;&#xA;FROM DBO.SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION CONT WHERE CONT.PERSON_ACCOUNT_ID IN &#xD;&#xA;(SELECT HIST.PERSON_ACCOUNT_ID FROM SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY HIST&#xD;&#xA;INNER JOIN SGT_PERSON PER ON PER.PERSON_ID=HIST.MEMBER_PERSON_ID&#xD;&#xA; WHERE MEMBER_PERSON_ID=@MEMBER_PERSON_ID)&#xD;&#xA; AND EFFECTIVE_DATE &gt;= @STARTDATE AND EFFECTIVE_DATE &lt;= @ENDDATE&#xD;&#xA;GROUP BY CONT.EFFECTIVE_DATE,CONT.DUE_PREMIUM_AMOUNT,CONT.PAID_PREMIUM_AMOUNT,CONT.HEALTH_INSURANCE_CONTRIBUTION_ID,CONT.SUBSYSTEM_VALUE&#xD;&#xA;) TEMP&#xD;&#xA;GROUP BY TEMP.PREMIUMMONTH,TEMP.SUBSYSTEM_VALUE&#xD;&#xA;ORDER BY TEMP.PREMIUMMONTH DESC">
      <parameters>
        <parameter ID="@STARTDATE" sfwDataType="DateTime" />
        <parameter ID="@ENDDATE" sfwDataType="DateTime" />
        <parameter ID="@MEMBER_PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadDefCompAccountsEnrolled" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PA.* FROM SGT_PERSON_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;WHERE PERSON_ID = @PERSONID &#xD;&#xA;AND PA.PLAN_PARTICIPATION_STATUS_VALUE != 'CAN3'&#xD;&#xA;AND PLAN_ID IN (8,19)">
      <parameters>
        <parameter ID="@PERSONID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadEnrolledPlanAndPremiumForPersonAccountGHDV" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; GHDV.*, PA.*&#xA;FROM&#xA;&#x9; SGT_PERSON_ACCOUNT PA WITH(NOLOCK)  INNER              &#xA;&#x9; JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)     &#xA;&#x9; ON PA.PERSON_ACCOUNT_ID = GHDV.PERSON_ACCOUNT_ID INNER              &#xA;&#x9; JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY HIS WITH(NOLOCK)     &#xA;&#x9; ON HIS.PERSON_ACCOUNT_GHDV_ID = GHDV.PERSON_ACCOUNT_GHDV_ID &#xA;WHERE&#xA;&#x9; PA.PERSON_ID = @PERSONID AND&#xA;&#x9; @EFFECTIVEDATE BETWEEN HIS.[START_DATE] AND&#xA;&#x9; ISNULL(HIS.END_DATE,&#xA;&#x9;'99991231') AND&#xA;&#x9; HIS.PLAN_PARTICIPATION_STATUS_VALUE  in ('ENL2',&#xA;&#x9;'SUS3') AND&#xA;&#x9; HIS.COBRA_TYPE_VALUE IS NULL">
      <parameters>
        <parameter ID="@PERSONID" sfwDataType="int" />
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPurcLOASEASRetContriEffDates" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;    DISTINCT PARC.EFFECTIVE_DATE&#xD;&#xA;FROM &#xD;&#xA;    SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;JOIN SGT_SERVICE_PURCHASE_HEADER SPH WITH(NOLOCK) &#xD;&#xA;ON &#xD;&#xA;    PARC.SUBSYSTEM_VALUE = 'PURC' AND &#xD;&#xA;    PARC.SUBSYSTEM_REF_ID &gt; 0 AND &#xD;&#xA;    SPH.SERVICE_PURCHASE_HEADER_ID = PARC.SUBSYSTEM_REF_ID AND&#xD;&#xA;    SPH.SERVICE_PURCHASE_TYPE_VALUE = 'CONS' AND (ISNULL(PARC.PENSION_SERVICE_CREDIT, 0) &gt; 0 AND ISNULL(PARC.VESTED_SERVICE_CREDIT, 0) &gt; 0)&#xD;&#xA;JOIN SGT_SERVICE_PURCHASE_DETAIL SPD WITH(NOLOCK) ON SPD.SERVICE_PURCHASE_HEADER_ID = SPH.SERVICE_PURCHASE_HEADER_ID&#xD;&#xA;JOIN SGT_SERVICE_PURCHASE_DETAIL_CONSOLIDATED SPDC WITH(NOLOCK) ON SPDC.SERVICE_PURCHASE_DETAIL_ID = SPD.SERVICE_PURCHASE_DETAIL_ID AND&#xD;&#xA;     SPDC.SERVICE_CREDIT_TYPE_VALUE IN ('LOA', 'SEAS') &#xD;&#xA;WHERE PARC.PERSON_ACCOUNT_ID = @PERSONACCOUNTID">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllPersonEmployments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT PE.*, O.* FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID &#xD;&#xA;AND PAED.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND PED.STATUS_VALUE = 'CONT' &#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK) ON PE.PERSON_EMPLOYMENT_ID = PED.PERSON_EMPLOYMENT_ID &#xD;&#xA;INNER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON O.ORG_ID = PE.ORG_ID&#xD;&#xA;WHERE @DATE_OF_PURCHASE BETWEEN PE.[START_DATE] AND ISNULL(PE.END_DATE, '99991231')">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@DATE_OF_PURCHASE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPAEmpDetailWithoutEndDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED WITH(NOLOCK)&#xD;&#xA;JOIN SGT_PERSON_EMPLOYMENT_DETAIL D WITH(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID = D.PERSON_EMPLOYMENT_DTL_ID AND PAED.PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA;JOIN SGT_PERSON_EMPLOYMENT E WITH(NOLOCK) ON E.PERSON_EMPLOYMENT_ID = D.PERSON_EMPLOYMENT_ID&#xD;&#xA;WHERE E.END_DATE IS NULL">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LifeAgeChangeForBenefitEnrollment" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;&#x9;*&#xD;&#xA;FROM (SELECT&#xD;&#xA;&#x9;PALH.PERSON_ACCOUNT_ID,&#xD;&#xA;&#x9;PALH.COVERAGE_AMOUNT,&#xD;&#xA;&#x9;PAL.LIFE_INSURANCE_TYPE_VALUE,&#xD;&#xA;&#x9;PALH.LEVEL_OF_COVERAGE_VALUE,&#xD;&#xA;&#x9;PER.SSN,&#xD;&#xA;&#x9;PER.PEOPLESOFT_ID,&#xD;&#xA;&#x9;PALH.PLAN_PARTICIPATION_STATUS_VALUE,&#xD;&#xA;&#x9;PAL.PREMIUM_CONVERSION_INDICATOR_FLAG,&#xD;&#xA;&#x9;PER.DATE_OF_BIRTH,&#xD;&#xA;&#x9;PER.PERSON_ID,&#xD;&#xA;&#x9;DATEDIFF(YEAR, (CONVERT(DATE, PER.DATE_OF_BIRTH, 103)), (DATEADD(DAY,-1,@EFFECTIVEDATE))) AS MEMBER_AGE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;INNER JOIN SGT_PERSON PER&#xD;&#xA;&#x9;ON PA.PERSON_ID = PER.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_LIFE PAL&#xD;&#xA;&#x9;ON PA.PERSON_ACCOUNT_ID = PAL.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY PALH&#xD;&#xA;&#x9;ON PAL.PERSON_ACCOUNT_ID = PALH.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE (PALH.EFFECTIVE_END_DATE IS NULL&#xD;&#xA;OR PALH.EFFECTIVE_END_DATE &gt; @EFFECTIVEDATE)&#xD;&#xA;AND PALH.LIFE_INSURANCE_TYPE_VALUE = 'NREM'&#xD;&#xA;AND PALH.PLAN_OPTION_STATUS_VALUE = 'ENLD'&#xD;&#xA;AND PALH.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;AND PA.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;AND PALH.LEVEL_OF_COVERAGE_VALUE = 'SPML') AS TEMP&#xD;&#xA;WHERE (TEMP.MEMBER_AGE IN (20, 25, 30, 35, 40, 45, 50, 55, 60, 65)&#xD;&#xA;OR MEMBER_AGE &gt; 69)">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="EnrollmentData" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="(SELECT&#xA;&#x9; DISTINCT PAY1.PAYEE_PERSLINK_ID &#xA;FROM&#xA;&#x9; SGT_PAYEE_ACCOUNT PAY1 WITH(NOLOCK) &#xA;&#x9;INNER &#xA;&#x9; JOIN (SELECT&#xA;&#x9; A.PERSON_ID,&#xA;&#x9;A.START_DATE,&#xA;&#x9;END_DATE &#xA;FROM&#xA;&#x9; (SELECT&#xA;&#x9; ROW_NUMBER() OVER (PARTITION BY PERSON_ID &#xA;ORDER BY  START_DATE DESC) AS ROWNUM,&#xA;&#x9;* &#xA;FROM&#xA;&#x9; SGT_PERSON_EMPLOYMENT WITH(NOLOCK)) A &#xA;WHERE&#xA;&#x9; A.ROWNUM = 1) PE1&#xA;&#x9; ON PAY1.PAYEE_PERSLINK_ID = PE1.PERSON_ID &#xA;WHERE&#xA;&#x9; PAY1.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR' AND&#xA;&#x9; PE1.END_DATE IS NOT NULL AND&#xA;&#x9; PAY1.BENEFIT_BEGIN_DATE &gt; PE1.END_DATE AND&#xA;&#x9; PAY1.PAYEE_PERSLINK_ID = @person_id)">
      <parameters />
    </query>
    <query ID="fleDailyPeopleSoftPlanFileOut" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @ANNEMONTHRANGE INT = (SELECT DATA1 FROM SGS_CODE_VALUE WHERE CODE_ID = 7024 AND CODE_VALUE ='ANNM')&#xD;&#xA;&#xD;&#xA;DECLARE @ANNEBATCHRUNDATE DATETIME = (SELECT TOP 1 CAST( CREATED_DATE AS DATE ) &#xD;&#xA;FROM SGS_PROCESS_LOG WHERE PROCESS_NAME LIKE '%PERSON ACCOUNT - PEOPLESOFT ANNUAL ENROLLMENT FILE%' AND&#xD;&#xA;CAST( CREATED_DATE AS DATE ) &gt; (SELECT DATA2 FROM SGS_CODE_VALUE WHERE CODE_ID = 52 AND CODE_VALUE = 'ANNE')&#xD;&#xA;ORDER BY CREATED_DATE DESC)&#xD;&#xA;&#xD;&#xA;SELECT * INTO #TEMP1 FROM  SGT_ENROLLMENT_DATA WHERE START_DATE=END_DATE AND PLAN_ID=19 AND COVERAGE_ELECTION_VALUE != 'W'&#xD;&#xA;UPDATE SGT_ENROLLMENT_DATA SET PEOPLESOFT_FILE_SENT_FLAG='Y'&#xD;&#xA; FROM  SGT_ENROLLMENT_DATA ED INNER JOIN  &#xD;&#xA; #TEMP1  T ON T.SOURCE_ID=ED.SOURCE_ID&#xD;&#xA; WHERE ED.ENROLLMENT_DATA_ID &lt;= T.ENROLLMENT_DATA_ID&#xD;&#xA; DROP TABLE #TEMP1&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA;&#x9; *&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGT_ENROLLMENT_DATA ENROLLDATA WITH(NOLOCK) &#xD;&#xA;WHERE&#xD;&#xA;&#x9; ISNULL(PEOPLESOFT_FILE_SENT_FLAG,'N') = 'N'&#xD;&#xA;&#x9; AND &#xD;&#xA;&#x9; (&#xD;&#xA;&#x9; (ISNULL(ENROLLDATA.CHANGE_REASON_VALUE,'') NOT IN ('ANNE', 'ANNT')&#xD;&#xA;&#x9; AND ISNULL(ENROLLDATA.PEOPLESOFT_CHANGE_REASON_VALUE,'') NOT IN ('ANNE', 'ANNT')) OR&#xD;&#xA;&#xD;&#xA;&#x9; (ISNULL(ENROLLDATA.CHANGE_REASON_VALUE,'') IN ('ANNE', 'ANNT')&#xD;&#xA;&#x9; AND ISNULL(ENROLLDATA.PEOPLESOFT_CHANGE_REASON_VALUE,'') IN ('ANNE', 'ANNT') AND &#xD;&#xA;&#x9; GETDATE() BETWEEN ISNULL(@ANNEBATCHRUNDATE,'01/01/1753') AND ISNULL(DATEADD(M,@ANNEMONTHRANGE , @ANNEBATCHRUNDATE), '01/01/1753'))&#xD;&#xA;&#x9; )&#xD;&#xA;&#x9; AND PLAN_ID &lt;&gt; 18 &#xD;&#xA;&#x9; AND PEOPLESOFT_ORG_GROUP_VALUE = 'STAT'&#xD;&#xA;union &#xD;&#xA;&#xD;&#xA;SELECT *&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGT_ENROLLMENT_DATA ENROLLDATA WITH(NOLOCK) &#xD;&#xA;WHERE&#xD;&#xA;&#x9; ISNULL(PEOPLESOFT_FILE_SENT_FLAG,'N') = 'N'&#xD;&#xA;&#x9; AND ISNULL(ENROLLDATA.CHANGE_REASON_VALUE,'') NOT IN ('ANNE', 'ANNT')&#xD;&#xA;&#x9; AND ISNULL(ENROLLDATA.PEOPLESOFT_CHANGE_REASON_VALUE,'') NOT IN ('ANNE', 'ANNT')&#xD;&#xA;&#x9; AND PLAN_ID = 18 &#xD;&#xA;     AND (DATEDIFF( DAY , GETDATE(), ENROLLDATA.START_DATE ) &lt; 25)&#xD;&#xA;     AND PEOPLESOFT_ORG_GROUP_VALUE = 'STAT'&#xD;&#xA;ORDER BY ENROLLMENT_DATA_ID">
      <parameters />
    </query>
    <query ID="UpdatePrevPeopleSoftRecordDefComp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_ENROLLMENT_DATA SET PEOPLESOFT_FILE_SENT_FLAG = 'Y' &#xA;WHERE&#xA;&#x9; NDPERS_MEMBER_ID = @PERSON_ID AND&#xA;&#x9; PLAN_ID = 19 AND&#xA;&#x9; PEOPLESOFT_FILE_SENT_FLAG = 'N' AND&#xA;&#x9; (END_DATE = DATEADD(DAY, -1, @START_DATE) OR START_DATE = @START_DATE) AND&#xA;&#x9; PROVIDER_ORG_ID = @PROVIDER_ORG_ID AND&#xA;&#x9; PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@PROVIDER_ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadDeferredCompToUpdatePlanType" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_ENROLLMENT_DATA WHERE PLAN_ID = 19 AND NDPERS_MEMBER_ID = @PERSON_ID AND PEOPLESOFT_FILE_SENT_FLAG = 'N' ORDER BY ENROLLMENT_DATA_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePrevPeopleSoftRecords" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_ENROLLMENT_DATA&#xD;&#xA;SET PEOPLESOFT_FILE_SENT_FLAG = 'Y'&#xD;&#xA;WHERE NDPERS_MEMBER_ID = @PERSON_ID&#xD;&#xA;AND PLAN_ID = @PLAN_ID&#xD;&#xA;AND PEOPLESOFT_FILE_SENT_FLAG = 'N'&#xD;&#xA;AND EMPLOYER_ORG_ID = @ORG_ID&#xD;&#xA;AND START_DATE = @START_DATE&#xD;&#xA;AND PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;--AND CAST(MODIFIED_DATE AS DATE) = CAST(GETDATE() AS DATE)">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePrevBenefitEnrollmentRecordHSA" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_ENROLLMENT_DATA SET IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y', PEOPLESOFT_FILE_SENT_FLAG = 'Y'&#xD;&#xA;WHERE NDPERS_MEMBER_ID = @PERSON_ID&#xD;&#xA;AND PLAN_ID = 18&#xD;&#xA;AND PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND (IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N' OR PEOPLESOFT_FILE_SENT_FLAG = 'N')&#xD;&#xA;AND START_DATE = @START_DATE&#xD;&#xA;AND END_DATE = @START_DATE">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPreviousEnrollmentData" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_ENROLLMENT_DATA&#xD;&#xA;WHERE NDPERS_MEMBER_ID = @person_id&#xD;&#xA;AND PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND PLAN_ID = 18&#xD;&#xA;AND IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N'">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePrevPeopleSoftNBenefitEnrlFlagDefComp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_ENROLLMENT_DATA &#xD;&#xA;SET IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y', PEOPLESOFT_FILE_SENT_FLAG = 'Y' &#xD;&#xA;WHERE SOURCE_ID = @SOURCE_ID AND (IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N' OR PEOPLESOFT_FILE_SENT_FLAG = 'N')&#xD;&#xA;AND     PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@SOURCE_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePrevEnrollmentDataFlagDefComp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_ENROLLMENT_DATA &#xD;&#xA;SET IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y', PEOPLESOFT_FILE_SENT_FLAG = 'Y' &#xD;&#xA;WHERE PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID AND (IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N' OR PEOPLESOFT_FILE_SENT_FLAG = 'N')&#xD;&#xA;AND COVERAGE_ELECTION_VALUE = 'W' AND PLAN_TYPE = @PLAN_TYPE">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@PLAN_TYPE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadDefaultHSAEnrollmentDataEntry" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_ENROLLMENT_DATA&#xD;&#xA;WHERE NDPERS_MEMBER_ID = @person_id&#xD;&#xA;AND PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND PLAN_ID = 18&#xD;&#xA;AND CONVERT(DATE,START_DATE) =  CONVERT(DATE,@START_DATE)&#xD;&#xA;AND (IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N' OR PEOPLESOFT_FILE_SENT_FLAG = 'N')">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="UpdateEnrollmentDataForDiffCoverageBeginDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_ENROLLMENT_DATA &#xD;&#xA;SET IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N', PEOPLESOFT_FILE_SENT_FLAG = 'N' &#xD;&#xA;WHERE ENROLLMENT_DATA_ID = &#xD;&#xA;&#x9;(&#x9;SELECT TOP 1 ENROLLMENT_DATA_ID&#xD;&#xA;&#x9;&#x9;FROM SGT_ENROLLMENT_DATA&#xD;&#xA;&#x9;&#x9;WHERE SOURCE_ID = @SOURCE_ID &#xD;&#xA;&#x9;&#x9;AND IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y' AND PEOPLESOFT_FILE_SENT_FLAG = 'Y' AND COVERAGE_ELECTION_VALUE = 'E'&#xD;&#xA;&#x9;&#x9;AND COVERAGE_BEGIN_DATE &lt;&gt; (SELECT TOP 1 COVERAGE_BEGIN_DATE FROM SGT_ENROLLMENT_DATA WHERE SOURCE_ID = @SOURCE_ID AND COVERAGE_ELECTION_VALUE = 'W' ORDER BY ENROLLMENT_DATA_ID DESC)&#xD;&#xA;&#x9;&#x9;AND PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;AND PAY_PERIOD_AMOUNT IS NOT NULL&#xD;&#xA;&#x9;&#x9;ORDER BY ENROLLMENT_DATA_ID DESC&#xD;&#xA;&#x9;)">
      <parameters>
        <parameter ID="@SOURCE_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePrevPeopleSoftNBenefitEnrlFlag" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_ENROLLMENT_DATA &#xD;&#xA;SET IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y', PEOPLESOFT_FILE_SENT_FLAG = 'Y' &#xD;&#xA;WHERE SOURCE_ID = @SOURCE_ID AND (IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N' OR PEOPLESOFT_FILE_SENT_FLAG = 'N')&#xD;&#xA;AND     PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@SOURCE_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateDefaultHSAEnrollmentDataEntry" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE  SGT_ENROLLMENT_DATA &#xD;&#xA;SET     IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y', PEOPLESOFT_FILE_SENT_FLAG = 'Y', MODIFIED_DATE = GETDATE() &#xD;&#xA;WHERE   NDPERS_MEMBER_ID = @person_id&#xD;&#xA;AND     PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND     PLAN_ID = 18&#xD;&#xA;AND     CONVERT(DATE,START_DATE) =  CONVERT(DATE,@START_DATE)&#xD;&#xA;AND     (IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N' OR PEOPLESOFT_FILE_SENT_FLAG = 'N')">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="UpdatePrevRecordsSamePlanOptionValue" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE&#x9;P SET P.IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y'&#xD;&#xA;FROM&#x9;SGT_ENROLLMENT_DATA P&#xD;&#xA;WHERE&#x9;P.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND&#x9;&#x9;P.PLAN_OPTION_VALUE = 'HDHP'&#xD;&#xA;AND     CONVERT(date, P .CREATED_DATE) =CONVERT(date, @CREATED_DATE) &#xD;&#xA;AND (ISNULL(IS_BENEFIT_ENROLLMENT_REPORT_GENERATED,'N') = 'N' )&#xD;&#xA;&#xD;&#xA;UPDATE&#x9;P SET P.PEOPLESOFT_FILE_SENT_FLAG = 'Y'&#xD;&#xA;FROM&#x9;SGT_ENROLLMENT_DATA P&#xD;&#xA;WHERE&#x9;P.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND&#x9;&#x9;P.PLAN_OPTION_VALUE = 'HDHP'&#xD;&#xA;AND     CONVERT(date, P .CREATED_DATE) =CONVERT(date, @CREATED_DATE) &#xD;&#xA;AND (ISNULL(PEOPLESOFT_FILE_SENT_FLAG,'N') = 'N' )">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@CREATED_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="UpdateDefCompPrevRecordsIfZeroAmount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @IS_BENEFIT_ENROLLMENT_REPORT_GENERATED varchar(1), @PEOPLESOFT_FILE_SENT_FLAG varchar(1)&#xD;&#xA;&#xD;&#xA;SELECT&#x9;TOP 1 @IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = IS_BENEFIT_ENROLLMENT_REPORT_GENERATED,&#xD;&#xA;&#x9;&#x9;&#x9;  @PEOPLESOFT_FILE_SENT_FLAG = PEOPLESOFT_FILE_SENT_FLAG &#xD;&#xA;FROM&#x9;SGT_ENROLLMENT_DATA WITH(NOLOCK)&#xD;&#xA;WHERE&#x9;SOURCE_ID = @SOURCE_ID AND (ISNULL(IS_BENEFIT_ENROLLMENT_REPORT_GENERATED,'N') = 'N' OR ISNULL(PEOPLESOFT_FILE_SENT_FLAG,'N') = 'N')&#xD;&#xA;AND     PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND&#x9;&#x9;COVERAGE_ELECTION_VALUE = 'E'&#xD;&#xA;&#xD;&#xA;UPDATE SGT_ENROLLMENT_DATA &#xD;&#xA;SET IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = &#xD;&#xA;&#x9;CASE WHEN @IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N' AND @PEOPLESOFT_FILE_SENT_FLAG = 'N' &#xD;&#xA;&#x9; THEN 'Y'&#xD;&#xA;&#x9; ELSE &#xD;&#xA;&#x9;&#x9;CASE WHEN @IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N' AND @PEOPLESOFT_FILE_SENT_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9; THEN 'Y'&#xD;&#xA;&#x9;&#x9; ELSE IS_BENEFIT_ENROLLMENT_REPORT_GENERATED&#xD;&#xA;&#x9;&#x9;END&#xD;&#xA;&#x9;END&#xD;&#xA;&#x9;,PEOPLESOFT_FILE_SENT_FLAG = &#xD;&#xA;&#x9;CASE WHEN @IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N' AND @PEOPLESOFT_FILE_SENT_FLAG = 'N' &#xD;&#xA;&#x9; THEN 'Y'&#xD;&#xA;&#x9; ELSE &#xD;&#xA;&#x9;&#x9;CASE WHEN @IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y' AND @PEOPLESOFT_FILE_SENT_FLAG = 'N'&#xD;&#xA;&#x9;&#x9; THEN 'Y'&#xD;&#xA;&#x9;&#x9;ELSE PEOPLESOFT_FILE_SENT_FLAG&#x9;&#x9; &#xD;&#xA;&#x9;&#x9;END&#xD;&#xA;&#x9;END&#xD;&#xA;WHERE&#x9;SOURCE_ID = @SOURCE_ID AND PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@SOURCE_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="NonPayeeEmployeeCOBRAletter" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9;EMPD.*,&#xA;&#x9;PER.PERSON_ID &#xA;FROM SGT_PERSON_EMPLOYMENT_DETAIL EMPD WITH(NOLOCK)  &#xA;&#x9;INNER JOIN sGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON EMPD.PERSON_EMPLOYMENT_ID  = EMP.PERSON_EMPLOYMENT_ID &#xA;&#x9;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID = EMP.PERSON_ID &#xA;WHERE&#xA;&#x9; EMPD.END_DATE IS NOT NULL AND&#xA;&#x9; EMPD.COBRA_LETTER_STATUS_VALUE = 'LNS' AND&#xA;&#x9; PER.DATE_OF_DEATH IS NULL&#xA;&#x9; AND NOT EXISTS (SELECT 1 FROM SGT_PERSON_EMPLOYMENT EMP&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_ORGANIZATION ORG ON ORG.ORG_ID = EMP.ORG_ID&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGS_CODE_VALUE CV ON CV.DATA1 = ORG.ORG_CODE AND CV.CODE_ID = 7022&#xA;&#x9;&#x9;&#x9;&#x9;WHERE EMP.PERSON_ID = PER.PERSON_ID )">
      <parameters />
    </query>
    <query ID="UpdatePrevBenFlagWithSameStartEndDateFlexComp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_ENROLLMENT_DATA&#xD;&#xA;SET IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y'&#xD;&#xA;WHERE SOURCE_ID = @SOURCEID&#xD;&#xA;AND IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N'&#xD;&#xA;AND PERSON_ACCOUNT_ID = @PERSONACCOUNTID">
      <parameters>
        <parameter ID="@SOURCEID" sfwDataType="int" />
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePSSentFlagForTransfers" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_ENROLLMENT_DATA SET PEOPLESOFT_FILE_SENT_FLAG = 'Y' WHERE ENROLLMENT_DATA_ID IN (&#xD;&#xA;SELECT ENROLL.ENROLLMENT_DATA_ID&#xD;&#xA;FROM SGT_ENROLLMENT_DATA ENROLL&#xD;&#xA;WHERE PLAN_ID = @PLAN_ID&#xD;&#xA;AND ENROLL.NDPERS_MEMBER_ID = @PERSON_ID&#xD;&#xA;AND ENROLL.PEOPLESOFT_FILE_SENT_FLAG = 'N'&#xD;&#xA;AND ENROLL.EMPLOYER_ORG_ID != @ORG_ID&#xD;&#xA;AND ENROLL.COVERAGE_ELECTION_VALUE = 'T'&#xD;&#xA;AND ISNULL(@DEDUCTION_BEGIN_DATE,'01/01/1753') &lt;= ENROLL.DEDUCTION_BEGIN_DATE&#xD;&#xA;AND PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID)">
      <parameters>
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@DEDUCTION_BEGIN_DATE" sfwDataType="DateTime" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckResourceForLoggedInUser" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGS_USER U&#xD;&#xA;INNER JOIN SGS_USER_ROLES UR ON U.USER_SERIAL_ID = UR.USER_SERIAL_ID AND ISNULL(UR.EFFECTIVE_START_DATE, '29001231') &lt;= GETDATE() AND ISNULL(UR.EFFECTIVE_END_DATE, '29001231') &gt;= GETDATE()  &#xD;&#xA;INNER JOIN SGS_SECURITY S ON S.ROLE_ID = UR.ROLE_ID AND S.SECURITY_VALUE != 0&#xD;&#xA;INNER JOIN SGS_RESOURCES R ON R.RESOURCE_ID = S.RESOURCE_ID&#xD;&#xA;WHERE S.RESOURCE_ID = 2053 AND U.USER_SERIAL_ID = @USER_SERIAL_ID">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckIfLoggedInUserHasOverlapResource" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGS_USER U&#xD;&#xA;INNER JOIN SGS_USER_ROLES UR ON U.USER_SERIAL_ID = UR.USER_SERIAL_ID AND ISNULL(UR.EFFECTIVE_START_DATE, '29001231') &lt;= GETDATE() AND ISNULL(UR.EFFECTIVE_END_DATE, '29001231') &gt;= GETDATE()  &#xD;&#xA;INNER JOIN SGS_SECURITY S ON S.ROLE_ID = UR.ROLE_ID AND S.SECURITY_VALUE != 0&#xD;&#xA;INNER JOIN SGS_RESOURCES R ON R.RESOURCE_ID = S.RESOURCE_ID&#xD;&#xA;WHERE S.RESOURCE_ID in ( @OVERLAPRESOURCE, @OVERLAPRESOURCEENHANCED) AND U.USER_SERIAL_ID = @USER_SERIAL_ID">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
        <parameter ID="@OVERLAPRESOURCE" sfwDataType="int" />
        <parameter ID="@OVERLAPRESOURCEENHANCED" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePSSentFlagForTransfersDeferredComp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_ENROLLMENT_DATA SET PEOPLESOFT_FILE_SENT_FLAG = 'Y' WHERE ENROLLMENT_DATA_ID IN (&#xD;&#xA;SELECT ENROLL.ENROLLMENT_DATA_ID&#xD;&#xA;FROM SGT_ENROLLMENT_DATA ENROLL&#xD;&#xA;WHERE PLAN_ID = @PLAN_ID&#xD;&#xA;AND ENROLL.NDPERS_MEMBER_ID = @PERSON_ID&#xD;&#xA;AND ENROLL.PEOPLESOFT_FILE_SENT_FLAG = 'N'&#xD;&#xA;AND ENROLL.EMPLOYER_ORG_ID != @ORG_ID&#xD;&#xA;AND ENROLL.COVERAGE_ELECTION_VALUE = 'T'&#xD;&#xA;AND ISNULL(@DEDUCTION_BEGIN_DATE,'01/01/1753') &lt;= ENROLL.DEDUCTION_BEGIN_DATE&#xD;&#xA;AND PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND PROVIDER_ORG_ID = @PROVIDER_ORG_ID)">
      <parameters>
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@DEDUCTION_BEGIN_DATE" sfwDataType="DateTime" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@PROVIDER_ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="ChangeReasonINEMCOBRALetter" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT * FROM &#xD;&#xA;(&#xD;&#xA;SELECT P.PERSON_ID,PA.PERSON_ACCOUNT_ID,PAG.PERSON_ACCOUNT_GHDV_ID, '' AS IsFlexPlan  FROM SGT_PERSON_ACCOUNT_GHDV PAG WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PAG.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PERSON P WITH(NOLOCK) ON P.PERSON_ID = PA.PERSON_ID AND P.DATE_OF_DEATH IS NULL&#xD;&#xA;WHERE PAG.REASON_VALUE ='INEM'&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT P.PERSON_ID,PA.PERSON_ACCOUNT_ID,0 AS PERSON_ACCOUNT_GHDV_ID,'Yes' AS IsFlexPlan FROM SGT_PERSON_ACCOUNT_FLEX_COMP PAFCH WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PAFCH.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PERSON P WITH(NOLOCK) ON P.PERSON_ID = PA.PERSON_ID AND P.DATE_OF_DEATH IS NULL&#xD;&#xA;WHERE PAFCH.REASON_VALUE ='INEM'&#xD;&#xA;) TEMP_INEM_DATA ORDER BY PERSON_ID, PERSON_ACCOUNT_GHDV_ID DESC">
      <parameters />
    </query>
    <query ID="MembersWithServiceCreditandWages" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, EFFECTIVE_DATE), 0)) AS FIRST_OF_MONTH_EFFECTIVE_DATE, PERSON_ACCOUNT_ID, SUM( ISNULL(SALARY_AMOUNT, 0)) AS SALARY_AMOUNT_SUM, SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) AS PENSION_SERIVCE_CREDIT_SUM FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;where PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;GROUP BY CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, EFFECTIVE_DATE), 0)), PERSON_ACCOUNT_ID&#xD;&#xA;HAVING SUM(ISNULL(SALARY_AMOUNT, 0)) &gt; 0 AND SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) = 0">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPersonAccountByPersonEmploymentDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PA.*&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAD INNER JOIN SGT_PERSON_ACCOUNT PA&#xD;&#xA;ON PAD.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PAD.PERSON_EMPLOYMENT_DTL_ID = @PERSON_EMPLOYMENT_DTL_ID">
      <parameters>
        <parameter ID="@PERSON_EMPLOYMENT_DTL_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePrevBenefitEnrollmentRecords" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_ENROLLMENT_DATA&#xD;&#xA;SET IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y'&#xD;&#xA;WHERE NDPERS_MEMBER_ID = @PERSON_ID&#xD;&#xA;AND PLAN_ID = @PLAN_ID&#xD;&#xA;AND IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N'&#xD;&#xA;AND EMPLOYER_ORG_ID = @ORG_ID&#xD;&#xA;AND START_DATE = @START_DATE&#xD;&#xA;AND PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetEmpDetailForMemberRecordRequestUpdate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT WPED.* FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED WITH(NOLOCK)&#xD;&#xA;JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;JOIN SGT_WSS_PERSON_EMPLOYMENT_DETAIL WPED WITH(NOLOCK) ON WPED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;JOIN SGT_WSS_MEMBER_RECORD_REQUEST MRR WITH(NOLOCK) ON MRR.MEMBER_RECORD_REQUEST_ID = WPED.MEMBER_RECORD_REQUEST_ID&#xD;&#xA;WHERE PAED.PERSON_ACCOUNT_ID = @PERSONACCOUNTID AND MRR.STATUS_VALUE != 'PRCD' AND PAED.ELECTION_VALUE = 'ENLD' &#xD;&#xA;AND (@PLANEFFECTIVEDATE BETWEEN PED.[START_DATE] AND ISNULL(PED.END_DATE, '99991231'))">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@PLANEFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetEmpDetIdLinkedToPersonAccountId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(1) FROM SGT_PERSON_EMPLOYMENT E WITH(NOLOCK)&#xD;&#xA;JOIN SGT_PERSON_EMPLOYMENT_DETAIL D WITH(NOLOCK) ON E.PERSON_EMPLOYMENT_ID = D.PERSON_EMPLOYMENT_ID&#xD;&#xA;JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED WITH(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID = D.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;WHERE E.PERSON_ID = @PERSONID &#xD;&#xA;AND PAED.PERSON_ACCOUNT_ID = @PERSONACCOUNTID &#xD;&#xA;AND (@CHANGEEFFECTIVEDATE BETWEEN D.[START_DATE] AND ISNULL(D.END_DATE, '99991231'))&#xD;&#xA;AND PAED.ELECTION_VALUE = 'ENLD'">
      <parameters>
        <parameter ID="@PERSONID" sfwDataType="int" />
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@CHANGEEFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="CheckChangeIsWithinEmploymentDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(1) FROM SGT_PERSON_EMPLOYMENT E WITH(NOLOCK)  &#xA;JOIN SGT_PERSON_EMPLOYMENT_DETAIL D WITH(NOLOCK) ON E.PERSON_EMPLOYMENT_ID = D.PERSON_EMPLOYMENT_ID &#xA;AND&#x9; E.PERSON_ID = @PERSONID AND (@CHANGEEFFECTIVEDATE BETWEEN E.[START_DATE] AND ISNULL(E.END_DATE,'99991231')) &#xA;JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL AED WITH(NOLOCK) ON AED.PERSON_EMPLOYMENT_DTL_ID = D.PERSON_EMPLOYMENT_DTL_ID &#xA;AND&#x9; AED.PLAN_ID = @PLANID">
      <parameters>
        <parameter ID="@PERSONID" sfwDataType="int" />
        <parameter ID="@PLANID" sfwDataType="int" />
        <parameter ID="@CHANGEEFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="CheckRETRApplicationOfLast6Months" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_BENEFIT_APPLICATION &#xD;&#xA;WHERE MEMBER_PERSON_ID = @PERSON_ID&#xD;&#xA;AND BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA')&#xD;&#xA;AND ACTION_STATUS_VALUE NOT IN ('CANC','DEFE','DENI')&#xD;&#xA;AND  RECEIVED_DATE &gt; DATEADD(MONTH, -6, CAST(@BATCH_DATE AS DATE))">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@BATCH_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="CheckIfDependentEnrolledInLife" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY HIST ON HIST.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PERSON_ID = @PERSON_ID &#xD;&#xA;AND LEVEL_OF_COVERAGE_VALUE = 'DSPL' &#xD;&#xA;AND PA.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;AND (EFFECTIVE_END_DATE IS NULL OR EFFECTIVE_END_DATE &gt;= GETDATE())&#xD;&#xA;AND PLAN_OPTION_STATUS_VALUE = 'ENLD' AND COVERAGE_AMOUNT &gt; 0">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="IsMemberWasEnrolledAsPreTax" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @PERSON_EMPLOYMENT_DTL_ID INT = (SELECT TOP 1 PED.PERSON_EMPLOYMENT_DTL_ID FROM SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK) &#xA;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK) ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID &#xA;&#x9;WHERE PE.PERSON_ID = @PERSON_ID AND (PE.END_DATE IS NULL OR PE.END_DATE &gt; GETDATE()) &#xA;&#x9;ORDER BY  PED.[START_DATE] DESC, ISNULL(PED.END_DATE,'99991231') DESC)&#xA;&#xA;SELECT PA.PERSON_ID FROM SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHISTORY WITH(NOLOCK)&#xA;INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK) ON GHDVHISTORY.PERSON_ACCOUNT_GHDV_ID = GHDV.PERSON_ACCOUNT_GHDV_ID&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON GHDV.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xA;WHERE  PA.PLAN_ID IN (16,17) AND YEAR(GHDVHISTORY.START_DATE) = @EFFECTIVE_YEAR AND GHDVHISTORY.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y'&#xA;AND GHDVHISTORY.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xA;AND GHDVHISTORY.START_DATE &lt;&gt; ISNULL(GHDVHISTORY.END_DATE,'12/31/9999')&#xA;AND PERSON_ID = @PERSON_ID&#xA;AND EXISTS (SELECT 1 FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xA;&#x9;&#x9;&#x9;WHERE PAED.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;AND PAED.PERSON_EMPLOYMENT_DTL_ID &lt;&gt; @PERSON_EMPLOYMENT_DTL_ID&#xA;&#x9;&#x9;&#x9;AND (PED.END_DATE IS NULL OR YEAR(ISNULL(PED.END_DATE,'99991231')) = @EFFECTIVE_YEAR))&#xA;&#xA;UNION&#xA;&#xA;SELECT PA.PERSON_ID FROM SGT_PERSON_ACCOUNT_LIFE_HISTORY LIFEHISTORY WITH(NOLOCK)&#xA;INNER JOIN SGT_PERSON_ACCOUNT_LIFE PALIFE WITH(NOLOCK) ON LIFEHISTORY.PERSON_ACCOUNT_ID = PALIFE.PERSON_ACCOUNT_ID&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PALIFE.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xA;WHERE LIFEHISTORY.PREMIUM_CONVERSION_INDICATOR_FLAG ='Y' AND LIFEHISTORY.EFFECTIVE_START_DATE &lt;&gt; ISNULL(LIFEHISTORY.EFFECTIVE_END_DATE,'12/31/9999')&#xA;AND @EFFECTIVE_YEAR BETWEEN YEAR(LIFEHISTORY.EFFECTIVE_START_DATE) AND YEAR(LIFEHISTORY.EFFECTIVE_END_DATE) &#xA;AND LIFEHISTORY.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND LIFEHISTORY.PLAN_OPTION_STATUS_VALUE = 'ENLD'&#xA;AND (LIFEHISTORY.LEVEL_OF_COVERAGE_VALUE = 'SPML' AND LIFEHISTORY.COVERAGE_AMOUNT &gt; 0)&#xA;AND PERSON_ID = @PERSON_ID&#xA;AND EXISTS (SELECT 1 FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xA;&#x9;&#x9;&#x9;WHERE PAED.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;AND PAED.PERSON_EMPLOYMENT_DTL_ID &lt;&gt; @PERSON_EMPLOYMENT_DTL_ID&#xA;&#x9;&#x9;&#x9;AND (PED.END_DATE IS NULL OR YEAR(ISNULL(PED.END_DATE,'99991231')) = @EFFECTIVE_YEAR))&#xA;&#xA;UNION&#xA;&#xA;SELECT PA.PERSON_ID FROM SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY PAFCH WITH(NOLOCK)&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PAFCH.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xA;WHERE  YEAR(EFFECTIVE_START_DATE) = @EFFECTIVE_YEAR AND ISNULL(ANNUAL_PLEDGE_AMOUNT,0) &gt; 0&#xA;AND PAFCH.EFFECTIVE_START_DATE &lt;&gt; ISNULL(PAFCH.EFFECTIVE_END_DATE,'12/31/9999')&#xA;AND PAFCH.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL4'&#xA;AND PERSON_ID = @PERSON_ID&#xA;AND EXISTS (SELECT 1 FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xA;&#x9;&#x9;&#x9;WHERE PAED.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;AND PAED.PERSON_EMPLOYMENT_DTL_ID &lt;&gt; @PERSON_EMPLOYMENT_DTL_ID&#xA;&#x9;&#x9;&#x9;AND (PED.END_DATE IS NULL OR YEAR(ISNULL(PED.END_DATE,'99991231')) = @EFFECTIVE_YEAR))">
      <parameters>
        <parameter ID="@EFFECTIVE_YEAR" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetAssociatedEmpDetId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT D.PERSON_EMPLOYMENT_DTL_ID FROM SGT_PERSON_EMPLOYMENT E WITH(NOLOCK)&#xD;&#xA;JOIN SGT_PERSON_EMPLOYMENT_DETAIL D WITH(NOLOCK) ON E.PERSON_EMPLOYMENT_ID = D.PERSON_EMPLOYMENT_ID&#xD;&#xA;JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED WITH(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID = D.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;WHERE E.PERSON_ID = @PERSONID &#xD;&#xA;AND PAED.PERSON_ACCOUNT_ID = @PERSONACCOUNTID &#xD;&#xA;AND PAED.ELECTION_VALUE = 'ENLD'&#xD;&#xA;ORDER BY ISNULL(D.END_DATE, '99991231') DESC">
      <parameters>
        <parameter ID="@PERSONID" sfwDataType="int" />
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckIfBeneficiaryToIsEnrolledInLife" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY HIST ON HIST.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PA.PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID &#xD;&#xA;AND LEVEL_OF_COVERAGE_VALUE = 'SPSL' &#xD;&#xA;AND PA.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;AND EFFECTIVE_START_DATE != EFFECTIVE_END_DATE&#xD;&#xA;AND @DOD BETWEEN EFFECTIVE_START_DATE AND ISNULL(EFFECTIVE_END_DATE,'29001231') &#xD;&#xA;AND PLAN_OPTION_STATUS_VALUE = 'ENLD' AND COVERAGE_AMOUNT &gt; 0">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@DOD" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetEnrollmentData" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; * &#xA;FROM&#xA;&#x9; SGT_ENROLLMENT_DATA &#xA;WHERE&#xA;&#x9; SOURCE_ID = @SOURCEID AND&#xA;&#x9; person_account_id = @PERSONACCOUNTID">
      <parameters>
        <parameter ID="@SOURCEID" sfwDataType="int" />
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="IsEnrolledInDefCompWithActiveProvider" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_DEFERRED_COMP_PROVIDER PROV ON PA.PERSON_ACCOUNT_ID = PROV.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PLAN_ID = 19&#xD;&#xA;AND PLAN_PARTICIPATION_STATUS_VALUE = 'ENL3'&#xD;&#xA;AND PROV.PER_PAY_PERIOD_CONTRIBUTION_AMT &gt; 0 &#xD;&#xA;AND ISNULL(PROV.END_DATE,GETDATE()) &gt;= GETDATE()&#xD;&#xA;AND PROV.START_DATE &lt;&gt; ISNULL(PROV.END_DATE,'99991231')&#xD;&#xA;AND PA.PERSON_ID = @PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="IsEnrolledInDC25" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT HIST.* FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY HIST ON HIST.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PLAN_ID = 30&#xD;&#xA;AND PERSON_ID = @PERSON_ID&#xD;&#xA;AND PA.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL1'&#xD;&#xA;AND @PROVIDER_START_DATE BETWEEN HIST.START_DATE AND ISNULL(HIST.END_DATE, '2900-01-01')&#xD;&#xA;AND HIST.START_DATE != ISNULL(HIST.END_DATE, '2900-01-01')">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PROVIDER_START_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="CheckForDeferredCompEntry" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_ENROLLMENT_DATA &#xD;&#xA;WHERE NDPERS_MEMBER_ID = @PERSON_ID&#xD;&#xA;AND PLAN_ID = 19&#xD;&#xA;AND ((@ADDL_EE_CONTRIBUTION_PERCENT = 0 AND EMPLOYEE_EMPLOYER_MATCH = 'Employer Match up to 3%') OR&#xD;&#xA;(@ADDL_EE_CONTRIBUTION_PERCENT = 1 AND EMPLOYEE_EMPLOYER_MATCH = 'Employer Match up to 2%') OR&#xD;&#xA;(@ADDL_EE_CONTRIBUTION_PERCENT = 2 AND EMPLOYEE_EMPLOYER_MATCH = 'Employer Match up to 1%'))">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@ADDL_EE_CONTRIBUTION_PERCENT" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="IsPreviousEmployerProvidesFlexInCurrentYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ORG_ID FROM SGT_ORG_PLAN &#xD;&#xA;WHERE &#xD;&#xA;&#x9;PLAN_ID = 18 &#xD;&#xA;&#x9;AND ORG_ID = (SELECT TOP 1 ORG_ID FROM SGT_PERSON_EMPLOYMENT WHERE PERSON_ID = @PERSON_ID AND END_DATE IS NOT NULL ORDER BY PERSON_EMPLOYMENT_ID DESC)&#xD;&#xA;&#x9;AND @EFFECTIVE_YEAR BETWEEN YEAR(PARTICIPATION_START_DATE) AND YEAR(ISNULL(PARTICIPATION_END_DATE, CAST('12/31/9999' AS DATETIME)))">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@EFFECTIVE_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="IsCurrentEmployerProvidesFlexInCurrentYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ORG_ID FROM SGT_ORG_PLAN &#xD;&#xA;WHERE &#xD;&#xA;&#x9;PLAN_ID = 18 &#xD;&#xA;&#x9;AND ORG_ID = (SELECT TOP 1 ORG_ID FROM SGT_PERSON_EMPLOYMENT WHERE PERSON_ID = @PERSON_ID AND END_DATE IS NULL ORDER BY 1 DESC)&#xD;&#xA;&#x9;AND @EFFECTIVE_YEAR BETWEEN YEAR(PARTICIPATION_START_DATE) AND YEAR(ISNULL(PARTICIPATION_END_DATE, CAST('12/31/9999' AS DATETIME)))">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@EFFECTIVE_YEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateDC25ElectionForDefComp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_ENROLLMENT_DATA SET IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y', PEOPLESOFT_FILE_SENT_FLAG = 'Y'&#xD;&#xA;WHERE &#xD;&#xA;PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID&#xD;&#xA;AND START_DATE = @START_DATE&#xD;&#xA;AND PROVIDER_ORG_ID IS NULL&#xD;&#xA;AND (IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N' OR PEOPLESOFT_FILE_SENT_FLAG = 'N')">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@START_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="DC25ReminderLetter" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_ACCOUNT PA (NOLOCK)&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED (NOLOCK)&#xA;ON PAED.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID AND PAED.PLAN_ID = 30 AND PAED.ELECTION_VALUE = 'ENLD'&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED (NOLOCK)&#xA;ON PED.PERSON_EMPLOYMENT_DTL_ID = PAED.PERSON_EMPLOYMENT_DTL_ID&#xA;WHERE PA.PLAN_ID = 30 AND PA.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL1' AND PA.ADDL_EE_CONTRIBUTION_PERCENT IS NULL AND PED.TYPE_VALUE = 'PERM' AND &#xA;DATEADD(D,13,PA.START_DATE) &lt;= (SELECT BATCH_DATE FROM SGS_SYSTEM_MANAGEMENT)&#xA;AND ISNULL(PA.DC25_Reminder_Letter_Flag, 'N') = 'N'">
      <parameters />
    </query>
  </queries>
  <attributes>
    <attribute ID="PersonAccountId" sfwType="Column" sfwValue="person_account_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="True" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PersonId" sfwType="Column" sfwValue="person_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PlanId" sfwType="Column" sfwValue="plan_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="StartDate" sfwType="Column" sfwValue="start_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="EndDate" sfwType="Column" sfwValue="end_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ProviderOrgId" sfwType="Column" sfwValue="provider_org_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PlanParticipationStatusDescription" sfwType="Description" sfwValue="plan_participation_status_description" />
    <attribute ID="PlanParticipationStatusId" sfwType="Column" sfwValue="plan_participation_status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="337" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PlanParticipationStatusValue" sfwType="Column" sfwValue="plan_participation_status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="StatusDescription" sfwType="Description" sfwValue="status_description" />
    <attribute ID="StatusId" sfwType="Column" sfwValue="status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="336" sfwDataType="int" sfwRequired="False" />
    <attribute ID="StatusValue" sfwType="Column" sfwValue="status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="FromPersonAccountId" sfwType="Column" sfwValue="from_person_account_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="ToPersonAccountId" sfwType="Column" sfwValue="to_person_account_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="SuppressWarningsFlag" sfwType="Column" sfwValue="suppress_warnings_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="SuppressWarningsBy" sfwType="Column" sfwValue="suppress_warnings_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="SuppressWarningsDate" sfwType="Column" sfwValue="suppress_warnings_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="HistoryChangeDate" sfwType="Column" sfwValue="history_change_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="CobraExpirationDate" sfwType="Column" sfwValue="cobra_expiration_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="PeopleSoftFileSentFlag" sfwType="Column" sfwValue="people_soft_file_sent_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="RmdBatchInitiatedFlag" sfwType="Column" sfwValue="rmd_batch_initiated_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DefCompMonthLetterFlag" sfwType="Column" sfwValue="def_comp_month_letter_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DefCompYearlyLetterFlag" sfwType="Column" sfwValue="def_comp_yearly_letter_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="ReasonDescription" sfwType="Description" sfwValue="reason_description" />
    <attribute ID="ReasonId" sfwType="Column" sfwValue="reason_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="332" sfwDataType="int" sfwRequired="False" />
    <attribute ID="ReasonValue" sfwType="Column" sfwValue="reason_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="NpspFlexcompFlag" sfwType="Column" sfwValue="npsp_flexcomp_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="NpspFlexcompChangeDate" sfwType="Column" sfwValue="npsp_flexcomp_change_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="PsFileChangeEventDescription" sfwType="Description" sfwValue="ps_file_change_event_description" />
    <attribute ID="PsFileChangeEventId" sfwType="Column" sfwValue="ps_file_change_event_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="368" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PsFileChangeEventValue" sfwType="Column" sfwValue="ps_file_change_event_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="NoBeneSent" sfwType="Column" sfwValue="no_bene_sent" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" />
    <attribute sfwDataType="int" sfwType="Property" ID="UHPersonID" sfwValue="UH_Person_ID" />
    <attribute sfwDataType="int" sfwType="Property" ID="UHPlanID" sfwValue="UH_Plan_ID" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="UHOldChangeDate" sfwValue="UH_Old_Change_Date" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="UHNewChangeDate" sfwValue="UH_New_Change_Date" />
    <attribute sfwDataType="int" sfwType="Property" ID="UHLVLCOVERAGE" sfwValue="UH_LVL_COVERAGE" />
    <attribute ID="objPlan" sfwType="Object" sfwEntity="entPlan" sfwValue="ibusPlan" />
    <attribute ID="objPerson" sfwType="Object" sfwEntity="entPerson" sfwValue="ibusPerson" />
    <attribute ID="objPersonAccountRetirement" sfwType="Object" sfwEntity="entPersonAccountRetirement" sfwValue="ibusPersonAccountRetirement" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="CurrentPlanStartDate" sfwValue="icdoPersonAccount.current_plan_start_date" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="DerivedPlanStartDate" sfwValue="icdoPersonAccount.derived_plan_start_date" />
    <attribute ID="objProvider" sfwType="Object" sfwEntity="entOrganization" sfwValue="ibusProvider" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtMemberPlanSummaryEffectiveDate" sfwValue="idtMemberPlanSummaryEffectiveDate" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberPlanSummaryCurrentPremiumAmt" sfwValue="idecMemberPlanSummaryCurrentPremiumAmt" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberPlanSummaryRhicAmt" sfwValue="idecMemberPlanSummaryRhicAmt" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberPlanSummaryNetPremiumAmt" sfwValue="idecMemberPlanSummaryNetPremiumAmt" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountInsuranceContribution" ID="lstInsuranceContribution" sfwValue="iclbInsuranceContribution" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrProviderOrgName" sfwValue="istrProviderOrgName" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMSSMonthlyPremiumAmount" sfwValue="idecMSSMonthlyPremiumAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="EmployerName" sfwValue="icdoPersonAccount.EmployerName" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrStartDate" sfwValue="icdoPersonAccount.istrStartDate" />
    <attribute sfwDataType="int" sfwType="Property" ID="PersonEmploymentDtlId" sfwValue="icdoPersonAccount.person_employment_dtl_id" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrNextBenefitPaymentDateAfter30Days" sfwValue="istrNextBenefitPaymentDateAfter30Days" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrLastContributedDate" sfwValue="istrLastContributedDate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrImage" sfwValue="istrImage" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalTIAA" sfwValue="idecTotalTIAA" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrSupendendStartDateLongDate" sfwValue="istrSupendendStartDateLongDate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsPlan457" sfwValue="istrIsPlan457" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsPlanDC" sfwValue="istrIsPlanDC" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrdtEnrollmentEndDate" sfwValue="istrdtEnrollmentEndDate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrdtEnrollmentStartDate" sfwValue="istrdtEnrollmentStartDate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrLastDayofCurrentMonthFormatted" sfwValue="istrLastDayofCurrentMonthFormatted" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrFirstofNextMonthFormatted" sfwValue="istrFirstofNextMonthFormatted" />
    <attribute sfwDataType="string" sfwType="Property" ID="Premiummonth" sfwValue="premiummonth" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDueAmount" sfwValue="idecDueAmount" />
    <attribute ID="objPersonAccountGHDV" sfwType="Object" sfwEntity="entPersonAccountGhdv" sfwValue="ibusPersonAccountGHDV" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrFirstofCurrentMonthFormatted" sfwValue="istrFirstofCurrentMonthFormatted" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPremiumDueDate" sfwValue="istrPremiumDueDate" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="LdclTotalCOBRAPremiumAmount" sfwValue="ldclTotalCOBRAPremiumAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="ChangeEffectiveDateMinusOneday" sfwValue="icdoPersonAccount.change_effective_date_minus_oneday" />
    <attribute ID="objPersonEmploymentDetail" sfwType="Object" sfwEntity="entPersonEmploymentDetail" sfwValue="ibusPersonEmploymentDetail" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtEnrolmentEndPlusONeDay" sfwValue="idtEnrolmentEndPlusONeDay" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrCoverageCode" sfwValue="istrCoverageCode" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMonthlyPremiumAmountByPlan" sfwValue="idecMonthlyPremiumAmountByPlan" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrCoverageBeginDateLongFormat" sfwValue="istrCoverageBeginDateLongFormat" />
    <attribute sfwDataType="string" sfwType="Property" ID="CobraExpirationDateLongFormatted" sfwValue="icdoPersonAccount.cobra_expiration_date_long_formatted" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountInsuranceContribution" ID="lstOriginalInsuranceContribution" sfwValue="iclbOriginalInsuranceContribution" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalPSCRounded" sfwValue="idecTotalPSC_Rounded" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalVSCRounded" sfwValue="idecTotalVSC_Rounded" />
    <attribute ID="IstrBankName" sfwDataType="string" sfwPrivate="False" sfwValue="istrBankName" sfwType="Property" />
    <attribute ID="IstrAccountType" sfwDataType="string" sfwPrivate="False" sfwValue="istrAccountType" sfwType="Property" />
    <attribute ID="IstrAccountNumber" sfwDataType="string" sfwPrivate="False" sfwValue="istrAccountNumber" sfwType="Property" />
    <attribute ID="IdtACHStartDate" sfwDataType="string" sfwPrivate="False" sfwValue="idtACHStartDate" sfwType="Property" />
    <attribute ID="IstrCapitalPlanName" sfwDataType="string" sfwPrivate="False" sfwValue="istrCapitalPlanName" sfwType="Property" />
    <attribute ID="IstrIsEnrolledInCY" sfwDataType="string" sfwPrivate="False" sfwValue="icdoPersonAccount.istrIsEnrolledInCY" sfwType="Property" />
    <attribute ID="IstrIsEnrolledInCYMinus1" sfwDataType="string" sfwPrivate="False" sfwValue="icdoPersonAccount.istrIsEnrolledInCYMinus1" sfwType="Property" />
    <attribute ID="IstrIsEnrolledInCYMinus2" sfwDataType="string" sfwPrivate="False" sfwValue="icdoPersonAccount.istrIsEnrolledInCYMinus2" sfwType="Property" />
    <attribute ID="IstrIsEnrolledInCYMinus3" sfwDataType="string" sfwPrivate="False" sfwValue="icdoPersonAccount.istrIsEnrolledInCYMinus3" sfwType="Property" />
    <attribute ID="IstrPlanNameForGrid" sfwDataType="string" sfwPrivate="False" sfwValue="icdoPersonAccount.istrPlanNameForGrid" sfwType="Property" />
    <attribute ID="IstrCurrentEnrollmentStatus" sfwDataType="string" sfwPrivate="False" sfwValue="icdoPersonAccount.istrCurrentEnrollmentStatus" sfwType="Property" />
    <attribute ID="PremiumDueDate" sfwDataType="datetime" sfwPrivate="False" sfwValue="ldtmPremiumDueDate" sfwType="Property" />
    <attribute ID="AddlEEContributionPercent" sfwType="Column" sfwValue="addl_ee_contribution_percent" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="AddlEEContributionPercentTemp" sfwType="Column" sfwValue="addl_ee_contribution_percent_temp" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="AddlEEContributionPercentEndDate" sfwType="Column" sfwValue="addl_ee_contribution_percent_end_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="datetime" sfwRequired="False" />
    <attribute ID="AddlEEContributionPercentTempEndDate" sfwType="Column" sfwValue="addl_ee_contribution_percent_temp_end_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="datetime" sfwRequired="False" />
    <attribute ID="objHb1040Communication" sfwType="Object" sfwEntity="entHB1040Communication" sfwPrivate="False" sfwValue="ibusHb1040Communication" />
    <attribute ID="IstrAddlEEContributionPercentZero" sfwDataType="string" sfwPrivate="False" sfwValue="istrAddl_ee_contribution_percent_zero" sfwType="Property" />
    <attribute ID="IstrAddlEEContributionPercentTempZero" sfwDataType="string" sfwPrivate="False" sfwValue="istrAddl_ee_contribution_percent_Temp_zero" sfwType="Property" />
    <attribute ID="IstrAddlEEContributionPercentPermZero" sfwDataType="string" sfwPrivate="False" sfwValue="istrAddl_ee_contribution_percent_Perm_zero" sfwType="Property" />
    <attribute sfwValue="dc25_reminder_letter_flag" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="char" sfwLength="1" sfwIsNull="True" ID="Dc25ReminderLetterFlag" sfwCaption="Dc25 Reminder Letter Flag" />
  </attributes>
  <objectmethods>
    <method ID="btn_Update_History" sfwReturnType="ArrayList" />
    <method ID="LoadChangeReason" sfwReturnType="Collection" sfwEntity="entCodeValue">
      <parameters />
    </method>
  </objectmethods>
  <constraint />
  <methods />
  <lifecycle />
  <ExtraFields />
</entity>