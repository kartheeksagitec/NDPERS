<?xml version="1.0" encoding="utf-8"?>
<entity ID="entPersonAccountFlexComp" sfwActive="True" sfwStatus="Valid" sfwType="BusinessRule" sfwErrorTable="sgt_person_account_error" sfwParentKey="person_account_id" sfwParentKeyValue="icdoPersonAccountFlexComp.person_account_id" sfwMainCDO="icdoPersonAccount" sfwStatusColumn="status_value" sfwObjectID="busPersonAccountFlexComp" sfwTableName="sgt_person_account_flex_comp" sfwView="False" sfwParentEntity="entPersonAccount">
  <rules>
    <rule ID="AtleastOneLevelOfCoverageSelected" sfwMessageId="6645" sfwExpression="(this.CheckAtleastLevelOfCovergeSelected() == False)" sfwObjectBased="True" />
    <rule ID="DoesEmployerSupportInsideMail" sfwMessageId="6522" sfwExpression="!(this.icdoPersonAccount.person_employment_dtl_id == 0) &amp;&amp; &#xA;(this.icdoPersonAccountFlexComp.inside_mail_flag == &quot;Y&quot;) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPersonEmploymentDetail.ibusPersonEmployment.ibusOrganization.icdoOrganization.interoffice_mail_flag&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="IfFlexCompTypeNotSelected" sfwMessageId="6659" sfwExpression="(string.IsNullOrEmpty(this.icdoPersonAccountFlexComp.flex_comp_type_value))" sfwObjectBased="True" />
    <rule ID="IsAnnualPledgeAmountExceedTheLimit" sfwMessageId="6531" sfwExpression="(this.IsAnnualPledgeAmountExceedTheLimit() == True)" sfwObjectBased="True" />
    <rule ID="IsDependentSpendingAccountNotPermittedForCOBRA" sfwMessageId="6565" sfwExpression="(this.CheckDependentSpendingAccountIsNotPermittedforCOBRA() == True)" sfwObjectBased="True" />
    <rule ID="IsEffectiveStartDatevalidToOrgPlanDate" sfwMessageId="6523" sfwExpression="!(this.icdoPersonAccount.person_employment_dtl_id == 0) &amp;&amp; &#xA;(this.IsEffectiveStartDateValidComparingToOrgPlan() == False)" sfwObjectBased="True" />
    <rule ID="IsEndDateLessThanPreviousHistoryDate" sfwMessageId="5027" sfwExpression="!(this.istrAllowOverlapHistory == &quot;Y&quot;) &amp;&amp; &#xA;(this.IsEndDateLessThanPreviousHistoryDate() == True)" sfwObjectBased="True" />
    <rule ID="IsHealthAccountExistsDuringMSRA" sfwMessageId="7803" sfwExpression="(this.IsHealthAccountExistsDuringMSRA() == True)" sfwObjectBased="True" />
    <rule ID="IsHistoryChangeDateLessThanLastChangeDate" sfwMessageId="5026" sfwExpression="(this.IsHistoryEntryRequired == True) &amp;&amp; &#xA;(this.IsHistoryChangeDateLessThanLastChangeDate() == True)&#xA;&amp;&amp; &#xA;!(this.istrAllowOverlapHistory == &quot;Y&quot;) &amp;&amp; &#xA;(this.icdoPersonAccount.history_change_date &lt; RFunc.GetValue&lt;DateTime&gt;(this, &quot;ibusHistory.icdoPersonAccountFlexCompHistory.effective_start_date&quot;))" sfwObjectBased="True" />
    <rule ID="IsLateEnrollment" sfwMessageId="6536" sfwExpression="(this.IsPostEnrollmentDate() == True) &amp;&amp; &#xA;!(this.icdoPersonAccountFlexComp.reason_value == &quot;ANNE&quot;)" sfwObjectBased="True" />
    <rule ID="IsMedicareandDependentEnrollmentDateInvalid" sfwMessageId="6521" sfwExpression="!(this.icdoPersonAccount.person_employment_dtl_id == 0) &amp;&amp; &#xA;(this.IsDependentOrMedicareEnrollmentDateValid() == False)" sfwObjectBased="True" />
    <rule ID="IsMedicareOrDependentEnrollmentDateExceed60days" sfwMessageId="6519" sfwExpression="!(this.icdoPersonAccount.person_employment_dtl_id == 0) &amp;&amp; &#xA;!(this.icdoPersonAccountFlexComp.reason_value == &quot;ANNE&quot;) &amp;&amp; &#xA;(this.IsDependentOrMedicareEnrollmentDateExceed60Days() == True)" sfwObjectBased="True" />
    <rule ID="IsPlanParticipationStatusCancelledAndPremiunWaiverChecked" sfwMessageId="6526" sfwExpression="(this.icdoPersonAccount.plan_participation_status_value == &quot;CAN4&quot;) &amp;&amp; &#xA;(this.icdoPersonAccountFlexComp.premium_conversion_waiver_flag == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="IsReasonValueNull" sfwMessageId="7109" sfwExpression="(string.IsNullOrEmpty(this.icdoPersonAccountFlexComp.reason_value))" sfwObjectBased="True" />
    <rule ID="IsRulesSelected" sfwMessageId="6683" sfwExpression="!(this.icdoPersonAccountFlexComp.reason_value == &quot;ANNE&quot;) &amp;&amp; &#xA;(!string.IsNullOrEmpty(this.icdoPersonAccountFlexComp.reason_value))" sfwObjectBased="True" />
    <rule ID="IsSameSpendingAccountEnrolledMoreThanOnce" sfwMessageId="6665" sfwExpression="(this.IsSameSpendingAccountEnrolledMoreThanOnce() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForDentalLabelNo" sfwExpression="!(this.iintDentalPersonAccountID != 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForDentalLinkYes" sfwExpression="(this.iintDentalPersonAccountID != 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForLifeInsuranceLabelNo" sfwExpression="!(this.iintLifePersonAccountID != 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForLifeInsuranceLinkYes" sfwExpression="(this.iintLifePersonAccountID != 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForVisionLabelNo" sfwExpression="!(this.iintVisionPersonAccountID != 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForVisionLinkYes" sfwExpression="(this.iintVisionPersonAccountID != 0)" sfwObjectBased="True" />
    <rule ID="FlexPlanStartDateShouldBeWithin31DaysOfEmployment" sfwRuleType="Validation" sfwExpression="(this.IsFlexCompEnrollmentDateExceed31Days() == True)" sfwMessageId="6622" sfwObjectBased="True" />
    <rule ID="IsMoreThanOneEnrolledInOverlapHistory" sfwRuleType="Validation" sfwObjectBased="False" sfwMessageId="7132" sfwExpression="(this.istrAllowOverlapHistory == &quot;Y&quot;) &amp;&amp; &#xA;(this.IsMoreThanOneEnrolledInOverlapHistory() == True)" />
    <rule ID="IsStartDatePriortoEnrollmentEffeDate" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(!(this.icdoPersonAccount.history_change_date == DateTime.MinValue) &amp;&amp; &#xA;(this.icdoPersonAccount.plan_participation_status_value == &quot;ENL4&quot;) &amp;&amp;&#xA;(this.icdoPersonAccountFlexComp.flex_comp_type_value == &quot;ACTV&quot;) &amp;&amp; (this.IsStartDatePriortoEnrollmentEffeDate()))" sfwMessageId="10457" />
    <rule ID="IsPersonEnrolledAsActive" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.icdoPersonAccountFlexComp.reason_value != &quot;ANNE&quot;) &amp;&amp; &#xA;(this.IsMemberEligibleToEnrollInFlexInCurrentYear())" sfwMessageId="10462" />
    <rule ID="IsMemberEligibleToPreTaxProviders" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="IsMemberEligibleToPreTaxProviders() == true" sfwMessageId="10462" />
  </rules>
  <delete />
  <checklist />
  <initialload>
    <item ID="VisibleRuleForDentalLinkYes" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForLifeInsuranceLabelNo" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForLifeInsuranceLinkYes" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForDentalLabelNo" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForVisionLinkYes" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForVisionLabelNo" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForOverlap" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror>
    <item ID="IsMedicareOrDependentEnrollmentDateExceed60days" sfwMode="All" sfwStatus="Inactive" />
    <item ID="IsPlanParticipationStatusCancelledAndPremiunWaiverChecked" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRulesSelected" sfwMode="All" sfwStatus="Active" />
    <item ID="IsLateEnrollment" sfwMode="All" sfwStatus="Active" />
    <item ID="IsReasonValueNull" sfwMode="All" sfwStatus="Active" />
    <item ID="FlexPlanStartDateShouldBeWithin31DaysOfEmployment" sfwStatus="Active" sfwMode="All" />
  </softerror>
  <harderror>
    <item ID="IsPersonAgeLessThan18" sfwMode="New" sfwStatus="Active" />
    <item ID="IsPlanParticipationStatusNull" sfwMode="All" sfwStatus="Active" />
    <item ID="IsMedicareandDependentEnrollmentDateInvalid" sfwMode="All" sfwStatus="Active" />
    <item ID="DoesEmployerSupportInsideMail" sfwMode="All" sfwStatus="Active" />
    <item ID="IsEffectiveStartDatevalidToOrgPlanDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsAnnualPledgeAmountExceedTheLimit" sfwMode="All" sfwStatus="Active" />
    <item ID="AtleastOneLevelOfCoverageSelected" sfwMode="New" sfwStatus="Active" />
    <item ID="IsDependentSpendingAccountNotPermittedForCOBRA" sfwMode="All" sfwStatus="Active" />
    <item ID="IsHistoryChangeDateRequired" sfwMode="All" sfwStatus="Active" />
    <item ID="IsEndDateLessThanPreviousHistoryDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsHistoryChangeDateLessThanLastChangeDate" sfwMode="All" sfwStatus="Inactive" />
    <item ID="CheckOrgPlanValidForPersonAccountStartDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IfFlexCompTypeNotSelected" sfwMode="All" sfwStatus="Active" />
    <item ID="IsHealthAccountExistsDuringMSRA" sfwMode="All" sfwStatus="Active" />
    <item ID="IsMoreThanOneEnrolledInOverlapHistory" sfwMode="All" sfwStatus="Active" />
    <item ID="IsStartDatePriortoEnrollmentEffeDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPersonEnrolledAsActive" sfwMode="All" sfwStatus="Active" />

    <item ID="IsMemberEligibleToPreTaxProviders" sfwMode="All" sfwStatus="Active" />
    <item ID="IsSameSpendingAccountEnrolledMoreThanOnce" sfwMode="Update" sfwStatus="Active" />
  </harderror>
  <validatedelete />
  <groupslist />
  <updateablecdo />
  <commonproperties />
  <expressionfields />
  <queries>
    <query ID="GetLatestHistoryRecordByLevelOfCoverage" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY WHERE PERSON_ACCOUNT_FLEX_COMP_HISTORY_ID IN(&#xD;&#xA;select max(PERSON_ACCOUNT_FLEX_COMP_HISTORY_ID) as PERSON_ACCOUNT_FLEX_COMP_HISTORY_ID&#xD;&#xA; from dbo.SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY  &#xD;&#xA; where person_account_id = @PersonAccountID&#xD;&#xA;  group by level_of_coverage_value&#xD;&#xA;)&#xD;&#xA;">
      <parameters>
        <parameter ID="@PersonAccountID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptNonPeopleSoftEmployeesReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;PER.PERSON_ID AS 'PERSLINKID',&#xD;&#xA;PER.PEOPLESOFT_ID AS 'PEOPLESOFTID',&#xD;&#xA;ISNULL(LAST_NAME,'') + ',' + ISNULL(FIRST_NAME,'') + ' ' + ISNULL(MIDDLE_NAME,'') AS 'NAME',&#xD;&#xA;ORG.ORG_CODE AS 'ORGCODEID',&#xD;&#xA;ORG.ORGGROUPVALUE AS 'ORGGROUPVALUE',&#xD;&#xA;NPSP_FLEXCOMP_CHANGE_DATE AS 'DATEOFCHANGE',&#xD;&#xA;ACC.*&#xD;&#xA;FROM SGT_PERSON_ACCOUNT ACC &#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON ACC.PERSON_ID=PER.PERSON_ID AND PLAN_ID=18&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA; SELECT  ORG_CODE,CV.[DESCRIPTION] 'ORGGROUPVALUE',ACCEMPDET.PERSON_ACCOUNT_ID,&#xD;&#xA; ROW_NUMBER() OVER (PARTITION BY ACCEMPDET.PERSON_ACCOUNT_ID ORDER BY ACCEMPDET.PERSON_ACCOUNT_ID,&#xD;&#xA;        EMP.START_DATE DESC,EMPDET.START_DATE DESC) AS ROWRANK &#xD;&#xA; FROM SGT_ORGANIZATION ORG (NOLOCK) &#xD;&#xA; INNER JOIN SGT_PERSON_EMPLOYMENT EMP (NOLOCK) ON ORG.ORG_ID=EMP.ORG_ID&#xD;&#xA; INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET (NOLOCK) ON EMPDET.PERSON_EMPLOYMENT_ID=EMP.PERSON_EMPLOYMENT_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL ACCEMPDET (NOLOCK) ON EMPDET.PERSON_EMPLOYMENT_DTL_ID=ACCEMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA; LEFT JOIN SGS_CODE_VALUE CV (NOLOCK) ON CV.CODE_ID=364 AND CV.CODE_VALUE=ORG.PEOPLESOFT_ORG_GROUP_VALUE&#xD;&#xA;) AS ORG ON ORG.PERSON_ACCOUNT_ID = ACC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE ISNULL(NPSP_FLEXCOMP_FLAG,'N')='Y' AND &#xD;&#xA;(CONVERT(VARCHAR, NPSP_FLEXCOMP_CHANGE_DATE, 101)) &lt;= @BATCH_RUN_DATE AND &#xD;&#xA;ROWRANK = 1&#xD;&#xA;ORDER BY ORGGROUPVALUE, NAME">
      <parameters>
        <parameter ID="@BATCH_RUN_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptNonPeopleSoftEmployeesReportForOnlineReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;PER.PERSON_ID AS 'PERSLINKID',&#xD;&#xA;PER.PEOPLESOFT_ID AS 'PEOPLESOFTID',&#xD;&#xA;ISNULL(LAST_NAME,'') + ',' + ISNULL(FIRST_NAME,'') + ' ' + ISNULL(MIDDLE_NAME,'') AS 'NAME',&#xD;&#xA;ORG.ORG_CODE AS 'ORGCODEID',&#xD;&#xA;ORG.ORGGROUPVALUE AS 'ORGGROUPVALUE',&#xD;&#xA;NPSP_FLEXCOMP_CHANGE_DATE AS 'DATEOFCHANGE',&#xD;&#xA;ACC.*&#xD;&#xA;FROM SGT_PERSON_ACCOUNT ACC &#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON ACC.PERSON_ID=PER.PERSON_ID AND PLAN_ID=18&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA; SELECT  ORG_CODE,CV.[DESCRIPTION] 'ORGGROUPVALUE',ACCEMPDET.PERSON_ACCOUNT_ID,&#xD;&#xA; ROW_NUMBER() OVER (PARTITION BY ACCEMPDET.PERSON_ACCOUNT_ID ORDER BY ACCEMPDET.PERSON_ACCOUNT_ID,&#xD;&#xA;        EMP.START_DATE DESC,EMPDET.START_DATE DESC) AS ROWRANK &#xD;&#xA; FROM SGT_ORGANIZATION ORG (NOLOCK) &#xD;&#xA; INNER JOIN SGT_PERSON_EMPLOYMENT EMP (NOLOCK) ON ORG.ORG_ID=EMP.ORG_ID&#xD;&#xA; INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET (NOLOCK) ON EMPDET.PERSON_EMPLOYMENT_ID=EMP.PERSON_EMPLOYMENT_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL ACCEMPDET (NOLOCK) ON EMPDET.PERSON_EMPLOYMENT_DTL_ID=ACCEMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA; LEFT JOIN SGS_CODE_VALUE CV (NOLOCK) ON CV.CODE_ID=364 AND CV.CODE_VALUE=ORG.PEOPLESOFT_ORG_GROUP_VALUE&#xD;&#xA;) AS ORG ON ORG.PERSON_ACCOUNT_ID = ACC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE ISNULL(NPSP_FLEXCOMP_FLAG,'N')='Y' AND &#xD;&#xA;(CONVERT(VARCHAR, NPSP_FLEXCOMP_CHANGE_DATE, 101)) &lt;= GETDATE() AND &#xD;&#xA;ROWRANK = 1&#xD;&#xA;ORDER BY ORGGROUPVALUE, NAME">
      <parameters />
    </query>
    <query ID="GetLatestHistoryRecord" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY WHERE PERSON_ACCOUNT_FLEX_COMP_HISTORY_ID IN(&#xD;&#xA;select max(PERSON_ACCOUNT_FLEX_COMP_HISTORY_ID) as PERSON_ACCOUNT_FLEX_COMP_HISTORY_ID&#xD;&#xA; from dbo.SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY  &#xD;&#xA; where person_account_id = @PersonAccountID&#xD;&#xA;)&#xD;&#xA;">
      <parameters>
        <parameter ID="@PersonAccountID" />
      </parameters>
    </query>
    <query ID="GetAllNonEndDatePersonAccountFlexCompByYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT PA.* FROM SGT_PERSON_ACCOUNT_FLEX_COMP PAFC WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY PAFCH WITH(NOLOCK) ON PAFC.PERSON_ACCOUNT_ID = PAFCH.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = PAFC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PAFCH.LEVEL_OF_COVERAGE_VALUE IN ('MSRA','DCRA')&#xD;&#xA;AND DATEPART(YEAR,PAFCH.EFFECTIVE_START_DATE) = @year&#xD;&#xA;AND PAFCH.EFFECTIVE_END_DATE IS NULL&#xD;&#xA;AND PA.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL4'&#xD;&#xA;--AND PAFCH.ANNUAL_PLEDGE_AMOUNT IS NOT NULL PIR 13006&#xD;&#xA;Union ALL&#xD;&#xA;select Distinct PA.* from sgt_person_account_ghdv PAG &#xD;&#xA;inner join sgt_person_account_ghdv_history PAGH on PAG.PERSON_ACCOUNT_GHDV_ID =PAGH.PERSON_ACCOUNT_GHDV_ID &#xD;&#xA;inner join sgt_person_account PA on PA.person_account_id = PAG.person_account_id&#xD;&#xA;where &#xD;&#xA;PAGH.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y'&#xD;&#xA;and DATEPART(YEAR,PAGH.START_DATE) = @year &#xD;&#xA;AND PAGH.End_date IS NULL&#xD;&#xA;AND PA.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;AND PAG.COBRA_TYPE_VALUE is NULL">
      <parameters>
        <parameter ID="@year" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="DeleteFromWSSFlexCompConversion" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="delete from SGT_WSS_PERSON_ACCOUNT_FLEX_COMP_CONVERSION WHERE TARGET_PERSON_ACCOUNT_FLEX_COMP_CONVERSION_ID = @WSSFlexCompConversionID">
      <parameters>
        <parameter ID="@wssflexcompconversionid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="fleFlexCompFileToSanford" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xD;&#xA;&#x9;&#x9;P.SSN,P.FIRST_NAME,P.MIDDLE_NAME,P.LAST_NAME&#xD;&#xA;FROM&#xD;&#xA;&#x9;&#x9;dbo.sgt_person_base AS P WITH(NOLOCK) INNER JOIN&#xD;&#xA;&#x9;&#x9;dbo.SGT_PERSON_ACCOUNT AS PA WITH(NOLOCK) ON P.PERSON_ID = PA.PERSON_ID INNER JOIN&#xD;&#xA;&#x9;&#x9;dbo.SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY AS PAFCH WITH(NOLOCK) ON pa.PERSON_ACCOUNT_ID = PAFCH.PERSON_ACCOUNT_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9;&#x9;((PAFCH.ANNUAL_PLEDGE_AMOUNT &gt; 0 AND PAFCH.ANNUAL_PLEDGE_AMOUNT IS NOT NULL) &#xD;&#xA;&#x9;&#x9;&#x9;AND (PAFCH.LEVEL_OF_COVERAGE_VALUE = 'MSRA') &#xD;&#xA;&#x9;&#x9;&#x9;AND (PAFCH.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL4') &#xD;&#xA;&#x9;&#x9;&#x9;AND (PAFCH.EFFECTIVE_START_DATE IS NOT NULL) &#xD;&#xA;&#x9;&#x9;&#x9;AND (PAFCH.EFFECTIVE_END_DATE IS NULL))&#xD;&#xA;&#x9;OR  &#xD;&#xA;&#x9;&#x9;((PAFCH.ANNUAL_PLEDGE_AMOUNT &gt; 0 AND PAFCH.ANNUAL_PLEDGE_AMOUNT IS NOT NULL) &#xD;&#xA;&#x9;&#x9;&#x9;AND (PAFCH.LEVEL_OF_COVERAGE_VALUE = 'MSRA') &#xD;&#xA;&#x9;&#x9;&#x9;AND (PAFCH.PLAN_PARTICIPATION_STATUS_VALUE = 'SUS4')  &#xD;&#xA;&#x9;&#x9;&#x9;AND (PAFCH.EFFECTIVE_END_DATE &gt; GETDATE ()))&#xD;&#xA;&#x9;AND PAFCH.EFFECTIVE_START_DATE != PAFCH.EFFECTIVE_END_DATE&#xD;&#xA;GROUP BY &#xD;&#xA;&#x9;&#x9;P.SSN,P.FIRST_NAME,P.MIDDLE_NAME,P.LAST_NAME                    &#xD;&#xA;ORDER BY &#xD;&#xA;&#x9;&#x9;P.SSN">
      <parameters />
    </query>
    <query ID="GetPreTaxEnrollmentStatusForPlans" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--VARIABLES FOR INSERTION&#xD;&#xA;DECLARE @PLAN VARCHAR(10), @FLAG1 CHAR, @FLAG2 CHAR, @FLAG3 CHAR, @FLAG4 CHAR&#xD;&#xA;&#xD;&#xA;-- CREATE TEMP TABLE&#xD;&#xA;CREATE TABLE TEMP1 (&#xD;&#xA;&#x9;ID INT IDENTITY(1,1),&#xD;&#xA;&#x9;PERSON_ACCOUNT_ID INT NULL,&#xD;&#xA;&#x9;PLAN_ID INT,&#xD;&#xA;&#x9;istrPlanNameForGrid VARCHAR(MAX) NULL,&#xD;&#xA;&#x9;istrIsEnrolledInCY CHAR(1), &#xD;&#xA;&#x9;istrIsEnrolledInCYMinus1 CHAR(1),&#xD;&#xA;&#x9;istrIsEnrolledInCYMinus2 CHAR(1),&#xD;&#xA;&#x9;istrIsEnrolledInCYMinus3 CHAR(1),&#xD;&#xA;&#x9;istrCurrentEnrollmentStatus VARCHAR(MAX)&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;INSERT INTO TEMP1(PERSON_ACCOUNT_ID, PLAN_ID, istrPlanNameForGrid, istrIsEnrolledInCY, istrIsEnrolledInCYMinus1, istrIsEnrolledInCYMinus2, istrIsEnrolledInCYMinus3, istrCurrentEnrollmentStatus)&#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;&#x9;PA.PERSON_ACCOUNT_ID,&#xD;&#xA;&#x9;PA.PLAN_ID,&#xD;&#xA;&#x9;PL.PLAN_NAME AS istrPlanNameForGrid, &#xD;&#xA;&#x9;'N' AS istrIsEnrolledInCY, &#xD;&#xA;&#x9;'N' AS istrIsEnrolledInCYMinus1,&#xD;&#xA;&#x9;'N' AS istrIsEnrolledInCYMinus2,&#xD;&#xA;&#x9;'N' AS istrIsEnrolledInCYMinus3,&#xD;&#xA;&#x9;CV1.DESCRIPTION AS istrCurrentEnrollmentStatus&#xD;&#xA;FROM &#xD;&#xA;&#x9;SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;INNER JOIN SGT_PLAN PL ON PA.PLAN_ID = PL.PLAN_ID&#xD;&#xA;&#x9;INNER JOIN SGS_CODE_VALUE CV1 ON CV1.CODE_ID = PA.PLAN_PARTICIPATION_STATUS_ID AND CV1.CODE_VALUE = PA.PLAN_PARTICIPATION_STATUS_VALUE&#xD;&#xA;WHERE &#xD;&#xA;&#x9;PL.PLAN_ID IN (16,17,13)&#xD;&#xA;&#x9;AND PERSON_ID = @PersID&#xD;&#xA;)&#xD;&#xA;--&#xD;&#xA;--INSERT MISSING PLAN ROWS INTO TEMP TABLE&#xD;&#xA;IF NOT EXISTS (SELECT 1 FROM TEMP1 WHERE PLAN_ID = 13)&#xD;&#xA;BEGIN&#xD;&#xA;&#x9;INSERT INTO TEMP1&#xD;&#xA;&#x9;VALUES(0, 13,'Life','N', 'N','N','N','Not Enrolled')&#xD;&#xA;END&#xD;&#xA;ELSE IF NOT EXISTS (SELECT 1 FROM TEMP1 WHERE PLAN_ID = 16)&#xD;&#xA;BEGIN&#xD;&#xA;&#x9;INSERT INTO TEMP1&#xD;&#xA;&#x9;VALUES(0, 16,'Dental' ,'N', 'N','N','N','Not Enrolled')&#xD;&#xA;END&#xD;&#xA;ELSE IF NOT EXISTS (SELECT 1 FROM TEMP1 WHERE PLAN_ID = 17)&#xD;&#xA;BEGIN&#xD;&#xA;&#x9;INSERT INTO TEMP1&#xD;&#xA;&#x9;VALUES(0, 17, 'Vision', 'N', 'N','N','N','Not Enrolled')&#xD;&#xA;END&#xD;&#xA;--&#xD;&#xA;&#xD;&#xA;--UPDATE DENTAL ROW&#xD;&#xA;SET @PLAN = 'Dental'&#xD;&#xA;SET @FLAG1 = (SELECT MAX(CASE WHEN PA.PLAN_ID = 16&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND YEAR(GHDVHIS.START_DATE) = @CY&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.START_DATE &lt; ISNULL(GHDVHIS.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Y' ELSE 'N' END)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV ON PA.PERSON_ACCOUNT_ID = GHDV.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIS ON GHDV.PERSON_ACCOUNT_GHDV_ID = GHDVHIS.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PA.PERSON_ID = @PersID) &#xD;&#xA;&#xD;&#xA;SET @FLAG2 = (SELECT MAX(CASE WHEN PA.PLAN_ID = 16 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND YEAR(GHDVHIS.START_DATE) = @CY-1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.START_DATE &lt; ISNULL(GHDVHIS.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Y' ELSE 'N' END)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV ON PA.PERSON_ACCOUNT_ID = GHDV.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIS ON GHDV.PERSON_ACCOUNT_GHDV_ID = GHDVHIS.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PA.PERSON_ID = @PersID) &#xD;&#xA;SET @FLAG3 = (SELECT MAX(CASE WHEN PA.PLAN_ID = 16 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND YEAR(GHDVHIS.START_DATE) = @CY-2&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.START_DATE &lt; ISNULL(GHDVHIS.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Y' ELSE 'N' END)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV ON PA.PERSON_ACCOUNT_ID = GHDV.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIS ON GHDV.PERSON_ACCOUNT_GHDV_ID = GHDVHIS.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PA.PERSON_ID = @PersID) &#xD;&#xA;SET @FLAG4 = (SELECT MAX(CASE WHEN PA.PLAN_ID = 16 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND YEAR(GHDVHIS.START_DATE) = @CY-3&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.START_DATE &lt; ISNULL(GHDVHIS.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Y' ELSE 'N' END)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV ON PA.PERSON_ACCOUNT_ID = GHDV.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIS ON GHDV.PERSON_ACCOUNT_GHDV_ID = GHDVHIS.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PA.PERSON_ID = @PersID) &#xD;&#xA;--update temp table with correct flags&#xD;&#xA;UPDATE TEMP1 &#xD;&#xA;SET istrIsEnrolledInCY = @FLAG1, istrIsEnrolledInCYMinus1 = @FLAG2, istrIsEnrolledInCYMinus2 = @FLAG3, istrIsEnrolledInCYMinus3 = @FLAG4  &#xD;&#xA;WHERE istrPlanNameForGrid = @PLAN&#xD;&#xA;--&#xD;&#xA;--UPDATE VISION ROW&#xD;&#xA;SET @PLAN = 'Vision'&#xD;&#xA;SET @FLAG1 = (SELECT MAX(CASE WHEN PA.PLAN_ID = 17&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND YEAR(GHDVHIS.START_DATE) = @CY&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.START_DATE &lt; ISNULL(GHDVHIS.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Y' ELSE 'N' END)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV ON PA.PERSON_ACCOUNT_ID = GHDV.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIS ON GHDV.PERSON_ACCOUNT_GHDV_ID = GHDVHIS.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PA.PERSON_ID = @PersID) &#xD;&#xA;&#xD;&#xA;SET @FLAG2 = (SELECT MAX(CASE WHEN PA.PLAN_ID = 17 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND YEAR(GHDVHIS.START_DATE) = @CY-1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.START_DATE &lt; ISNULL(GHDVHIS.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Y' ELSE 'N' END)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV ON PA.PERSON_ACCOUNT_ID = GHDV.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIS ON GHDV.PERSON_ACCOUNT_GHDV_ID = GHDVHIS.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PA.PERSON_ID = @PersID) &#xD;&#xA;SET @FLAG3 = (SELECT MAX(CASE WHEN PA.PLAN_ID = 17 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND YEAR(GHDVHIS.START_DATE) = @CY-2&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.START_DATE &lt; ISNULL(GHDVHIS.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Y' ELSE 'N' END)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV ON PA.PERSON_ACCOUNT_ID = GHDV.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIS ON GHDV.PERSON_ACCOUNT_GHDV_ID = GHDVHIS.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PA.PERSON_ID = @PersID) &#xD;&#xA;SET @FLAG4 = (SELECT MAX(CASE WHEN PA.PLAN_ID = 16 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND YEAR(GHDVHIS.START_DATE) = @CY-3&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND GHDVHIS.START_DATE &lt; ISNULL(GHDVHIS.END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Y' ELSE 'N' END)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV ON PA.PERSON_ACCOUNT_ID = GHDV.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIS ON GHDV.PERSON_ACCOUNT_GHDV_ID = GHDVHIS.PERSON_ACCOUNT_GHDV_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PA.PERSON_ID = @PersID) &#xD;&#xA;--update temp table with correct flags&#xD;&#xA;UPDATE TEMP1 &#xD;&#xA;SET istrIsEnrolledInCY = @FLAG1, istrIsEnrolledInCYMinus1 = @FLAG2, istrIsEnrolledInCYMinus2 = @FLAG3, istrIsEnrolledInCYMinus3 = @FLAG4  &#xD;&#xA;WHERE istrPlanNameForGrid = @PLAN&#xD;&#xA;--&#xD;&#xA;--UPDATE LIFE ROW&#xD;&#xA;SET @PLAN = 'Life'&#xD;&#xA;SET @FLAG1 = (SELECT MAX(CASE WHEN PA.PLAN_ID = 13 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND @CY BETWEEN YEAR(LIFEHIS.EFFECTIVE_START_DATE) AND ISNULL(YEAR(LIFEHIS.EFFECTIVE_END_DATE),'9999')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LIFEHIS.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LIFEHIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LIFEHIS.EFFECTIVE_START_DATE &lt; ISNULL(LIFEHIS.EFFECTIVE_END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Y' ELSE 'N' END)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE LIFE ON PA.PERSON_ACCOUNT_ID = LIFE.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY LIFEHIS ON LIFE.PERSON_ACCOUNT_ID = LIFEHIS.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PA.PERSON_ID = @PersID) &#xD;&#xA;SET @FLAG2 = (SELECT MAX(CASE WHEN PA.PLAN_ID = 13 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND @CY-1 BETWEEN YEAR(LIFEHIS.EFFECTIVE_START_DATE) AND ISNULL(YEAR(LIFEHIS.EFFECTIVE_END_DATE),'9999')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LIFEHIS.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LIFEHIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LIFEHIS.EFFECTIVE_START_DATE &lt; ISNULL(LIFEHIS.EFFECTIVE_END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Y' ELSE 'N' END)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE LIFE ON PA.PERSON_ACCOUNT_ID = LIFE.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY LIFEHIS ON LIFE.PERSON_ACCOUNT_ID = LIFEHIS.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PA.PERSON_ID = @PersID) &#xD;&#xA;SET @FLAG3 = (SELECT MAX(CASE WHEN PA.PLAN_ID = 13 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND @CY-2 BETWEEN YEAR(LIFEHIS.EFFECTIVE_START_DATE) AND ISNULL(YEAR(LIFEHIS.EFFECTIVE_END_DATE),'9999')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LIFEHIS.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LIFEHIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LIFEHIS.EFFECTIVE_START_DATE &lt; ISNULL(LIFEHIS.EFFECTIVE_END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Y' ELSE 'N' END)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE LIFE ON PA.PERSON_ACCOUNT_ID = LIFE.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY LIFEHIS ON LIFE.PERSON_ACCOUNT_ID = LIFEHIS.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PA.PERSON_ID = @PersID) &#xD;&#xA;SET @FLAG4 = (SELECT MAX(CASE WHEN PA.PLAN_ID = 13 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND @CY-3 BETWEEN YEAR(LIFEHIS.EFFECTIVE_START_DATE) AND ISNULL(YEAR(LIFEHIS.EFFECTIVE_END_DATE),'9999')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LIFEHIS.PREMIUM_CONVERSION_INDICATOR_FLAG = 'Y' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LIFEHIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LIFEHIS.EFFECTIVE_START_DATE &lt; ISNULL(LIFEHIS.EFFECTIVE_END_DATE,'99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Y' ELSE 'N' END)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE LIFE ON PA.PERSON_ACCOUNT_ID = LIFE.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY LIFEHIS ON LIFE.PERSON_ACCOUNT_ID = LIFEHIS.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PA.PERSON_ID = @PersID) &#xD;&#xA;--update temp table with correct flags&#xD;&#xA;UPDATE TEMP1 &#xD;&#xA;SET istrIsEnrolledInCY = @FLAG1, istrIsEnrolledInCYMinus1 = @FLAG2, istrIsEnrolledInCYMinus2 = @FLAG3, istrIsEnrolledInCYMinus3 = @FLAG4  &#xD;&#xA;WHERE istrPlanNameForGrid = @PLAN&#xD;&#xA;--&#xD;&#xA;&#xD;&#xA;SELECT * FROM TEMP1&#xD;&#xA;&#xD;&#xA;DROP TABLE TEMP1&#xD;&#xA;--">
      <parameters>
        <parameter ID="@PersID" sfwDataType="int" />
        <parameter ID="@CY" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetLatestCY" sfwQueryType="ScalarQuery" sfwSql="SELECT MAX(CY) AS MAX_CY FROM&#xD;&#xA;(&#xD;&#xA;&#x9;SELECT MAX(YEAR(GHDVHIS.START_DATE)) AS CY&#xD;&#xA;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV ON PA.PERSON_ACCOUNT_ID = GHDV.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_GHDV_HISTORY GHDVHIS ON GHDV.PERSON_ACCOUNT_GHDV_ID = GHDVHIS.PERSON_aCCOUNT_GHDV_ID&#xD;&#xA;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;PA.PERSON_ID = @PERSID&#xD;&#xA;&#x9;&#x9;AND PA.PLAN_ID IN (16,17)&#xD;&#xA;&#x9;UNION&#xD;&#xA;&#x9;SELECT MAX(YEAR(LIFEHIS.EFFECTIVE_START_DATE)) AS CY&#xD;&#xA;&#x9;FROM SGT_PERSON_ACCOUNT PA&#xD;&#xA;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY LIFEHIS ON PA.PERSON_ACCOUNT_ID = LIFEHIS.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;PA.PERSON_ID = @PERSID&#xD;&#xA;&#x9;&#x9;AND PA.PLAN_ID IN (13)&#xD;&#xA;) AS TEMP">
      <parameters>
        <parameter ID="@PERSID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="PersonAccountId" sfwType="Column" sfwValue="person_account_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PremiumConversionWaiverFlag" sfwType="Column" sfwValue="premium_conversion_waiver_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DirectDepositFlag" sfwType="Column" sfwValue="direct_deposit_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="InsideMailFlag" sfwType="Column" sfwValue="inside_mail_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="FlexCompTypeDescription" sfwType="Description" sfwValue="flex_comp_type_description" />
    <attribute ID="FlexCompTypeId" sfwType="Column" sfwValue="flex_comp_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="342" sfwDataType="int" sfwRequired="False" />
    <attribute ID="FlexCompTypeValue" sfwType="Column" sfwValue="flex_comp_type_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="ReasonDescription" sfwType="Description" sfwValue="reason_description" />
    <attribute ID="ReasonId" sfwType="Column" sfwValue="reason_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="332" sfwDataType="int" sfwRequired="False" />
    <attribute ID="ReasonValue" sfwType="Column" sfwValue="reason_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="PsFileChangeEventDescription" sfwType="Description" sfwValue="ps_file_change_event_description" />
    <attribute ID="PsFileChangeEventId" sfwType="Column" sfwValue="ps_file_change_event_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="368" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PsFileChangeEventValue" sfwType="Column" sfwValue="ps_file_change_event_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="objPerson" sfwType="Object" sfwEntity="entPerson" sfwValue="ibusPerson" />
    <attribute sfwDataType="string" sfwType="Property" ID="StatusDescription" sfwValue="icdoPersonAccount.status_description" />
    <attribute sfwDataType="string" sfwType="Property" ID="SuppressWarningsFlag" sfwValue="icdoPersonAccount.suppress_warnings_flag" />
    <attribute ID="objPlan" sfwType="Object" sfwEntity="entPlan" sfwValue="ibusPlan" />
    <attribute sfwDataType="string" sfwType="Property" ID="PlanParticipationStatusValue" sfwValue="icdoPersonAccount.plan_participation_status_value" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="StartDate" sfwValue="icdoPersonAccount.start_date" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="HistoryChangeDate" sfwValue="icdoPersonAccount.history_change_date" />
    <attribute sfwDataType="string" sfwType="Property" ID="FlexCompTypeValue1" sfwValue="icdoPersonAccountFlexComp.flex_comp_type_value" />
    <attribute sfwDataType="string" sfwType="Property" ID="PremiumConversionWaiverFlag1" sfwValue="icdoPersonAccountFlexComp.premium_conversion_waiver_flag" />
    <attribute sfwDataType="string" sfwType="Property" ID="SuppressWarningsBy" sfwValue="icdoPersonAccount.suppress_warnings_by" />
    <attribute sfwDataType="string" sfwType="Property" ID="ReasonValue1" sfwValue="icdoPersonAccountFlexComp.reason_value" />
    <attribute ID="objMSRACoverage" sfwType="Object" sfwEntity="entPersonAccountFlexCompOption" sfwValue="ibusMSRACoverage" />
    <attribute ID="objDCRACoverage" sfwType="Object" sfwEntity="entPersonAccountFlexCompOption" sfwValue="ibusDCRACoverage" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintDentalPersonAccountID" sfwValue="iintDentalPersonAccountID" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrDentalPlanStatus" sfwValue="istrDentalPlanStatus" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrDentalPremiumFlag" sfwValue="istrDentalPremiumFlag" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintVisionPersonAccountID" sfwValue="iintVisionPersonAccountID" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrVisionPlanStatus" sfwValue="istrVisionPlanStatus" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrVisionPremiumFlag" sfwValue="istrVisionPremiumFlag" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintLifePersonAccountID" sfwValue="iintLifePersonAccountID" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrLifePlanStatus" sfwValue="istrLifePlanStatus" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrLifePremiumFlag" sfwValue="istrLifePremiumFlag" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountFlexcompConversion" ID="lstPersonAccountFlexCompConversion" sfwValue="iclbPersonAccountFlexCompConversion" />
    <attribute sfwDataType="int" sfwType="Property" ID="PersonEmploymentDtlId" sfwValue="icdoPersonAccount.person_employment_dtl_id" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountFlexCompHistory" ID="lstFlexCompHistory" sfwValue="iclbFlexCompHistory" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountFlexCompHistory" ID="lstModifiedHistory" sfwValue="iclbModifiedHistory" />
    <attribute sfwType="Collection" sfwEntity="entPersonEmploymentDetail" ID="lstEmploymentDetail" sfwValue="iclbEmploymentDetail" />
    <attribute sfwDataType="string" sfwType="Property" ID="CreatedBy1" sfwValue="icdoPersonAccountFlexComp.created_by" />
    <attribute sfwDataType="int" sfwType="Property" ID="UpdateSeq1" sfwValue="icdoPersonAccountFlexComp.update_seq" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="CreatedDate1" sfwValue="icdoPersonAccountFlexComp.created_date" />
    <attribute sfwDataType="string" sfwType="Property" ID="ModifiedBy1" sfwValue="icdoPersonAccountFlexComp.modified_by" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="ModifiedDate1" sfwValue="icdoPersonAccountFlexComp.modified_date" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountFlexCompOption" ID="lstFlexCompOption" sfwValue="iclbFlexCompOption" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountFlexcompConversion" ID="lstFlexcompConversion" sfwValue="iclbFlexcompConversion" />
    <attribute sfwType="Object" sfwEntity="entPersonAccount" sfwValue="ibusPersonAccount" ID="objPersonAccount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrImage" sfwValue="istrImage" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintCurrentYear" sfwValue="iintCurrentYear" />
    <attribute ID="objPersonEmploymentDetail" sfwType="Object" sfwEntity="entPersonEmploymentDetail" sfwValue="ibusPersonEmploymentDetail" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintNextYear" sfwValue="iintNextYear" />
    <attribute sfwDataType="int" sfwType="Property" ID="PlanId" sfwValue="icdoPersonAccount.plan_id" />
    <attribute ID="IstrAllowOverlapHistory" sfwDataType="bool" sfwPrivate="False" sfwValue="istrAllowOverlapHistory" sfwType="Property" />
    <attribute ID="lstPreTaxEnrollmentStatusInPreviousYears" sfwType="Collection" sfwValue="iclbPreTaxEnrollmentStatusInPreviousYears" sfwEntity="entPersonAccount" sfwPrivate="False" />
    <attribute ID="IintCY" sfwDataType="int" sfwPrivate="False" sfwValue="iintCY" sfwType="Property" />
  </attributes>
  <objectmethods>
    <method ID="LoadParticipationStatusByBenefitType" sfwReturnType="Collection" sfwObjectID="cdoCodeValue" sfwEntity="entPostRetirementDeathApplication" />
  </objectmethods>
</entity>