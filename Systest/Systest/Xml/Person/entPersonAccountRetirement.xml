<entity ID="entPersonAccountRetirement" sfwActive="True" sfwStatus="Valid" sfwType="BusinessRule" sfwErrorTable="sgt_person_account_error" sfwParentKey="person_account_id" sfwParentKeyValue="icdoPersonAccountRetirement.person_account_id" sfwMainCDO="icdoPersonAccount" sfwStatusColumn="status_value" sfwObjectID="busPersonAccountRetirement" sfwTableName="sgt_person_account_retirement" sfwParentEntity="entPersonAccount">
  <rules>
    <rule ID="AreEmploymentStartDateAndEnrollmentDateNotSame" sfwMessageId="6501" sfwExpression="(this.ValidateStartDateForMandatoryPlan() == True)" sfwObjectBased="True" />
    <rule ID="CheckOrgPlanStartDateValidWithEnrollmentDate" sfwMessageId="6650" sfwExpression="!(this.IsStartDateOverlapWithEmployerOrgPlan() == True)" sfwObjectBased="True" />
    <rule ID="IsDborDCEmployeeNotWaivingFutureDCorDB" sfwMessageId="6540" sfwExpression="!(string.IsNullOrEmpty(this.icdoPersonAccount.plan_participation_status_value)) &amp;&amp; &#xA;(this.ValidateDBorDCEmployeeDoesNotWaiveFutureDBorDC() == True)" sfwObjectBased="True" />
    <rule ID="IsDCEligibleDateNotNullAndThereIsNoDCPlan" sfwMessageId="6675" sfwExpression="!(this.icdoPersonAccountRetirement.dc_eligibility_date == DateTime.MinValue) &amp;&amp; &#xA;(this.IsDCPlanEligible() == False)" sfwObjectBased="True" />
    <rule ID="IsDcParticipantStatusNotSuspended" sfwMessageId="6509" sfwExpression="(this.IsDCParticipantStatusNotSuspended() == True)" sfwObjectBased="True" />
    <rule ID="ISDCPlanParticipationStausValid" sfwMessageId="7548" sfwExpression="(this.IsDCPlanParticipationValid() == True)" sfwObjectBased="True" />
    <rule ID="IsHistoryChangeDateLessThanLastChangeDate" sfwMessageId="5026" sfwExpression="(this.IsHistoryEntryRequired == True) &amp;&amp; this.icdoPersonAccount.plan_id != 30 &amp;&amp; &#xA;!(this.ibusHistory.icdoPersonAccountRetirementHistory.person_account_retirement_history_id == 0) &amp;&amp; &#xA;!(this.istrAllowOverlapHistory == &quot;Y&quot;) &amp;&amp; &#xA;(this.icdoPersonAccount.history_change_date &lt; RFunc.GetValue&lt;DateTime&gt;(this, &quot;ibusHistory.icdoPersonAccountRetirementHistory.start_date&quot;))" sfwObjectBased="True" />
    <rule ID="IsMemberAlreadyReceivingBenefit" sfwMessageId="6543" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPersonAccountRetirement.IsMemberAlreadyReceivingBenefit&quot;, this.icdoPersonAccount.person_id, this.icdoPersonAccount.person_account_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="IsMutualWindowFlagCheckedAndPlanParticipationWithdrawn" sfwMessageId="6664" sfwExpression="(this.icdoPersonAccountRetirement.mutual_fund_window_flag == &quot;Y&quot;) &amp;&amp; &#xA;(this.icdoPersonAccount.plan_participation_status_value == &quot;WTN1&quot;)" sfwObjectBased="True" />
    <rule ID="IsOptionalWithdrawnDBOrDCExist" sfwMessageId="6542" sfwExpression="!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;!(string.IsNullOrEmpty(this.icdoPersonAccount.plan_participation_status_value)) &amp;&amp; &#xA;(this.CheckOptionalDBorDCAccountalreadyExists() == True)" sfwObjectBased="True" />
    <rule ID="IsOptionDBPlanEnrollmentIsValid" sfwMessageId="6502" sfwExpression="!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;(this.ValidateOptionalDBPlanEnrollmentStartDate() == True)" sfwObjectBased="True" />
    <rule ID="IsParticipationStatusWaivedAndStartDateMatchPlanDate" sfwMessageId="6534" sfwExpression="!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;!(string.IsNullOrEmpty(this.icdoPersonAccount.plan_participation_status_value)) &amp;&amp; &#xA;((RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;MAIN&quot;) || &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;LENE&quot;) || &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;LEOE&quot;) || &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;BCLE&quot;) ||&#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;STLE&quot;) ||&#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;NAGD&quot;)) &amp;&amp; &#xA;(this.icdoPersonAccount.plan_participation_status_value == &quot;WAI1&quot;) &amp;&amp; &#xA;!((RFunc.GetValue&lt;String&gt;(this, &quot;ibusPersonEmploymentDetail.icdoPersonEmploymentDetail.job_class_value&quot;) == &quot;SEO&quot;) || &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPersonEmploymentDetail.icdoPersonEmploymentDetail.job_class_value&quot;) == &quot;NSEO&quot;)) &amp;&amp; &#xA;!(RFunc.GetValue&lt;DateTime&gt;(this, &quot;ibusOrgPlan.icdoOrgPlan.participation_start_date&quot;) == this.icdoPersonAccount.start_date)" sfwObjectBased="True" />
    <rule ID="IsParticipationTransferDCAndAccountExist" sfwMessage="You can  not  transfer to DC if DC account exists." sfwExpression="(this.ValidateWhenTransferDC() == &quot;DCEX&quot;)" sfwObjectBased="True" />
    <rule ID="IsParticipationTransferDCAndDateMismatch" sfwMessageId="6667" sfwExpression="(this.ValidateWhenTransferDC() == &quot;DCDT&quot;)" sfwObjectBased="True" />
    <rule ID="IsParticipationTransferDCAndDCNotEligible" sfwMessageId="6669" sfwExpression="(this.ValidateWhenTransferDC() == &quot;NTEL&quot;)" sfwObjectBased="True" />
    <rule ID="IsPensionPlanAccountExist" sfwMessageId="6503" sfwExpression="(this.icdoPersonAccount.plan_participation_status_value != &quot;TRDC&quot;) &amp;&amp; &#xA;(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPersonAccountRetirement.IsMemberEnrolledInDBPlan&quot;, this.icdoPersonAccount.person_id, this.icdoPersonAccount.person_account_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="IsPersonDCPartcipantAndPlanWithoutPriorServices" sfwMessageId="6508" sfwExpression="!(string.IsNullOrEmpty(this.icdoPersonAccount.plan_participation_status_value)) &amp;&amp; &#xA;!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPersonAccountRetirement.IsMemberEnrolledInDCPlan&quot;, this.icdoPersonAccount.person_id, this.icdoPersonAccount.person_account_id) &gt; 0) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;LENE&quot;) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPerson.icdoPerson.db_addl_contrib&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="IsPersonDCParticipantAndPlanBCILE" sfwMessageId="6508" sfwExpression="!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;!(string.IsNullOrEmpty(this.icdoPersonAccount.plan_participation_status_value)) &amp;&amp; &#xA;(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPersonAccountRetirement.IsMemberEnrolledInDCPlan&quot;, this.icdoPersonAccount.person_id, this.icdoPersonAccount.person_account_id) &gt; 0) &amp;&amp; &#xA;((RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;BCLE&quot;) || &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;STLE&quot;) ||&#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;NAGD&quot;))&amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPerson.icdoPerson.db_addl_contrib&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="IsPersonDCParticipantandPlanMAIN" sfwMessageId="6508" sfwExpression="!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;!(string.IsNullOrEmpty(this.icdoPersonAccount.plan_participation_status_value)) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;MAIN&quot;) &amp;&amp; &#xA;(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPersonAccountRetirement.IsMemberEnrolledInDCPlan&quot;, this.icdoPersonAccount.person_id, this.icdoPersonAccount.person_account_id) &gt; 0) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPerson.icdoPerson.db_addl_contrib&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="IsPersonDCParticipantAndPlanNationalGuard" sfwMessageId="6508" sfwExpression="!(string.IsNullOrEmpty(this.icdoPersonAccount.plan_participation_status_value)) &amp;&amp; &#xA;!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPersonAccountRetirement.IsMemberEnrolledInDCPlan&quot;, this.icdoPersonAccount.person_id, this.icdoPersonAccount.person_account_id) &gt; 0) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;NAGD&quot;) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPerson.icdoPerson.db_addl_contrib&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="IsPersonDCParticipantAnndPlanLEWithPriorServices" sfwMessageId="6508" sfwExpression="!(this.icdoPersonAccount.start_date == DateTime.MinValue) &amp;&amp; &#xA;!(string.IsNullOrEmpty(this.icdoPersonAccount.plan_participation_status_value)) &amp;&amp; &#xA;(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPersonAccountRetirement.IsMemberEnrolledInDCPlan&quot;, this.icdoPersonAccount.person_id, this.icdoPersonAccount.person_account_id) &gt; 0) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;LEOE&quot;) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPerson.icdoPerson.db_addl_contrib&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="IsPlanParticipationStatusTransferToDc" sfwExpression="(this.icdoPersonAccount.plan_participation_status_value != &quot;TRDC&quot;)" sfwObjectBased="True" />
    <rule ID="IsRTWMember" sfwMessageId="7693" sfwExpression="(this.IsEligibleRTWMember() == False)" sfwObjectBased="True" />
    <rule ID="IsTemporaryEmployeeAlreadyTookRefund" sfwMessageId="7701" sfwExpression="(this.IsMemberTookRefund() == True)" sfwObjectBased="True" />
    <rule ID="OverriddenIsHistoryChangeDateRequired" sfwMessageId="5025" sfwExpression="(this.IsHistoryCreated() == True) &amp;&amp; &#xA;(this.IsHistoryEntryRequired == True) &amp;&amp; &#xA;!(this.icdoPersonAccount.person_account_id == 0) &amp;&amp; &#xA;(this.icdoPersonAccount.history_change_date == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForInitialStartDateField" sfwExpression="!(this.IsHistoryCreated() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForInitialStartDateLabel" sfwExpression="(this.IsHistoryCreated() == True)&amp;&amp;&#xD;&#xA;(this.IsResourceEligibleForInitialDate == false)" sfwObjectBased="True" />
    <rule ID="VisibleRulePlanParticipationStatusDropDown" sfwExpression="((this.icdoPersonAccount.plan_participation_status_value == &quot;ENL1&quot;) || &#xA;(this.icdoPersonAccount.plan_participation_status_value == &quot;SUS2&quot;) || &#xA;(this.icdoPersonAccount.plan_participation_status_value == &quot;CAN1&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleRulePlanParticipationStatusLabel" sfwExpression="!((this.icdoPersonAccount.plan_participation_status_value == &quot;ENL1&quot;) || &#xA;(this.icdoPersonAccount.plan_participation_status_value == &quot;SUS2&quot;) || &#xA;(this.icdoPersonAccount.plan_participation_status_value == &quot;CAN1&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleRuleForMutualFundFlag" sfwExpression="(this.istrIsMutualFundFlagRequired == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="IsPlanParticipationValueEnrolled" sfwExpression="(this.VisibleRuleForDCEligibilityDate() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsPlanMain" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;MAIN&quot;)" sfwObjectBased="True" />
    <rule ID="IsMoreThanOneEnrolledInOverlapHistory" sfwMessageId="7132" sfwExpression="(this.istrAllowOverlapHistory == &quot;Y&quot;) &amp;&amp; &#xA;(this.IsMoreThanOneEnrolledInOverlapHistory() == True)" sfwObjectBased="True" />
    <rule ID="VisibileRuleCheckEditableInitialDate" sfwExpression="(this.IsHistoryCreated() == True)&amp;&amp;&#xD;&#xA;(this.IsResourceEligibleForInitialDate == true)" sfwObjectBased="True" />
    <rule ID="IsStartDateGreaterThanInitialStartDate" sfwExpression="(this.idtInitialStartDate != DateTime.MinValue) &amp;&amp;&#xD;&#xA;(this.IsHistoryCreated() == True) &amp;&amp;&#xD;&#xA;(this.IsInitialStartDateGreaterThanHistory() == False)" sfwMessageId="10284" sfwObjectBased="True" />
    <rule ID="IsOverlappingCheckedToUpdateInitialStartDate" sfwExpression="(this.IsInitialStartDateChanged() == true) &amp;&amp;&#xD;&#xA;(this.istrAllowOverlapHistory == &quot;N&quot;) " sfwMessageId="10291" sfwObjectBased="True" />
    <rule ID="IsPersonPriorEnrolledInDC" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.icdoPersonAccount.suppress_warnings_flag != &quot;Y&quot; &amp;&amp; (this.IsPersonPriorEnrolledInDC())" sfwMessageId="10385" />
    <rule ID="IsStartDatePriortoEnrollmentEffeDate" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(!(this.icdoPersonAccount.history_change_date == DateTime.MinValue) &amp;&amp; &#xA;(this.icdoPersonAccount.plan_participation_status_value == &quot;ENL1&quot;) &amp;&amp;(this.IsStartDatePriortoEnrollmentEffeDate()))" sfwMessageId="10457" />
    <rule ID="VisibleRuleIsPlanDC25" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;DC25&quot;)" />
    <rule ID="VisibleRuleIsNotDC2025" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;DC25&quot;)" />
    <rule ID="VisibleRuleIsEnrolledAndNotDC2025" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.VisibleRuleForDCEligibilityDate() == True) &amp;&amp;&#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPlan.icdoPlan.plan_code&quot;) == &quot;DC25&quot;)" />
    <rule ID="VRADECUpdateLink" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.lblnIsVisibleADECAmountList" />
    <rule ID="VRIsAllowAdditionalElectionChange" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.icdoPersonAccount.suppress_warnings_flag != &quot;Y&quot; &amp;&amp; !iblnIsAllowAdditionalElectionChange" sfwMessageId="10514" sfwMessageParameters="IintDaysDiffByEmploymentype" />
    <rule ID="VRIsElectionAlreadyMade" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="iblnIsElectionAlreadyMade" sfwMessageId="10516" />
    <rule ID="VREEContributionSelectedForInitialStart" sfwRuleType="Validation" sfwObjectBased="True" sfwMessageId="10520" sfwExpression="this.icdoPersonAccount.suppress_warnings_flag != &quot;Y&quot; &amp;&amp; IsEEContributionSelectedForInitialStart" />
    <rule ID="IsHistoryChangeDateLessForPlanDC25" sfwRuleType="Validation" sfwObjectBased="False" sfwExpression="(this.IsHistoryEntryRequired == True) &amp;&amp; this.icdoPersonAccount.plan_id == 30 &amp;&amp; &#xA;!(this.ibusHistory.icdoPersonAccountRetirementHistory.person_account_retirement_history_id == 0) &amp;&amp; &#xA;!(this.istrAllowOverlapHistory == &quot;Y&quot;) &amp;&amp; &#xA;(this.icdoPersonAccount.history_change_date &lt; RFunc.GetValue&lt;DateTime&gt;(this, &quot;ibusHistory.icdoPersonAccountRetirementHistory.start_date&quot;))" sfwMessageId="10526" />
    <rule ID="VRADECAmountZeroPerm" sfwRuleType="Validation" sfwObjectBased="False" sfwExpression="this.lblnIsVisibleADECAmountList &amp;&amp;  this.icdoPersonAccount.istrAddl_ee_contribution_percent_Perm_zero == &quot;0&quot;" />
    <rule ID="VRADECAmountZeroTemp" sfwRuleType="Validation" sfwObjectBased="False" sfwExpression="this.lblnIsVisibleADECAmountList &amp;&amp;  this.icdoPersonAccount.istrAddl_ee_contribution_percent_Temp_zero == &quot;0&quot;" />
    <rule ID="VisibleRuleForOverlap" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.IsResourceForOverlap == True)" />
  </rules>
  <delete>
    <property ID="IcdoPersonAccountRetirement" />
  </delete>
  <checklist />
  <initialload>
    <item ID="IsPlanParticipationStatusTransferToDc" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForInitialStartDateLabel" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForInitialStartDateField" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRulePlanParticipationStatusDropDown" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRulePlanParticipationStatusLabel" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForMutualFundFlag" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPlanParticipationValueEnrolled" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsPlanMain" sfwStatus="Active" sfwMode="All" />
    <item ID="VisibileRuleCheckEditableInitialDate" sfwStatus="Active" sfwMode="All" />
    <item ID="VisibleRuleIsPlanDC25" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsNotDC2025" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsEnrolledAndNotDC2025" sfwMode="All" sfwStatus="Active" />
    <item ID="VRADECUpdateLink" sfwMode="All" sfwStatus="Active" />
    <item ID="VRADECAmountZeroPerm" sfwMode="All" sfwStatus="Active" />
    <item ID="VRADECAmountZeroTemp" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForOverlap" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror>
    <item ID="IsDborDCEmployeeNotWaivingFutureDCorDB" sfwMode="All" sfwStatus="Active" />
    <item ID="IsMemberAlreadyReceivingBenefit" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPensionPlanAccountExist" sfwMode="All" sfwStatus="Active" />
    <item ID="IsOptionDBPlanEnrollmentIsValid" sfwMode="All" sfwStatus="Active" />
    <item ID="AreEmploymentStartDateAndEnrollmentDateNotSame" sfwMode="All" sfwStatus="Active" />
  </softerror>
  <harderror>
    <item ID="IsStartDateNull" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPlanParticipationStatusNull" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPersonAgeLessThan18" sfwMode="New" sfwStatus="Active" />
    <item ID="IsPersonDCParticipantandPlanMAIN" sfwMode="New" sfwStatus="Active" />
    <item ID="IsPersonDCParticipantAndPlanNationalGuard" sfwMode="New" sfwStatus="Active" />
    <item ID="IsPersonDCPartcipantAndPlanWithoutPriorServices" sfwMode="New" sfwStatus="Active" />
    <item ID="IsPersonDCParticipantAnndPlanLEWithPriorServices" sfwMode="New" sfwStatus="Active" />
    <item ID="IsDcParticipantStatusNotSuspended" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPersonAccountOverlaps" sfwMode="New" sfwStatus="Active" />
    <item ID="IsStartDateLessThanEmploymentDate" sfwMode="All" sfwStatus="Inactive" />
    <item ID="IsOptionalWithdrawnDBOrDCExist" sfwMode="All" sfwStatus="Active" />
    <item ID="IsHistoryChangeDateLessThanLastChangeDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsStartDateGreaterThanEmploymentEndDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsMutualWindowFlagCheckedAndPlanParticipationWithdrawn" sfwMode="All" sfwStatus="Active" />
    <item ID="IsParticipationTransferDCAndAccountExist" sfwMode="All" sfwStatus="Active" />
    <item ID="IsParticipationTransferDCAndDateMismatch" sfwMode="All" sfwStatus="Active" />
    <item ID="IsParticipationTransferDCAndDCNotEligible" sfwMode="All" sfwStatus="Active" />
    <item ID="IsDCEligibleDateNotNullAndThereIsNoDCPlan" sfwMode="All" sfwStatus="Active" />
    <item ID="ISDCPlanParticipationStausValid" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRTWMember" sfwMode="All" sfwStatus="Active" />
    <item ID="IsTemporaryEmployeeAlreadyTookRefund" sfwMode="All" sfwStatus="Active" />
    <item ID="OverriddenIsHistoryChangeDateRequired" sfwMode="All" sfwStatus="Active" />
    <item ID="CheckOrgPlanStartDateValidWithEnrollmentDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPersonDCParticipantAndPlanBCILE" sfwMode="All" sfwStatus="Active" />
    <item ID="IsMoreThanOneEnrolledInOverlapHistory" sfwMode="All" sfwStatus="Active" />
    <item ID="IsStartDateGreaterThanInitialStartDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsOverlappingCheckedToUpdateInitialStartDate" sfwStatus="Active" sfwMode="All" />
    <item ID="IsPersonPriorEnrolledInDC" sfwMode="All" sfwStatus="Active" />
    <item ID="IsStartDatePriortoEnrollmentEffeDate" sfwMode="All" sfwStatus="Active" />
    <item ID="VRIsAllowAdditionalElectionChange" sfwMode="All" sfwStatus="Active" />
    <item ID="VRIsElectionAlreadyMade" sfwMode="All" sfwStatus="Active" />
    <item ID="VREEContributionSelectedForInitialStart" sfwMode="All" sfwStatus="Active" />
    <item ID="IsHistoryChangeDateLessForPlanDC25" sfwMode="All" sfwStatus="Active" />
  </harderror>
  <validatedelete />
  <groupslist />
  <aliaslist />
  <updateablecdo />
  <commonproperties />
  <logicalrulelist />
  <expressionfields />
  <queries>
    <query ID="IsMemberEnrolledInDCPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from dbo.SGT_PERSON_ACCOUNT A inner join Sgt_plan B&#xD;&#xA;on A.plan_id=B.plan_id &#xD;&#xA;where A.person_id=@person_id and A.plan_id=7 and A.person_account_id &lt;&gt; @personaccountid and &#xD;&#xA;A.end_date is null">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
        <parameter ID="@personaccountid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="IsMemberEnrolledInDBPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from dbo.SGT_PERSON_ACCOUNT A inner join sgt_plan B on a.plan_id=b.plan_id&#xD;&#xA;where A.person_id=@person_id and A.person_account_id &lt;&gt; @personaccountid and A.PLAN_PARTICIPATION_STATUS_VALUE='ENL1' and  &#xD;&#xA;b.benefit_type_value='RETR'&#xD;&#xA;">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
        <parameter ID="@personaccountid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LatestHistoryRecord" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select top 1 * from sgt_person_account_retirement_history where person_account_id =@personaccountid order by &#xD;&#xA;isnull(end_date,'2900-01-01') DESC,start_date desc,person_account_retirement_history_id desc">
      <parameters>
        <parameter ID="@personaccountid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetRetiredDBorDCPlanAccounts" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from dbo.SGT_PERSON_ACCOUNT A inner join &#xD;&#xA;dbo.SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL B on A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID&#xD;&#xA;inner join dbo.SGT_PERSON_EMPLOYMENT_DETAIL C on B.PERSON_EMPLOYMENT_DTL_ID=C.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join dbo.SGT_PERSON_EMPLOYMENT D on C.PERSON_EMPLOYMENT_ID=D.PERSON_EMPLOYMENT_ID&#xD;&#xA;where A.person_id=@personid and A.plan_id=@planid and A.plan_participation_status_value='RTRD' &#xD;&#xA;and A.person_account_id &lt;&gt; @personaccountid">
      <parameters>
        <parameter ID="@personaccountid" sfwDataType="int" />
        <parameter ID="@personid" sfwDataType="int" />
        <parameter ID="@planid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetWithdrawnOptionalDBorDCPlanAccounts" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from dbo.SGT_PERSON_ACCOUNT A inner join &#xD;&#xA;dbo.SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL B on A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID&#xD;&#xA;inner join dbo.SGT_PERSON_EMPLOYMENT_DETAIL C on B.PERSON_EMPLOYMENT_DTL_ID=C.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join dbo.SGT_PERSON_EMPLOYMENT D on C.PERSON_EMPLOYMENT_ID=D.PERSON_EMPLOYMENT_ID&#xD;&#xA;where A.person_id=@personid and A.plan_id=@planid and A.plan_participation_status_value='WTN1' &#xD;&#xA;and A.person_account_id &lt;&gt; @personaccountid and c.type_value='TEMP'">
      <parameters>
        <parameter ID="@personid" sfwDataType="int" />
        <parameter ID="@planid" sfwDataType="int" />
        <parameter ID="@personaccountid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="IsMemberAlreadyReceivingBenefit" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select Count(*) from dbo.SGT_PERSON_ACCOUNT A inner join sgt_plan B on A.plan_id=B.plan_id&#xD;&#xA;where A.person_id=@personid and B.benefit_type_value='RETR' and A.plan_participation_status_value='RTRD' &#xD;&#xA;and A.person_account_id &lt;&gt; @personaccountid">
      <parameters>
        <parameter ID="@personid" sfwDataType="int" />
        <parameter ID="@personaccountid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadFYTDSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;sum(isnull(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;sum(isnull(EE_RHIC_SER_PUR_CONT,0)) as EE_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(ER_RHIC_SER_PUR_CONT,0)) as ER_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(POST_TAX_EE_SER_PUR_CONT,0)) as POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_SER_PUR_CONT,0)) as PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_SER_PUR_CONT,0)) as PRE_TAX_ER_SER_PUR_CONT,&#xD;&#xA;sum(isnull(ADEC_AMOUNT,0)) as ADEC_AMOUNT&#xD;&#xA;from&#xD;&#xA;(&#xD;&#xA;select PERSON_ACCOUNT_ID,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0) + isnull(EE_POST_TAX_ADDL_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0) + isnull(EE_PRETAX_ADDL_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0) + isnull(ER_PRETAX_MATCH_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;sum(isnull(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_ER_SER_PUR_CONT,&#xD;&#xA;sum(isnull(ADEC_AMOUNT,0)) ADEC_AMOUNT&#xD;&#xA;from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;where PERSON_ACCOUNT_ID=@PersonAccountID and &#xD;&#xA;(cast(year(TRANSACTION_DATE) as varchar(4))+ right('00' + cast(month(TRANSACTION_DATE) as varchar(2)),2)) &gt;= @StartMonth and&#xD;&#xA;(cast(year(TRANSACTION_DATE) as varchar(4))+ right('00' + cast(month(TRANSACTION_DATE) as varchar(2)),2)) &lt;= @EndMonth and&#xD;&#xA;TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC' group by PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;union all&#xD;&#xA;&#xD;&#xA;select PERSON_ACCOUNT_ID,&#xD;&#xA;0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;0 AS EE_RHIC_AMOUNT,&#xD;&#xA;0 AS ER_RHIC_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;sum(isnull(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) as EE_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) as ER_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0) + isnull(EE_POST_TAX_ADDL_AMOUNT,0)) as POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0) + isnull(EE_PRETAX_ADDL_AMOUNT,0)) as PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0) + isnull(ER_PRETAX_MATCH_AMOUNT,0)) as PRE_TAX_ER_SER_PUR_CONT,&#xD;&#xA;0 AS ADEC_AMOUNT&#xD;&#xA;from dbo.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;where PERSON_ACCOUNT_ID=@PersonAccountID and &#xD;&#xA;(cast(year(EFFECTIVE_DATE) as varchar(4))+ right('00' + cast(month(EFFECTIVE_DATE) as varchar(2)),2)) &gt;= @StartMonth and&#xD;&#xA;(cast(year(EFFECTIVE_DATE) as varchar(4))+ right('00' + cast(month(EFFECTIVE_DATE) as varchar(2)),2)) &lt;= @EndMonth and&#xD;&#xA;TRANSACTION_TYPE_VALUE = 'PURC'&#xD;&#xA;group by PERSON_ACCOUNT_ID&#xD;&#xA;) AS TEMP&#xD;&#xA;group by PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PersonAccountID" sfwDataType="int" />
        <parameter ID="@StartMonth" sfwDataType="string" />
        <parameter ID="@EndMonth" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadLTDSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT_LTD,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT_LTD,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT_LTD,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT_LTD,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT_LTD,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT_LTD,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT_LTD,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT_LTD,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT_LTD,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT_LTD,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT_LTD,&#xD;&#xA;sum(isnull(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST_LTD,&#xD;&#xA;sum(isnull(EE_RHIC_SER_PUR_CONT,0)) as EE_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA;sum(isnull(ER_RHIC_SER_PUR_CONT,0)) as ER_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA;sum(isnull(POST_TAX_EE_SER_PUR_CONT,0)) as POST_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA;sum(isnull(PRE_TAX_EE_SER_PUR_CONT,0)) as PRE_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA;sum(isnull(PRE_TAX_ER_SER_PUR_CONT,0)) as PRE_TAX_ER_SER_PUR_CONT_LTD,&#xD;&#xA;sum(isnull(ADEC_AMOUNT,0)) as ADEC_AMOUNT_LTD&#xD;&#xA;from&#xD;&#xA;(&#xD;&#xA;select PERSON_ACCOUNT_ID,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0) + isnull(EE_POST_TAX_ADDL_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0) + isnull(EE_PRETAX_ADDL_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0) + isnull(ER_PRETAX_MATCH_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;sum(isnull(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_ER_SER_PUR_CONT,&#xD;&#xA;sum(isnull(ADEC_AMOUNT,0)) ADEC_AMOUNT&#xD;&#xA;from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;where PERSON_ACCOUNT_ID=@PersonAccountID and TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC'&#xD;&#xA;group by PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;union all&#xD;&#xA;&#xD;&#xA;select PERSON_ACCOUNT_ID,&#xD;&#xA;0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;0 AS EE_RHIC_AMOUNT,&#xD;&#xA;0 AS ER_RHIC_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;sum(isnull(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) as EE_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) as ER_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0) + isnull(EE_POST_TAX_ADDL_AMOUNT,0)) as POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0) + isnull(EE_PRETAX_ADDL_AMOUNT,0)) as PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0) + isnull(ER_PRETAX_MATCH_AMOUNT,0)) as PRE_TAX_ER_SER_PUR_CONT,&#xD;&#xA;0 AS ADEC_AMOUNT&#xD;&#xA;from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;where PERSON_ACCOUNT_ID=@PersonAccountID and TRANSACTION_TYPE_VALUE = 'PURC'&#xD;&#xA;group by PERSON_ACCOUNT_ID&#xD;&#xA;) AS TEMP&#xD;&#xA;group by PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PersonAccountID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadEmploymentDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select B.*,O.*,D.*,O.STATUS_VALUE AS ORG_STATUS_VALUE from SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL A WITH(NOLOCK)&#xD;&#xA;inner join SGT_PERSON_EMPLOYMENT_DETAIL B WITH(NOLOCK) on &#xD;&#xA;A.PERSON_EMPLOYMENT_DTL_ID=B.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT C WITH(NOLOCK) ON C.PERSON_ACCOUNT_ID = A.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT D WITH(NOLOCK) ON B.PERSON_EMPLOYMENT_ID=D.PERSON_EMPLOYMENT_ID&#xD;&#xA;INNER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON D.ORG_ID=O.ORG_ID&#xD;&#xA;Where A.PERSON_ACCOUNT_ID=@personaccountid&#xD;&#xA;ORDER BY case when C.end_date is null then 0 else 1 end, b.start_date DESC, b.end_date DESC">
      <parameters>
        <parameter ID="@personaccountid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="DCTransferReminderBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="(SELECT RETR.*,DATEDIFF(DAY,GETDATE(),PARH.DC_ELIGIBILITY_DATE) AS DATEDIFFERENCE,SPA.PERSON_ID,&#xD;&#xA;PARH.DC_ELIGIBILITY_DATE AS HISTORY_ELIGIBILITY_DATE&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT RETR WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID=RETR.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON PLN.PLAN_ID=SPA.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) on PER.PERSON_ID=SPA.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY PARH WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID = PARH.PERSON_ACCOUNT_ID&#xD;&#xA;LEFT JOIN SGT_PERSON_ACCOUNT SPA1 WITH(NOLOCK) ON SPA.PERSON_ID=SPA1.PERSON_ID AND (SPA1.PLAN_ID=7 OR SPA1.PLAN_ID=28)&#xD;&#xA;WHERE&#xD;&#xA;PLN.PLAN_ID IN (1,26,27,29,3) AND SPA.PLAN_PARTICIPATION_STATUS_VALUE NOT IN ('SUS2','WTN1') AND --PIR 13134 – Repurposed under PIR 8015&#xD;&#xA;PARH.DC_ELIGIBILITY_DATE IS NOT NULL AND&#xD;&#xA;GETDATE() BETWEEN PARH.START_DATE AND ISNULL(PARH.END_DATE,'01/01/2900') AND&#xD;&#xA;PARH.START_DATE &lt;&gt; ISNULL(PARH.END_DATE,'01/01/2900') AND --IGNORE SAME DATED HISTORY RECORDS&#xD;&#xA;PLN.RETIREMENT_TYPE_VALUE = 'DB'&#xD;&#xA;AND (SPA1.PERSON_ID IS NULL OR SPA1.PLAN_PARTICIPATION_STATUS_VALUE &lt;&gt; 'ENL1')&#xD;&#xA;AND DATEDIFF(DAY,GETDATE(),PARH.DC_ELIGIBILITY_DATE) &gt; 0&#xD;&#xA;AND NOT EXISTS(SELECT 1 FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED WITH(NOLOCK) WHERE SPA.PERSON_ACCOUNT_ID = PAED.PERSON_ACCOUNT_ID&#xD;&#xA;AND (PAED.PLAN_ID = 7 OR PAED.PLAN_ID = 28) AND PAED.ELECTION_VALUE = 'WAVD'))">
      <parameters />
    </query>
    <query ID="LatestEndDateForEnrolled" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select top 1 * from sgt_person_account_retirement_history where person_account_id = @personaccountid and plan_participation_status_value = 'ENL1'&#xD;&#xA;">
      <parameters>
        <parameter ID="@personaccountid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadDBAccounts" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgt_person_account a inner join sgt_plan b &#xD;&#xA;on a.plan_id=b.plan_id where b.retirement_type_value='DB' and person_id=@personid and plan_participation_status_value=@status">
      <parameters>
        <parameter ID="@personid" sfwDataType="int" />
        <parameter ID="@status" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="fleFidelityDCEnrollmentOut" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT A.*,P.*,B.*,B.UPDATE_SEQ AS UPDATE_SEQ_PA_RETIREMENT FROM SGT_PERSON_ACCOUNT A &#xA;INNER JOIN SGT_PERSON P ON P.PERSON_ID = A.PERSON_ID&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT B ON&#xA;A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID &#xA;WHERE (A.PLAN_ID IN (7,28,30)) &#xA;AND PROVIDER_ORG_ID=&#xA;      (SELECT ORG_ID FROM SGT_ORGANIZATION WHERE ORG_CODE=(&#xA;            SELECT DATA1 FROM SGS_CODE_VALUE WHERE CODE_ID=52 AND CODE_VALUE='FDCP'))&#xA;AND ISNULL(A.PLAN_PARTICIPATION_STATUS_VALUE,'')NOT IN ('WTN1', 'CAN1', 'CAN2')">
      <parameters />
    </query>
    <query ID="LoadLTDSummaryForCalculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @ISRFNDPAYEEACCOUNT CHAR(1)&#xD;&#xA;SELECT    @ISRFNDPAYEEACCOUNT = 'Y'&#xD;&#xA;FROM    SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BENACT    &#xD;&#xA;INNER JOIN   SGT_BENEFIT_APPLICATION APP&#xD;&#xA;    ON BENACT.BENEFIT_APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA;INNER JOIN   SGT_PAYEE_ACCOUNT PA&#xD;&#xA;    ON PA.APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA;WHERE    BENACT.PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA;    AND PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT_LTD,&#xD;&#xA;SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT_LTD,&#xD;&#xA;SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST_LTD,&#xD;&#xA;SUM(ISNULL(EE_RHIC_SER_PUR_CONT,0)) AS EE_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA;SUM(ISNULL(ER_RHIC_SER_PUR_CONT,0)) AS ER_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA;SUM(ISNULL(POST_TAX_EE_SER_PUR_CONT,0)) AS POST_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA;SUM(ISNULL(PRE_TAX_EE_SER_PUR_CONT,0)) AS PRE_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA;sum(isnull(PRE_TAX_ER_SER_PUR_CONT,0)) as PRE_TAX_ER_SER_PUR_CONT_LTD&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;SUM(ISNULL(POST_TAX_EE_AMOUNT,0) + isnull(EE_POST_TAX_ADDL_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_EE_AMOUNT,0) + isnull(EE_PRETAX_ADDL_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_ER_AMOUNT,0) + isnull(ER_PRETAX_MATCH_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;FROM DBO.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID=@PERSONACCOUNTID AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC'&#xD;&#xA;AND TRANSACTION_TYPE_VALUE IN (SELECT CODE_VALUE FROM SGS_CODE_VALUE WHERE CODE_ID=350 AND DATA1='EFDT')&#xD;&#xA;--AND EFFECTIVE_DATE &lt;=@EFFECTIVE_DATE&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;SUM(ISNULL(POST_TAX_EE_AMOUNT,0) + isnull(EE_POST_TAX_ADDL_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_EE_AMOUNT,0) + isnull(EE_PRETAX_ADDL_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_ER_AMOUNT,0) + isnull(ER_PRETAX_MATCH_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;FROM DBO.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID=@PERSONACCOUNTID AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC'&#xD;&#xA;AND TRANSACTION_TYPE_VALUE IN (SELECT CODE_VALUE FROM SGS_CODE_VALUE WHERE CODE_ID=350 AND DATA1='CUDT')&#xD;&#xA;AND SUBSYSTEM_VALUE NOT IN (CASE WHEN ISNULL(@ISRFNDPAYEEACCOUNT,'N') = 'Y' THEN '' ELSE 'PMNT' END)&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;0 AS EE_RHIC_AMOUNT,&#xD;&#xA;0 AS ER_RHIC_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;SUM(ISNULL(EE_RHIC_AMOUNT,0)) AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(ER_RHIC_AMOUNT,0)) AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(POST_TAX_EE_AMOUNT,0) + isnull(EE_POST_TAX_ADDL_AMOUNT,0)) AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_EE_AMOUNT,0) + isnull(EE_PRETAX_ADDL_AMOUNT,0)) AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_ER_AMOUNT,0) + isnull(ER_PRETAX_MATCH_AMOUNT,0)) AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;FROM DBO.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID=@PERSONACCOUNTID AND TRANSACTION_TYPE_VALUE = 'PURC'&#xD;&#xA;AND TRANSACTION_TYPE_VALUE IN (SELECT CODE_VALUE FROM SGS_CODE_VALUE WHERE CODE_ID=350 AND DATA1='EFDT')&#xD;&#xA;--AND EFFECTIVE_DATE &lt;=@EFFECTIVE_DATE&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;0 AS EE_RHIC_AMOUNT,&#xD;&#xA;0 AS ER_RHIC_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;SUM(ISNULL(EE_RHIC_AMOUNT,0)) AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(ER_RHIC_AMOUNT,0)) AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(POST_TAX_EE_AMOUNT,0) + isnull(EE_POST_TAX_ADDL_AMOUNT,0)) AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_EE_AMOUNT,0) + isnull(EE_PRETAX_ADDL_AMOUNT,0)) AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_ER_AMOUNT,0) + isnull(ER_PRETAX_MATCH_AMOUNT,0)) AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;FROM DBO.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID=@PERSONACCOUNTID AND TRANSACTION_TYPE_VALUE = 'PURC'&#xD;&#xA;AND TRANSACTION_TYPE_VALUE IN (SELECT CODE_VALUE FROM SGS_CODE_VALUE WHERE CODE_ID=350 AND DATA1='CUDT')&#xD;&#xA;AND SUBSYSTEM_VALUE NOT IN (CASE WHEN ISNULL(@ISRFNDPAYEEACCOUNT,'N') = 'Y' THEN '' ELSE 'PMNT' END)&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;) AS TEMP&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@EFFECTIVE_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadDBDBTransferDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select&#xD;&#xA;CAST(p2.person_id as varchar(50))+' '+ ISNULL(p2.last_name,'') +', '+ ISNULL(p2.first_name,'') +' '+ ISNULL(p2.middle_name,'') as istrFromPersonName,&#xD;&#xA;CAST(p1.person_id as varchar(50))+' '+ISNULL(p1.last_name,'') +', '+ ISNULL(p1.first_name,'')+' '+ ISNULL(p1.middle_name,'') as istrToPersonName,&#xD;&#xA;pl1.plan_name as istrFromPlanName, pl2.plan_name as istrToPlanName, &#xD;&#xA;tr.*&#xD;&#xA; from sgt_person_account_retirement_db_db_transfer tr WITH(NOLOCK) &#xD;&#xA;inner join sgt_person_account pa1 WITH(NOLOCK) on pa1.person_account_id = tr.to_person_account_id&#xD;&#xA;inner join sgt_person p1 WITH(NOLOCK) on p1.person_id = pa1.person_id&#xD;&#xA;inner join sgt_plan pl1 WITH(NOLOCK) on pl1.plan_id = pa1.plan_id&#xD;&#xA;inner join sgt_person_account pa2 WITH(NOLOCK) on pa2.person_account_id = tr.from_person_account_id&#xD;&#xA;inner join sgt_person p2 WITH(NOLOCK) on p2.person_id = pa2.person_id&#xD;&#xA;inner join sgt_plan pl2 WITH(NOLOCK) on pl2.plan_id = pa2.plan_id&#xD;&#xA;where (tr.to_person_account_id =  @personAccountid&#xD;&#xA;or tr.from_person_account_id = @personAccountid)">
      <parameters>
        <parameter ID="@personAccountid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateCapitalGain" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE PAR&#xD;&#xA;SET  PAR.CAPITAL_GAIN=case when PAR.CAPITAL_GAIN &gt;0 then PAR.CAPITAL_GAIN -isnull(TEMP.CAPITAL_GAIN,0.00) else 0.00 end,&#xD;&#xA;  PAR.MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;  PAR.MODIFIED_DATE=GETDATE()&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT PAR&#xD;&#xA;INNER JOIN (&#xD;&#xA;SELECT &#xD;&#xA; BAPA.PERSON_ACCOUNT_ID,BCO.CAPITAL_GAIN&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS  &#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  AND ISNULL(PHH.ORG_ID,0) = ISNULL(PA.PAYEE_ORG_ID,0) AND ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_BENEFIT_APPLICATION BA  &#xD;&#xA;  ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA; INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA &#xD;&#xA;  ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;  and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA; LEFT JOIN SGT_BENEFIT_CALCULATION_PAYEE BCP &#xD;&#xA;  ON BCP.BENEFIT_CALCULATION_ID=PA.CALCULATION_ID AND bcp.PAYEE_PERSON_ID=PA.PAYEE_PERSlINK_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_CALCULATION_OPTIONS BCO&#xD;&#xA;  ON BCO.BENEFIT_CALCULATION_ID=PA.CALCULATION_ID &#xD;&#xA;WHERE (CV.DATA2 = 'APRD' OR CV.DATA2 = 'RECV') &#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA; AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA; AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE IN('REFD','AURD')&#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; AND PA.BENEFIT_ACCOUNT_TYPE_VALUE in ('DETH')&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; DROA.PERSON_ACCOUNT_ID,DROC.CAPITAL_GAIN&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS  &#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  AND ISNULL(PHH.ORG_ID,0) = ISNULL(PA.PAYEE_ORG_ID,0) AND ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_BENEFIT_DRO_CALCULATION  DROC  &#xD;&#xA;  ON PA.DRO_CALCULATION_ID = DROC.DRO_CALCULATION_ID&#xD;&#xA; INNER JOIN DBO.SGT_BENEFIT_DRO_APPLICATION DROA  &#xD;&#xA;  ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA;WHERE (CV.DATA2 = 'APRD')&#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA; AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA; AND PA.DRO_CALCULATION_ID IS NOT NULL&#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; BAPA.PERSON_ACCOUNT_ID,PAR.CAPITAL_GAIN&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS  &#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  AND ISNULL(PHH.ORG_ID,0) = ISNULL(PA.PAYEE_ORG_ID,0) AND ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE &#xD;&#xA; INNER JOIN SGT_BENEFIT_APPLICATION BA  &#xD;&#xA;  ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA; INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA &#xD;&#xA;  ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;  and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT PAR&#xD;&#xA;  ON BAPA.PERSON_ACCOUNT_ID=PAR.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE (CV.DATA2 = 'APRD') --  OR CV.DATA2 = 'RECV' -- Removed as discssed with Satya&#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA; AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA; AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA; AND ((PA.BENEFIT_ACCOUNT_TYPE_VALUE in ('DETH') AND PA.BENEFIT_OPTION_VALUE NOT IN('REFD','AURD')) &#xD;&#xA;  OR PA.BENEFIT_ACCOUNT_TYPE_VALUE IN('RETR','RFND'))&#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;)TEMP&#xD;&#xA;ON TEMP.PERSON_ACCOUNT_ID=PAR.PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadLTDSummaryAsonDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT_LTD,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT_LTD,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT_LTD,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT_LTD,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT_LTD,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT_LTD,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT_LTD,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT_LTD,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT_LTD,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT_LTD,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT_LTD,&#xD;&#xA;sum(isnull(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST_LTD,&#xD;&#xA;sum(isnull(EE_RHIC_SER_PUR_CONT,0)) as EE_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA;sum(isnull(ER_RHIC_SER_PUR_CONT,0)) as ER_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA;sum(isnull(POST_TAX_EE_SER_PUR_CONT,0)) as POST_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA;sum(isnull(PRE_TAX_EE_SER_PUR_CONT,0)) as PRE_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA;sum(isnull(PRE_TAX_ER_SER_PUR_CONT,0)) as PRE_TAX_ER_SER_PUR_CONT_LTD&#xD;&#xA;&#xD;&#xA;from&#xD;&#xA;(&#xD;&#xA;select PERSON_ACCOUNT_ID,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0) + isnull(EE_POST_TAX_ADDL_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0) + isnull(EE_PRETAX_ADDL_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0) + isnull(ER_PRETAX_MATCH_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;sum(isnull(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;from dbo.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;where PERSON_ACCOUNT_ID=@PersonAccountID and TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC'&#xD;&#xA;and EFFECTIVE_DATE &lt;= @Effective_date&#xD;&#xA;group by PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;union all&#xD;&#xA;&#xD;&#xA;select PERSON_ACCOUNT_ID,&#xD;&#xA;0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;0 AS EE_RHIC_AMOUNT,&#xD;&#xA;0 AS ER_RHIC_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;sum(isnull(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) as EE_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) as ER_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0) + isnull(EE_POST_TAX_ADDL_AMOUNT,0)) as POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0) + isnull(EE_PRETAX_ADDL_AMOUNT,0)) as PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0) + isnull(ER_PRETAX_MATCH_AMOUNT,0)) as PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;from dbo.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;where PERSON_ACCOUNT_ID=@PersonAccountID and TRANSACTION_TYPE_VALUE = 'PURC'&#xD;&#xA;and EFFECTIVE_DATE &lt;= @Effective_date&#xD;&#xA;group by PERSON_ACCOUNT_ID&#xD;&#xA;) AS TEMP&#xD;&#xA;group by PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PersonAccountID" sfwDataType="int" />
        <parameter ID="@Effective_date" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadFYTDSummaryForTFFRTransfer" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;sum(isnull(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;sum(isnull(EE_RHIC_SER_PUR_CONT,0)) as EE_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(ER_RHIC_SER_PUR_CONT,0)) as ER_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(POST_TAX_EE_SER_PUR_CONT,0)) as POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_SER_PUR_CONT,0)) as PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_SER_PUR_CONT,0)) as PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;from&#xD;&#xA;(&#xD;&#xA;select PERSON_ACCOUNT_ID,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0) + isnull(EE_POST_TAX_ADDL_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0) + isnull(EE_PRETAX_ADDL_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0) + isnull(ER_PRETAX_MATCH_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;sum(isnull(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;where PERSON_ACCOUNT_ID=@PersonAccountID and &#xD;&#xA;EFFECTIVE_DATE &gt;= @StartDate and&#xD;&#xA;EFFECTIVE_DATE &lt;= @EndDate and&#xD;&#xA;TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC' group by PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;union all&#xD;&#xA;&#xD;&#xA;select PERSON_ACCOUNT_ID,&#xD;&#xA;0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;0 AS EE_RHIC_AMOUNT,&#xD;&#xA;0 AS ER_RHIC_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;sum(isnull(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) as EE_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) as ER_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0) + isnull(EE_POST_TAX_ADDL_AMOUNT,0)) as POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0) + isnull(EE_PRETAX_ADDL_AMOUNT,0)) as PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0) + isnull(ER_PRETAX_MATCH_AMOUNT,0)) as PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;from dbo.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;where PERSON_ACCOUNT_ID=@PersonAccountID and &#xD;&#xA;EFFECTIVE_DATE &gt;= @StartDate and&#xD;&#xA;EFFECTIVE_DATE &lt;= @EndDate and&#xD;&#xA;TRANSACTION_TYPE_VALUE = 'PURC'&#xD;&#xA;group by PERSON_ACCOUNT_ID&#xD;&#xA;) AS TEMP&#xD;&#xA;group by PERSON_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PersonAccountID" sfwDataType="int" />
        <parameter ID="@StartDate" sfwDataType="DateTime" />
        <parameter ID="@EndDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="VestedMembershipLetterBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_ACCOUNT_RETIREMENT SPAR WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPAR.PERSON_ACCOUNT_ID=SPA.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON SP WITH(NOLOCK) ON SPA.PERSON_ID=SP.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PLAN SPL WITH(NOLOCK) ON SPA.PLAN_ID=SPL.PLAN_ID&#xD;&#xA;WHERE SPAR.VESTING_LETTER_SENT_FLAG = 'N'">
      <parameters />
    </query>
    <query ID="LoadLTDSummarForDROCalculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @ISRFNDPAYEEACCOUNT CHAR(1)&#xD;&#xA;SELECT    @ISRFNDPAYEEACCOUNT = 'Y'&#xD;&#xA;FROM    SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BENACT    &#xD;&#xA;INNER JOIN   SGT_BENEFIT_APPLICATION APP&#xD;&#xA;    ON BENACT.BENEFIT_APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA;INNER JOIN   SGT_PAYEE_ACCOUNT PA&#xD;&#xA;    ON PA.APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA;WHERE    BENACT.PERSON_ACCOUNT_ID = @PERSONACCOUNTID&#xD;&#xA;    AND PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT_LTD,&#xD;&#xA;SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT_LTD,&#xD;&#xA;SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT_LTD,&#xD;&#xA;SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST_LTD,&#xD;&#xA;SUM(ISNULL(EE_RHIC_SER_PUR_CONT,0)) AS EE_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA;SUM(ISNULL(ER_RHIC_SER_PUR_CONT,0)) AS ER_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA;SUM(ISNULL(POST_TAX_EE_SER_PUR_CONT,0)) AS POST_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA;SUM(ISNULL(PRE_TAX_EE_SER_PUR_CONT,0)) AS PRE_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA;sum(isnull(PRE_TAX_ER_SER_PUR_CONT,0)) as PRE_TAX_ER_SER_PUR_CONT_LTD&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;FROM DBO.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID=@PERSONACCOUNTID AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC'&#xD;&#xA;AND TRANSACTION_TYPE_VALUE IN (SELECT CODE_VALUE FROM SGS_CODE_VALUE WHERE CODE_ID=350 AND DATA1='EFDT')&#xD;&#xA;AND EFFECTIVE_DATE &lt;=@EFFECTIVE_DATE&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;FROM DBO.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID=@PERSONACCOUNTID AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC'&#xD;&#xA;AND TRANSACTION_TYPE_VALUE IN (SELECT CODE_VALUE FROM SGS_CODE_VALUE WHERE CODE_ID=350 AND DATA1='CUDT')&#xD;&#xA;AND SUBSYSTEM_VALUE NOT IN (CASE WHEN ISNULL(@ISRFNDPAYEEACCOUNT,'N') = 'Y' THEN '' ELSE 'PMNT' END)&#xD;&#xA;AND EFFECTIVE_DATE &lt;=@EFFECTIVE_DATE -- PROD PIR ID 1414 Interest after Divorce date should not included.&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;0 AS EE_RHIC_AMOUNT,&#xD;&#xA;0 AS ER_RHIC_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;SUM(ISNULL(EE_RHIC_AMOUNT,0)) AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(ER_RHIC_AMOUNT,0)) AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;FROM DBO.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID=@PERSONACCOUNTID AND TRANSACTION_TYPE_VALUE = 'PURC'&#xD;&#xA;AND TRANSACTION_TYPE_VALUE IN (SELECT CODE_VALUE FROM SGS_CODE_VALUE WHERE CODE_ID=350 AND DATA1='EFDT')&#xD;&#xA;AND EFFECTIVE_DATE &lt;=@EFFECTIVE_DATE&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;0 AS EE_RHIC_AMOUNT,&#xD;&#xA;0 AS ER_RHIC_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;SUM(ISNULL(EE_RHIC_AMOUNT,0)) AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(ER_RHIC_AMOUNT,0)) AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;FROM DBO.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION(NOLOCK)&#xD;&#xA;WHERE PERSON_ACCOUNT_ID=@PERSONACCOUNTID AND TRANSACTION_TYPE_VALUE = 'PURC'&#xD;&#xA;AND TRANSACTION_TYPE_VALUE IN (SELECT CODE_VALUE FROM SGS_CODE_VALUE WHERE CODE_ID=350 AND DATA1='CUDT')&#xD;&#xA;AND SUBSYSTEM_VALUE NOT IN (CASE WHEN ISNULL(@ISRFNDPAYEEACCOUNT,'N') = 'Y' THEN '' ELSE 'PMNT' END)&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;) AS TEMP&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@EFFECTIVE_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="IsEnrolledInPriorDBDC" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;CASE WHEN ((select count(PERSON_ACCOUNT_ID) FROM SGT_PERSON_ACCOUNT PA INNER JOIN SGT_PLAN P ON PA.PLAN_ID = P.PLAN_ID &#xD;&#xA; where PA.PERSON_ID = @PERSON_ID AND PA.START_DATE &lt; @PRIOR_END_DATE&#xD;&#xA;AND P.BENEFIT_TYPE_VALUE = 'RETR' AND (P.PLAN_ID &lt;&gt; 7 AND P.PLAN_ID &lt;&gt; 28)) &gt; 0) THEN 'Y' ELSE 'N' END AS DB_ENROLLED,&#xD;&#xA;CASE WHEN ((select count(PERSON_ACCOUNT_ID) FROM SGT_PERSON_ACCOUNT PA INNER JOIN SGT_PLAN P ON PA.PLAN_ID = P.PLAN_ID &#xD;&#xA; where PA.PERSON_ID = @PERSON_ID AND PA.START_DATE &lt; @PRIOR_END_DATE&#xD;&#xA;AND P.BENEFIT_TYPE_VALUE = 'RETR' AND (P.PLAN_ID = 7 OR P.PLAN_ID =28)) &gt; 0) THEN 'Y' ELSE 'N' END DC_ENROLLED">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PRIOR_END_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadAllEmploymentDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select B.*,O.*,D.*,O.STATUS_VALUE AS ORG_STATUS_VALUE from SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL A &#xD;&#xA;inner join SGT_PERSON_EMPLOYMENT_DETAIL B on &#xD;&#xA;A.PERSON_EMPLOYMENT_DTL_ID=B.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT C ON C.PERSON_ACCOUNT_ID = A.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT D ON B.PERSON_EMPLOYMENT_ID=D.PERSON_EMPLOYMENT_ID&#xD;&#xA;INNER JOIN SGT_ORGANIZATION O ON D.ORG_ID=O.ORG_ID&#xD;&#xA;Where C.PERSON_ID=@personid&#xD;&#xA;AND B.START_DATE != ISNULL(B.END_DATE, '99991231')&#xD;&#xA;ORDER BY case when C.end_date is null then 0 else 1 end, b.start_date DESC, b.end_date DESC">
      <parameters>
        <parameter ID="@personid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadEmploymentDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select B.* from SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL A &#xD;&#xA;inner join SGT_PERSON_EMPLOYMENT_DETAIL B on A.PERSON_EMPLOYMENT_DTL_ID=B.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT C ON C.PERSON_ACCOUNT_ID = A.PERSON_ACCOUNT_ID&#xD;&#xA;Where c.PERSON_ID=@personid&#xD;&#xA;ORDER BY case when C.end_date is null then 0 else 1 end, b.start_date DESC, b.end_date DESC">
      <parameters>
        <parameter ID="@personid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckResourceForLoggedInUser" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT U.* FROM SGS_USER U&#xD;&#xA;INNER JOIN SGS_USER_ROLES UR ON U.USER_SERIAL_ID = UR.USER_SERIAL_ID &#xD;&#xA;AND ((UR.EFFECTIVE_START_DATE IS NULL) OR (UR.EFFECTIVE_START_DATE&lt;=CONVERT(DATETIME,CONVERT(CHAR,GETDATE(),103),103)))&#xD;&#xA;AND ((UR.EFFECTIVE_END_DATE IS NULL) OR (UR.EFFECTIVE_END_DATE&gt;=CONVERT(DATETIME,CONVERT(CHAR,GETDATE(),103),103)))   &#xD;&#xA;INNER JOIN SGS_SECURITY S ON S.ROLE_ID = UR.ROLE_ID AND S.SECURITY_VALUE != 0&#xD;&#xA;INNER JOIN SGS_RESOURCES R ON R.RESOURCE_ID = S.RESOURCE_ID&#xD;&#xA;WHERE S.RESOURCE_ID = 238 AND U.USER_SERIAL_ID = @USER_SERIAL_ID&#xD;&#xA;">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="IsPersonPriorEnrolledInDC" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9;  CASE WHEN ((SELECT&#xA;&#x9; count(PERSON_ACCOUNT_ID) &#xA;FROM&#xA;&#x9; SGT_PERSON_ACCOUNT PA WITH(NOLOCK) &#xA;&#x9;INNER &#xA;&#x9; JOIN SGT_PLAN P WITH(NOLOCK)&#xA;&#x9; ON PA.PLAN_ID = P.PLAN_ID &#xA;WHERE&#xA;&#x9; PA.PERSON_ID = @PERSON_ID AND&#xA;&#x9; P.BENEFIT_TYPE_VALUE = 'RETR' AND&#xA;&#x9; (P.PLAN_ID = 7 OR P.PLAN_ID = 28) AND&#xA;&#x9;  (PA.PLAN_PARTICIPATION_STATUS_VALUE like 'ENL%' or PLAN_PARTICIPATION_STATUS_VALUE like 'SUS%')) &gt; 0) THEN 'Y' ELSE 'N' END DC_ENROLLED">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="IsPersonEnrolledAsofBatchDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY PARH WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = PARH.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PLAN_ID IN (1,27,5,2,20,26,3,29) AND PARH.PLAN_PARTICIPATION_STATUS_VALUE LIKE '%ENL%' AND @BATCH_DATE BETWEEN PARH.[START_DATE] AND ISNULL(PARH.[END_DATE],'99991231')&#xD;&#xA;AND PERSON_ID = @PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@BATCH_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadBenefitTierByPriorEnrolledHistoryDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @PRIORENROLLEDDATE DATE&#xD;&#xA;&#xD;&#xA;SELECT @PRIORENROLLEDDATE = MIN(PARH.[START_DATE]) FROM SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY PARH WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK) ON PA.PERSON_ACCOUNT_ID = PARH.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE PLAN_ID IN (1,27,2,20,3,26,29,5) AND PERSON_ID = @PERSON_ID AND PARH.PLAN_PARTICIPATION_STATUS_VALUE ='ENL1' &#xD;&#xA;AND PARH.[START_DATE] &lt;&gt; ISNULL(PARH.END_DATE, '99991231')&#xD;&#xA;&#xD;&#xA;IF @PRIORENROLLEDDATE IS NULL OR @PLAN_ID = 26&#xD;&#xA;BEGIN&#xD;&#xA;SET @PRIORENROLLEDDATE = @EFFECTIVEDATE&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;SELECT TOP 1 * FROM SGS_CODE_VALUE WITH(NOLOCK) WHERE CODE_ID=7003 AND DATA1 &lt;= @PRIORENROLLEDDATE AND DATA2 = @PLAN_ID ORDER BY DATA1 DESC">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadHB1040ComparisonLetter" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_HB1040_COMMUNICATION WITH(NOLOCK) ORDER BY PERSON_ID">
      <parameters />
    </query>
    <query ID="UpdateMatch3InsertedForBERandPS" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @COUNTDC INT &#xD;&#xA;&#xD;&#xA;SELECT @COUNTDC = COUNT(ENROLLMENT_DATA_ID) FROM SGT_ENROLLMENT_DATA WHERE&#xD;&#xA;PLAN_ID = 19 AND &#xD;&#xA;EMPLOYEE_EMPLOYER_MATCH = 'Employer Match up to 3%' AND&#xD;&#xA;NDPERS_MEMBER_ID = @PERSON_ID AND&#xD;&#xA;(IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N' OR PEOPLESOFT_FILE_SENT_FLAG = 'N')&#xD;&#xA;&#xD;&#xA;IF (@COUNTDC) &gt; 0&#xD;&#xA;BEGIN&#xD;&#xA;UPDATE SGT_ENROLLMENT_DATA SET IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y', PEOPLESOFT_FILE_SENT_FLAG = 'Y'&#xD;&#xA;WHERE PLAN_ID = 19 AND &#xD;&#xA;EMPLOYEE_EMPLOYER_MATCH = 'Employer Match up to 3%' AND&#xD;&#xA;NDPERS_MEMBER_ID = @PERSON_ID AND&#xD;&#xA;(IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'N' OR PEOPLESOFT_FILE_SENT_FLAG = 'N')&#xD;&#xA;END">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckIfMatch3InsertedForBERorPS" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_ENROLLMENT_DATA WITH(NOLOCK) WHERE&#xD;&#xA;PLAN_ID = 19 AND &#xD;&#xA;EMPLOYEE_EMPLOYER_MATCH = 'Employer Match up to 3%' AND&#xD;&#xA;NDPERS_MEMBER_ID = @PERSON_ID AND&#xD;&#xA;(((IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y' OR PEOPLESOFT_FILE_SENT_FLAG = 'Y') AND PEOPLESOFT_ORG_GROUP_VALUE = 'STAT') OR&#xD;&#xA;(IS_BENEFIT_ENROLLMENT_REPORT_GENERATED = 'Y' AND PEOPLESOFT_ORG_GROUP_VALUE != 'STAT'))">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="PersonAccountId" sfwType="Column" sfwValue="person_account_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="DcEligibilityDate" sfwType="Column" sfwValue="dc_eligibility_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="MutualFundWindowFlag" sfwType="Column" sfwValue="mutual_fund_window_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="CapitalGain" sfwType="Column" sfwValue="capital_gain" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="RhicBenfitAmount" sfwType="Column" sfwValue="rhic_benfit_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="VestingLetterSentFlag" sfwType="Column" sfwValue="vesting_letter_sent_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DcFileSentFlag" sfwType="Column" sfwValue="dc_file_sent_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DcTrasnferReminderLetter1Flag" sfwType="Column" sfwValue="dc_trasnfer_reminder_letter1_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DcTrasnferReminderLetter2Flag" sfwType="Column" sfwValue="dc_trasnfer_reminder_letter2_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DcTrasnferReminderLetter3Flag" sfwType="Column" sfwValue="dc_trasnfer_reminder_letter3_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DcTrasnferReminderLetter1Date" sfwType="Column" sfwValue="dc_trasnfer_reminder_letter1_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="BenefitTierDescription" sfwType="Description" sfwValue="benefit_tier_description" />
    <attribute ID="BenefitTierId" sfwType="Column" sfwValue="benefit_tier_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwCodeID="7003" />
    <attribute ID="BenefitTierValue" sfwType="Column" sfwValue="benefit_tier_value" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" />
    <attribute sfwDataType="string" sfwType="Property" ID="BenefitTierDescriptionDisplay" sfwValue="icdoPersonAccountRetirement.benefit_tier_description_display" />
    <attribute sfwDataType="int" sfwType="Property" ID="PersonId" sfwValue="icdoPersonAccount.person_id" />
    <attribute ID="objPlan" sfwType="Object" sfwEntity="entPlan" sfwValue="ibusPlan" />
    <attribute sfwDataType="string" sfwType="Property" ID="PlanParticipationStatusDescription" sfwValue="icdoPersonAccount.plan_participation_status_description" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="StartDate" sfwValue="icdoPersonAccount.start_date" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecFAS" sfwValue="idecFAS" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDisability" sfwValue="idecDisability" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecAccruedBenefit" sfwValue="idecAccruedBenefit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecAccruedRHICBenefit" sfwValue="idecAccruedRHICBenefit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="VestedEmployerContPercent" sfwValue="icdoPersonAccount.vested_employer_cont_percent" />
    <attribute sfwDataType="string" sfwType="Property" ID="CreatedBy1" sfwValue="icdoPersonAccountRetirement.created_by" />
    <attribute sfwDataType="int" sfwType="Property" ID="UpdateSeq1" sfwValue="icdoPersonAccountRetirement.update_seq" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="CreatedDate1" sfwValue="icdoPersonAccountRetirement.created_date" />
    <attribute sfwDataType="string" sfwType="Property" ID="ModifiedBy1" sfwValue="icdoPersonAccountRetirement.modified_by" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="ModifiedDate1" sfwValue="icdoPersonAccountRetirement.modified_date" />
    <attribute ID="objPerson" sfwType="Object" sfwEntity="entPerson" sfwValue="ibusPerson" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountRetirementContribution" ID="lstRetirementContribution" sfwValue="iclbRetirementContribution" />
    <attribute sfwDataType="string" sfwType="Property" ID="StatusDescription" sfwValue="icdoPersonAccount.status_description" />
    <attribute sfwDataType="string" sfwType="Property" ID="SuppressWarningsFlag" sfwValue="icdoPersonAccount.suppress_warnings_flag" />
    <attribute sfwDataType="string" sfwType="Property" ID="PlanParticipationStatusValue" sfwValue="icdoPersonAccount.plan_participation_status_value" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtInitialStartDate" sfwValue="idtInitialStartDate" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="HistoryChangeDate" sfwValue="icdoPersonAccount.history_change_date" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrAllowOverlapHistory" sfwValue="istrAllowOverlapHistory" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="DcEligibilityDate1" sfwValue="icdoPersonAccountRetirement.dc_eligibility_date" />
    <attribute sfwDataType="string" sfwType="Property" ID="MutualFundWindowFlag1" sfwValue="icdoPersonAccountRetirement.mutual_fund_window_flag" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecCapitalGainContribution" sfwValue="idecCapitalGainContribution" />
    <attribute sfwDataType="string" sfwType="Property" ID="IsFYTD" sfwValue="IsFYTD" />
    <attribute sfwDataType="int" sfwType="Property" ID="PersonEmploymentDtlId" sfwValue="icdoPersonAccount.person_employment_dtl_id" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrQDROExists" sfwValue="istrQDROExists" />
    <attribute sfwDataType="string" sfwType="Property" ID="SuppressWarningsBy" sfwValue="icdoPersonAccount.suppress_warnings_by" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="RhicBenfitAmount1" sfwValue="icdoPersonAccountRetirement.rhic_benfit_amount" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountRetirementHistory" ID="lstPersonAccountRetirementHistory" sfwValue="icolPersonAccountRetirementHistory" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PostTaxEeAmount" sfwValue="post_tax_ee_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PostTaxEeAmountLtd" sfwValue="post_tax_ee_amount_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PostTaxEeSerPurCont" sfwValue="post_tax_ee_ser_pur_cont" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PostTaxEeSerPurContLtd" sfwValue="post_tax_ee_ser_pur_cont_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="EeRhicAmount" sfwValue="ee_rhic_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="EeRhicAmountLtd" sfwValue="ee_rhic_amount_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="EeRhicSerPurCont" sfwValue="ee_rhic_ser_pur_cont" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="EeRhicSerPurContLtd" sfwValue="ee_rhic_ser_pur_cont_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PostTaxTotalContribution" sfwValue="Post_Tax_Total_Contribution" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PostTaxTotalContributionLtd" sfwValue="Post_Tax_Total_Contribution_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PreTaxEeAmount" sfwValue="pre_tax_ee_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PreTaxEeAmountLtd" sfwValue="pre_tax_ee_amount_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="EeErPickupAmount" sfwValue="ee_er_pickup_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="EeErPickupAmountLtd" sfwValue="ee_er_pickup_amount_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PreTaxEeSerPurCont" sfwValue="pre_tax_ee_ser_pur_cont" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PreTaxEeSerPurContLtd" sfwValue="pre_tax_ee_ser_pur_cont_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="ErVestedAmount" sfwValue="er_vested_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="ErVestedAmountLtd" sfwValue="er_vested_amount_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="InterestAmount" sfwValue="interest_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="InterestAmountLtd" sfwValue="interest_amount_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecPreTaxEmployeeContributionToDisplay" sfwValue="idecPreTaxEmployeeContributionToDisplay" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecPreTaxEmployeeContributionLTDToDisplay" sfwValue="idecPreTaxEmployeeContributionLTDToDisplay" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberAccountBalanceToDisplay" sfwValue="idecMemberAccountBalanceToDisplay" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberAccountBalanceLTDToDisplay" sfwValue="idecMemberAccountBalanceLTDToDisplay" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PreTaxErAmount" sfwValue="pre_tax_er_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PreTaxErAmountLtd" sfwValue="pre_tax_er_amount_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PreTaxErSerPurCont" sfwValue="pre_tax_er_ser_pur_cont" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PreTaxErSerPurContLtd" sfwValue="pre_tax_er_ser_pur_cont_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="EmployerInterest" sfwValue="Employer_Interest" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="EmployerInterestLtd" sfwValue="Employer_Interest_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="ErRhicAmount" sfwValue="er_rhic_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="ErRhicAmountLtd" sfwValue="er_rhic_amount_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="ErRhicSerPurCont" sfwValue="er_rhic_ser_pur_cont" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="ErRhicSerPurContLtd" sfwValue="er_rhic_ser_pur_cont_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PreTaxEmployerContribution" sfwValue="Pre_Tax_Employer_Contribution" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PreTaxEmployerContributionLtd" sfwValue="Pre_Tax_Employer_Contribution_ltd" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountMissedDeposit" ID="lstPersonAccountMissedDeposit" sfwValue="iclbPersonAccountMissedDeposit" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintMissedDepositCount" sfwValue="iintMissedDepositCount" />
    <attribute sfwType="Collection" sfwEntity="entPersonEmploymentDetail" ID="lstEmploymentDetail" sfwValue="iclbEmploymentDetail" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountAdjustment" ID="lstAdjustment" sfwValue="iclbAdjustment" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountRetirementDbDcTransferEstimate" ID="lstDBDCTransfer" sfwValue="iclbDBDCTransfer" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountRetirementDbDbTransfer" ID="lstDBDBTransfer" sfwValue="iclbDBDBTransfer" />
    <attribute sfwDataType="int" sfwType="Property" ID="PersonAccountId1" sfwValue="icdoPersonAccountRetirement.person_account_id" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PreTaxTotalContributionLtd" sfwValue="Pre_Tax_Total_Contribution_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="PreTaxEmployeeContributionLtd" sfwValue="Pre_Tax_Employee_Contribution_ltd" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="MemberAccountBalanceLtd" sfwValue="Member_Account_Balance_ltd" />
    <attribute sfwDataType="string" sfwType="Property" ID="PensionServiceCreditFormatted" sfwValue="icdoPersonAccount.pension_service_credit_formatted" />
    <attribute sfwDataType="string" sfwType="Property" ID="VestedServiceCreditFormatted" sfwValue="icdoPersonAccount.vested_service_credit_formatted" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="TotalPSC" sfwValue="icdoPersonAccount.Total_PSC" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="TotalVSC" sfwValue="icdoPersonAccount.Total_VSC" />
    <attribute sfwDataType="string" sfwType="Property" ID="ViewAccruedBenefit" sfwValue="icdoPersonAccountRetirement.view_accrued_benefit" />
    <attribute ID="objPersonAccountRetirement" sfwType="Object" sfwEntity="entPersonAccountRetirement" sfwValue="ibusPersonAccountRetirement" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMSSRHICServiceCreditContribution" sfwValue="icdoPersonAccountRetirement.idecMSSRHICServiceCreditContribution" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="Idec20PercentageMemberAccountBalance" sfwValue="idec20PercentageMemberAccountBalance" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrImage" sfwValue="istrImage" />
    <attribute sfwDataType="int" sfwType="Property" ID="PlanId" sfwValue="icdoPersonAccount.plan_id" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintHP" sfwValue="iintHP" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintBCI" sfwValue="iintBCI" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintJudges" sfwValue="iintJudges" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintMainOrLEOrNG" sfwValue="iintMainOrLEOrNG" />
    <attribute ID="objRetirementBenefitCalculation" sfwType="Object" sfwEntity="entRetirementBenefitCalculation" sfwValue="ibusRetirementBenefitCalculation" />
    <attribute sfwDataType="string" sfwType="Property" ID="IdteCurrentDateLongDate" sfwValue="idteCurrentDateLongDate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrTotalPSC" sfwValue="istrTotalPSC" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrDCEligibilityEndDate" sfwValue="istrDCEligibilityEndDate" />
    <attribute sfwType="Object" sfwEntity="entPersonAccount" sfwValue="ibusPersonAccount" ID="objPersonAccount" />
    <attribute ID="objProvider" sfwType="Object" sfwEntity="entOrganization" sfwValue="ibusProvider" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrLastContributionMonthYear" sfwValue="istrLastContributionMonthYear" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalTVSC" sfwValue="idecTotalTVSC" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsPersonVested" sfwValue="istrIsPersonVested" />
    <attribute sfwDataType="string" sfwType="Property" ID="DcTransferFirstReminderLongDate" sfwValue="icdoPersonAccountRetirement.dc_transfer_first_reminder_long_date" />
    <attribute sfwDataType="string" sfwType="Property" ID="DcEligibilityLongDate" sfwValue="icdoPersonAccountRetirement.dc_eligibility_long_date" />
    <attribute sfwDataType="int" sfwType="Property" ID="LetterNo" sfwValue="icdoPersonAccountRetirement.LetterNo" />
    <attribute sfwDataType="int" sfwType="Property" ID="RoundedTotalVSC" sfwValue="icdoPersonAccount.Rounded_Total_VSC" />
    <attribute sfwDataType="string" sfwType="Property" ID="MemberAgeFormatted" sfwValue="member_age_formatted" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecRetirementContribution" sfwValue="idecRetirementContribution" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalVestedContributionsForCorrs" sfwValue="idecTotalVestedContributionsForCorrs" />
    <attribute sfwType="Property" ID="IcdoPersonAccountRetirement" sfwValue="icdoPersonAccountRetirement" />
    <attribute ID="IintIsMain2020orDC2020" sfwDataType="int" sfwPrivate="False" sfwValue="iintIsMain2020orDC2020" sfwType="Property" />
    <attribute ID="lintFYTDID" sfwDataType="int" sfwPrivate="False" sfwValue="FYTDID" sfwType="Property" />
    <attribute ID="lintLTDID" sfwDataType="int" sfwPrivate="False" sfwValue="LTDID" sfwType="Property" />
    <attribute ID="IintDaysDiffByEmploymentype" sfwDataType="int" sfwPrivate="False" sfwValue="iintDaysDiffByEmploymentype" sfwType="Property" />
    <attribute ID="ADECAmountTotalContributionLtd" sfwDataType="decimal" sfwPrivate="False" sfwValue="adec_amount_Total_Contribution_ltd" sfwType="Property" />
    <attribute ID="ADECAmountTotalContribution" sfwDataType="decimal" sfwPrivate="False" sfwValue="adec_amount_Total_Contribution" sfwType="Property" />
    <attribute ID="ADECAmount" sfwDataType="decimal" sfwPrivate="False" sfwValue="adec_amount" sfwType="Property" />
    <attribute ID="ADECAmountLtd" sfwDataType="decimal" sfwPrivate="False" sfwValue="adec_amount_ltd" sfwType="Property" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrAddleecontributionpercentzero" sfwValue="icdoPersonAccount.istrAddl_ee_contribution_percent_zero" />
    <attribute ID="IintPlanID" sfwDataType="int" sfwValue="iintPlanID" sfwType="Property" />
    <attribute ID="lintAddlEEContributionPercent" sfwDataType="int" sfwPrivate="False" sfwValue="iintAddlEEContributionPercent" sfwType="Property" />
  </attributes>
  <objectmethods>
    <method ID="LoadParticipationStatusByBenefitType" sfwReturnType="Collection" sfwObjectID="cdoCodeValue" sfwEntity="entPostRetirementDeathApplication" />
    <method ID="LoadADECAmountValues" sfwReturnType="Collection" sfwObjectID="cdoCodeValue" sfwEntity="entCodeValue" />
    <method ID="GetADECAmountValuesByEffectiveDate" sfwReturnType="Collection" sfwEntity="entCodeValue">
      <parameters>
        <parameter ID="astrHistoryChangeDate" sfwDataType="datetime" />
        <parameter ID="aintPersonEmploymentDtlId" sfwDataType="int" />
        <parameter ID="aintPersonAccountId" sfwDataType="int" />
      </parameters>
    </method>
  </objectmethods>
  <constraint />
  <methods />
  <lifecycle />
  <ExtraFields />
</entity>