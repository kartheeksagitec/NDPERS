<entity ID="entBPMPerformanceTest" sfwView="False" sfwActive="True" sfwType="EntityRule" sfwStatus="Review" sfwObjectID="busBPMPerformanceTest" CreateWithClass="True">
  <ExtraFields />
  <queries>
    <query ID="GetProcessInstanceCount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SBP.DESCRIPTION + ' (Ver.' + CONVERT(VARCHAR,SBC.VERSION) + ')' AS PROCESS_NAME,&#xD;&#xA;&#x9;LEFT(SBP.DESCRIPTION, 15) + '...'  + ' (Ver.' + CONVERT(VARCHAR,SBC.VERSION) + ')'  AS SHORT_PROCESS_NAME,&#xD;&#xA;&#x9;COUNT(*) AS INSTANCE_COUNT&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK)  &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS SBP WITH(NOLOCK)&#xD;&#xA;&#x9; ON SBP.PROCESS_ID = SBPI.PROCESS_ID&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_CASE SBC WITH(NOLOCK)&#xD;&#xA;&#x9; ON SBC.CASE_ID = SBP.CASE_ID AND&#xD;&#xA;    SBC.NAME like '%PerformanceTest%'&#xD;&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO&#xD;&#xA;GROUP BY SBP.DESCRIPTION,SBC.VERSION&#xD;&#xA;ORDER BY INSTANCE_COUNT DESC" sfwOracle="SELECT SBP.DESCRIPTION || ' (Ver.' || CAST(SBC.VERSION AS VARCHAR2(30)) || ')' AS PROCESS_NAME,&#xD;&#xA;T_INST_CREATED.INST_COUNT AS INSTANCE_COUNT&#xD;&#xA;FROM SGW_BPM_PROCESS SBP&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT COUNT(*) AS INST_COUNT ,SBPI.PROCESS_ID FROM SGW_BPM_PROCESS_INSTANCE SBPI &#xD;&#xA;&#x9;WHERE(SBPI.CREATED_DATE &gt; =  @DATE_FROM )AND&#xD;&#xA;&#x9; ((SBPI.CREATED_DATE IS NULL) OR (SBPI.CREATED_DATE &lt; = @DATE_TO)) &#xD;&#xA;&#x9;GROUP BY SBPI.PROCESS_ID &#xD;&#xA;) &#xD;&#xA;T_INST_CREATED ON T_INST_CREATED.PROCESS_ID = SBP.PROCESS_ID&#xD;&#xA;INNER JOIN SGW_BPM_CASE SBC ON SBP.CASE_ID = SBC.CASE_ID  &#xD;&#xA;    AND SBC.NAME like '%PerformanceTest%'&#xD;&#xA;ORDER BY INSTANCE_COUNT DESC">
      <parameters>
        <parameter ID="@DATE_FROM" sfwDataType="DateTime" />
        <parameter ID="@DATE_TO" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetProcessStatusCount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xA;&#x9; SBP.NAME + ' (Ver.' + CONVERT(VARCHAR,SBC.VERSION) + ')' AS PROCESS_NAME,&#xA;&#x9;ISNULL(SUM(case when SBPI.STATUS_VALUE = 'PROC' then 1 else 0 end),0) &#x9;AS Completed,&#xA;&#x9;ISNULL(SUM(case when SBPI.STATUS_VALUE IN ('INPC' ,'UNPC') then 1 else 0 end),0) &#x9;AS Inprocess,&#xA;&#x9;ISNULL(SUM(case when SBPI.STATUS_VALUE IN ('TERM' ,'FAIL') then 1 else 0 end),0) &#x9;AS Term_Fail &#xA;FROM&#xA;&#x9; SGW_BPM_PROCESS_INSTANCE &#x9;AS SBPI WITH(NOLOCK)  INNER  &#xA;&#x9; JOIN SGW_BPM_PROCESS &#x9;AS SBP WITH(NOLOCK) ON SBPI.PROCESS_ID = SBP.PROCESS_ID &#xA;&#x9; INNER JOIN SGW_BPM_CASE SBC WITH(NOLOCK)&#xA;&#x9; ON SBP.CASE_ID = SBC.CASE_ID AND&#xA;    SBC.NAME like '%PerformanceTest%'&#xA;     AND (SBC.CASE_ID=@CASE_ID OR @CASE_ID=0)&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO&#xA;&#x9; GROUP&#x9; BY   SBP.NAME,SBP.PROCESS_ID, SBC.VERSION ORDER BY Inprocess DESC" sfwOracle="SELECT&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;SBP.NAME || ' (Ver.' || CAST(SBC.VERSION AS VARCHAR2(30)) || ')' AS PROCESS_NAME,&#xD;&#xA;&#x9;COALESCE(SUM(case when SBPI.STATUS_VALUE = 'PROC' then 1 else 0 end),&#xD;&#xA;&#x9;0) AS Completed,&#xD;&#xA;&#x9;COALESCE(sum(case when SBPI.STATUS_VALUE IN ('INPC' ,&#xD;&#xA;&#x9;'UNPC') then 1 else 0 end),&#xD;&#xA;&#x9;0) AS Inprocess,&#xD;&#xA;&#x9;COALESCE(sum(case when SBPI.STATUS_VALUE IN ('TERM' ,&#xD;&#xA;&#x9;'FAIL') then 1 else 0 end),&#xD;&#xA;&#x9;0) AS Term_Fail &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_PROCESS_INSTANCE SBPI &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS SBP&#xD;&#xA;&#x9; ON SBPI.PROCESS_ID = SBP.PROCESS_ID &#xD;&#xA;&#x9;INNER &#xD;&#xA;&#x9; JOIN SGW_BPM_CASE SBC&#xD;&#xA;&#x9; ON SBP.CASE_ID = SBC.CASE_ID  &#xD;&#xA;    AND SBC.NAME like '%PerformanceTest%'&#xD;&#xA;     AND (SBC.CASE_ID=@CASE_ID OR @CASE_ID=0)&#xD;&#xA;WHERE&#xD;&#xA;&#x9; (SBPI.CREATED_DATE &gt; =  @DATE_FROM)AND&#xD;&#xA;&#x9; ((SBPI.CREATED_DATE IS NULL) OR (SBPI.CREATED_DATE &lt; =  @DATE_TO)) &#xD;&#xA;GROUP BY  SBP.NAME,&#x9;SBP.PROCESS_ID,&#x9;SBC.VERSION &#xD;&#xA;ORDER BY  Inprocess DESC">
      <parameters>
        <parameter ID="@DATE_FROM" sfwDataType="DateTime" />
        <parameter ID="@DATE_TO" sfwDataType="DateTime" />
        <parameter ID="@CASE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetActivityStatusCount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;&#x9; SBP.NAME + ' (Ver.' + CONVERT(VARCHAR,SBC.VERSION) + ')' AS PROCESS_NAME,&#xD;&#xA;&#x9; SBA.NAME AS ACTIVITY_NAME,&#xD;&#xA;    sum(case when SBAI.STATUS_VALUE IN ('INPC' ,'UNPC') then 1 else 0 end) &#x9;AS Inprocess,&#xD;&#xA;&#x9;sum(case when SBAI.STATUS_VALUE = 'PROC' then 1 else 0 end) &#x9;AS Completed,&#xD;&#xA;&#x9;sum(case when SBAI.STATUS_VALUE = 'APPR' then 1 else 0 end) &#x9;AS Approved,&#xD;&#xA;&#x9;sum(case when SBAI.STATUS_VALUE = 'REJT' then 1 else 0 end) &#x9;AS Rejected,&#xD;&#xA;&#x9;sum(case when SBAI.STATUS_VALUE IN ('CANC','SUSP','FAIL') then 1 else 0 end) &#x9;AS Fail&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SBAI WITH(NOLOCK)   INNER   &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK)  &#xD;&#xA;&#x9; ON SBAI.PROCESS_INSTANCE_ID = SBPI.PROCESS_INSTANCE_ID INNER   &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY SBA WITH(NOLOCK)  &#xD;&#xA;&#x9; ON SBAI.ACTIVITY_ID = SBA.ACTIVITY_ID &#xD;&#xA;&#x9; AND SBA.ACTIVITY_TYPE_VALUE NOT IN ('STEV','EDEV') &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS SBP WITH(NOLOCK)&#xD;&#xA;&#x9; ON SBP.PROCESS_ID = SBPI.PROCESS_ID&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_CASE SBC WITH(NOLOCK)&#xD;&#xA;&#x9; ON SBC.CASE_ID = SBP.CASE_ID AND&#xD;&#xA;    SBC.NAME like '%PerformanceTest%'&#xD;&#xA;      AND (SBC.CASE_ID=@CASE_ID OR @CASE_ID=0)&#xD;&#xA;&#x9;WHERE SBAI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO&#xD;&#xA;GROUP&#x9; BY    SBP.NAME,SBA.NAME, SBA.ACTIVITY_ID, SBC.VERSION ORDER BY Inprocess DESC" sfwOracle="SELECT &#xD;&#xA;  SBP.NAME || ' (Ver.' || CAST(SBC.VERSION AS VARCHAR2(30)) || ')' AS PROCESS_NAME,&#xD;&#xA;&#x9; SBA.NAME AS ACTIVITY_NAME,&#xD;&#xA;&#x9; sum(case when SBAI.STATUS_VALUE IN ('INPC' ,'UNPC') then 1 else 0 end) &#x9;AS Inprocess,&#xD;&#xA;&#x9; sum(case when SBAI.STATUS_VALUE = 'PROC' then 1 else 0 end) &#x9;AS Completed,&#xD;&#xA;&#x9; sum(case when SBAI.STATUS_VALUE = 'APPR' then 1 else 0 end) &#x9;AS Approved,&#xD;&#xA;&#x9; sum(case when SBAI.STATUS_VALUE = 'REJT' then 1 else 0 end) &#x9;AS Rejected,&#xD;&#xA;&#x9; sum(case when SBAI.STATUS_VALUE IN ('CANC','SUSP','FAIL') then 1 else 0 end) &#x9;AS Fail&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SBAI INNER   &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SBPI &#xD;&#xA;&#x9; ON SBAI.PROCESS_INSTANCE_ID = SBPI.PROCESS_INSTANCE_ID INNER   &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY SBA &#xD;&#xA;&#x9; ON SBAI.ACTIVITY_ID = SBA.ACTIVITY_ID&#xD;&#xA;   AND SBA.ACTIVITY_TYPE_VALUE NOT IN ('STEV','EDEV')&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS SBP&#xD;&#xA;&#x9; ON SBP.PROCESS_ID = SBPI.PROCESS_ID&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_CASE SBC&#xD;&#xA;&#x9; ON SBC.CASE_ID = SBP.CASE_ID &#xD;&#xA;   AND SBC.NAME like '%PerformanceTest%'&#xD;&#xA;     AND (SBC.CASE_ID=@CASE_ID OR @CASE_ID=0)&#xD;&#xA;&#x9; WHERE (SBAI.CREATED_DATE &gt; =  @DATE_FROM)AND&#xD;&#xA;&#x9; ((SBAI.CREATED_DATE IS NULL) OR (SBAI.CREATED_DATE &lt; = @DATE_TO )) &#xD;&#xA;GROUP&#x9; BY    SBP.NAME,SBA.NAME, SBA.ACTIVITY_ID, SBC.VERSION ORDER BY Inprocess DESC">
      <parameters>
        <parameter ID="@DATE_FROM" sfwDataType="DateTime" />
        <parameter ID="@DATE_TO" sfwDataType="DateTime" />
        <parameter ID="@CASE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetProcessAverageTime" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select SBP.DESCRIPTION + ' (Ver.' + CONVERT(VARCHAR,SBC.VERSION) + ')' PROCESS_NAME,&#xD;&#xA;  ROUND(SUM((CONVERT(FLOAT,(SBPI.END_DATE-SBPI.CREATED_DATE))*86400))/COUNT(SBPI.PROCESS_ID),3) AS TIME&#xD;&#xA;  from SGW_BPM_PROCESS_INSTANCE SBPI with(nolock)&#xD;&#xA;  inner  join SGW_BPM_PROCESS  SBP with(nolock)&#xD;&#xA;  on SBPI.PROCESS_ID=SBP.PROCESS_ID&#xD;&#xA;  INNER JOIN SGW_BPM_CASE SBC WITH(NOLOCK)&#xD;&#xA;  ON SBC.CASE_ID = SBP.CASE_ID AND&#xD;&#xA;    SBC.NAME like '%PerformanceTest%'&#xD;&#xA;     AND (SBC.CASE_ID=@CASE_ID OR @CASE_ID=0)&#xD;&#xA;  where SBPI.END_DATE IS NOT NULL and SBPI.STATUS_VALUE='PROC'&#xD;&#xA;  and SBPI.CREATED_DATE between @DATE_FROM AND @DATE_TO&#xD;&#xA;  group by SBP.DESCRIPTION,SBC.VERSION,SBPI.PROCESS_ID&#xD;&#xA;  order by TIME" sfwOracle="select SBP.DESCRIPTION || ' (Ver.' || CAST(SBC.VERSION AS VARCHAR2(30)) || ')' PROCESS_NAME,&#xD;&#xA;  ROUND(SUM(((SBPI.END_DATE-SBPI.CREATED_DATE)*86400))/COUNT(SBPI.PROCESS_ID),3) AS TIME&#xD;&#xA;  from SGW_BPM_PROCESS_INSTANCE SBPI &#xD;&#xA;  inner  join SGW_BPM_PROCESS  SBP&#xD;&#xA;  on SBPI.PROCESS_ID=SBP.PROCESS_ID&#xD;&#xA;  INNER JOIN SGW_BPM_CASE SBC&#xD;&#xA;  ON SBC.CASE_ID = SBP.CASE_ID &#xD;&#xA;    AND SBC.NAME like '%PerformanceTest%'&#xD;&#xA;     AND (SBC.CASE_ID=@CASE_ID OR @CASE_ID=0)&#xD;&#xA;  where SBPI.END_DATE IS NOT NULL and SBPI.STATUS_VALUE='PROC'&#xD;&#xA;  and SBPI.CREATED_DATE between @DATE_FROM AND @DATE_TO&#xD;&#xA;  group by SBP.DESCRIPTION,SBC.VERSION,SBPI.PROCESS_ID&#xD;&#xA;  order by TIME">
      <parameters>
        <parameter ID="@DATE_FROM" sfwDataType="DateTime" />
        <parameter ID="@DATE_TO" sfwDataType="DateTime" />
        <parameter ID="@CASE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetActivityAverageTime" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;&#x9; SBP.NAME + ' (Ver.' + CONVERT(VARCHAR,SBC.VERSION) + ')' AS PROCESS_NAME,&#xD;&#xA;&#x9; SBA.NAME AS ACTIVITY_NAME,&#xD;&#xA;  ROUND(SUM((CONVERT(FLOAT,(SBAI.END_DATE-SBAI.CREATED_DATE))*86400))/COUNT(SBAI.ACTIVITY_ID),3) AS TIME&#xD;&#xA;  FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SBAI WITH(NOLOCK)   INNER   &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK)  &#xD;&#xA;&#x9; ON SBAI.PROCESS_INSTANCE_ID = SBPI.PROCESS_INSTANCE_ID INNER   &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY SBA WITH(NOLOCK)  &#xD;&#xA;&#x9; ON SBAI.ACTIVITY_ID = SBA.ACTIVITY_ID AND&#xD;&#xA;&#x9; SBA.ACTIVITY_TYPE_VALUE NOT IN ('STEV','EDEV','INCE','IMCE','ITCE') &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS SBP WITH(NOLOCK)&#xD;&#xA;&#x9; ON SBP.PROCESS_ID = SBPI.PROCESS_ID&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_CASE SBC WITH(NOLOCK)&#xD;&#xA;&#x9; ON SBC.CASE_ID = SBP.CASE_ID AND&#xD;&#xA;    SBC.NAME like '%PerformanceTest%'&#xD;&#xA;     AND (SBC.CASE_ID=@CASE_ID OR @CASE_ID=0)&#xD;&#xA;&#x9; WHERE SBAI.END_DATE IS NOT NULL AND&#xD;&#xA;&#x9; SBAI.STATUS_VALUE='PROC' AND&#xD;&#xA;&#x9; SBAI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO&#xD;&#xA;GROUP&#x9; BY    SBP.NAME,SBA.NAME, SBA.ACTIVITY_ID, SBC.VERSION&#xD;&#xA;ORDER BY TIME" sfwOracle="select SBP.NAME || ' (Ver.' || CAST(SBC.VERSION AS VARCHAR2(30)) || ')' AS PROCESS_NAME,&#xD;&#xA;&#x9; SBA.NAME AS ACTIVITY_NAME,&#xD;&#xA;  ROUND(SUM(((SBAI.END_DATE-SBAI.CREATED_DATE)*86400))/COUNT(SBAI.ACTIVITY_ID),3) AS TIME&#xD;&#xA;  FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SBAI    INNER   &#xD;&#xA;&#x9; JOIN SGW_BPM_PROCESS_INSTANCE SBPI   &#xD;&#xA;&#x9; ON SBAI.PROCESS_INSTANCE_ID = SBPI.PROCESS_INSTANCE_ID INNER   &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY SBA &#xD;&#xA;&#x9; ON SBAI.ACTIVITY_ID = SBA.ACTIVITY_ID AND&#xD;&#xA;&#x9; SBA.ACTIVITY_TYPE_VALUE NOT IN ('STEV','EDEV','INCE','IMCE','ITCE') &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS SBP &#xD;&#xA;&#x9; ON SBP.PROCESS_ID = SBPI.PROCESS_ID&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_CASE SBC &#xD;&#xA;&#x9; ON SBC.CASE_ID = SBP.CASE_ID &#xD;&#xA;    AND SBC.NAME like '%PerformanceTest%'&#xD;&#xA;     AND (SBC.CASE_ID=@CASE_ID OR @CASE_ID=0)&#xD;&#xA;&#x9; WHERE SBAI.END_DATE IS NOT NULL AND&#xD;&#xA;&#x9; SBAI.STATUS_VALUE='PROC' AND&#xD;&#xA;&#x9; SBAI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO&#xD;&#xA;GROUP&#x9; BY    SBP.NAME,SBA.NAME, SBA.ACTIVITY_ID, SBC.VERSION&#xD;&#xA;ORDER BY TIME">
      <parameters>
        <parameter ID="@DATE_FROM" sfwDataType="DateTime" />
        <parameter ID="@DATE_TO" sfwDataType="DateTime" />
        <parameter ID="@CASE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetProcessInstanceList" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SBPI.PROCESS_INSTANCE_ID,&#xD;&#xA;&#x9; SBP.NAME + ' (Ver.' + CONVERT(VARCHAR,SBC.VERSION) + ')' AS PROCESS_NAME, &#xD;&#xA;&#x9; SBPI.CREATED_DATE&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK)  &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS SBP WITH(NOLOCK)&#xD;&#xA;&#x9; ON SBP.PROCESS_ID = SBPI.PROCESS_ID&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_CASE SBC WITH(NOLOCK)&#xD;&#xA;&#x9; ON SBC.CASE_ID = SBP.CASE_ID AND&#xD;&#xA;    SBC.NAME like '%PerformanceTest%'&#xD;&#xA;    AND (SBC.CASE_ID=@CASE_ID OR @CASE_ID=0)&#xD;&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO&#xD;&#xA;GROUP BY SBPI.PROCESS_INSTANCE_ID,SBC.VERSION,SBP.NAME,SBPI.CREATED_DATE&#xD;&#xA;ORDER BY SBPI.CREATED_DATE DESC" sfwOracle="SELECT SBPI.PROCESS_INSTANCE_ID,&#xD;&#xA;&#x9; SBP.NAME || ' (Ver.' || CAST(SBC.VERSION AS VARCHAR2(30)) || ')' AS PROCESS_NAME, &#xD;&#xA;&#x9; SBPI.CREATED_DATE&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_PROCESS_INSTANCE SBPI&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS SBP&#xD;&#xA;&#x9; ON SBP.PROCESS_ID = SBPI.PROCESS_ID&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_CASE SBC &#xD;&#xA;&#x9; ON SBC.CASE_ID = SBP.CASE_ID &#xD;&#xA;    AND SBC.NAME like '%PerformanceTest%'&#xD;&#xA;    AND (SBC.CASE_ID=@CASE_ID OR @CASE_ID=0)&#xD;&#xA;&#x9;WHERE SBPI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO&#xD;&#xA;GROUP BY SBPI.PROCESS_INSTANCE_ID,SBC.VERSION,SBP.NAME,SBPI.CREATED_DATE&#xD;&#xA;ORDER BY SBPI.CREATED_DATE DESC">
      <parameters>
        <parameter ID="@DATE_FROM" sfwDataType="DateTime" />
        <parameter ID="@DATE_TO" sfwDataType="DateTime" />
        <parameter ID="@CASE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetActivityInstanceCount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;&#x9; SBA.NAME AS ACTIVITY_NAME,&#xD;&#xA;&#x9; COUNT(SBAI.ACTIVITY_ID) AS ACTIVITY_COUNT&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SBAI WITH(NOLOCK)&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_ACTIVITY SBA WITH(NOLOCK)  &#xD;&#xA;&#x9; ON SBAI.ACTIVITY_ID = SBA.ACTIVITY_ID AND&#xD;&#xA;&#x9; SBA.ACTIVITY_TYPE_VALUE NOT IN ('STEV','EDEV') AND&#xD;&#xA;&#x9; SBAI.PROCESS_INSTANCE_ID=@PROCESS_INSTANCE_ID&#xD;&#xA;  GROUP&#x9; BY    SBA.ACTIVITY_ID, SBA.NAME" sfwOracle="SELECT &#xD;&#xA;&#x9; SBA.NAME AS ACTIVITY_NAME,&#xD;&#xA;&#x9; COUNT(SBAI.ACTIVITY_ID) AS ACTIVITY_COUNT&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_ACTIVITY_INSTANCE SBAI&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_ACTIVITY SBA&#xD;&#xA;&#x9; ON SBAI.ACTIVITY_ID = SBA.ACTIVITY_ID AND&#xD;&#xA;&#x9; SBA.ACTIVITY_TYPE_VALUE NOT IN ('STEV','EDEV') AND&#xD;&#xA;&#x9; SBAI.PROCESS_INSTANCE_ID=@PROCESS_INSTANCE_ID&#xD;&#xA;  GROUP&#x9; BY    SBA.ACTIVITY_ID, SBA.NAME">
      <parameters>
        <parameter ID="@PROCESS_INSTANCE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetCaseList" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xD;&#xA;&#x9; SBC.DESCRIPTION + ' (Ver.' + CONVERT(VARCHAR,SBC.VERSION) + ')' as CASE_NAME , SBC.CASE_ID&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_CASE SBC WITH(NOLOCK)&#xD;&#xA;&#x9; WHERE&#xD;&#xA;    SBC.NAME like '%PerformanceTest%'" sfwOracle="SELECT&#xD;&#xA;&#x9; SBC.DESCRIPTION || ' (Ver.' || CAST(SBC.VERSION AS VARCHAR2(30)) || ')' as CASE_NAME , SBC.CASE_ID&#xD;&#xA;FROM&#xD;&#xA;&#x9;  SGW_BPM_CASE SBC&#xD;&#xA;    WHERE SBC.NAME like '%PerformanceTest%'">
      <parameters />
    </query>
    <query ID="GetCaseInstanceCount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select top(25) 'Case '+ CONVERT(varchar,SBCI.CASE_INSTANCE_ID) AS CASE_INSTANCE_ID, SBCI.CREATED_DATE,&#xD;&#xA;  ROUND((CONVERT(FLOAT,(SBCI.MODIFIED_DATE-SBCI.CREATED_DATE))*86400),3) AS TIME&#xD;&#xA;  FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE SBCI WITH(NOLOCK)  &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_CASE SBC WITH(NOLOCK)&#xD;&#xA;&#x9; ON SBC.CASE_ID = SBCI.CASE_ID AND&#xD;&#xA;    SBC.NAME like '%PerformanceTest%'&#xD;&#xA;     AND (SBC.CASE_ID=@CASE_ID)&#xD;&#xA;&#x9; AND SBCI.STATUS_VALUE='PROC'&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS_INSTANCE SBPI WITH(NOLOCK)&#xD;&#xA;&#x9; ON SBPI.CASE_INSTANCE_ID=SBCI.CASE_INSTANCE_ID&#xD;&#xA;&#x9; WHERE SBPI.END_DATE IS NOT NULL AND SBPI.STATUS_VALUE='PROC' AND&#xD;&#xA;&#x9; SBCI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO&#xD;&#xA;GROUP BY SBCI.CASE_INSTANCE_ID, SBC.NAME, SBC.VERSION, SBCI.CREATED_DATE,SBCI.MODIFIED_DATE&#xD;&#xA;ORDER BY SBCI.CREATED_DATE DESC" sfwOracle="SELECT 'Case '|| CAST(SBCI.CASE_INSTANCE_ID AS VARCHAR2(30)) AS CASE_INSTANCE_ID, SBCI.CREATED_DATE,&#xD;&#xA;ROUND(((SBCI.MODIFIED_DATE - SBCI.CREATED_DATE)* 86400),3) AS TIME&#xD;&#xA;  FROM&#xD;&#xA;&#x9; SGW_BPM_CASE_INSTANCE SBCI   &#xD;&#xA;&#x9; INNER JOIN SGW_BPM_CASE SBC&#xD;&#xA;&#x9; ON SBC.CASE_ID = SBCI.CASE_ID &#xD;&#xA;    AND SBC.NAME like '%PerformanceTest%'&#xD;&#xA;     AND (SBC.CASE_ID=@CASE_ID)&#xD;&#xA;&#x9; AND SBCI.STATUS_VALUE='PROC'&#xD;&#xA;&#x9; INNER JOIN SGW_BPM_PROCESS_INSTANCE SBPI&#xD;&#xA;&#x9; ON SBPI.CASE_INSTANCE_ID=SBCI.CASE_INSTANCE_ID&#xD;&#xA;&#x9; WHERE SBPI.END_DATE IS NOT NULL AND SBPI.STATUS_VALUE='PROC' AND&#xD;&#xA;&#x9; SBCI.CREATED_DATE BETWEEN @DATE_FROM AND @DATE_TO&#xD;&#xA;   AND ROWNUM&lt;=25&#xD;&#xA;GROUP BY SBCI.CASE_INSTANCE_ID, SBC.NAME, SBC.VERSION, SBCI.CREATED_DATE,SBCI.MODIFIED_DATE&#xD;&#xA;ORDER BY SBCI.CREATED_DATE DESC">
      <parameters>
        <parameter ID="@CASE_ID" sfwDataType="int" />
        <parameter ID="@DATE_FROM" sfwDataType="DateTime" />
        <parameter ID="@DATE_TO" sfwDataType="DateTime" />
      </parameters>
    </query>
  </queries>
  <constraint />
  <rules />
  <attributes>
    <attribute ID="FromDate" sfwDataType="datetime" sfwDataFormat="{0:G}" sfwValue="idtFromDate" sfwPrivate="False" sfwType="Property" />
    <attribute ID="ToDate" sfwDataType="datetime" sfwDataFormat="{0:G}" sfwValue="idtToDate" sfwPrivate="False" sfwType="Property" />
    <attribute ID="CaseId" sfwDataType="int" sfwPrivate="False" sfwType="Property" sfwValue="iintCaseId" />
    <attribute ID="ProcessInstanceId" sfwDataType="int" sfwPrivate="False" sfwValue="iintProcessInstanceId" sfwType="Property" />
  </attributes>
  <initialload />
  <softerror />
  <harderror />
  <validatedelete />
  <delete />
  <groupslist />
  <checklist />
  <methods>
    <method ID="LoadActivityDetails" sfwMethodType="Load" sfwMode="All">
      <item ID="LoadActivityDetails" sfwParameter="aintProcessInstanceId" sfwItemType="Method" sfwDataType="ArrayList" />
      <parameter ID="aintProcessInstanceId" sfwDataType="int" />
    </method>
  </methods>
  <lifecycle />
  <objectmethods>
    <method ID="LoadDetails" sfwReturnType="ArrayList" />
    <method ID="LoadActivityDetails" sfwReturnType="ArrayList">
      <parameters>
        <parameter ID="aintProcessInstanceId" sfwDataType="int" />
      </parameters>
    </method>
  </objectmethods>
</entity>