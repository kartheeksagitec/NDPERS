<entity ID="entBpmUsersEscalationMessage" sfwMainCDO="icdoBpmUsersEscalationMessage" sfwType="BusinessRule" sfwActive="True" sfwStatus="Review" sfwObjectID="busBpmUsersEscalationMessage" sfwTableName="SGW_BPM_USERS_ESC_MESSAGE" sfwView="False" sfwDataObjectID="doBpmUsersEscMessage">
  <commonproperties />
  <checklist />
  <initialload />
  <delete>
    <property ID="IobjMainCDO" />
  </delete>
  <validatedelete />
  <softerror />
  <groupslist />
  <harderror />
  <constraint />
  <rules />
  <queries>
    <query ID="LookUp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; * &#xA;FROM&#xA;&#x9; SGW_BPM_USERS_ESC_MESSAGE" sfwPostgre="SELECT&#xD;&#xA;&#x9; * &#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_USERS_ESC_MESSAGE">
      <parameters />
    </query>
    <query ID="UserTaskEscalationMessagesAssignedToUser" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;&#x9; UM.USERS_ESC_MESSAGE_ID,&#xD;&#xA;&#x9;UM.USER_SERIAL_ID,&#xD;&#xA;&#x9;EM.ESCALATION_MESSAGE,&#xD;&#xA;&#x9;UM.MARK_AS_READ,&#xD;&#xA;&#x9;AI.CHECKED_OUT_USER,&#xD;&#xA;&#x9;'Assigned Task' ESCALATION_MESSAGE_TYPE&#xD;&#xA;&#x9;,AI.DUE_DATE&#xD;&#xA;FROM&#xD;&#xA;&#x9; SGW_BPM_USERS_ESC_MESSAGE UM WITH(NOLOCK)   INNER   &#xD;&#xA;&#x9; JOIN SGW_BPM_ESCALATION_MESSAGE EM WITH(NOLOCK)  &#xD;&#xA;&#x9; ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID INNER   &#xD;&#xA;&#x9; JOIN SGW_BPM_ESCALATION_INSTANCE EI WITH(NOLOCK)  &#xD;&#xA;&#x9; ON EM.ESCALATION_INSTANCE_ID = EI. ESCALATION_INSTANCE_ID INNER   &#xD;&#xA;&#x9; JOIN SGW_BPM_ACTIVITY_INSTANCE AI WITH(NOLOCK)  &#xD;&#xA;&#x9; ON AI.ACTIVITY_INSTANCE_ID = EI.ACTIVITY_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;&#x9; UM.MARK_AS_READ = 'N' AND&#xD;&#xA;&#x9; (EM.ESCALATION_TYPE_VALUE = 'ACTV' AND&#xD;&#xA;&#x9; AI.STATUS_VALUE IN ('INPC','RESU') AND&#xD;&#xA;&#x9; UM.USER_SERIAL_ID = @USER_SERIAL_ID&#xD;&#xA;&#x9; AND AI.CHECKED_OUT_USER = @CHECKED_OUT_USER)&#xD;&#xA;ORDER BY DUE_DATE" sfwOracle="SELECT&#xD;&#xA;     UM.USERS_ESC_MESSAGE_ID,&#xD;&#xA;    UM.USER_SERIAL_ID,&#xD;&#xA;    EM.ESCALATION_MESSAGE,&#xD;&#xA;    UM.MARK_AS_READ,&#xD;&#xA;    AI.CHECKED_OUT_USER,&#xD;&#xA;    'Assigned Task' ESCALATION_MESSAGE_TYPE&#xD;&#xA;    ,AI.DUE_DATE&#xD;&#xA;FROM&#xD;&#xA;     SGW_BPM_USERS_ESC_MESSAGE UM    INNER  &#xD;&#xA;     JOIN SGW_BPM_ESCALATION_MESSAGE EM  &#xD;&#xA;     ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID INNER  &#xD;&#xA;     JOIN SGW_BPM_ESCALATION_INSTANCE EI  &#xD;&#xA;     ON EM.ESCALATION_INSTANCE_ID = EI. ESCALATION_INSTANCE_ID INNER  &#xD;&#xA;     JOIN SGW_BPM_ACTIVITY_INSTANCE AI  &#xD;&#xA;     ON AI.ACTIVITY_INSTANCE_ID = EI.ACTIVITY_INSTANCE_ID&#xD;&#xA;WHERE&#xD;&#xA;     UM.MARK_AS_READ = 'N' AND&#xD;&#xA;     (EM.ESCALATION_TYPE_VALUE = 'ACTV' AND&#xD;&#xA;     AI.STATUS_VALUE IN ('INPC','RESU') AND&#xD;&#xA;     UM.USER_SERIAL_ID = @USER_SERIAL_ID&#xD;&#xA;     AND AI.CHECKED_OUT_USER = @CHECKED_OUT_USER&#xD;&#xA;   )&#xD;&#xA;ORDER BY DUE_DATE&#xD;&#xA;FETCH FIRST 12 ROWS ONLY" sfwPostgre="SELECT&#xD;&#xA;     UM.USERS_ESC_MESSAGE_ID,&#xD;&#xA;    UM.USER_SERIAL_ID,&#xD;&#xA;    EM.ESCALATION_MESSAGE,&#xD;&#xA;    UM.MARK_AS_READ,&#xD;&#xA;    AI.CHECKED_OUT_USER,&#xD;&#xA;    'Assigned Task' ESCALATION_MESSAGE_TYPE&#xD;&#xA;    ,AI.DUE_DATE&#xD;&#xA;FROM&#xD;&#xA;     SGW_BPM_USERS_ESC_MESSAGE UM    INNER  &#xD;&#xA;     JOIN SGW_BPM_ESCALATION_MESSAGE EM  &#xD;&#xA;     ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID INNER  &#xD;&#xA;     JOIN SGW_BPM_ESCALATION_INSTANCE EI  &#xD;&#xA;     ON EM.ESCALATION_INSTANCE_ID = EI. ESCALATION_INSTANCE_ID INNER  &#xD;&#xA;     JOIN SGW_BPM_ACTIVITY_INSTANCE AI  &#xD;&#xA;     ON AI.ACTIVITY_INSTANCE_ID = EI.ACTIVITY_INSTANCE_ID&#xD;&#xA;WHERE&#xD;&#xA;     UM.MARK_AS_READ = 'N' AND&#xD;&#xA;     (EM.ESCALATION_TYPE_VALUE = 'ACTV' AND&#xD;&#xA;     AI.STATUS_VALUE IN ('INPC','RESU') AND&#xD;&#xA;     UM.USER_SERIAL_ID = @USER_SERIAL_ID&#xD;&#xA;     AND AI.CHECKED_OUT_USER = @CHECKED_OUT_USER&#xD;&#xA;   )&#xD;&#xA;ORDER BY DUE_DATE&#xD;&#xA;FETCH FIRST 12 ROWS ONLY">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
      </parameters>
      <mappedcolumns>
        <column ID="escalation_message" sfwEntityField="IstrEscalationMessage" />
        <column ID="checked_out_user" sfwEntityField="IstrCheckOutUser" />
      </mappedcolumns>
    </query>
    <query ID="UserTaskEscalationMessagesAssignedToOtherUser" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID(N'tempdb..#Temp_UserTaskEscalationMessagesAssignedToOtherUser') IS NOT NULL&#xA;  drop table #Temp_UserTaskEscalationMessagesAssignedToOtherUser&#xA;&#xA;SELECT         UM.USERS_ESC_MESSAGE_ID,&#xA;               UM.USER_SERIAL_ID,&#xA;               EM.ESCALATION_MESSAGE,&#xA;               UM.MARK_AS_READ,&#xA;               AI.CHECKED_OUT_USER,&#xA;               'Other Activity Message' ESCALATION_MESSAGE_TYPE&#xA;               ,AI.DUE_DATE&#xA;INTO #Temp_UserTaskEscalationMessagesAssignedToOtherUser FROM&#xA;               SGW_BPM_USERS_ESC_MESSAGE UM WITH(NOLOCK)  INNER  &#xA;                JOIN SGW_BPM_ESCALATION_MESSAGE EM WITH(NOLOCK) &#xA;                ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID INNER  &#xA;                JOIN SGW_BPM_ESCALATION_INSTANCE EI WITH(NOLOCK) &#xA;                ON EM.ESCALATION_INSTANCE_ID = EI. ESCALATION_INSTANCE_ID INNER  &#xA;                JOIN SGW_BPM_ACTIVITY_INSTANCE AI WITH(NOLOCK) &#xA;                ON AI.ACTIVITY_INSTANCE_ID = EI.ACTIVITY_INSTANCE_ID &#xA;WHERE&#xA;               UM.MARK_AS_READ = 'N' AND&#xA;               (EM.ESCALATION_TYPE_VALUE = 'ACTV' AND&#xA;               (AI.STATUS_VALUE IN ('INPC','SUSP') AND&#xA;               UM.USER_SERIAL_ID = @USER_SERIAL_ID AND&#xA;               AI.CHECKED_OUT_USER &lt;&gt; @CHECKED_OUT_USER)&#xA;               OR (AI.STATUS_VALUE = 'UNPC' AND    &#xA;                AI.CHECKED_OUT_USER IS NULL))&#xA;               ORDER BY DUE_DATE&#xA;&#xA;select top 12 * from #Temp_UserTaskEscalationMessagesAssignedToOtherUser order by DUE_DATE&#xA;drop table #Temp_UserTaskEscalationMessagesAssignedToOtherUser" sfwOracle="SELECT &#xD;&#xA;                UM.USERS_ESC_MESSAGE_ID,&#xD;&#xA;               UM.USER_SERIAL_ID,&#xD;&#xA;               EM.ESCALATION_MESSAGE,&#xD;&#xA;               UM.MARK_AS_READ,&#xD;&#xA;               AI.CHECKED_OUT_USER,&#xD;&#xA;               'Other Activity Message' ESCALATION_MESSAGE_TYPE&#xD;&#xA;               ,AI.DUE_DATE&#xD;&#xA;FROM&#xD;&#xA;               SGW_BPM_USERS_ESC_MESSAGE UM   INNER  &#xD;&#xA;                JOIN SGW_BPM_ESCALATION_MESSAGE EM  &#xD;&#xA;                ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID INNER  &#xD;&#xA;                JOIN SGW_BPM_ESCALATION_INSTANCE EI  &#xD;&#xA;                ON EM.ESCALATION_INSTANCE_ID = EI. ESCALATION_INSTANCE_ID INNER  &#xD;&#xA;                JOIN SGW_BPM_ACTIVITY_INSTANCE AI  &#xD;&#xA;                ON AI.ACTIVITY_INSTANCE_ID = EI.ACTIVITY_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;               UM.MARK_AS_READ = 'N' AND&#xD;&#xA;               (EM.ESCALATION_TYPE_VALUE = 'ACTV' AND&#xD;&#xA;               (AI.STATUS_VALUE IN ('INPC','SUSP') AND&#xD;&#xA;               UM.USER_SERIAL_ID = @USER_SERIAL_ID AND&#xD;&#xA;               AI.CHECKED_OUT_USER &lt;&gt; @CHECKED_OUT_USER&#xD;&#xA;               OR (AI.STATUS_VALUE = 'UNPC' AND     &#xD;&#xA;                AI.CHECKED_OUT_USER IS NULL))&#xD;&#xA;  )&#xD;&#xA;               ORDER BY DUE_DATE&#xD;&#xA;   FETCH FIRST 12 ROWS ONLY" sfwPostgre="SELECT &#xD;&#xA;                UM.USERS_ESC_MESSAGE_ID,&#xD;&#xA;               UM.USER_SERIAL_ID,&#xD;&#xA;               EM.ESCALATION_MESSAGE,&#xD;&#xA;               UM.MARK_AS_READ,&#xD;&#xA;               AI.CHECKED_OUT_USER,&#xD;&#xA;               'Other Activity Message' ESCALATION_MESSAGE_TYPE&#xD;&#xA;               ,AI.DUE_DATE&#xD;&#xA;FROM&#xD;&#xA;               SGW_BPM_USERS_ESC_MESSAGE UM   INNER  &#xD;&#xA;                JOIN SGW_BPM_ESCALATION_MESSAGE EM  &#xD;&#xA;                ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID INNER  &#xD;&#xA;                JOIN SGW_BPM_ESCALATION_INSTANCE EI  &#xD;&#xA;                ON EM.ESCALATION_INSTANCE_ID = EI. ESCALATION_INSTANCE_ID INNER  &#xD;&#xA;                JOIN SGW_BPM_ACTIVITY_INSTANCE AI  &#xD;&#xA;                ON AI.ACTIVITY_INSTANCE_ID = EI.ACTIVITY_INSTANCE_ID &#xD;&#xA;WHERE&#xD;&#xA;               UM.MARK_AS_READ = 'N' AND&#xD;&#xA;               (EM.ESCALATION_TYPE_VALUE = 'ACTV' AND&#xD;&#xA;               (AI.STATUS_VALUE IN ('INPC','SUSP') AND&#xD;&#xA;               UM.USER_SERIAL_ID = @USER_SERIAL_ID AND&#xD;&#xA;               AI.CHECKED_OUT_USER &lt;&gt; @CHECKED_OUT_USER&#xD;&#xA;               OR (AI.STATUS_VALUE = 'UNPC' AND     &#xD;&#xA;                AI.CHECKED_OUT_USER IS NULL))&#xD;&#xA;  )&#xD;&#xA;               ORDER BY DUE_DATE&#xD;&#xA;   FETCH FIRST 12 ROWS ONLY">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
      </parameters>
      <mappedcolumns>
        <column ID="escalation_message" sfwEntityField="IstrEscalationMessage" />
        <column ID="checked_out_user" sfwEntityField="IstrCheckOutUser" />
      </mappedcolumns>
    </query>
    <query ID="ProcessEscalationMessages" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID(N'tempdb..#Temp_Escalation_messages') IS NOT NULL&#xA;  drop table #Temp_Escalation_messages&#xA;&#xA;SELECT &#x9;UM.USERS_ESC_MESSAGE_ID,&#xA;&#x9;&#x9;UM.USER_SERIAL_ID,&#xA;&#x9;&#x9;EM.ESCALATION_MESSAGE,&#xA;&#x9;&#x9;UM.MARK_AS_READ,&#xA;&#x9;&#x9;'' CHECKED_OUT_USER,&#xA;&#x9;&#x9;'Process Escalations' ESCALATION_MESSAGE_TYPE,&#xA;&#x9;&#x9;SPI.DUE_DATE&#xA;&#xA;Into #Temp_Escalation_messages FROM SGW_BPM_USERS_ESC_MESSAGE UM WITH(NOLOCK)&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ESCALATION_MESSAGE EM WITH(NOLOCK) ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PRCS_ESC_INSTANCE PEI WITH(NOLOCK) ON PEI.PROCESS_ESCALATION_INSTANCE_ID = EM.ESCALATION_INSTANCE_ID&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_ESCALATION PE WITH(NOLOCK) &#x9;ON PE.PROCESS_ESCALATION_ID = PEI.PROCESS_ESCALATION_ID &#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI WITH(NOLOCK) ON SPI.PROCESS_INSTANCE_ID=PEI.PROCESS_INSTANCE_ID&#xA;WHERE UM.MARK_AS_READ = 'N'&#xA;AND EM.ESCALATION_TYPE_VALUE  = 'PROS'&#xA;AND UM.USER_SERIAL_ID = @USER_SERIAL_ID&#xA;&#xA;select top 12 * from #Temp_Escalation_messages order by DUE_DATE&#xA;drop table #Temp_Escalation_messages" sfwOracle="SELECT &#x9;UM.USERS_ESC_MESSAGE_ID,&#xA;&#x9;&#x9;UM.USER_SERIAL_ID,&#xA;&#x9;&#x9;EM.ESCALATION_MESSAGE,&#xA;&#x9;&#x9;UM.MARK_AS_READ,&#xA;&#x9;&#x9;'' CHECKED_OUT_USER,&#xA;&#x9;&#x9;'Process Escalations' ESCALATION_MESSAGE_TYPE,&#xA;&#x9;&#x9;SPI.DUE_DATE&#xA;FROM SGW_BPM_USERS_ESC_MESSAGE UM &#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ESCALATION_MESSAGE EM  ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PRCS_ESC_INSTANCE PEI  ON PEI.PROCESS_ESCALATION_INSTANCE_ID = EM.ESCALATION_INSTANCE_ID&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_ESCALATION PE  &#x9;ON PE.PROCESS_ESCALATION_ID = PEI.PROCESS_ESCALATION_ID &#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI  ON SPI.PROCESS_INSTANCE_ID=PEI.PROCESS_INSTANCE_ID&#xA;WHERE UM.MARK_AS_READ = 'N'&#xA;AND EM.ESCALATION_TYPE_VALUE  = 'PROS'&#xA;AND UM.USER_SERIAL_ID = @USER_SERIAL_ID&#xA;ORDER BY DUE_DATE&#xA;FETCH FIRST 12 ROWS ONLY" sfwPostgre="SELECT &#x9;UM.USERS_ESC_MESSAGE_ID,&#xD;&#xA;&#x9;&#x9;UM.USER_SERIAL_ID,&#xD;&#xA;&#x9;&#x9;EM.ESCALATION_MESSAGE,&#xD;&#xA;&#x9;&#x9;UM.MARK_AS_READ,&#xD;&#xA;&#x9;&#x9;'' CHECKED_OUT_USER,&#xD;&#xA;&#x9;&#x9;'Process Escalations' ESCALATION_MESSAGE_TYPE,&#xD;&#xA;&#x9;&#x9;SPI.DUE_DATE&#xD;&#xA;FROM SGW_BPM_USERS_ESC_MESSAGE UM &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ESCALATION_MESSAGE EM  ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PRCS_ESC_INSTANCE PEI  ON PEI.PROCESS_ESCALATION_INSTANCE_ID = EM.ESCALATION_INSTANCE_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_ESCALATION PE  &#x9;ON PE.PROCESS_ESCALATION_ID = PEI.PROCESS_ESCALATION_ID &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI  ON SPI.PROCESS_INSTANCE_ID=PEI.PROCESS_INSTANCE_ID&#xD;&#xA;WHERE UM.MARK_AS_READ = 'N'&#xD;&#xA;AND EM.ESCALATION_TYPE_VALUE  = 'PROS'&#xD;&#xA;AND UM.USER_SERIAL_ID = @USER_SERIAL_ID&#xD;&#xA;ORDER BY DUE_DATE&#xD;&#xA;FETCH FIRST 12 ROWS ONLY">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
      </parameters>
      <mappedcolumns>
        <column ID="escalation_message" sfwEntityField="IstrEscalationMessage" />
      </mappedcolumns>
    </query>
    <query ID="GetEscalationMessagesByUserSerialID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT top 5&#x9;UM.USERS_ESC_MESSAGE_ID,&#xD;&#xA;&#x9;&#x9;UM.USER_SERIAL_ID,&#xD;&#xA;&#x9;&#x9;EM.ESCALATION_MESSAGE,&#xD;&#xA;&#x9;&#x9;UM.MARK_AS_READ,&#xD;&#xA;&#x9;&#x9;AI.CHECKED_OUT_USER,&#xD;&#xA;&#x9;&#x9;'Assigned Task' ESCALATION_MESSAGE_TYPE,&#xD;&#xA;&#x9;&#x9;AI.DUE_DATE&#xD;&#xA;&#x9;FROM SGW_BPM_USERS_ESC_MESSAGE UM WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ESCALATION_MESSAGE EM WITH(NOLOCK)  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ESCALATION_INSTANCE EI WITH(NOLOCK)  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ON EM.ESCALATION_INSTANCE_ID = EI. ESCALATION_INSTANCE_ID &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ACTIVITY_INSTANCE AI WITH(NOLOCK)  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ON AI.ACTIVITY_INSTANCE_ID = EI.ACTIVITY_INSTANCE_ID &#xD;&#xA;WHERE UM.MARK_AS_READ = 'N'&#xD;&#xA;AND EM.ESCALATION_TYPE_VALUE = 'ACTV'&#xD;&#xA;AND AI.STATUS_VALUE = 'INPC' &#xD;&#xA;AND UM.USER_SERIAL_ID = @USER_SERIAL_ID&#xD;&#xA;AND AI.CHECKED_OUT_USER = @CHECKED_OUT_USER&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT&#x9;top 5 UM.USERS_ESC_MESSAGE_ID,&#xD;&#xA;&#x9;&#x9;UM.USER_SERIAL_ID,&#xD;&#xA;&#x9;&#x9;EM.ESCALATION_MESSAGE,&#xD;&#xA;&#x9;&#x9;UM.MARK_AS_READ,&#xD;&#xA;&#x9;&#x9;AI.CHECKED_OUT_USER,&#xD;&#xA;&#x9;&#x9;'Other Activity Message' ESCALATION_MESSAGE_TYPE&#xD;&#xA;&#x9;&#x9;,AI.DUE_DATE&#xD;&#xA;&#x9;FROM SGW_BPM_USERS_ESC_MESSAGE UM WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ESCALATION_MESSAGE EM WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ESCALATION_INSTANCE EI WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ON EM.ESCALATION_INSTANCE_ID = EI. ESCALATION_INSTANCE_ID &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ACTIVITY_INSTANCE AI WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ON AI.ACTIVITY_INSTANCE_ID = EI.ACTIVITY_INSTANCE_ID &#xD;&#xA;WHERE UM.MARK_AS_READ = 'N'&#xD;&#xA;AND EM.ESCALATION_TYPE_VALUE = 'ACTV'&#xD;&#xA;AND AI.STATUS_VALUE = 'INPC'&#xD;&#xA;AND UM.USER_SERIAL_ID = @USER_SERIAL_ID&#xD;&#xA;AND AI.CHECKED_OUT_USER &lt;&gt; @CHECKED_OUT_USER&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT top 5&#x9;UM.USERS_ESC_MESSAGE_ID,&#xD;&#xA;&#x9;&#x9;UM.USER_SERIAL_ID,&#xD;&#xA;&#x9;&#x9;EM.ESCALATION_MESSAGE,&#xD;&#xA;&#x9;&#x9;UM.MARK_AS_READ,&#xD;&#xA;&#x9;&#x9;'' CHECKED_OUT_USER,&#xD;&#xA;&#x9;&#x9;'Process Escalations' ESCALATION_MESSAGE_TYPE,&#xD;&#xA;&#x9;&#x9;SPI.DUE_DATE&#xD;&#xA;FROM SGW_BPM_USERS_ESC_MESSAGE UM WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ESCALATION_MESSAGE EM WITH(NOLOCK) ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PRCS_ESC_INSTANCE PEI WITH(NOLOCK) ON PEI.PROCESS_ESCALATION_INSTANCE_ID = EM.ESCALATION_INSTANCE_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_ESCALATION PE WITH(NOLOCK) &#x9;ON PE.PROCESS_ESCALATION_ID = PEI.PROCESS_ESCALATION_ID &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI WITH(NOLOCK) ON SPI.PROCESS_INSTANCE_ID=PEI.PROCESS_INSTANCE_ID&#xD;&#xA;WHERE UM.MARK_AS_READ = 'N'&#xD;&#xA;AND EM.ESCALATION_TYPE_VALUE  = 'PROS'&#xD;&#xA;AND UM.USER_SERIAL_ID = @USER_SERIAL_ID&#xD;&#xA;ORDER BY DUE_DATE" sfwPostgre="(SELECT&#xD;&#xA;um.users_esc_message_id,&#xD;&#xA;um.user_serial_id,&#xD;&#xA;em.escalation_message,&#xD;&#xA;um.mark_as_read,&#xD;&#xA;ai.checked_out_user,&#xD;&#xA;'Assigned Task' AS escalation_message_type,&#xD;&#xA;ai.due_date&#xD;&#xA;FROM&#xD;&#xA;dbo.sgw_bpm_users_esc_message AS um&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_escalation_message AS em&#xD;&#xA;ON um.escalation_message_id = em.escalation_message_id&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_escalation_instance AS ei&#xD;&#xA;ON em.escalation_instance_id = ei.escalation_instance_id&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_activity_instance AS ai&#xD;&#xA;ON ai.activity_instance_id = ei.activity_instance_id&#xD;&#xA;WHERE&#xD;&#xA;um.mark_as_read = 'N' AND&#xD;&#xA;em.escalation_type_value = 'ACTV' AND&#xD;&#xA;ai.status_value = 'INPC' AND&#xD;&#xA;um.user_serial_id = @USER_SERIAL_ID AND&#xD;&#xA;ai.checked_out_user = @CHECKED_OUT_USER LIMIT 5) UNION ALL (SELECT&#xD;&#xA;um.users_esc_message_id,&#xD;&#xA;um.user_serial_id,&#xD;&#xA;em.escalation_message,&#xD;&#xA;um.mark_as_read,&#xD;&#xA;ai.checked_out_user,&#xD;&#xA;'Other Activity Message' AS escalation_message_type,&#xD;&#xA;ai.due_date&#xD;&#xA;FROM&#xD;&#xA;dbo.sgw_bpm_users_esc_message AS um&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_escalation_message AS em&#xD;&#xA;ON um.escalation_message_id = em.escalation_message_id&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_escalation_instance AS ei&#xD;&#xA;ON em.escalation_instance_id = ei.escalation_instance_id&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_activity_instance AS ai&#xD;&#xA;ON ai.activity_instance_id = ei.activity_instance_id&#xD;&#xA;WHERE&#xD;&#xA;um.mark_as_read = 'N' AND&#xD;&#xA;em.escalation_type_value = 'ACTV' AND&#xD;&#xA;ai.status_value = 'INPC' AND&#xD;&#xA;um.user_serial_id = @USER_SERIAL_ID AND&#xD;&#xA;ai.checked_out_user &lt;&gt; @CHECKED_OUT_USER LIMIT 5) UNION ALL (SELECT&#xD;&#xA;um.users_esc_message_id,&#xD;&#xA;um.user_serial_id,&#xD;&#xA;em.escalation_message,&#xD;&#xA;um.mark_as_read,&#xD;&#xA;'' AS checked_out_user,&#xD;&#xA;'Process Escalations' AS escalation_message_type,&#xD;&#xA;spi.due_date&#xD;&#xA;FROM&#xD;&#xA;dbo.sgw_bpm_users_esc_message AS um&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_escalation_message AS em&#xD;&#xA;ON um.escalation_message_id = em.escalation_message_id&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_prcs_esc_instance AS pei&#xD;&#xA;ON pei.process_escalation_instance_id = em.escalation_instance_id&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_process_escalation AS pe&#xD;&#xA;ON pe.process_escalation_id = pei.process_escalation_id&#xD;&#xA;INNER&#xD;&#xA;JOIN dbo.sgw_bpm_process_instance AS spi&#xD;&#xA;ON spi.process_instance_id = pei.process_instance_id&#xD;&#xA;WHERE&#xD;&#xA;um.mark_as_read = 'N' AND&#xD;&#xA;em.escalation_type_value = 'PROS' AND&#xD;&#xA;um.user_serial_id = @USER_SERIAL_ID LIMIT 5)&#xD;&#xA;ORDER BY due_date NULLS FIRST">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
        <parameter ID="@CHECKED_OUT_USER" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="UpdateMessageAsRead" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGW_BPM_USERS_ESC_MESSAGE SET MARK_AS_READ='Y' WHERE USERS_ESC_MESSAGE_ID IN &#xD;&#xA;(select Items from [dbo].[UDF_SPLIT](@USERS_ESC_MESSAGE_ID,','))" sfwOracle="UPDATE SGW_BPM_USERS_ESC_MESSAGE SET MARK_AS_READ='Y' &#xD;&#xA;WHERE USERS_ESC_MESSAGE_ID IN  (SELECT REGEXP_SUBSTR(@USERS_ESC_MESSAGE_ID, '[^,]+', 1, LEVEL) AS items&#xD;&#xA;   FROM dual&#xD;&#xA;CONNECT BY REGEXP_SUBSTR(@USERS_ESC_MESSAGE_ID, '[^,]+', 1, LEVEL) IS NOT NULL)" sfwPostgre="UPDATE dbo.sgw_bpm_users_esc_message SET mark_as_read = 'Y'&#xD;&#xA;WHERE&#xD;&#xA;cast(users_esc_message_id AS character varying) IN (SELECT&#xD;&#xA;items&#xD;&#xA;FROM&#xD;&#xA;dbo.udf_split(cast(@USERS_ESC_MESSAGE_ID AS character varying),&#xD;&#xA;',&#xD;&#xA;'))">
      <parameters>
        <parameter ID="@USERS_ESC_MESSAGE_ID" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="ProcessEscalationMessagesByProcessInstanceId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT top 12&#x9;UM.USERS_ESC_MESSAGE_ID,&#xA;&#x9;&#x9;UM.USER_SERIAL_ID,&#xA;&#x9;&#x9;EM.ESCALATION_MESSAGE,&#xA;&#x9;&#x9;UM.MARK_AS_READ,&#xA;&#x9;&#x9;'' CHECKED_OUT_USER,&#xA;&#x9;&#x9;'Process Escalations' ESCALATION_MESSAGE_TYPE,&#xA;&#x9;&#x9;SPI.DUE_DATE&#xA;FROM SGW_BPM_USERS_ESC_MESSAGE UM WITH(NOLOCK)&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ESCALATION_MESSAGE EM WITH(NOLOCK) ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PRCS_ESC_INSTANCE PEI WITH(NOLOCK) ON PEI.PROCESS_ESCALATION_INSTANCE_ID = EM.ESCALATION_INSTANCE_ID&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_ESCALATION PE WITH(NOLOCK) &#x9;ON PE.PROCESS_ESCALATION_ID = PEI.PROCESS_ESCALATION_ID &#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI WITH(NOLOCK) ON SPI.PROCESS_INSTANCE_ID=PEI.PROCESS_INSTANCE_ID&#xA;WHERE UM.MARK_AS_READ = 'N'&#xA;AND EM.ESCALATION_TYPE_VALUE  = 'PROS'&#xA;AND SPI.PROCESS_INSTANCE_ID = @PROCESS_INSTANCE_ID&#xA;AND UM.USER_SERIAL_ID = @USER_SERIAL_ID&#xA;ORDER BY DUE_DATE" sfwOracle="SELECT &#x9;UM.USERS_ESC_MESSAGE_ID,&#xA;&#x9;&#x9;UM.USER_SERIAL_ID,&#xA;&#x9;&#x9;EM.ESCALATION_MESSAGE,&#xA;&#x9;&#x9;UM.MARK_AS_READ,&#xA;&#x9;&#x9;'' CHECKED_OUT_USER,&#xA;&#x9;&#x9;'Process Escalations' ESCALATION_MESSAGE_TYPE,&#xA;&#x9;&#x9;SPI.DUE_DATE&#xA;FROM SGW_BPM_USERS_ESC_MESSAGE UM &#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ESCALATION_MESSAGE EM  ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PRCS_ESC_INSTANCE PEI  ON PEI.PROCESS_ESCALATION_INSTANCE_ID = EM.ESCALATION_INSTANCE_ID&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_ESCALATION PE  &#x9;ON PE.PROCESS_ESCALATION_ID = PEI.PROCESS_ESCALATION_ID &#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI  ON SPI.PROCESS_INSTANCE_ID=PEI.PROCESS_INSTANCE_ID&#xA;WHERE UM.MARK_AS_READ = 'N'&#xA;AND EM.ESCALATION_TYPE_VALUE  = 'PROS'&#xA;AND SPI.PROCESS_INSTANCE_ID = @PROCESS_INSTANCE_ID&#xA;AND UM.USER_SERIAL_ID = @USER_SERIAL_ID&#xA;ORDER BY DUE_DATE&#xA;FETCH FIRST 12 ROWS ONLY" sfwPostgre="SELECT &#x9;UM.USERS_ESC_MESSAGE_ID,&#xD;&#xA;&#x9;&#x9;UM.USER_SERIAL_ID,&#xD;&#xA;&#x9;&#x9;EM.ESCALATION_MESSAGE,&#xD;&#xA;&#x9;&#x9;UM.MARK_AS_READ,&#xD;&#xA;&#x9;&#x9;'' CHECKED_OUT_USER,&#xD;&#xA;&#x9;&#x9;'Process Escalations' ESCALATION_MESSAGE_TYPE,&#xD;&#xA;&#x9;&#x9;SPI.DUE_DATE&#xD;&#xA;FROM SGW_BPM_USERS_ESC_MESSAGE UM &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_ESCALATION_MESSAGE EM  ON UM.ESCALATION_MESSAGE_ID = EM.ESCALATION_MESSAGE_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PRCS_ESC_INSTANCE PEI  ON PEI.PROCESS_ESCALATION_INSTANCE_ID = EM.ESCALATION_INSTANCE_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_ESCALATION PE  &#x9;ON PE.PROCESS_ESCALATION_ID = PEI.PROCESS_ESCALATION_ID &#xD;&#xA;&#x9;&#x9;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI  ON SPI.PROCESS_INSTANCE_ID=PEI.PROCESS_INSTANCE_ID&#xD;&#xA;WHERE UM.MARK_AS_READ = 'N'&#xD;&#xA;AND EM.ESCALATION_TYPE_VALUE  = 'PROS'&#xD;&#xA;AND SPI.PROCESS_INSTANCE_ID = @PROCESS_INSTANCE_ID&#xD;&#xA;AND UM.USER_SERIAL_ID = @USER_SERIAL_ID&#xD;&#xA;ORDER BY DUE_DATE&#xD;&#xA;FETCH FIRST 12 ROWS ONLY">
      <parameters>
        <parameter ID="@PROCESS_INSTANCE_ID" sfwDataType="int" />
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <ExtraFields />
  <methods />
  <lifecycle />
  <attributes>
    <attribute sfwType="Property" ID="IobjMainCDO" sfwValue="iobjMainCDO" />
    <attribute ID="IstrEscalationMessage" sfwDataType="string" sfwPrivate="False" sfwType="Property" />
    <attribute ID="IstrCheckOutUser" sfwDataType="string" sfwPrivate="False" sfwType="Property" />
    <attribute sfwValue="users_esc_message_id" sfwType="Column" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UsersEscMessageId" sfwCaption="ID" />
    <attribute sfwValue="escalation_message_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="EscalationMessageId" sfwCaption="Escalation Message Id" />
    <attribute sfwValue="user_serial_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UserSerialId" sfwCaption="User Serial Id" />
    <attribute sfwValue="mark_as_read" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="1" sfwIsNull="False" ID="MarkAsRead" sfwCaption="Mark As Read" />
    <attribute sfwValue="created_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="CreatedBy" sfwCaption="Created By" />
    <attribute sfwValue="created_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="CreatedDate" sfwCaption="Created Date" />
    <attribute sfwValue="modified_by" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="50" sfwIsNull="False" ID="ModifiedBy" sfwCaption="Modified By" />
    <attribute sfwValue="modified_date" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="datetime" sfwDBDataType="datetime" sfwIsNull="False" ID="ModifiedDate" sfwCaption="Modified Date" />
    <attribute sfwValue="update_seq" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="False" ID="UpdateSeq" sfwCaption="Update Seq" />
  </attributes>
  <objectmethods />
</entity>