<entity ID="entMASBatchRequest" sfwActive="True" sfwStatus="Valid" sfwType="BusinessRule" sfwErrorTable="sgt_mas_batch_request_error" sfwParentKey="mas_batch_request_id" sfwParentKeyValue="icdoMASBatchRequest.mas_batch_request_id" sfwMainCDO="icdoMasBatchRequest" sfwStatusColumn="status_value" sfwReadOnlyRule="IsStatusProcessed" sfwObjectID="busMASBatchRequest" sfwTableName="sgt_mas_batch_request" sfwView="False" sfwParentEntity="entMAS">
  <rules>
    <rule ID="IsActionStatusNotPending" sfwMessageId="8304" sfwExpression="!(this.icdoMasBatchRequest.action_status_value == &quot;PEND&quot;)" sfwObjectBased="True" />
    <rule ID="IsJobClassTypeorStatusNotAvailable" sfwMessageId="8303" sfwExpression="(this.icdoMasBatchRequest.batch_request_type_value == &quot;TGRP&quot;) &amp;&amp; &#xA;(this.IsJobClassTypeorStatusValid() == False)" sfwObjectBased="True" />
    <rule ID="IsMemberDeceased" sfwMessageId="8305" sfwExpression="!(this.icdoMasBatchRequest.group_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;(this.icdoMasBatchRequest.batch_request_type_value == &quot;INON&quot;) &amp;&amp; &#xA;(RFunc.GetValue&lt;DateTime&gt;(this, &quot;ibusMember.icdoPerson.date_of_death&quot;) != DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="IsPersonEligibleForNRTR_MAS" sfwMessageId="8307" sfwExpression="!(this.icdoMasBatchRequest.group_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;(this.icdoMasBatchRequest.batch_request_type_value == &quot;INON&quot;) &amp;&amp; &#xA;(this.IsMemberValid() == False)" sfwObjectBased="True" />
    <rule ID="IsPersonNotValid" sfwMessageId="1026" sfwExpression="(this.IsPersonExists() == False)" sfwObjectBased="True" />
    <rule ID="IsStatementEffectiveDateEarlierThanLatestFY" sfwMessageId="8302" sfwExpression="!(this.icdoMasBatchRequest.batch_request_type_value == &quot;ANNL&quot;) &amp;&amp; &#xA;(this.IsStatementEffectiveDateEarlierThanFY() == True)" sfwObjectBased="True" />
    <rule ID="IsStatementEffectiveDateForAnnualNonRetiredNOTValid" sfwMessageId="8034" sfwExpression="(this.IsAnnualStatementEffectiveDateValid() == False) &amp;&amp; &#xA;!(this.icdoMasBatchRequest.group_type_value == &quot;RETR&quot;)" sfwObjectBased="True" />
    <rule ID="IsStatementEffectiveDateForAnnualRetiredNOTValid" sfwMessageId="8035" sfwExpression="(this.icdoMasBatchRequest.group_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;(this.IsAnnualStatementEffectiveDateValid() == False)" sfwObjectBased="True" />
    <rule ID="IsStatementEffectiveDateNOTValid" sfwMessageId="8300" sfwExpression="((this.icdoMasBatchRequest.batch_request_type_value == &quot;ANNL&quot;) || &#xA;(this.icdoMasBatchRequest.batch_request_type_value == &quot;INON&quot;)) &amp;&amp; &#xA;(this.IsStatementEffectiveDateValid() == False)" sfwObjectBased="True" />
    <rule ID="IsStatementEffectiveDateNull" sfwMessageId="8301" sfwExpression="(this.icdoMasBatchRequest.statement_effective_date == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="IsStatusProcessed" sfwExpression="(this.icdoMasBatchRequest.action_status_value == &quot;PROC&quot;)" sfwObjectBased="True" />
    <rule ID="IsSuppressAnnualFlagSelected" sfwMessageId="8306" sfwExpression="!(this.icdoMasBatchRequest.group_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;(this.icdoMasBatchRequest.batch_request_type_value == &quot;INON&quot;) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusMember.icdoPerson.suppress_annual_statement_flag&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleBatchRequestTypeAnnualNonRetired" sfwExpression="(this.icdoMasBatchRequest.batch_request_type_value == &quot;ANNL&quot;) &amp;&amp; &#xA;!(this.icdoMasBatchRequest.group_type_value == &quot;RETR&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleBatchRequestTypeAnnualRetired" sfwExpression="(this.icdoMasBatchRequest.group_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;(this.icdoMasBatchRequest.batch_request_type_value == &quot;ANNL&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleBatchRequestTypeIndividualNonRetired" sfwExpression="(this.icdoMasBatchRequest.batch_request_type_value == &quot;INON&quot;) &amp;&amp; &#xA;!(this.icdoMasBatchRequest.group_type_value == &quot;RETR&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleBatchRequestTypeIndividualRetired" sfwExpression="(this.icdoMasBatchRequest.batch_request_type_value == &quot;INON&quot;) &amp;&amp; &#xA;(this.icdoMasBatchRequest.group_type_value == &quot;RETR&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleBatchRequestTypeTargetedNonRetired" sfwExpression="(this.icdoMasBatchRequest.batch_request_type_value == &quot;TGRP&quot;) &amp;&amp; &#xA;!(this.icdoMasBatchRequest.group_type_value == &quot;RETR&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleBatchRequestTypeTargetedRetired" sfwExpression="(this.icdoMasBatchRequest.batch_request_type_value == &quot;TGRP&quot;) &amp;&amp; &#xA;(this.icdoMasBatchRequest.group_type_value == &quot;RETR&quot;)" sfwObjectBased="True" />
  </rules>
  <delete>
    <property ID="lstMasSelection" sfwMethodName="LoadSelection" />
    <property ID="SoftErrors" sfwMethodName="LoadErrors" />
    <property ID="lstIclcPlan" sfwMethodName="LoadMASPlan" />
  </delete>
  <checklist />
  <initialload>
    <item ID="VisibleRuleBatchRequestTypeAnnualNonRetired" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleBatchRequestTypeIndividualNonRetired" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleBatchRequestTypeTargetedRetired" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleBatchRequestTypeTargetedNonRetired" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleBatchRequestTypeAnnualRetired" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleBatchRequestTypeIndividualRetired" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror>
    <item ID="IsStatementEffectiveDateEarlierThanLatestFY" sfwMode="All" sfwStatus="Active" />
    <item ID="IsSuppressAnnualFlagSelected" sfwMode="All" sfwStatus="Active" />
  </softerror>
  <harderror>
    <item ID="IsStatementEffectiveDateNOTValid" sfwMode="All" sfwStatus="Active" />
    <item ID="IsStatementEffectiveDateNull" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPersonNotValid" sfwMode="All" sfwStatus="Active" />
    <item ID="IsJobClassTypeorStatusNotAvailable" sfwMode="All" sfwStatus="Active" />
    <item ID="IsStatementEffectiveDateForAnnualNonRetiredNOTValid" sfwMode="All" sfwStatus="Active" />
    <item ID="IsStatementEffectiveDateForAnnualRetiredNOTValid" sfwMode="All" sfwStatus="Active" />
    <item ID="IsMemberDeceased" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPersonEligibleForNRTR_MAS" sfwMode="All" sfwStatus="Active" />
  </harderror>
  <validatedelete>
    <item ID="IsActionStatusNotPending" sfwMode="All" sfwStatus="Active" />
  </validatedelete>
  <groupslist />
  <updateablecdo />
  <commonproperties />
  <queries>
    <query ID="Lookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK)">
      <parameters />
    </query>
    <query ID="GetMemberCount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(BATCHREQUESTID) TOTALCOUNT FROM&#xD;&#xA;(&#xD;&#xA;SELECT DISTINCT @BATCHREQUESTID BATCHREQUESTID, PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT APPACC WITH(NOLOCK) ON APPACC.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID &#xD;&#xA;AND ISNULL(APPACC.IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N')='Y'&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP WITH(NOLOCK) ON APPACC.BENEFIT_APPLICATION_ID=APP.BENEFIT_APPLICATION_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PAY WITH(NOLOCK) ON PAY.APPLICATION_ID=APP.BENEFIT_APPLICATION_ID&#xD;&#xA;WHERE &#xD;&#xA;PAY.PAYEE_ACCOUNT_ID IS NULL AND &#xD;&#xA;(@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON') AND &#xD;&#xA;BENEFIT_TYPE_VALUE='RETR' AND ACC.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1','SUS2')  AND &#xD;&#xA;PER.DATE_OF_DEATH IS NULL AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N' AND &#xD;&#xA;PER.DATE_OF_BIRTH IS NOT NULL AND&#xD;&#xA;PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' THEN @PERSON_ID ELSE PER.PERSON_ID END)&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT @BATCHREQUESTID BATCHREQUESTID, PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL EMPACCDET WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=EMPACCDET.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET WITH(NOLOCK) ON EMPACCDET.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON EMP.PERSON_EMPLOYMENT_ID=EMPDET.PERSON_EMPLOYMENT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK) ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE  &#xD;&#xA;(@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON') AND &#xD;&#xA;BENEFIT_TYPE_VALUE IN ('INSR','FLEX') AND &#xD;&#xA;(ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' OR EMPACCDET.ELECTION_VALUE='WAVD' OR ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL4') AND &#xD;&#xA;EMP.END_DATE IS NULL AND ISNULL(GHDV.COBRA_TYPE_VALUE,'') &lt;&gt; '36MC' AND &#xD;&#xA;PER.DATE_OF_DEATH IS NULL AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;AND PER.DATE_OF_BIRTH IS NOT NULL &#xD;&#xA;AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' THEN @PERSON_ID ELSE PER.PERSON_ID END)&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT @BATCHREQUESTID BATCHREQUESTID, PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL EMPACCDET WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=EMPACCDET.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET WITH(NOLOCK) ON EMPACCDET.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON EMP.PERSON_EMPLOYMENT_ID=EMPDET.PERSON_EMPLOYMENT_ID&#xD;&#xA;WHERE  (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON') &#xD;&#xA;AND BENEFIT_TYPE_VALUE='DEFF' AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL3'&#xD;&#xA;AND EMP.END_DATE IS NULL&#xD;&#xA;AND PER.DATE_OF_DEATH IS NULL AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N'&#xD;&#xA;AND PER.DATE_OF_BIRTH IS NOT NULL &#xD;&#xA;AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' THEN @PERSON_ID ELSE PER.PERSON_ID END)&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT @BATCHREQUESTID BATCHREQUESTID, PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT APPACC WITH(NOLOCK) ON APPACC.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID &#xD;&#xA;AND ISNULL(APPACC.IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N')='Y'&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP WITH(NOLOCK) ON APPACC.BENEFIT_APPLICATION_ID=APP.BENEFIT_APPLICATION_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PAY WITH(NOLOCK) ON PAY.APPLICATION_ID=APP.BENEFIT_APPLICATION_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL EMPACCDET WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=EMPACCDET.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET WITH(NOLOCK) ON EMPACCDET.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON EMP.PERSON_EMPLOYMENT_ID=EMPDET.PERSON_EMPLOYMENT_ID&#xD;&#xA;WHERE &#xD;&#xA;PAY.PAYEE_ACCOUNT_ID IS NULL AND (@BATCHREQUESTTYPE='TGRP') AND &#xD;&#xA;BENEFIT_TYPE_VALUE='RETR' AND &#xD;&#xA;ACC.PLAN_ID IN (SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID) AND &#xD;&#xA;ACC.PLAN_PARTICIPATION_STATUS_VALUE = (&#xD;&#xA;  SELECT CASE WHEN REQ1.PLAN_PARTICIPATION_STATUS_VALUE IS NULL THEN ACC.PLAN_PARTICIPATION_STATUS_VALUE ELSE &#xD;&#xA;   (SELECT COD.CODE_VALUE FROM SGS_CODE_VALUE COD WITH(NOLOCK) WHERE COD.CODE_ID=337 &#xD;&#xA;   AND COD.DATA2=REQ1.PLAN_PARTICIPATION_STATUS_VALUE AND COD.DATA1='RETR')END&#xD;&#xA;  FROM SGT_MAS_BATCH_REQUEST REQ1&#xD;&#xA;  WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA;PER.DATE_OF_DEATH IS NULL AND &#xD;&#xA;ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N' AND &#xD;&#xA;PER.DATE_OF_BIRTH IS NOT NULL  AND&#xD;&#xA;EMPDET.JOB_CLASS_VALUE = (&#xD;&#xA;  SELECT CASE WHEN JOB_CLASS_VALUE IS NULL THEN EMPDET.JOB_CLASS_VALUE ELSE JOB_CLASS_VALUE END &#xD;&#xA;  FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA;EMPDET.TYPE_VALUE  = (&#xD;&#xA;  SELECT CASE WHEN EMPLOYMENT_TYPE_VALUE IS NULL THEN EMPDET.TYPE_VALUE ELSE EMPLOYMENT_TYPE_VALUE END  &#xD;&#xA;  FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID)&#xD;&#xA;AND EMP.ORG_ID = (&#xD;&#xA;  SELECT CASE WHEN ORG_ID IS NULL THEN EMP.ORG_ID ELSE ORG_ID END &#xD;&#xA;  FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID)&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT @BATCHREQUESTID BATCHREQUESTID, PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL EMPACCDET WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=EMPACCDET.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET WITH(NOLOCK) ON EMPACCDET.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON EMP.PERSON_EMPLOYMENT_ID=EMPDET.PERSON_EMPLOYMENT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK) ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE &#xD;&#xA;(@BATCHREQUESTTYPE='TGRP') AND &#xD;&#xA;BENEFIT_TYPE_VALUE IN ('INSR','FLEX') AND &#xD;&#xA;ACC.PLAN_ID IN (SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID) AND &#xD;&#xA;ACC.PLAN_PARTICIPATION_STATUS_VALUE IN (&#xD;&#xA;  SELECT COD.CODE_VALUE FROM SGS_CODE_VALUE COD WITH(NOLOCK) WHERE COD.CODE_ID=337 AND COD.DATA1 IN ('INSR','FLEX') AND &#xD;&#xA;  COD.DATA2=(SELECT ISNULL(REQ1.PLAN_PARTICIPATION_STATUS_VALUE,cod.DATA2) FROM SGT_MAS_BATCH_REQUEST REQ1 WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID)&#xD;&#xA;  ) AND &#xD;&#xA;EMP.END_DATE IS NULL AND &#xD;&#xA;ISNULL(GHDV.COBRA_TYPE_VALUE,'') &lt;&gt; '36MC' AND &#xD;&#xA;PER.DATE_OF_BIRTH IS NOT NULL  AND&#xD;&#xA;PER.DATE_OF_DEATH IS NULL AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N' AND &#xD;&#xA;EMPDET.JOB_CLASS_VALUE = (&#xD;&#xA;  SELECT CASE WHEN JOB_CLASS_VALUE IS NULL THEN EMPDET.JOB_CLASS_VALUE ELSE JOB_CLASS_VALUE END &#xD;&#xA;  FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA;EMPDET.TYPE_VALUE  = (&#xD;&#xA;  SELECT CASE WHEN EMPLOYMENT_TYPE_VALUE IS NULL THEN EMPDET.TYPE_VALUE ELSE EMPLOYMENT_TYPE_VALUE END  &#xD;&#xA;  FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA;EMP.ORG_ID = (&#xD;&#xA;  SELECT CASE WHEN ORG_ID IS NULL THEN EMP.ORG_ID ELSE ORG_ID END &#xD;&#xA;  FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID)&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT @BATCHREQUESTID BATCHREQUESTID, PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL EMPACCDET WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=EMPACCDET.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET WITH(NOLOCK) ON EMPACCDET.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON EMP.PERSON_EMPLOYMENT_ID=EMPDET.PERSON_EMPLOYMENT_ID&#xD;&#xA;WHERE  &#xD;&#xA;(@BATCHREQUESTTYPE='TGRP') AND &#xD;&#xA;BENEFIT_TYPE_VALUE='DEFF' AND &#xD;&#xA;EMP.END_DATE IS NULL AND &#xD;&#xA;PER.DATE_OF_DEATH IS NULL AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N' AND &#xD;&#xA;PER.DATE_OF_BIRTH IS NOT NULL  AND&#xD;&#xA;ACC.PLAN_ID IN (SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID) AND &#xD;&#xA;ACC.PLAN_PARTICIPATION_STATUS_VALUE =(SELECT CASE WHEN REQ1.PLAN_PARTICIPATION_STATUS_VALUE IS NULL THEN  &#xD;&#xA;  ACC.PLAN_PARTICIPATION_STATUS_VALUE ELSE (SELECT COD.CODE_VALUE FROM SGS_CODE_VALUE COD WITH(NOLOCK) WHERE COD.CODE_ID=337&#xD;&#xA;  AND COD.DATA2=REQ1.PLAN_PARTICIPATION_STATUS_VALUE AND COD.DATA1='DEFF') END&#xD;&#xA;  FROM SGT_MAS_BATCH_REQUEST REQ1&#xD;&#xA;  WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA;EMPDET.JOB_CLASS_VALUE = (&#xD;&#xA;  SELECT CASE WHEN JOB_CLASS_VALUE IS NULL THEN EMPDET.JOB_CLASS_VALUE ELSE JOB_CLASS_VALUE END &#xD;&#xA;  FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA;EMPDET.TYPE_VALUE  = (&#xD;&#xA;  SELECT CASE WHEN EMPLOYMENT_TYPE_VALUE IS NULL THEN EMPDET.TYPE_VALUE ELSE EMPLOYMENT_TYPE_VALUE END &#xD;&#xA;  FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA;EMP.ORG_ID = (&#xD;&#xA;  SELECT CASE WHEN ORG_ID IS NULL THEN EMP.ORG_ID ELSE ORG_ID END &#xD;&#xA;  FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID)&#xD;&#xA;&#xD;&#xA;) AS MAINTABLE">
      <parameters>
        <parameter ID="@BATCHREQUESTID" sfwDataType="int" />
        <parameter ID="@BATCHREQUESTTYPE" sfwDataType="string" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Update_MAS_Batch_Request_Status" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_MAS_BATCH_REQUEST&#xD;&#xA;SET ACTION_STATUS_VALUE = @ACTION_STATUS&#xD;&#xA;WHERE MAS_BATCH_REQUEST_ID=@BATCH_REQUEST_ID">
      <parameters>
        <parameter ID="@ACTION_STATUS" sfwDataType="DateTime" />
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllMembers" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT PER.* FROM SGT_PERSON PER WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.PERSON_ID=PER.PERSON_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID=@BATCH_REQUEST_ID AND MAS.IS_DATA_PULLED_FLAG='N'&#xD;&#xA;AND MAS.IS_REPORT_CREATED_FLAG='N'">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllMemberAccounts" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PER.*, SP.* FROM SGT_PERSON_ACCOUNT PER WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_PLAN SP WITH(NOLOCK) ON SP.PLAN_ID=PER.PLAN_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.PERSON_ID=PER.PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_PERSON SMP WITH(NOLOCK) ON SMP.MAS_SELECTION_ID=MAS.MAS_SELECTION_ID&#xD;&#xA;INNER JOIN SGT_MAS_PERSON_PLAN PPLN WITH(NOLOCK) ON PPLN.MAS_PERSON_ID=SMP.MAS_PERSON_ID AND PPLN.PLAN_ID=PER.PLAN_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON CV.CODE_ID=PER.PLAN_PARTICIPATION_STATUS_ID AND CV.CODE_VALUE=PER.PLAN_PARTICIPATION_STATUS_VALUE and CV.DATA2  in ('ERLD', 'SPND')&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID=@BATCH_REQUEST_ID AND CV.DATA2 &lt;&gt; 'WTDN' AND MAS.IS_DATA_PULLED_FLAG='N'&#xD;&#xA;AND MAS.IS_REPORT_CREATED_FLAG='N'">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllJointAnnuitants" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT &#xD;&#xA;CON.PERSON_ID AS 'MEMBER_ID',&#xD;&#xA;CONTACT.* FROM SGT_PERSON PER WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.PERSON_ID=PER.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_CONTACT CON WITH(NOLOCK) ON CON.PERSON_ID=PER.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON CONTACT WITH(NOLOCK) ON CONTACT.PERSON_ID=CON.CONTACT_PERSON_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID=@BATCH_REQUEST_ID AND MAS.IS_DATA_PULLED_FLAG='N'&#xD;&#xA;AND CON.RELATIONSHIP_VALUE='SPOU' AND CON.STATUS_VALUE='ACT'&#xD;&#xA;AND MAS.IS_REPORT_CREATED_FLAG='N'">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="BulkInsertMASReportData" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SET NOCOUNT ON&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;DECLARE @PAYMENTDATE DATETIME&#xD;&#xA;SELECT @PAYMENTDATE =  max(PAYMENT_DATE)&#xD;&#xA; FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK)&#xD;&#xA; WHERE STATUS_VALUE = 'PRCD' &#xD;&#xA; AND SCHEDULE_TYPE_VALUE = 'MTLY'&#xD;&#xA;set @PAYMENTDATE =  Dateadd(m,1,@PAYMENTDATE)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_SELECTION (&#xD;&#xA;MAS_BATCH_REQUEST_ID,&#xD;&#xA;PERSON_ID,&#xD;&#xA;IS_DATA_PULLED_FLAG,&#xD;&#xA;IS_REPORT_CREATED_FLAG,&#xD;&#xA;CREATED_BY,&#xD;&#xA;CREATED_DATE,&#xD;&#xA;MODIFIED_BY,&#xD;&#xA;MODIFIED_DATE,&#xD;&#xA;UPDATE_SEQ) &#xD;&#xA;&#xD;&#xA;SELECT DISTINCT &#xD;&#xA;@BATCHREQUESTID BATCHREQUESTID, &#xD;&#xA;PER.PERSON_ID,&#xD;&#xA;'N' AS 'IS_DATA_PULLED_FLAG',&#xD;&#xA;'N' AS 'IS_REPORT_CREATED_FLAG' ,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) CREATED_BY,&#xD;&#xA;@BATCHRUNDATE CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) MODIFIED_BY,&#xD;&#xA;@BATCHRUNDATE MODIFIED_DATE,&#xD;&#xA;0 UPDATE_SEQ &#xD;&#xA;FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID  AND PLN.BENEFIT_TYPE_VALUE='RETR'&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON ACC.PERSON_ID=PER.PERSON_ID AND PER.DATE_OF_BIRTH IS NOT NULL AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;AND (SUPPRESS_ANNUAL_STATEMENT_FLAG IS NULL OR SUPPRESS_ANNUAL_STATEMENT_FLAG = 'N')&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT APPACC WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=APPACC.PERSON_ACCOUNT_ID AND &#xD;&#xA; APPACC.IS_APPLICATION_PERSON_ACCOUNT_FLAG ='Y'&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP WITH(NOLOCK) ON APPACC.BENEFIT_APPLICATION_ID=APP.BENEFIT_APPLICATION_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PAY WITH(NOLOCK) ON APP.BENEFIT_APPLICATION_ID=PAY.APPLICATION_ID&#xD;&#xA;WHERE &#xD;&#xA;(@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON') AND &#xD;&#xA;(@PERSON_ID = 0 OR PER.PERSON_ID = @PERSON_ID) AND&#xD;&#xA;ACC.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1','SUS2') AND (PAY.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA;OR (PAY.PAYEE_ACCOUNT_ID IS NOT NULL AND (ACC.PLAN_ID = 1 OR ACC.PLAN_ID = 27))&#xD;&#xA;)&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT &#xD;&#xA;@BATCHREQUESTID BATCHREQUESTID, &#xD;&#xA;PER.PERSON_ID,&#xD;&#xA;'N' AS 'IS_DATA_PULLED_FLAG',&#xD;&#xA;'N' AS 'IS_REPORT_CREATED_FLAG',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) CREATED_BY,&#xD;&#xA;@BATCHRUNDATE CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) MODIFIED_BY,&#xD;&#xA;@BATCHRUNDATE MODIFIED_DATE,&#xD;&#xA;0 UPDATE_SEQ&#xD;&#xA;FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID AND PLN.BENEFIT_TYPE_VALUE='INSR'&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON ACC.PERSON_ID=PER.PERSON_ID AND PER.DATE_OF_BIRTH IS NOT NULL AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA; AND (PER.SUPPRESS_ANNUAL_STATEMENT_FLAG IS NULL OR PER.SUPPRESS_ANNUAL_STATEMENT_FLAG='N')&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL EMPACCDET WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=EMPACCDET.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET WITH(NOLOCK) ON EMPACCDET.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON EMPDET.PERSON_EMPLOYMENT_ID=EMP.PERSON_EMPLOYMENT_ID AND EMP.END_DATE IS NULL&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=GHDV.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON') AND &#xD;&#xA; (ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' OR EMPACCDET.ELECTION_VALUE='WAVD') AND &#xD;&#xA; ACC.FROM_PERSON_ACCOUNT_ID IS NULL AND &#xD;&#xA; (@PERSON_ID = 0 OR PER.PERSON_ID = @PERSON_ID)&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT &#xD;&#xA;@BATCHREQUESTID BATCHREQUESTID, &#xD;&#xA;PER.PERSON_ID,'N' as 'IS_DATA_PULLED_FLAG',&#xD;&#xA;'N' as 'IS_REPORT_CREATED_FLAG',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) CREATED_BY,&#xD;&#xA;@BATCHRUNDATE CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) MODIFIED_BY,&#xD;&#xA;@BATCHRUNDATE MODIFIED_DATE,&#xD;&#xA;0 UPDATE_SEQ&#xD;&#xA;FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID AND PLN.BENEFIT_TYPE_VALUE='DEFF'&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON ACC.PERSON_ID=PER.PERSON_ID AND PER.DATE_OF_BIRTH IS NOT NULL AND &#xD;&#xA; (PER.SUPPRESS_ANNUAL_STATEMENT_FLAG IS NULL OR PER.SUPPRESS_ANNUAL_STATEMENT_FLAG='N') AND PER.DATE_OF_DEATH IS NULL&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL EMPACCDET WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=EMPACCDET.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET WITH(NOLOCK) ON EMPACCDET.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON EMP.PERSON_EMPLOYMENT_ID=EMPDET.PERSON_EMPLOYMENT_ID AND EMP.END_DATE IS NULL&#xD;&#xA;WHERE (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON') AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL3' AND &#xD;&#xA;(@PERSON_ID = 0 OR PER.PERSON_ID = @PERSON_ID) &#xD;&#xA;UNION&#xD;&#xA;SELECT DISTINCT &#xD;&#xA;@BATCHREQUESTID BATCHREQUESTID, &#xD;&#xA;PER.PERSON_ID,'N' AS 'IS_DATA_PULLED_FLAG',&#xD;&#xA;'N' AS 'IS_REPORT_CREATED_FLAG',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) CREATED_BY,&#xD;&#xA;@BATCHRUNDATE CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) MODIFIED_BY,&#xD;&#xA;@BATCHRUNDATE MODIFIED_DATE,&#xD;&#xA;0 UPDATE_SEQ&#xD;&#xA;FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID AND PLN.BENEFIT_TYPE_VALUE='RETR'&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON ACC.PERSON_ID=PER.PERSON_ID AND PER.DATE_OF_BIRTH IS NOT NULL AND &#xD;&#xA; PER.DATE_OF_DEATH IS NULL AND (PER.SUPPRESS_ANNUAL_STATEMENT_FLAG IS NULL OR PER.SUPPRESS_ANNUAL_STATEMENT_FLAG='N') &#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT APPACC WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID = APPACC.PERSON_ACCOUNT_ID AND &#xD;&#xA; APPACC.IS_APPLICATION_PERSON_ACCOUNT_FLAG ='Y'&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP WITH(NOLOCK) ON APPACC.BENEFIT_APPLICATION_ID=APP.BENEFIT_APPLICATION_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PAY WITH(NOLOCK) ON APP.BENEFIT_APPLICATION_ID=PAY.APPLICATION_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL EMPACCDET WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=EMPACCDET.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET WITH(NOLOCK) ON EMPACCDET.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON EMPDET.PERSON_EMPLOYMENT_ID=EMP.PERSON_EMPLOYMENT_ID&#xD;&#xA;WHERE (@BATCHREQUESTTYPE='TGRP') AND &#xD;&#xA; ACC.PLAN_ID IN (SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID) AND &#xD;&#xA; ACC.PLAN_PARTICIPATION_STATUS_VALUE =(SELECT CASE WHEN REQ1.PLAN_PARTICIPATION_STATUS_VALUE IS NULL THEN &#xD;&#xA;           ACC.PLAN_PARTICIPATION_STATUS_VALUE ELSE (&#xD;&#xA;             SELECT COD.CODE_VALUE FROM SGS_CODE_VALUE COD WITH(NOLOCK) WHERE COD.CODE_ID=337 AND &#xD;&#xA;             COD.DATA2=REQ1.PLAN_PARTICIPATION_STATUS_VALUE AND COD.DATA1='RETR')END&#xD;&#xA;          FROM SGT_MAS_BATCH_REQUEST REQ1 WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA; --EMPDET.PERSON_EMPLOYMENT_DTL_ID = (SELECT TOP 1 EMPDET1.PERSON_EMPLOYMENT_DTL_ID FROM SGT_PERSON_EMPLOYMENT_DETAIL EMPDET1 WITH(NOLOCK)&#xD;&#xA; --         INNER JOIN SGT_PERSON_EMPLOYMENT EMP1 WITH(NOLOCK) ON EMPDET1.PERSON_EMPLOYMENT_ID=EMP1.PERSON_EMPLOYMENT_ID&#xD;&#xA; --         WHERE EMP1.PERSON_ID=PER.PERSON_ID ORDER BY EMP1.START_DATE DESC,EMPDET1.START_DATE DESC) AND&#xD;&#xA; EMPDET.JOB_CLASS_VALUE = (SELECT CASE WHEN JOB_CLASS_VALUE IS NULL THEN &#xD;&#xA;        EMPDET.JOB_CLASS_VALUE ELSE JOB_CLASS_VALUE END &#xD;&#xA;        FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA; EMPDET.STATUS_VALUE = (SELECT CASE WHEN EMPLOYMENT_STATUS_VALUE IS NULL THEN &#xD;&#xA;        EMPDET.STATUS_VALUE ELSE EMPLOYMENT_STATUS_VALUE END &#xD;&#xA;        FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA; EMPDET.TYPE_VALUE  = (SELECT CASE WHEN EMPLOYMENT_TYPE_VALUE IS NULL THEN EMPDET.TYPE_VALUE ELSE EMPLOYMENT_TYPE_VALUE END &#xD;&#xA;        FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA; EMP.ORG_ID = (SELECT CASE WHEN ORG_ID IS NULL THEN EMP.ORG_ID ELSE ORG_ID END &#xD;&#xA;     FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID) AND &#xD;&#xA; PAY.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA;    &#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT &#xD;&#xA;@BATCHREQUESTID BATCHREQUESTID, &#xD;&#xA;PER.PERSON_ID,&#xD;&#xA;'N' AS 'IS_DATA_PULLED_FLAG',&#xD;&#xA;'N' AS 'IS_REPORT_CREATED_FLAG',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) CREATED_BY,&#xD;&#xA;@BATCHRUNDATE CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) MODIFIED_BY,&#xD;&#xA;@BATCHRUNDATE MODIFIED_DATE,&#xD;&#xA;0 UPDATE_SEQ&#xD;&#xA;FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON ACC.PERSON_ID=PER.PERSON_ID AND PER.DATE_OF_BIRTH IS NOT NULL AND &#xD;&#xA; PER.DATE_OF_DEATH IS NULL AND (SUPPRESS_ANNUAL_STATEMENT_FLAG IS NULL OR SUPPRESS_ANNUAL_STATEMENT_FLAG='N') &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL EMPACCDET WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=EMPACCDET.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET WITH(NOLOCK) ON EMPACCDET.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON EMPDET.PERSON_EMPLOYMENT_ID=EMP.PERSON_EMPLOYMENT_ID AND EMP.END_DATE IS NOT NULL&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=GHDV.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE (@BATCHREQUESTTYPE='TGRP') AND BENEFIT_TYPE_VALUE IN ('INSR','FLEX') AND &#xD;&#xA; ACC.PLAN_ID IN (SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID) AND &#xD;&#xA; ACC.PLAN_PARTICIPATION_STATUS_VALUE  IN (&#xD;&#xA;  SELECT COD.CODE_VALUE FROM SGS_CODE_VALUE COD WITH(NOLOCK) WHERE COD.CODE_ID=337 AND COD.DATA1 IN ('INSR','FLEX') AND &#xD;&#xA;  COD.DATA2=(SELECT ISNULL(REQ1.PLAN_PARTICIPATION_STATUS_VALUE,COD.DATA2) FROM SGT_MAS_BATCH_REQUEST REQ1 WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID)) AND&#xD;&#xA; --(SELECT CASE WHEN REQ1.PLAN_PARTICIPATION_STATUS_VALUE IS NULL THEN &#xD;&#xA; --         ACC.PLAN_PARTICIPATION_STATUS_VALUE ELSE (SELECT COD.CODE_VALUE FROM SGS_CODE_VALUE COD WITH(NOLOCK) &#xD;&#xA; --         WHERE COD.CODE_ID=337 AND COD.DATA2=REQ1.PLAN_PARTICIPATION_STATUS_VALUE AND COD.DATA1='INSR') END&#xD;&#xA; --         FROM SGT_MAS_BATCH_REQUEST REQ1&#xD;&#xA; --         WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) &#xD;&#xA; ACC.FROM_PERSON_ACCOUNT_ID IS NULL AND &#xD;&#xA; EMPDET.JOB_CLASS_VALUE = (SELECT CASE WHEN JOB_CLASS_VALUE IS NULL THEN EMPDET.JOB_CLASS_VALUE ELSE JOB_CLASS_VALUE END &#xD;&#xA;        FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA; EMPDET.STATUS_VALUE = (SELECT CASE WHEN EMPLOYMENT_STATUS_VALUE IS NULL THEN &#xD;&#xA;        EMPDET.STATUS_VALUE ELSE EMPLOYMENT_STATUS_VALUE END &#xD;&#xA;        FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA; EMPDET.TYPE_VALUE  = (SELECT CASE WHEN EMPLOYMENT_TYPE_VALUE IS NULL THEN EMPDET.TYPE_VALUE ELSE EMPLOYMENT_TYPE_VALUE END  &#xD;&#xA;       FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA; EMP.ORG_ID = (SELECT CASE WHEN ORG_ID IS NULL THEN EMP.ORG_ID ELSE ORG_ID END FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID)&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT &#xD;&#xA;@BATCHREQUESTID BATCHREQUESTID, &#xD;&#xA;PER.PERSON_ID,'N' AS 'IS_DATA_PULLED_FLAG',&#xD;&#xA;'N' AS 'IS_REPORT_CREATED_FLAG',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) CREATED_BY,&#xD;&#xA;@BATCHRUNDATE CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) MODIFIED_BY,&#xD;&#xA;@BATCHRUNDATE MODIFIED_DATE,&#xD;&#xA;0 UPDATE_SEQ&#xD;&#xA;FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID AND PLN.BENEFIT_TYPE_VALUE='DEFF'&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON ACC.PERSON_ID=PER.PERSON_ID AND PER.DATE_OF_BIRTH IS NOT NULL AND PER.DATE_OF_DEATH IS NULL AND &#xD;&#xA; (PER.SUPPRESS_ANNUAL_STATEMENT_FLAG IS NULL OR PER.SUPPRESS_ANNUAL_STATEMENT_FLAG='N')&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL EMPACCDET WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=EMPACCDET.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET WITH(NOLOCK) ON EMPACCDET.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON EMPDET.PERSON_EMPLOYMENT_ID=EMP.PERSON_EMPLOYMENT_ID AND EMP.END_DATE IS NOT NULL&#xD;&#xA;WHERE (@BATCHREQUESTTYPE='TGRP') AND &#xD;&#xA; ACC.PLAN_ID IN (SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID) AND &#xD;&#xA; ACC.PLAN_PARTICIPATION_STATUS_VALUE =(SELECT CASE WHEN REQ1.PLAN_PARTICIPATION_STATUS_VALUE IS NULL THEN &#xD;&#xA;           ACC.PLAN_PARTICIPATION_STATUS_VALUE ELSE (SELECT COD.CODE_VALUE FROM SGS_CODE_VALUE COD WITH(NOLOCK) &#xD;&#xA;           WHERE COD.CODE_ID=337 AND COD.DATA2=REQ1.PLAN_PARTICIPATION_STATUS_VALUE AND COD.DATA1='DEFF') END&#xD;&#xA;           FROM SGT_MAS_BATCH_REQUEST REQ1 WITH(NOLOCK)&#xD;&#xA;           WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA; --EMPDET.PERSON_EMPLOYMENT_DTL_ID = (SELECT TOP 1 EMPDET1.PERSON_EMPLOYMENT_DTL_ID FROM SGT_PERSON_EMPLOYMENT_DETAIL EMPDET1 WITH(NOLOCK) &#xD;&#xA; --         INNER JOIN SGT_PERSON_EMPLOYMENT EMP1 WITH(NOLOCK) ON EMPDET1.PERSON_EMPLOYMENT_ID=EMP1.PERSON_EMPLOYMENT_ID&#xD;&#xA; --         WHERE EMP1.PERSON_ID=PER.PERSON_ID ORDER BY EMP1.START_DATE DESC,EMPDET1.START_DATE DESC) AND&#xD;&#xA; EMPDET.JOB_CLASS_VALUE = (SELECT CASE WHEN JOB_CLASS_VALUE IS NULL THEN EMPDET.JOB_CLASS_VALUE ELSE JOB_CLASS_VALUE END &#xD;&#xA;        FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA; EMPDET.STATUS_VALUE = (SELECT CASE WHEN EMPLOYMENT_STATUS_VALUE IS NULL THEN &#xD;&#xA;        EMPDET.STATUS_VALUE ELSE EMPLOYMENT_STATUS_VALUE END &#xD;&#xA;        FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA; EMPDET.TYPE_VALUE  = (SELECT CASE WHEN EMPLOYMENT_TYPE_VALUE IS NULL THEN EMPDET.TYPE_VALUE ELSE EMPLOYMENT_TYPE_VALUE END  &#xD;&#xA;       FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID) AND &#xD;&#xA; EMP.ORG_ID = (SELECT CASE WHEN ORG_ID IS NULL THEN EMP.ORG_ID ELSE ORG_ID END FROM SGT_MAS_BATCH_REQUEST WITH(NOLOCK) &#xD;&#xA;     WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID)&#xD;&#xA;     &#xD;&#xA;INSERT INTO SGT_MAS_PERSON(&#xD;&#xA;MAS_SELECTION_ID,&#xD;&#xA;FULL_NAME,&#xD;&#xA;DATE_OF_BIRTH,&#xD;&#xA;GENDER_DESCRIPTION,&#xD;&#xA;MARITAL_DESCRIPTION,&#xD;&#xA;SPOUSE_FULL_NAME,&#xD;&#xA;SPOUSE_DOB,&#xD;&#xA;SPOUSE_GENDER_DESCRIPTION,&#xD;&#xA;PERSON_EMPL_DETAIL_ID,&#xD;&#xA;SEASONAL_MONTHS_DESCRIPTION,&#xD;&#xA;ADDR_LINE1,&#xD;&#xA;ADDR_LINE2,&#xD;&#xA;ADDR_CITY,&#xD;&#xA;ADDR_STATE_DESCRIPTION,&#xD;&#xA;ADDR_COUNTRY_ID,&#xD;&#xA;ADDR_COUNTRY_VALUE,&#xD;&#xA;ADDR_COUNTRY_DESCRIPTION,&#xD;&#xA;ZIPCODE,&#xD;&#xA;FOREIGN_PROVINCE,&#xD;&#xA;FOREIGN_POSTAL_CODE,&#xD;&#xA;IS_EMPLOYMENT_ENDED,&#xD;&#xA;IS_EMPLOYMENT_ENDED_A_YEAR_BACK,&#xD;&#xA;IS_DEFERRED_ENROLLED,&#xD;&#xA;IS_457_DEFERRED_ENROLLED,&#xD;&#xA;IS_HEALTH_ENROLLED,&#xD;&#xA;IS_LIFE_ENROLLED,&#xD;&#xA;IS_DENTAL_ENROLLED,&#xD;&#xA;IS_VISION_ENROLLED,&#xD;&#xA;IS_LTC_ENROLLED,&#xD;&#xA;IS_EAP_ENROLLED,&#xD;&#xA;IS_FLEX_ENROLLED,&#xD;&#xA;IS_JOB_SERVICE_ENROLLED,&#xD;&#xA;IS_JUDGE_ENROLLED,&#xD;&#xA;IS_DB_PLAN_ENROLED,&#xD;&#xA;IS_DC_PLAN_ENROLED,&#xD;&#xA;IS_HP_ENROLLED,&#xD;&#xA;IS_MAIN_ENROLLED,&#xD;&#xA;IS_LE_ENROLLED,&#xD;&#xA;IS_NG_ENROLLED,&#xD;&#xA;IS_ELIGIBLE_FOR_INSURANCE_PLANS,&#xD;&#xA;IS_ELIGIBLE_FOR_HEALTH,&#xD;&#xA;IS_ELIGIBLE_FOR_LIFE,&#xD;&#xA;IS_ELIGIBLE_FOR_DENTAL,&#xD;&#xA;IS_ELIGIBLE_FOR_VISION,&#xD;&#xA;IS_ELIGIBLE_FOR_LTC,&#xD;&#xA;IS_ELIGIBLE_FOR_FLEX,&#xD;&#xA;IS_ELIGIBLE_FOR_DEFF,&#xD;&#xA;IS_ELIGIBLE_FOR_457,&#xD;&#xA;IS_ELIGILE_FOR_EAP,&#xD;&#xA;IS_ADJUSTMENTS_EXISTS,&#xD;&#xA;IS_PAYEE_ACCOUNT_EXIST_FLAG,&#xD;&#xA;HEALTH_LEVEL_OF_COVERAGE,&#xD;&#xA;DENTAL_LEVEL_OF_COVERAGE,&#xD;&#xA;VISION_LEVEL_OF_COVERAGE,&#xD;&#xA;LTC_LEVEL_OF_COVERAGE,&#xD;&#xA;LTC_INSURANCE_TYPE,&#xD;&#xA;LTC_SPOUSE_LEVEL_OF_COVERAGE,&#xD;&#xA;EAP_PROVIDER_NAME,&#xD;&#xA;IS_PERSON_MARRIED,&#xD;&#xA;APPROVED_TFFR_TIAA_SERVICE,&#xD;&#xA;TENTATIVE_TFFR_TIAA_SERVICE,&#xD;&#xA;CREATED_BY,&#xD;&#xA;CREATED_DATE,&#xD;&#xA;MODIFIED_BY,&#xD;&#xA;MODIFIED_DATE,&#xD;&#xA;UPDATE_SEQ,&#xD;&#xA;IS_DB_SUSPENDED)&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT&#xD;&#xA;MS.MAS_SELECTION_ID 'MAS_SELECTION_ID',&#xD;&#xA;ISNULL(PREFIX.DESCRIPTION,'') + ' ' + ISNULL(PER.FIRST_NAME,'') + ' ' +  &#xD;&#xA; ISNULL(PER.MIDDLE_NAME,'') + ' ' + ISNULL(PER.LAST_NAME,'') + ' ' + ISNULL(SUFFIX.DESCRIPTION,'') 'FULL_NAME' ,&#xD;&#xA;PER.DATE_OF_BIRTH 'DATE_OF_BIRTH', &#xD;&#xA;ISNULL(GENDERCODE.DESCRIPTION,'') AS 'GENDER_DESCRIPTION',&#xD;&#xA;ISNULL(MARITALSTATUS.DESCRIPTION,'') 'MARITAL_DESCRIPTION',&#xD;&#xA;ISNULL(BENPREFIX.DESCRIPTION,'') + ' ' +ISNULL(BENPER.FIRST_NAME,'') + ' ' + &#xD;&#xA; ISNULL(BENPER.MIDDLE_NAME,'') + ' ' + ISNULL(BENPER.LAST_NAME,'') + ' ' + ISNULL(BENSUFFIX.DESCRIPTION,'') 'SPOUSE_FULL_NAME',&#xD;&#xA;BENPER.DATE_OF_BIRTH AS 'SPOUSE_DOB',&#xD;&#xA;ISNULL(SPOUGENDERCODE.DESCRIPTION,'') AS 'SPOUSE_GENDER_DESCRIPTION',&#xD;&#xA;EMPDET.PERSON_EMPLOYMENT_DTL_ID AS 'PERSON_EMPL_DETAIL_ID',&#xD;&#xA;SEASONAL.DESCRIPTION 'SEASONAL_MONTHS_DESCRIPTION',&#xD;&#xA;PERADDR.ADDR_LINE_1 'ADDR_LINE1',&#xD;&#xA;PERADDR.ADDR_LINE_2 'ADDR_LINE2',&#xD;&#xA;PERADDR.ADDR_CITY 'ADDR_CITY',&#xD;&#xA;ADDRES.CODE_VALUE 'ADDR_STATE_DESCRIPTION',&#xD;&#xA;ISNULL(PERADDR.ADDR_COUNTRY_ID,151) AS 'ADDR_COUNTRY_ID',&#xD;&#xA;PERADDR.ADDR_COUNTRY_VALUE AS 'ADDR_COUNTRY_VALUE',&#xD;&#xA;CON.DESCRIPTION 'ADDR_COUNTRY_DESCRIPTION',&#xD;&#xA;PERADDR.ADDR_ZIP_CODE + CASE WHEN PERADDR.ADDR_ZIP_4_CODE IS NOT NULL THEN '-'+PERADDR.ADDR_ZIP_4_CODE ELSE '' END AS 'ZIPCODE',&#xD;&#xA;PERADDR.FOREIGN_PROVINCE AS 'FOREIGN_PROVINCE',&#xD;&#xA;PERADDR.FOREIGN_POSTAL_CODE  AS 'FOREIGN_POSTAL_CODE',&#xD;&#xA;CASE WHEN EMP.END_DATE IS NOT NULL THEN 'Y' ELSE 'N' END  AS 'IS_EMPLOYMENT_ENDED',&#xD;&#xA;CASE WHEN EMP.END_DATE IS NOT NULL AND EMP.END_DATE &lt; DATEADD(&quot;YY&quot;,-1,@EFFECTIVE_DATE)  THEN 'Y' ELSE 'N' END  AS 'IS_EMPLOYMENT_ENDED_A_YEAR_BACK',&#xD;&#xA;(&#xD;&#xA; SELECT CASE WHEN EXISTS(SELECT 1 FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL SPAE WITH(NOLOCK) &#xD;&#xA; WHERE DEF1.PERSON_ACCOUNT_ID &gt; 0 AND SPAE.PERSON_ACCOUNT_ID=DEF1.PERSON_ACCOUNT_ID &#xD;&#xA; AND SPAE.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID) THEN 'Y' ELSE 'N' END&#xD;&#xA;) AS 'IS_DEFERRED_ENROLLED',&#xD;&#xA;(&#xD;&#xA; SELECT CASE WHEN EXISTS(SELECT 1 FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL SPAE WITH(NOLOCK) &#xD;&#xA; WHERE DEF2.PERSON_ACCOUNT_ID &gt; 0 AND SPAE.PERSON_ACCOUNT_ID=DEF2.PERSON_ACCOUNT_ID &#xD;&#xA; AND SPAE.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID) THEN 'Y' ELSE 'N' END &#xD;&#xA;) AS 'IS_457_DEFERRED_ENROLLED',&#xD;&#xA;CASE WHEN ISNULL(HEALTH.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END  AS 'IS_HEALTH_ENROLLED' ,&#xD;&#xA;CASE WHEN ISNULL(LIFE.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END  AS 'IS_LIFE_ENROLLED',&#xD;&#xA;CASE WHEN ISNULL(DENTAL.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_DENTAL_ENROLLED',&#xD;&#xA;CASE WHEN ISNULL(VISION.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_VISION_ENROLLED',&#xD;&#xA;CASE WHEN ISNULL(LTC.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END  AS 'IS_LTC_ENROLLED',&#xD;&#xA;CASE WHEN ISNULL(EAP.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_EAP_ENROLLED',&#xD;&#xA;CASE WHEN ISNULL(FLEX.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_FLEX_ENROLLED',&#xD;&#xA;CASE WHEN ISNULL(JS.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_JOB_SERVICE_ENROLLED',&#xD;&#xA;CASE WHEN ISNULL(JD.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_JUDGE_ENROLLED',&#xD;&#xA;(&#xD;&#xA; SELECT CASE WHEN EXISTS(SELECT 1 FROM SGT_PERSON_ACCOUNT DB WITH(NOLOCK) &#xD;&#xA;  WHERE DB.PLAN_ID IN(1,2,3,4,5,6,20,21,23,24,25,26,27,29) AND &#xD;&#xA;  (DB.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL1' OR DB.PLAN_PARTICIPATION_STATUS_VALUE='SUS2') &#xD;&#xA;  AND DB.PERSON_ID=PER.PERSON_ID) THEN 'Y' ELSE 'N' END&#xD;&#xA;) AS 'IS_DB_PLAN_ENROLED',&#xD;&#xA;CASE WHEN ISNULL(DC.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_DC_PLAN_ENROLED',&#xD;&#xA;CASE WHEN ISNULL(HP.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_HP_ENROLLED',&#xD;&#xA;CASE WHEN ISNULL(MAIN.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_MAIN_ENROLLED',&#xD;&#xA;CASE WHEN ISNULL(LE.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_LE_ENROLLED',&#xD;&#xA;CASE WHEN ISNULL(NG.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_NG_ENROLLED',&#xD;&#xA;(&#xD;&#xA; SELECT CASE WHEN EXISTS(SELECT 1 FROM SGT_ORG_PLAN IP WITH(NOLOCK) &#xD;&#xA;  WHERE EMP.ORG_ID=IP.ORG_ID AND IP.PLAN_ID IN (9,12,13,14,15,16,17,22))&#xD;&#xA;  THEN 'Y' ELSE 'N' END&#xD;&#xA;) AS 'IS_ELIGIBLE_FOR_INSURANCE_PLANS',&#xD;&#xA;CASE WHEN ISNULL(GH.ORG_PLAN_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_ELIGIBLE_FOR_HEALTH',&#xD;&#xA;CASE WHEN ISNULL(LF.ORG_PLAN_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_ELIGIBLE_FOR_LIFE',&#xD;&#xA;CASE WHEN ISNULL(DT.ORG_PLAN_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_ELIGIBLE_FOR_DENTAL',&#xD;&#xA;CASE WHEN ISNULL(VI.ORG_PLAN_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_ELIGIBLE_FOR_VISION',&#xD;&#xA;CASE WHEN ISNULL(LT.ORG_PLAN_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_ELIGIBLE_FOR_LTC',&#xD;&#xA;CASE WHEN ISNULL(FLX.ORG_PLAN_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_ELIGIBLE_FOR_FLEX',&#xD;&#xA;CASE WHEN ISNULL(DEF.ORG_PLAN_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_ELIGIBLE_FOR_DEFF',&#xD;&#xA;CASE WHEN ISNULL(OTH.ORG_PLAN_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_ELIGIBLE_FOR_457',&#xD;&#xA;CASE WHEN ISNULL(EP.ORG_PLAN_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS 'IS_ELIGILE_FOR_EAP',&#xD;&#xA;(&#xD;&#xA; SELECT CASE WHEN EXISTS(SELECT 1 FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RETCON WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT DB WITH(NOLOCK) ON RETCON.PERSON_ACCOUNT_ID=DB.PERSON_ACCOUNT_ID AND DB.PLAN_ID IN (1,2,3,4,5,6,20,21,23,24,25,26,27,29)&#xD;&#xA;  AND DB.PLAN_PARTICIPATION_STATUS_VALUE &lt;&gt; 'WTN1' AND DB.PERSON_ID=PER.PERSON_ID AND&#xD;&#xA;  EFFECTIVE_DATE BETWEEN '07/01/' + CAST(YEAR(DATEADD(&quot;YY&quot;,-2,@BATCHRUNDATE)) AS VARCHAR(4)) AND &#xD;&#xA;        '06/30/' + CAST(YEAR(DATEADD(&quot;YY&quot;,-1,@BATCHRUNDATE)) AS VARCHAR(4)) AND &#xD;&#xA;  TRANSACTION_DATE &gt; '06/30/' + CAST(YEAR(DATEADD(&quot;YY&quot;,-1,@BATCHRUNDATE)) AS VARCHAR(4)))&#xD;&#xA;  THEN 'Y' ELSE 'N' END&#xD;&#xA;)AS 'IS_ADJUSTMENTS_EXISTS',&#xD;&#xA;(&#xD;&#xA; SELECT CASE WHEN EXISTS(SELECT 1 FROM SGT_PAYEE_ACCOUNT SPA WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT SBAPA WITH(NOLOCK) ON SPA.APPLICATION_ID=SBAPA.BENEFIT_APPLICATION_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT PACC WITH(NOLOCK) ON SBAPA.PERSON_ACCOUNT_ID=PACC.PERSON_ACCOUNT_ID AND PACC.PERSON_ID=PER.PERSON_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS SPAS WITH(NOLOCK) ON SPAS.PAYEE_ACCOUNT_STATUS_ID=&#xD;&#xA;   (&#xD;&#xA;    SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CD WITH(NOLOCK) ON CD.CODE_ID=SPAS.STATUS_ID AND CD.CODE_VALUE=SPAS.STATUS_VALUE&#xD;&#xA; WHERE CD.DATA2='SPND') THEN 'Y' ELSE 'N' END &#xD;&#xA;)AS 'IS_PAYEE_ACCOUNT_EXIST_FLAG',&#xD;&#xA;(&#xD;&#xA; SELECT DISTINCT TOP 1 SHORT_DESCRIPTION FROM SGT_ORG_PLAN_GROUP_HEALTH_MEDICARE_PART_D_COVERAGE_REF WITH(NOLOCK)&#xD;&#xA; WHERE COVERAGE_CODE = (SELECT TOP 1 HIS.COVERAGE_CODE FROM SGT_PERSON_ACCOUNT_GHDV_HISTORY HIS WITH(NOLOCK)&#xD;&#xA;      INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK) ON HIS.PERSON_ACCOUNT_GHDV_ID=GHDV.PERSON_ACCOUNT_GHDV_ID AND &#xD;&#xA;      GHDV.PERSON_ACCOUNT_ID=HEALTH.PERSON_ACCOUNT_ID AND GHDV.COBRA_TYPE_VALUE IS NULL AND &#xD;&#xA;      @EFFECTIVE_DATE BETWEEN HIS.START_DATE AND ISNULL(HIS.END_DATE,'99991231') AND&#xD;&#xA;      GHDV.HEALTH_INSURANCE_TYPE_VALUE NOT IN ('RT09','RT12'))&#xD;&#xA;) AS 'HEALTH_LEVEL_OF_COVERAGE',&#xD;&#xA;(&#xD;&#xA; SELECT TOP 1 CV.DESCRIPTION FROM SGT_PERSON_ACCOUNT_GHDV_HISTORY HIS WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK) ON HIS.PERSON_ACCOUNT_GHDV_ID=GHDV.PERSON_ACCOUNT_GHDV_ID AND &#xD;&#xA; GHDV.PERSON_ACCOUNT_ID=DENTAL.PERSON_ACCOUNT_ID AND GHDV.COBRA_TYPE_VALUE IS NULL AND &#xD;&#xA; GHDV.DENTAL_INSURANCE_TYPE_VALUE NOT IN ('RT16')&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON CV.CODE_VALUE=HIS.LEVEL_OF_COVERAGE_VALUE&#xD;&#xA;&#xD;&#xA;) AS 'DENTAL_LEVEL_OF_COVERAGE',&#xD;&#xA;(&#xD;&#xA; SELECT TOP 1 CV.DESCRIPTION FROM SGT_PERSON_ACCOUNT_GHDV_HISTORY HIS WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK) ON HIS.PERSON_ACCOUNT_GHDV_ID=GHDV.PERSON_ACCOUNT_GHDV_ID AND &#xD;&#xA; GHDV.PERSON_ACCOUNT_ID=VISION.PERSON_ACCOUNT_ID AND GHDV.COBRA_TYPE_VALUE IS NULL AND &#xD;&#xA; GHDV.VISION_INSURANCE_TYPE_VALUE NOT IN ('RETR')&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON CV.CODE_VALUE=HIS.LEVEL_OF_COVERAGE_VALUE&#xD;&#xA;) AS 'VISION_LEVEL_OF_COVERAGE',&#xD;&#xA;(&#xD;&#xA; SELECT TOP 1 COD.DESCRIPTION FROM SGT_PERSON_ACCOUNT_LTC_OPTION LTCOPT WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE COD WITH(NOLOCK) ON LTCOPT.LEVEL_OF_COVERAGE_VALUE=COD.CODE_VALUE AND COD.CODE_ID=LTCOPT.LEVEL_OF_COVERAGE_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION PAY WITH(NOLOCK) ON LTC.PERSON_ACCOUNT_ID=PAY.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE 1=(CASE WHEN PAY.PERSON_ACCOUNT_ID IS NOT NULL THEN CASE ISNULL(PAY.IBS_FLAG,'N') WHEN 'Y' THEN 2 ELSE 1 END ELSE 1 END) AND  &#xD;&#xA; LTCOPT.PERSON_ACCOUNT_ID= LTC.PERSON_ACCOUNT_ID AND LTC_RELATIONSHIP_VALUE='MEBR' AND LTCOPT.EFFECTIVE_START_DATE IS NOT NULL&#xD;&#xA; ORDER BY LTCOPT.EFFECTIVE_START_DATE DESC&#xD;&#xA;) AS 'LTC_LEVEL_OF_COVERAGE',&#xD;&#xA;(&#xD;&#xA; SELECT TOP 1 COD.DESCRIPTION FROM SGT_PERSON_ACCOUNT_LTC_OPTION LTCOPT WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE COD WITH(NOLOCK) ON LTCOPT.LTC_INSURANCE_TYPE_VALUE=COD.CODE_VALUE AND COD.CODE_ID=LTCOPT.LTC_INSURANCE_TYPE_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION PAY WITH(NOLOCK) ON LTC.PERSON_ACCOUNT_ID=PAY.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE 1=(CASE WHEN PAY.PERSON_ACCOUNT_ID IS NOT NULL THEN CASE ISNULL(PAY.IBS_FLAG,'N') WHEN 'Y' THEN 2 ELSE 1 END ELSE 1 END)&#xD;&#xA; AND  LTCOPT.PERSON_ACCOUNT_ID= LTC.PERSON_ACCOUNT_ID&#xD;&#xA; AND LTC_RELATIONSHIP_VALUE='MEBR' AND LTCOPT.EFFECTIVE_START_DATE IS NOT NULL&#xD;&#xA; ORDER BY LTCOPT.EFFECTIVE_START_DATE DESC&#xD;&#xA;) AS 'LTC_INSURANCE_TYPE' ,&#xD;&#xA;(&#xD;&#xA; SELECT TOP 1 COD.DESCRIPTION FROM SGT_PERSON_ACCOUNT_LTC_OPTION LTCOPT WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE COD WITH(NOLOCK) ON LTCOPT.LEVEL_OF_COVERAGE_VALUE=COD.CODE_VALUE AND COD.CODE_ID=LTCOPT.LEVEL_OF_COVERAGE_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION PAY WITH(NOLOCK) ON LTC.PERSON_ACCOUNT_ID=PAY.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE 1=(CASE WHEN PAY.PERSON_ACCOUNT_ID IS NOT NULL THEN CASE ISNULL(PAY.IBS_FLAG,'N') WHEN 'Y' THEN 2 ELSE 1 END ELSE 1 END)&#xD;&#xA; AND  LTCOPT.PERSON_ACCOUNT_ID= LTC.PERSON_ACCOUNT_ID&#xD;&#xA; AND LTC_RELATIONSHIP_VALUE='SPSE' AND LTCOPT.EFFECTIVE_START_DATE IS NOT NULL&#xD;&#xA; ORDER BY LTCOPT.EFFECTIVE_START_DATE DESC&#xD;&#xA;) AS 'LTC_SPOUSE_LEVEL_OF_COVERAGE', &#xD;&#xA;EAPORG.ORG_NAME AS 'EAP_PROVIDER_NAME',&#xD;&#xA;CASE WHEN ISNULL(BENPER.PERSON_ID,0) &gt;0 OR ISNULL(CONT.PERSON_CONTACT_ID,0)&gt;0 THEN 'Y' ELSE 'N' END 'IS_PERSON_MARRIED',&#xD;&#xA;TMP.APPROVED_TFFR_TIAA_SERVICE AS 'APPROVED_TFFR_TIAA_SERVICE',&#xD;&#xA;TMP.TENTATIVE_TFFR_TIAA_SERVICE AS 'TENTATIVE_TFFR_TIAA_SERVICE',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) CREATED_BY,&#xD;&#xA;@BATCHRUNDATE CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) MODIFIED_BY,&#xD;&#xA;@BATCHRUNDATE MODIFIED_DATE,&#xD;&#xA;0 UPDATE_SEQ,&#xD;&#xA;(&#xD;&#xA; SELECT CASE WHEN EXISTS(SELECT 1 FROM SGT_PERSON_ACCOUNT DB WITH(NOLOCK) &#xD;&#xA;  WHERE DB.PLAN_ID IN(1,2,3,4,5,6,20,21,23,24,25,26,27,29,30) AND DB.PLAN_PARTICIPATION_STATUS_VALUE='SUS2'&#xD;&#xA;  AND DB.PERSON_ID=PER.PERSON_ID) THEN 'Y' ELSE 'N' END&#xD;&#xA;) AS 'IS_DB_SUSPENDED'&#xD;&#xA;FROM SGT_PERSON PER&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MS WITH(NOLOCK) ON MS.MAS_BATCH_REQUEST_ID=@BATCHREQUESTID  AND PER.PERSON_ID=MS.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE GENDERCODE WITH(NOLOCK) ON PER.GENDER_ID=GENDERCODE.CODE_ID AND GENDERCODE.CODE_VALUE=PER.GENDER_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE MARITALSTATUS WITH(NOLOCK) ON PER.MARITAL_STATUS_ID=MARITALSTATUS.CODE_ID AND PER.MARITAL_STATUS_VALUE=MARITALSTATUS.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON PER.PERSON_ID=EMP.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORG_PLAN GH WITH(NOLOCK) ON EMP.ORG_ID=GH.ORG_ID AND GH.PLAN_ID = 12&#xD;&#xA;LEFT OUTER JOIN SGT_ORG_PLAN LF WITH(NOLOCK) ON EMP.ORG_ID=LF.ORG_ID AND LF.PLAN_ID = 13&#xD;&#xA;LEFT OUTER JOIN SGT_ORG_PLAN DT WITH(NOLOCK) ON EMP.ORG_ID=DT.ORG_ID AND DT.PLAN_ID = 16&#xD;&#xA;LEFT OUTER JOIN SGT_ORG_PLAN VI WITH(NOLOCK) ON EMP.ORG_ID=VI.ORG_ID AND VI.PLAN_ID = 17&#xD;&#xA;LEFT OUTER JOIN SGT_ORG_PLAN LT WITH(NOLOCK) ON EMP.ORG_ID=LT.ORG_ID AND LT.PLAN_ID = 15&#xD;&#xA;LEFT OUTER JOIN SGT_ORG_PLAN FLX WITH(NOLOCK) ON EMP.ORG_ID=FLX.ORG_ID AND FLX.PLAN_ID = 18&#xD;&#xA;LEFT OUTER JOIN SGT_ORG_PLAN DEF WITH(NOLOCK) ON EMP.ORG_ID=DEF.ORG_ID AND DEF.PLAN_ID = 19&#xD;&#xA;LEFT OUTER JOIN SGT_ORG_PLAN OTH WITH(NOLOCK) ON EMP.ORG_ID=OTH.ORG_ID AND OTH.PLAN_ID = 8&#xD;&#xA;LEFT OUTER JOIN SGT_ORG_PLAN EP WITH(NOLOCK) ON EMP.ORG_ID=EP.ORG_ID AND EP.PLAN_ID = 14&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET WITH(NOLOCK) ON EMP.PERSON_EMPLOYMENT_ID=EMPDET.PERSON_EMPLOYMENT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_BENEFICIARY BEN WITH(NOLOCK) ON PER.PERSON_ID=BEN.PERSON_ID AND BEN.RELATIONSHIP_VALUE='SPOU' &#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_CONTACT CONT WITH(NOLOCK) ON PER.PERSON_ID=CONT.PERSON_ID AND CONT.RELATIONSHIP_VALUE='SPOU' AND CONT.STATUS_VALUE = 'ACT'&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON BENPER WITH(NOLOCK) ON CONT.CONTACT_PERSON_ID=BENPER.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE SPOUGENDERCODE WITH(NOLOCK) ON BENPER.GENDER_ID=SPOUGENDERCODE.CODE_ID AND BENPER.GENDER_VALUE=SPOUGENDERCODE.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE SEASONAL WITH(NOLOCK) ON EMPDET.SEASONAL_ID=SEASONAL.CODE_ID AND EMPDET.SEASONAL_VALUE=SEASONAL.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE PREFIX WITH(NOLOCK) ON PER.NAME_PREFIX_ID=PREFIX.CODE_ID AND PER.NAME_PREFIX_VALUE=PREFIX.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE SUFFIX WITH(NOLOCK) ON PER.NAME_SUFFIX_ID=SUFFIX.CODE_ID AND PER.NAME_SUFFIX_VALUE=SUFFIX.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE BENPREFIX WITH(NOLOCK) ON BENPER.NAME_PREFIX_ID=BENPREFIX.CODE_ID AND BENPER.NAME_PREFIX_VALUE=BENPREFIX.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE BENSUFFIX WITH(NOLOCK) ON BENPER.NAME_SUFFIX_ID=BENSUFFIX.CODE_ID AND BENPER.NAME_SUFFIX_VALUE=BENSUFFIX.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN&#xD;&#xA;(&#xD;&#xA; SELECT SP.PERSON_ID FROM SGT_PAYEE_ACCOUNT SPA WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT SBAPA WITH(NOLOCK) ON SBAPA.BENEFIT_APPLICATION_ID=SPA.APPLICATION_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT SP WITH(NOLOCK) ON SP.PERSON_ACCOUNT_ID=SBAPA.PERSON_ACCOUNT_ID&#xD;&#xA;) AS PA ON PA.PERSON_ID=PER.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA; (SELECT  P.PERSON_ID, &#xD;&#xA;      PA.ADDR_LINE_1 as ADDR_LINE_1,&#xD;&#xA;  PA.ADDR_LINE_2 as ADDR_LINE_2,&#xD;&#xA;  PA.ADDR_CITY as ADDR_CITY,&#xD;&#xA;  PA.ADDR_STATE_ID as ADDR_STATE_ID,&#xD;&#xA;  PA.ADDR_STATE_VALUE as ADDR_STATE_VALUE,&#xD;&#xA;  PA.ADDR_COUNTRY_ID as ADDR_COUNTRY_ID,&#xD;&#xA;  PA.ADDR_COUNTRY_VALUE as ADDR_COUNTRY_VALUE,&#xD;&#xA;  PA.ADDR_ZIP_CODE as ADDR_ZIP_CODE,&#xD;&#xA;  PA.ADDR_ZIP_4_CODE as ADDR_ZIP_4_CODE,&#xD;&#xA;  PA.FOREIGN_PROVINCE as FOREIGN_PROVINCE,&#xD;&#xA;  PA.FOREIGN_POSTAL_CODE as FOREIGN_POSTAL_CODE,&#xD;&#xA;  PA.UNDELIVERABLE_ADDRESS as UNDELIVERABLE,&#xD;&#xA;  ROW_NUMBER() OVER ( PARTITION BY p.person_id ORDER BY isnull(pa.end_date, '99991231') DESC) as ROWNUMBER  &#xD;&#xA;  FROM SGT_PERSON P WITH(NOLOCK) &#xD;&#xA;  LEFT OUTER JOIN SGT_PERSON_ADDRESS PA WITH(NOLOCK)   ON P.PERSON_ID  = PA.PERSON_ID &#xD;&#xA; ) AS PERADDR &#xD;&#xA; ON PERADDR.PERSON_ID=PER.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE ADDRES WITH(NOLOCK) ON PERADDR.ADDR_STATE_ID=ADDRES.CODE_ID AND PERADDR.ADDR_STATE_VALUE=ADDRES.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE CON WITH(NOLOCK) ON PERADDR.ADDR_COUNTRY_ID=CON.CODE_ID AND PERADDR.ADDR_COUNTRY_VALUE=CON.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT DEF1 WITH(NOLOCK) ON PER.PERSON_ID=DEF1.PERSON_ID AND DEF1.PLAN_ID=19 AND DEF1.PLAN_PARTICIPATION_STATUS_VALUE ='ENL3' AND DEF1.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT DEF2 WITH(NOLOCK) ON PER.PERSON_ID=DEF2.PERSON_ID AND DEF2.PLAN_ID=8 AND DEF2.PLAN_PARTICIPATION_STATUS_VALUE ='ENL3' AND DEF2.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT HEALTH WITH(NOLOCK) ON PER.PERSON_ID=HEALTH.PERSON_ID AND HEALTH.PLAN_ID=12 AND HEALTH.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' AND HEALTH.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT LIFE WITH(NOLOCK) ON PER.PERSON_ID=LIFE.PERSON_ID AND LIFE.PLAN_ID=13 AND LIFE.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' AND LIFE.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT DENTAL WITH(NOLOCK) ON PER.PERSON_ID=DENTAL.PERSON_ID AND DENTAL.PLAN_ID=16 AND DENTAL.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' AND DENTAL.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT VISION WITH(NOLOCK) ON PER.PERSON_ID=VISION.PERSON_ID AND VISION.PLAN_ID=17 AND VISION.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' AND VISION.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT LTC WITH(NOLOCK) ON PER.PERSON_ID=LTC.PERSON_ID AND LTC.PLAN_ID=15 AND LTC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' AND LTC.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT EAP WITH(NOLOCK) ON PER.PERSON_ID=EAP.PERSON_ID AND EAP.PLAN_ID=14 AND EAP.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' AND EAP.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT FLEX WITH(NOLOCK) ON PER.PERSON_ID=FLEX.PERSON_ID AND FLEX.PLAN_ID=18 AND FLEX.PLAN_PARTICIPATION_STATUS_VALUE ='ENL4' AND FLEX.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT JD WITH(NOLOCK) ON PER.PERSON_ID=JD.PERSON_ID AND JD.PLAN_ID=5 AND JD.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT JS WITH(NOLOCK) ON PER.PERSON_ID=JS.PERSON_ID AND JS.PLAN_ID=6 AND JS.PLAN_PARTICIPATION_STATUS_VALUE ='ENL1' AND JS.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT DC WITH(NOLOCK) ON PER.PERSON_ID=DC.PERSON_ID AND (DC.PLAN_ID =7 OR DC.PLAN_ID =28 OR DC.PLAN_ID =30) AND DC.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1','SUS2') AND DC.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT HP WITH(NOLOCK) ON PER.PERSON_ID=HP.PERSON_ID AND HP.PLAN_ID=4 AND HP.PLAN_PARTICIPATION_STATUS_VALUE  IN ('ENL1','SUS2') AND HP.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT MAIN WITH(NOLOCK) ON PER.PERSON_ID=MAIN.PERSON_ID AND (MAIN.PLAN_ID=1 OR MAIN.PLAN_ID=27) AND &#xD;&#xA;     (MAIN.PLAN_PARTICIPATION_STATUS_VALUE ='ENL1' OR MAIN.PLAN_PARTICIPATION_STATUS_VALUE ='SUS2') AND MAIN.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT LE WITH(NOLOCK) ON PER.PERSON_ID=LE.PERSON_ID AND LE.PLAN_ID IN (2,20,26,29,3) AND LE.PLAN_PARTICIPATION_STATUS_VALUE  IN ('ENL1','SUS2') AND LE.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT NG WITH(NOLOCK) ON PER.PERSON_ID=NG.PERSON_ID AND NG.PLAN_ID=3 AND NG.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1','SUS2') AND NG.START_DATE&lt;=@EFFECTIVE_DATE&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION EAPORG WITH(NOLOCK) on EAP.PROVIDER_ORG_ID= EAPORG.ORG_ID&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA; (SELECT PERSON_ID,SUM(TENTATIVE_TFFR) + SUM(TENTATIVE_TIAA) AS 'TENTATIVE_TFFR_TIAA_SERVICE',&#xD;&#xA;  SUM(APPROVED_TIAA) + SUM(APPROVED_TFFR) AS 'APPROVED_TFFR_TIAA_SERVICE' FROM&#xD;&#xA;  (&#xD;&#xA;   SELECT PERSON_ID, CASE WHEN TFFR_SERVICE_STATUS_VALUE='TNTV' THEN ISNULL(TFFR_SERVICE,0) &#xD;&#xA;   ELSE 0 END AS 'TENTATIVE_TFFR',&#xD;&#xA;   CASE WHEN TFFR_SERVICE_STATUS_VALUE='APRV' THEN ISNULL(TFFR_SERVICE,0) &#xD;&#xA;   ELSE 0 END AS 'APPROVED_TFFR',&#xD;&#xA;   CASE WHEN TIAA_SERVICE_STATUS_VALUE='TNTV' THEN ISNULL(TIAA_SERVICE,0) &#xD;&#xA;   ELSE 0 END AS 'TENTATIVE_TIAA',&#xD;&#xA;   CASE WHEN TIAA_SERVICE_STATUS_VALUE='APRV' THEN ISNULL(TIAA_SERVICE,0) &#xD;&#xA;   ELSE 0 END AS 'APPROVED_TIAA'&#xD;&#xA;   FROM SGT_PERSON_TFFR_TIAA_SERVICE WITH(NOLOCK)&#xD;&#xA;  ) AS TIAA_TFFRSERVICE&#xD;&#xA;  GROUP BY PERSON_ID&#xD;&#xA; ) AS TMP ON TMP.PERSON_ID=PER.PERSON_ID&#xD;&#xA;WHERE &#xD;&#xA;ISNULL(BEN.BENEFICIARY_ID,0)=&#xD;&#xA; CASE WHEN BEN.BENEFICIARY_ID IS NOT NULL THEN (&#xD;&#xA;  SELECT TOP 1 BENEFICIARY_ID FROM SGT_PERSON_BENEFICIARY BEN1 WITH(NOLOCK) WHERE &#xD;&#xA;  BEN1.RELATIONSHIP_VALUE='SPOU'  AND BEN1.PERSON_ID=PER.PERSON_ID ORDER BY BENEFICIARY_ID DESC) &#xD;&#xA; ELSE ISNULL(BEN.BENEFICIARY_ID,0) END &#xD;&#xA;AND EMPDET.PERSON_EMPLOYMENT_DTL_ID = (&#xD;&#xA;   SELECT TOP 1 EMPDET1.PERSON_EMPLOYMENT_DTL_ID FROM SGT_PERSON_EMPLOYMENT_DETAIL EMPDET1 WITH(NOLOCK) &#xD;&#xA;   INNER JOIN SGT_PERSON_EMPLOYMENT EMP1 WITH(NOLOCK) ON EMPDET1.PERSON_EMPLOYMENT_ID=EMP1.PERSON_EMPLOYMENT_ID&#xD;&#xA;   WHERE EMP1.PERSON_ID=PER.PERSON_ID ORDER BY EMP1.START_DATE DESC,EMPDET1.START_DATE DESC)&#xD;&#xA;   AND ROWNUMBER = 1 &#xD;&#xA;   --AND (UNDELIVERABLE IS NULL OR UNDELIVERABLE = 'N')&#xD;&#xA;ORDER BY MS.MAS_SELECTION_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_PERSON_PLAN_BENEFICIARY_DEPENDENT &#xD;&#xA;(&#xD;&#xA;MAS_PERSON_ID,&#xD;&#xA;PLAN_ID,&#xD;&#xA;PLAN_NAME,&#xD;&#xA;BENEFICIARY_TYPE_DESCRIPTION,&#xD;&#xA;BENEFICIARY_FULL_NAME,&#xD;&#xA;RELATIONSHIP_DESCRIPTION,&#xD;&#xA;DATE_OF_BIRTH,&#xD;&#xA;PERCENTAGE,&#xD;&#xA;IS_BENEFICIARY_FLAG,&#xD;&#xA;CREATED_BY,&#xD;&#xA;CREATED_DATE,&#xD;&#xA;MODIFIED_BY,&#xD;&#xA;MODIFIED_DATE,&#xD;&#xA;UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA;MASPER.MAS_PERSON_ID 'MAS_PERSON_ID',&#xD;&#xA;PERACC.PLAN_ID 'PLAN_ID',&#xD;&#xA;PLN.PLAN_NAME 'PLAN_NAME',&#xD;&#xA;BENTYPE.DESCRIPTION 'BENEFICIARY_TYPE_DESCRIPTION',&#xD;&#xA;CASE WHEN ISNULL(BENEFICIARY_PERSON_ID,0) =0 THEN&#xD;&#xA;  CASE WHEN ISNULL(BENIFICIARY_ORG_ID,0)=0 THEN ISNULL(BEN.FIRST_NAME,'') + ' ' + ISNULL(BEN.MIDDLE_NAME,'') + ' ' + ISNULL(BEN.LAST_NAME,'')&#xD;&#xA;  ELSE BENEORG.ORG_NAME END &#xD;&#xA; ELSE    &#xD;&#xA;  ISNULL(BENE.FIRST_NAME,'') + ' ' + ISNULL(BENE.MIDDLE_NAME,'') + ' ' + ISNULL(BENE.LAST_NAME,'') END 'BENEFICIARY_FULL_NAME',&#xD;&#xA;RELTYPE.DESCRIPTION 'RELATIONSHIP_DESCRIPTION',&#xD;&#xA;ISNULL(BENE.DATE_OF_BIRTH,BEN.DATE_OF_BIRTH) AS 'DATE_OF_BIRTH',&#xD;&#xA;BENACC.DIST_PERCENT AS 'PERCENTAGE',&#xD;&#xA;'Y' AS 'IS_BENEFICIARY_FLAG',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS 'CREATED_BY',&#xD;&#xA;@BATCHRUNDATE AS 'CREATED_DATE',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS 'MODIFIED_BY',&#xD;&#xA;@BATCHRUNDATE AS 'MODIFIED_DATE',&#xD;&#xA;0 UPDATE_SEQ&#xD;&#xA;FROM SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_BENEFICIARY BEN WITH(NOLOCK) ON PER.PERSON_ID=BEN.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_BENEFICIARY BENACC WITH(NOLOCK) ON BEN.BENEFICIARY_ID=BENACC.BENEFICIARY_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT  PERACC WITH(NOLOCK) ON BENACC.PERSON_ACCOUNT_ID=PERACC.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON PERACC.PLAN_ID=PLN.PLAN_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MS WITH(NOLOCK) ON MS.MAS_BATCH_REQUEST_ID=@BATCHREQUESTID  AND PER.PERSON_ID=MS.PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_PERSON MASPER WITH(NOLOCK) ON MS.MAS_SELECTION_ID=MASPER.MAS_SELECTION_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE BENTYPE WITH(NOLOCK) ON BENACC.BENEFICIARY_TYPE_ID=BENTYPE.CODE_ID AND BENACC.BENEFICIARY_TYPE_VALUE=BENTYPE.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE RELTYPE WITH(NOLOCK) ON BEN.RELATIONSHIP_ID=RELTYPE.CODE_ID AND BEN.RELATIONSHIP_VALUE=RELTYPE.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON BENE WITH(NOLOCK) ON BEN.BENEFICIARY_PERSON_ID=BENE.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION BENEORG WITH(NOLOCK) ON BENEORG.ORG_ID=BEN.BENIFICIARY_ORG_ID&#xD;&#xA;WHERE @CREATEDDATE BETWEEN BENACC.START_DATE AND (CASE WHEN BENACC.END_DATE IS NULL THEN '99991231' ELSE BENACC.END_DATE END) &#xD;&#xA;AND BENACC.END_DATE IS NULL --PIR 20335&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA;MASPER.MAS_PERSON_ID 'MAS_PERSON_ID',&#xD;&#xA;PERACC.PLAN_ID 'PLAN_ID',&#xD;&#xA;PLN.PLAN_NAME 'PLAN_NAME',&#xD;&#xA;'DEPENDENT',&#xD;&#xA;CASE WHEN ISNULL(DEPENDENT_PERSLINK_ID,0) =0 THEN&#xD;&#xA;  ISNULL(DEP.FIRST_NAME,'') + ' ' + ISNULL(DEP.MIDDLE_NAME,'') + ' ' + ISNULL(DEP.LAST_NAME,'') &#xD;&#xA; ELSE &#xD;&#xA;  ISNULL(DEPPERSON.FIRST_NAME,'') + ' ' + ISNULL(DEPPERSON.MIDDLE_NAME,'') + ' ' + ISNULL(DEPPERSON.LAST_NAME,'') END 'BENEFICIARY_FULL_NAME',&#xD;&#xA;'' 'RELATIONSHIP_DESCRIPTION',&#xD;&#xA;ISNULL(DEPPERSON.DATE_OF_BIRTH,DEP.DATE_OF_BIRTH) AS 'DATE_OF_BIRTH',&#xD;&#xA;100 AS 'PERCENTAGE',&#xD;&#xA;'N' AS 'IS_BENEFICIARY_FLAG',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS 'CREATED_BY',&#xD;&#xA;@BATCHRUNDATE AS 'CREATED_DATE',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS 'MODIFIED_BY',&#xD;&#xA;@BATCHRUNDATE AS 'MODIFIED_DATE',&#xD;&#xA;0 AS 'UPDATE_SEQ'&#xD;&#xA;FROM SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_DEPENDENT DEP WITH(NOLOCK) ON PER.PERSON_ID=DEP.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_DEPENDENT DEPACC WITH(NOLOCK) ON DEP.PERSON_DEPENDENT_ID=DEPACC.PERSON_DEPENDENT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT  PERACC WITH(NOLOCK) ON DEPACC.PERSON_ACCOUNT_ID=PERACC.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON PERACC.PLAN_ID=PLN.PLAN_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MS WITH(NOLOCK) ON MS.MAS_BATCH_REQUEST_ID=@BATCHREQUESTID  AND PER.PERSON_ID=MS.PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_PERSON MASPER WITH(NOLOCK) ON MS.MAS_SELECTION_ID=MASPER.MAS_SELECTION_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON DEPPERSON WITH(NOLOCK) ON DEP.DEPENDENT_PERSLINK_ID = DEPPERSON.PERSON_ID&#xD;&#xA;WHERE @CREATEDDATE BETWEEN DEPACC.START_DATE AND (CASE WHEN DEPACC.END_DATE IS NULL THEN '99991231' ELSE DEPACC.END_DATE END)&#xD;&#xA;ORDER BY IS_BENEFICIARY_FLAG,PERACC.PLAN_ID&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_DEF_COMP_PROVIDER&#xD;&#xA;(&#xD;&#xA;MAS_PERSON_ID,&#xD;&#xA;PROVIDER_NAME,&#xD;&#xA;PER_PAY_PERIOD_CONTRIBUTION_AMOUNT,&#xD;&#xA;STATEMENT_EFFECTIVE_DATE,&#xD;&#xA;CREATED_DATE,&#xD;&#xA;CREATED_BY,&#xD;&#xA;MODIFIED_DATE,&#xD;&#xA;MODIFIED_BY,&#xD;&#xA;UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT&#xD;&#xA;MASPER.MAS_PERSON_ID 'MAS_PERSON_ID',&#xD;&#xA;COMPANY_NAME 'PROVIDER_NAME',&#xD;&#xA;ISNULL(PER_PAY_PERIOD_CONTRIBUTION_AMT,0) 'PER_PAY_PERIOD_CONTRIBUTION_AMOUNT',&#xD;&#xA;@EFFECTIVE_DATE 'STATEMENT_EFFECTIVE_DATE',&#xD;&#xA;@BATCHRUNDATE 'CREATED_DATE',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) 'CREATED_BY',&#xD;&#xA;@BATCHRUNDATE 'MODIFIED_DATE',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) 'MODIFIED_BY',&#xD;&#xA;0 'UPDATE_SEQ'&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_DEFERRED_COMP_PROVIDER DEFCOMPPRV WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PERACC WITH(NOLOCK) ON DEFCOMPPRV.PERSON_ACCOUNT_ID=PERACC.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PERACC.PERSON_ID=PER.PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MS WITH(NOLOCK) ON MS.MAS_BATCH_REQUEST_ID=@BATCHREQUESTID  AND PER.PERSON_ID=MS.PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_PERSON MASPER WITH(NOLOCK) ON MS.MAS_SELECTION_ID=MASPER.MAS_SELECTION_ID&#xD;&#xA;WHERE @EFFECTIVE_DATE BETWEEN DEFCOMPPRV.START_DATE AND (CASE WHEN DEFCOMPPRV.END_DATE IS NULL THEN '99991231' ELSE DEFCOMPPRV.END_DATE END)&#xD;&#xA;AND PERACC.PLAN_ID=19&#xD;&#xA;ORDER BY PER.PERSON_ID&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_FLEX_OPTION&#xD;&#xA;(&#xD;&#xA;MAS_PERSON_ID,&#xD;&#xA;COVERAGE_DESCRIPTION,&#xD;&#xA;ANNUAL_PLEDGE_AMOUNT,&#xD;&#xA;CREATED_BY,&#xD;&#xA;CREATED_DATE,&#xD;&#xA;MODIFIED_BY,&#xD;&#xA;MODIFIED_DATE,&#xD;&#xA;UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT&#xD;&#xA;MASPER.MAS_PERSON_ID 'MAS_PERSON_ID',&#xD;&#xA;COV.DESCRIPTION 'COVERAGE_DESCRIPTION',&#xD;&#xA;ANNUAL_PLEDGE_AMOUNT 'ANNUAL_PLEDGE_AMOUNT',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) 'CREATED_BY',&#xD;&#xA;@BATCHRUNDATE 'CREATED_DATE',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) 'MODIFIED_BY',&#xD;&#xA;@BATCHRUNDATE 'MODIFIED_DATE',&#xD;&#xA;0 'UPDATE_SEQ'&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_FLEX_COMP_HISTORY FLEX WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT FLEXACC WITH(NOLOCK) ON FLEX.PERSON_ACCOUNT_ID=FLEXACC.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON FLEXACC.PERSON_ID=PER.PERSON_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE COV WITH(NOLOCK) ON FLEX.LEVEL_OF_COVERAGE_VALUE=COV.CODE_VALUE AND FLEX.LEVEL_OF_COVERAGE_ID=COV.CODE_ID AND COV.DATA1='18'&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MS WITH(NOLOCK) ON MS.MAS_BATCH_REQUEST_ID=@BATCHREQUESTID  AND PER.PERSON_ID=MS.PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_PERSON MASPER WITH(NOLOCK) ON MS.MAS_SELECTION_ID=MASPER.MAS_SELECTION_ID &#xD;&#xA;WHERE @EFFECTIVE_DATE BETWEEN FLEX.EFFECTIVE_START_DATE AND (CASE WHEN FLEX.EFFECTIVE_END_DATE IS NULL THEN '99991231' ELSE FLEX.EFFECTIVE_END_DATE END)&#xD;&#xA;ORDER BY PER.PERSON_ID&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_FLEX_CONVERSION&#xD;&#xA;(&#xD;&#xA;MAS_PERSON_ID,&#xD;&#xA;CONVERSION_ORG_NAME,&#xD;&#xA;CREATED_BY,&#xD;&#xA;CREATED_DATE,&#xD;&#xA;MODIFIED_BY,&#xD;&#xA;MODIFIED_DATE,&#xD;&#xA;UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT&#xD;&#xA;MASPER.MAS_PERSON_ID 'MAS_PERSON_ID',&#xD;&#xA;ORG.ORG_NAME 'CONVERSION_ORG_NAME',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) 'CREATED_BY',&#xD;&#xA;@BATCHRUNDATE 'CREATED_DATE',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) 'MODIFIED_BY',&#xD;&#xA;@BATCHRUNDATE 'MODIFIED_DATE',&#xD;&#xA;0 'UPDATE_SEQ'&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_FLEXCOMP_CONVERSION FLEXCONV WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT FLEXACC WITH(NOLOCK) ON FLEXCONV.PERSON_ACCOUNT_ID=FLEXACC.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_FLEX_COMP_OPTION FLEXOPT WITH(NOLOCK) ON FLEXOPT.PERSON_ACCOUNT_ID=FLEXCONV.PERSON_ACCOUNT_ID AND FLEXOPT.LEVEL_OF_COVERAGE_VALUE='PRCV'&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON FLEXACC.PERSON_ID=PER.PERSON_ID&#xD;&#xA;INNER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON FLEXCONV.ORG_ID=ORG.ORG_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MS WITH(NOLOCK) ON MS.MAS_BATCH_REQUEST_ID=@BATCHREQUESTID  AND PER.PERSON_ID=MS.PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_PERSON MASPER WITH(NOLOCK) ON MS.MAS_SELECTION_ID=MASPER.MAS_SELECTION_ID&#xD;&#xA;WHERE @EFFECTIVE_DATE BETWEEN FLEXCONV.EFFECTIVE_START_DATE AND (CASE WHEN FLEXCONV.EFFECTIVE_END_DATE IS NULL THEN '99991231' ELSE FLEXCONV.EFFECTIVE_END_DATE END)&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_LIFE_OPTION&#xD;&#xA;(&#xD;&#xA;MAS_PERSON_ID,&#xD;&#xA;LEVEL_OF_COVERAGE,&#xD;&#xA;COVERAGE_AMOUNT,&#xD;&#xA;CREATED_BY,&#xD;&#xA;CREATED_DATE,&#xD;&#xA;MODIFIED_BY,&#xD;&#xA;MODIFIED_DATE,&#xD;&#xA;UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT&#xD;&#xA;MASPER.MAS_PERSON_ID 'MAS_PERSON_ID',&#xD;&#xA;COD.DESCRIPTION 'LEVEL_OF_COVERAGE',&#xD;&#xA;COVERAGE_AMOUNT 'COVERAGE_AMOUNT',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) 'CREATED_BY',&#xD;&#xA;@BATCHRUNDATE 'CREATED_DATE',&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) 'MODIFIED_BY',&#xD;&#xA;@BATCHRUNDATE 'MODIFIED_DATE',&#xD;&#xA;0 'UPDATE_SEQ'&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_LIFE_OPTION OPT WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT ACC WITH(NOLOCK) ON OPT.PERSON_ACCOUNT_ID= ACC.PERSON_ACCOUNT_ID AND ACC.PLAN_ID=13&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON ACC.PERSON_ID=PER.PERSON_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE COD WITH(NOLOCK) ON OPT.LEVEL_OF_COVERAGE_ID=COD.CODE_ID AND OPT.LEVEL_OF_COVERAGE_VALUE=COD.CODE_VALUE&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MS WITH(NOLOCK) ON MS.MAS_BATCH_REQUEST_ID=@BATCHREQUESTID  AND PER.PERSON_ID=MS.PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_PERSON MASPER WITH(NOLOCK) ON MS.MAS_SELECTION_ID=MASPER.MAS_SELECTION_ID AND COD.CODE_VALUE = OPT.LEVEL_OF_COVERAGE_VALUE&#xD;&#xA;WHERE @EFFECTIVE_DATE BETWEEN OPT.EFFECTIVE_START_DATE AND  &#xD;&#xA; (CASE WHEN OPT.EFFECTIVE_END_DATE IS NULL THEN '99991231' ELSE OPT.EFFECTIVE_END_DATE END)&#xD;&#xA; AND OPT.COVERAGE_AMOUNT &gt; 0 AND OPT.LEVEL_OF_COVERAGE_VALUE &lt;&gt; 'BASC' &#xD;&#xA; order by MASPER.MAS_PERSON_ID,COD.CODE_SERIAL_ID&#xD;&#xA;&#xD;&#xA;SET NOCOUNT OFF">
      <parameters>
        <parameter ID="@BATCHREQUESTID" sfwDataType="int" />
        <parameter ID="@BATCHRUNDATE" sfwDataType="DateTime" />
        <parameter ID="@BATCHREQUESTTYPE" sfwDataType="string" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@EFFECTIVE_DATE" sfwDataType="DateTime" />
        <parameter ID="@CREATEDDATE" sfwDataType="DateTime" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Insert_MAS_Person_Plan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @PAYMENTDATE DATETIME &#xD;&#xA;SELECT @PAYMENTDATE =  max(PAYMENT_DATE)&#xD;&#xA; FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK)&#xD;&#xA; WHERE STATUS_VALUE = 'PRCD' &#xD;&#xA; AND SCHEDULE_TYPE_VALUE = 'MTLY'&#xD;&#xA;set @PAYMENTDATE =  Dateadd(m,1,@PAYMENTDATE)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_PERSON_PLAN&#xD;&#xA;(&#xD;&#xA;MAS_PERSON_ID,&#xD;&#xA;PLAN_ID,&#xD;&#xA;PLAN_NAME,&#xD;&#xA;PREVIOUS_MEMBER_ACCOUNT_BALANCE_LTD,&#xD;&#xA;TVSC_IN_YEAR_MONTHS,&#xD;&#xA;PSC_IN_YEAR_MONTHS,&#xD;&#xA;TFFR_SERVICE,&#xD;&#xA;TIAA_CREF_SERVICE,&#xD;&#xA;JOBSERVICE_SICK_LEAVE,&#xD;&#xA;MEMBER_CONTRIBUTIONS,&#xD;&#xA;VESTED_EMPLOYER_CONT,&#xD;&#xA;INTEREST_AMOUNT,&#xD;&#xA;MEMBER_ACCOUNT_BALANCE_LTD,&#xD;&#xA;NONTAXABLE_AMOUNT,&#xD;&#xA;TAXABLE_AMOUNT,&#xD;&#xA;LTD_MEMBER_CONTRIBUTIONS,&#xD;&#xA;YTD_MEMBER_CONTRIBUTIONS,&#xD;&#xA;YTD_EMPLOYER_CONTRIBUTIONS,&#xD;&#xA;LTD_EMPLOYER_CONTRIBUTIONS,&#xD;&#xA;EE_RHIC_CONTRIBUTION_AMOUNT,&#xD;&#xA;TIER1,&#xD;&#xA;TIER2,&#xD;&#xA;TIER3,&#xD;&#xA;QDRO_AMOUNT,&#xD;&#xA;VESTED_EMPLOYER_CONT_PERCENT,&#xD;&#xA;IS_DB_PLAN,&#xD;&#xA;IS_DC_PLAN,&#xD;&#xA;PERSON_ACCOUNT_ID,&#xD;&#xA;PLAN_BENEFIT_TIER_DESCRIPTION,&#xD;&#xA;CREATED_BY,&#xD;&#xA;CREATED_DATE,&#xD;&#xA;MODIFIED_BY,&#xD;&#xA;MODIFIED_DATE,&#xD;&#xA;UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;MAS_PERSON_ID AS 'MAS_PERSON_ID', &#xD;&#xA;PLAN_ID AS 'PLAN_ID',&#xD;&#xA;PLAN_NAME AS 'PLAN_NAME',&#xD;&#xA;SUM(PREVIOUS_MEMBER_ACCOUNT_BALANCE_LTD) 'PREVIOUS_MEMBER_ACCOUNT_BALANCE_LTD',&#xD;&#xA;SUM(TVSC_IN_YEAR_MONTHS)'TVSC_IN_YEAR_MONTHS',&#xD;&#xA;SUM(PSC_IN_YEAR_MONTHS) 'PSC_IN_YEAR_MONTHS',&#xD;&#xA;MAX(TFFR_SERVICE) 'TFFR_SERVICE',&#xD;&#xA;MAX(TIAA_CREF_SERVICE) 'TIAA_CREF_SERVICE',&#xD;&#xA;MAX(JOBSERVICE_SICK_LEAVE)'JOBSERVICE_SICK_LEAVE',&#xD;&#xA;SUM(MEMBER_CONTRIBUTIONS) 'MEMBER_CONTRIBUTIONS',&#xD;&#xA;SUM(VESTED_EMPLOYER_CONT) 'VESTED_EMPLOYER_CONT',&#xD;&#xA;SUM(INTEREST_AMOUNT)'INTEREST_AMOUNT',&#xD;&#xA;SUM(MEMBER_ACCOUNT_BALANCE_LTD)'MEMBER_ACCOUNT_BALANCE_LTD',&#xD;&#xA;SUM(NONTAXABLE_AMOUNT) 'NONTAXABLE_AMOUNT',&#xD;&#xA;SUM(TAXABLE_AMOUNT) 'TAXABLE_AMOUNT',&#xD;&#xA;SUM(LTD_MEMBER_CONTRIBUTIONS) 'LTD_MEMBER_CONTRIBUTIONS',&#xD;&#xA;SUM(YTD_MEMBER_CONTRIBUTIONS)'YTD_MEMBER_CONTRIBUTIONS',&#xD;&#xA;SUM(YTD_EMPLOYER_CONTRIBUTIONS) 'YTD_EMPLOYER_CONTRIBUTIONS',&#xD;&#xA;SUM(LTD_EMPLOYER_CONTRIBUTIONS)'LTD_EMPLOYER_CONTRIBUTIONS',&#xD;&#xA;SUM(EE_RHIC_CONTRIBUTION_AMOUNT)'EE_RHIC_CONTRIBUTION_AMOUNT',&#xD;&#xA;MAX(TIER1)'TIER1',&#xD;&#xA;MAX(TIER2) 'TIER2',&#xD;&#xA;MAX(TIER3)'TIER3',&#xD;&#xA;SUM(QDRO_AMOUNT)'QDRO_AMOUNT' ,&#xD;&#xA;0,&#xD;&#xA;--SUM(ISNULL((SELECT TOP 1 ER_VESTED_PERCENTAGE FROM SGT_VESTED_ER_PERCENTAGE_REF WITH(NOLOCK) WHERE RETIREMENT_TYPE_VALUE=&#xD;&#xA;--  (CASE WHEN ACC.PLAN_ID=7 THEN 'DC' ELSE 'DB' END) AND EFFECTIVE_DATE &lt; = @EFFECTIVE_DATE AND &#xD;&#xA;--  (ISNULL(MAINTABLE.TVSC_IN_YEAR_MONTHS,0) + ISNULL(MAINTABLE.TFFR_SERVICE,0) + &#xD;&#xA;--   ISNULL(MAINTABLE.TIAA_CREF_SERVICE,0) + ISNULL(MAINTABLE.JOBSERVICE_SICK_LEAVE,0)) BETWEEN VSC_FROM AND VSC_TO ORDER BY EFFECTIVE_DATE DESC&#xD;&#xA;-- ),0)) AS 'VESTED_EMPLOYER_CONT_PERCENT',  &#xD;&#xA;CASE WHEN (MAINTABLE.PLAN_ID=7 OR MAINTABLE.PLAN_ID=28 OR MAINTABLE.PLAN_ID=30) THEN 'N' ELSE 'Y' END 'IS_DB_PLAN',&#xD;&#xA;CASE WHEN (MAINTABLE.PLAN_ID=7 OR MAINTABLE.PLAN_ID=28 OR MAINTABLE.PLAN_ID=30) THEN 'Y' ELSE 'N' END 'IS_DC_PLAN',&#xD;&#xA;MAX(PERSON_ACCOUNT_ID) AS PERSON_ACCOUNT_ID,&#xD;&#xA;MAX(PLAN_BENEFIT_TIER_DESCRIPTION) AS PLAN_BENEFIT_TIER_DESCRIPTION,&#xD;&#xA; MAX('PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid)) AS 'CREATED_BY',&#xD;&#xA; MAX(@BATCHRUNDATE) AS 'CREATED_DATE',&#xD;&#xA;MAX('PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid)) AS 'MODIFIED_BY',&#xD;&#xA;MAX(@BATCHRUNDATE) AS 'MODIFIED_DATE',&#xD;&#xA;MAX(0) AS 'UPDATE_SEQ'&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT &#xD;&#xA;MASPER.MAS_PERSON_ID AS 'MAS_PERSON_ID', &#xD;&#xA;ACC.PLAN_ID AS 'PLAN_ID',&#xD;&#xA;PLN.PLAN_NAME AS 'PLAN_NAME',&#xD;&#xA;&#xD;&#xA;SUM(ISNULL(MABPREV.POST_TAX_EE_AMOUNT_LTD,0) + ISNULL(MABPREV.POST_TAX_EE_SER_PUR_CONT_LTD,0) + &#xD;&#xA; --MABPREV.EE_RHIC_AMOUNT_LTD + MABPREV.EE_RHIC_SER_PUR_CONT_LTD + /* PIR ID 2258 */&#xD;&#xA; ISNULL(RET.CAPITAL_GAIN,0) + ISNULL(MABPREV.ER_VESTED_AMOUNT_LTD,0) + ISNULL(MABPREV.INTEREST_AMOUNT_LTD,0) + ISNULL(MABPREV.PRE_TAX_EE_AMOUNT_LTD,0) + &#xD;&#xA; ISNULL(MABPREV.EE_ER_PICKUP_AMOUNT_LTD,0) + ISNULL(MABPREV.PRE_TAX_EE_SER_PUR_CONT_LTD,0)) AS 'PREVIOUS_MEMBER_ACCOUNT_BALANCE_LTD',&#xD;&#xA;SUM(ISNULL(MAB.VESTED_SERVICE_CREDIT_LTD,0) + ISNULL(MASPER.APPROVED_TFFR_TIAA_SERVICE,0)) 'TVSC_IN_YEAR_MONTHS' ,--PROD PIR 7634 VSC includes Approved too&#xD;&#xA;SUM(ISNULL(MAB.PENSION_SERVICE_CREDIT_LTD,0)) 'PSC_IN_YEAR_MONTHS',&#xD;&#xA;MAX(CASE WHEN TFFR_SERVICE_STATUS_VALUE ='TNTV' THEN ISNULL(TFFR_SERVICE,0) ELSE 0 END ) 'TFFR_SERVICE',&#xD;&#xA;MAX(CASE WHEN TIAA_SERVICE_STATUS_VALUE ='TNTV' THEN ISNULL(TIAA_SERVICE,0) ELSE 0 END ) 'TIAA_CREF_SERVICE',&#xD;&#xA;(CASE WHEN ACC.PLAN_ID = 6 THEN MAX(PER.JOB_SERVICE_SICK_LEAVE) ELSE 0 END) 'JOBSERVICE_SICK_LEAVE',&#xD;&#xA;SUM(ISNULL(FYTD.POST_TAX_EE_AMOUNT,0) + ISNULL(FYTD.POST_TAX_EE_SER_PUR_CONT,0) + &#xD;&#xA; ISNULL(FYTD.PRE_TAX_EE_AMOUNT,0) + ISNULL(FYTD.EE_ER_PICKUP_AMOUNT,0)) AS 'MEMBER_CONTRIBUTIONS',&#xD;&#xA;SUM(ISNULL(FYTD.ER_VESTED_AMOUNT,0)) AS 'VESTED_EMPLOYER_CONT',&#xD;&#xA;SUM(ISNULL(FYTD.INTEREST_AMOUNT,0)) AS 'INTEREST_AMOUNT',&#xD;&#xA;CASE WHEN SUM(ISNULL(RTWPAID.REMAININGRTWMG,0)) &gt;0 THEN SUM(ISNULL(RTWPAID.REMAININGRTWMG,0)) ELSE&#xD;&#xA;SUM(ISNULL(MAB.POST_TAX_EE_AMOUNT_LTD,0) + ISNULL(MAB.POST_TAX_EE_SER_PUR_CONT_LTD,0) + &#xD;&#xA; ISNULL(RET.CAPITAL_GAIN,0) + ISNULL(MAB.ER_VESTED_AMOUNT_LTD,0) + ISNULL(MAB.INTEREST_AMOUNT_LTD,0) + ISNULL(MAB.PRE_TAX_EE_AMOUNT_LTD,0) + &#xD;&#xA; ISNULL(MAB.EE_ER_PICKUP_AMOUNT_LTD,0) + ISNULL(MAB.PRE_TAX_EE_SER_PUR_CONT_LTD,0))  END&#xD;&#xA;AS 'MEMBER_ACCOUNT_BALANCE_LTD',&#xD;&#xA;CASE WHEN SUM(ISNULL(RTWPAID.REMAININGRTWMG,0)) &gt;0 THEN 0 ELSE&#xD;&#xA;SUM (ISNULL(MAB.POST_TAX_EE_AMOUNT_LTD,0) + ISNULL(MAB.POST_TAX_EE_SER_PUR_CONT_LTD,0)) END&#xD;&#xA; AS 'NONTAXABLE_AMOUNT' ,&#xD;&#xA;CASE WHEN SUM(ISNULL(RTWPAID.REMAININGRTWMG,0)) &gt;0 THEN SUM(ISNULL(RTWPAID.REMAININGRTWMG,0)) ELSE&#xD;&#xA;SUM (ISNULL(RET.CAPITAL_GAIN,0) + ISNULL(MAB.ER_VESTED_AMOUNT_LTD,0) +ISNULL(MAB.INTEREST_AMOUNT_LTD,0) + ISNULL(MAB.PRE_TAX_EE_AMOUNT_LTD,0) + &#xD;&#xA; ISNULL(MAB.EE_ER_PICKUP_AMOUNT_LTD,0) + ISNULL(MAB.PRE_TAX_EE_SER_PUR_CONT_LTD,0)) END&#xD;&#xA;AS 'TAXABLE_AMOUNT',&#xD;&#xA;SUM(ISNULL(MAB.POST_TAX_EE_AMOUNT_LTD,0) + ISNULL(MAB.POST_TAX_EE_SER_PUR_CONT_LTD,0) + ISNULL(RET.CAPITAL_GAIN,0) + ISNULL(MAB.ER_VESTED_AMOUNT_LTD,0) +&#xD;&#xA; ISNULL(MAB.INTEREST_AMOUNT_LTD,0) + ISNULL(MAB.PRE_TAX_EE_AMOUNT_LTD,0) + ISNULL(MAB.EE_ER_PICKUP_AMOUNT_LTD,0) + ISNULL(MAB.PRE_TAX_EE_SER_PUR_CONT_LTD,0)) AS 'LTD_MEMBER_CONTRIBUTIONS',&#xD;&#xA;SUM(ISNULL(FYTD.POST_TAX_EE_AMOUNT,0) + ISNULL(FYTD.POST_TAX_EE_SER_PUR_CONT,0)+ ISNULL(RET.CAPITAL_GAIN,0) + ISNULL(FYTD.ER_VESTED_AMOUNT,0) +&#xD;&#xA; ISNULL(FYTD.INTEREST_AMOUNT,0) + ISNULL(FYTD.PRE_TAX_EE_AMOUNT,0) + ISNULL(FYTD.EE_ER_PICKUP_AMOUNT,0) +ISNULL(FYTD.PRE_TAX_EE_SER_PUR_CONT,0)) AS 'YTD_MEMBER_CONTRIBUTIONS',&#xD;&#xA;SUM(ISNULL(FYTD.ER_RHIC_SER_PUR_CONT,0) + ISNULL(FYTD.PRE_TAX_ER_AMOUNT,0) +&#xD;&#xA; ISNULL(FYTD.PRE_TAX_ER_SER_PUR_CONT,0) + ISNULL(FYTD.EMPLOYER_INTEREST,0)) AS 'YTD_EMPLOYER_CONTRIBUTIONS', -- PROD PIR 7627 - Removed ER_RHIC_AMOUNT&#xD;&#xA;SUM(ISNULL(MAB.ER_RHIC_SER_PUR_CONT_LTD,0) + ISNULL(MAB.PRE_TAX_ER_AMOUNT_LTD,0) +&#xD;&#xA;    ISNULL(MAB.PRE_TAX_ER_SER_PUR_CONT_LTD,0) + ISNULL(MAB.EMPLOYER_INTEREST_LTD,0)) AS 'LTD_EMPLOYER_CONTRIBUTIONS', -- PROD PIR 7627 - Removed ER_RHIC_AMOUNT&#xD;&#xA;SUM(ISNULL(MAB.EE_RHIC_AMOUNT_LTD,0) + ISNULL(MAB.EE_RHIC_SER_PUR_CONT_LTD ,0)) AS 'EE_RHIC_CONTRIBUTION_AMOUNT',&#xD;&#xA;(&#xD;&#xA; SELECT TOP  1  MULTIPIER_PERCENTAGE FROM SGT_BENEFIT_PROVISION_MULTIPLIER WITH(NOLOCK) WHERE &#xD;&#xA; EFFECTIVE_DATE &lt;= @EFFECTIVE_DATE AND TIER_NUMBER=1 AND BENEFIT_ACCOUNT_TYPE_VALUE='RETR' AND BENEFIT_PROVISION_ID=PLN.BENEFIT_PROVISION_ID&#xD;&#xA; ORDER BY EFFECTIVE_DATE DESC&#xD;&#xA;) AS 'TIER1',&#xD;&#xA;(&#xD;&#xA; SELECT TOP  1  MULTIPIER_PERCENTAGE FROM SGT_BENEFIT_PROVISION_MULTIPLIER WITH(NOLOCK) WHERE &#xD;&#xA; EFFECTIVE_DATE &lt;= @EFFECTIVE_DATE AND TIER_NUMBER=2 AND BENEFIT_ACCOUNT_TYPE_VALUE='RETR' AND BENEFIT_PROVISION_ID=PLN.BENEFIT_PROVISION_ID&#xD;&#xA; ORDER BY EFFECTIVE_DATE DESC&#xD;&#xA;) AS 'TIER2',&#xD;&#xA;(&#xD;&#xA; SELECT TOP  1  MULTIPIER_PERCENTAGE FROM SGT_BENEFIT_PROVISION_MULTIPLIER WITH(NOLOCK) WHERE &#xD;&#xA; EFFECTIVE_DATE &lt;= @EFFECTIVE_DATE AND TIER_NUMBER=3 AND BENEFIT_ACCOUNT_TYPE_VALUE='RETR' AND BENEFIT_PROVISION_ID=PLN.BENEFIT_PROVISION_ID&#xD;&#xA; ORDER BY EFFECTIVE_DATE DESC&#xD;&#xA;) AS 'TIER3',&#xD;&#xA;(&#xD;&#xA; SELECT SUM(ISNULL(MONTHLY_BENEFIT_AMOUNT,0)) FROM SGT_BENEFIT_DRO_APPLICATION WITH(NOLOCK) WHERE &#xD;&#xA; MEMBER_PERSLINK_ID=ACC.PERSON_ID AND PLAN_ID=ACC.PLAN_ID AND DRO_STATUS_VALUE='QLFD'&#xD;&#xA;) AS 'QDRO_AMOUNT',&#xD;&#xA;ACC.PERSON_ACCOUNT_ID,&#xD;&#xA;SCV.DESCRIPTION AS PLAN_BENEFIT_TIER_DESCRIPTION&#xD;&#xA;FROM &#xD;&#xA;SGT_PERSON_ACCOUNT ACC &#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MS WITH(NOLOCK) ON MS.MAS_BATCH_REQUEST_ID = @BATCHREQUESTID AND ACC.PERSON_ID=MS.PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_PERSON MASPER WITH(NOLOCK) ON MS.MAS_SELECTION_ID=MASPER.MAS_SELECTION_ID&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON ACC.PERSON_ID=PER.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT RET WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=RET.PERSON_ACCOUNT_ID &#xD;&#xA;LEFT JOIN SGS_CODE_VALUE SCV WITH(NOLOCK) ON SCV.CODE_ID = RET.BENEFIT_TIER_ID AND SCV.CODE_VALUE = RET.BENEFIT_TIER_VALUE&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID AND PLN.BENEFIT_TYPE_VALUE='RETR'&#xD;&#xA;LEFT OUTER JOIN (SELECT SPTTS.PERSON_ID&#xD;&#xA;       ,SUM(ISNULL(SPTTS.TFFR_SERVICE,0)) AS TFFR_SERVICE&#xD;&#xA;       ,SUM(ISNULL(SPTTS.TIAA_SERVICE,0)) AS TIAA_SERVICE,&#xD;&#xA;&#x9;   SPTTS.TFFR_SERVICE_STATUS_VALUE,&#xD;&#xA;&#x9;   SPTTS.TIAA_SERVICE_STATUS_VALUE&#xD;&#xA;FROM &#xD;&#xA;       SGT_PERSON_TFFR_TIAA_SERVICE SPTTS WITH(NOLOCK)&#xD;&#xA;&#x9;   WHERE (SPTTS.TFFR_SERVICE_STATUS_VALUE IS NOT NULL OR&#xD;&#xA;&#x9;   SPTTS.TIAA_SERVICE_STATUS_VALUE IS NOT NULL)&#xD;&#xA;       GROUP BY&#xD;&#xA;       SPTTS.PERSON_ID,SPTTS.TFFR_SERVICE_STATUS_VALUE,&#xD;&#xA;&#x9;   SPTTS.TIAA_SERVICE_STATUS_VALUE) TFFR  ON PER.PERSON_ID=TFFR.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN (&#xD;&#xA;SELECT PAY.PAYEE_ACCOUNT_ID,PAYACC.PERSON_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT PAY WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_BENEFIT_APPLICATION APP WITH(NOLOCK) ON PAY.APPLICATION_ID=APP.BENEFIT_APPLICATION_ID&#xD;&#xA;INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT APPACC WITH(NOLOCK) ON APPACC.BENEFIT_APPLICATION_ID=APP.BENEFIT_APPLICATION_ID AND APPACC.IS_APPLICATION_PERSON_ACCOUNT_FLAG=&#xD;&#xA;'Y'&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PAYACC WITH(NOLOCK) ON APPACC.PERSON_ACCOUNT_ID=PAYACC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE APP.BENEFIT_APPLICATION_ID = &#xD;&#xA;(&#xD;&#xA;SELECT TOP 1 BENEFIT_APPLICATION_ID FROM SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT TEMPAPPACC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT TPAYACC WITH(NOLOCK) ON TEMPAPPACC.PERSON_ACCOUNT_ID=TPAYACC.PERSON_ACCOUNT_ID&#xD;&#xA;AND TEMPAPPACC.IS_APPLICATION_PERSON_ACCOUNT_FLAG='Y'&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS SPAS WITH(NOLOCK) ON SPAS.PAYEE_ACCOUNT_STATUS_ID=&#xD;&#xA; (&#xD;&#xA;  SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PAY.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA; )&#xD;&#xA;  &#xD;&#xA;INNER JOIN SGS_CODE_VALUE CD WITH (NOLOCK) ON CD.CODE_ID=SPAS.STATUS_ID AND CD.CODE_VALUE=SPAS.STATUS_VALUE&#xD;&#xA;WHERE &#xD;&#xA; CD.DATA2='SPND' AND PAY.BENEFIT_ACCOUNT_TYPE_VALUE in ('RETR','DISA')&#xD;&#xA;and TPAYACC.PERSON_ACCOUNT_ID=PAYACC.PERSON_ACCOUNT_ID&#xD;&#xA;)) AS PAYTAB ON PAYTAB.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN (&#xD;&#xA;SELECT pay.PAYEE_ACCOUNT_ID 'PAYEE_ACCOUNT_ID', &#xD;&#xA;max(ISNULL(PAY.MINIMUM_GUARANTEE_AMOUNT,0))-&#xD;&#xA;SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    and VENDOR_FLAG= 'N'  &#xD;&#xA;    and ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;    and REISSUE_ITEMS_FLAG = 'N'&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS 'REMAININGRTWMG' ,&#xD;&#xA;&#xD;&#xA;SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    and VENDOR_FLAG= 'N'  &#xD;&#xA;    and ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;    and REISSUE_ITEMS_FLAG = 'N'&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS 'PAIDAMOUNTTOTAL' &#xD;&#xA;, SUM(CASE WHEN &#xD;&#xA;     PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;     and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;     and VENDOR_FLAG= 'N'  &#xD;&#xA;     and TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;     and ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;     and REISSUE_ITEMS_FLAG = 'N'&#xD;&#xA;    THEN &#xD;&#xA;     PHD.AMOUNT &#xD;&#xA;    ELSE 0 END&#xD;&#xA;    )  AS PAIDTAXABLE_AMOUNT, &#xD;&#xA;    SUM(CASE WHEN (ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    and VENDOR_FLAG= 'N'  &#xD;&#xA;     and TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;    and ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;    and REISSUE_ITEMS_FLAG = 'N')&#xD;&#xA;   THEN AMOUNT ELSE 0 END) AS PAIDNonTaxable_Amount &#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) &#xD;&#xA;   ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) &#xD;&#xA;   ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PAY WITH(NOLOCK) ON pay.payee_account_ID=phh.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE --PHH.PAYEE_ACCOUNT_ID = ISNULL(PAYTAB.PAYEE_ACCOUNT_ID,0) AND &#xD;&#xA; PHH.PAYMENT_DATE &lt;= @EFFECTIVE_DATE&#xD;&#xA;GROUP BY pay.payee_account_ID&#xD;&#xA;) AS RTWPAID ON RTWPAID.PAYEE_ACCOUNT_ID=ISNULL(PAYTAB.PAYEE_ACCOUNT_ID,0)&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA; SELECT PERSON_ACCOUNT_ID,&#xD;&#xA; SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA; SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT_LTD,&#xD;&#xA; SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT_LTD,&#xD;&#xA; SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST_LTD,&#xD;&#xA; SUM(ISNULL(EE_RHIC_SER_PUR_CONT,0)) AS EE_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA; SUM(ISNULL(ER_RHIC_SER_PUR_CONT,0)) AS ER_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA; SUM(ISNULL(POST_TAX_EE_SER_PUR_CONT,0)) AS POST_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA; SUM(ISNULL(PRE_TAX_EE_SER_PUR_CONT,0)) AS PRE_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA; SUM(ISNULL(PRE_TAX_ER_SER_PUR_CONT,0)) AS PRE_TAX_ER_SER_PUR_CONT_LTD&#xD;&#xA; FROM&#xD;&#xA; (&#xD;&#xA;  SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;  SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;  SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;  SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;  SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;  SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;  SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;  SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;  SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;  0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;  0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;  0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;  0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;  0 AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;  FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;  WHERE  TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC' AND&#xD;&#xA;  EFFECTIVE_DATE &lt; = @EFFECTIVE_DATE&#xD;&#xA;  GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;  UNION ALL&#xD;&#xA;&#xD;&#xA;  SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;  0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;  0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;  0 AS EE_RHIC_AMOUNT,&#xD;&#xA;  0 AS ER_RHIC_AMOUNT,&#xD;&#xA;  0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;  SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;  SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;  SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;  SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;  SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;  SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;  SUM(ISNULL(EE_RHIC_AMOUNT,0)) AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(ER_RHIC_AMOUNT,0)) AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;  FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;  WHERE  TRANSACTION_TYPE_VALUE = 'PURC' AND&#xD;&#xA;  EFFECTIVE_DATE &lt; = @EFFECTIVE_DATE&#xD;&#xA;  GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA; ) AS TEMP&#xD;&#xA; GROUP BY PERSON_ACCOUNT_ID) AS MAB ON MAB.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;  SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;  SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT_LTD,&#xD;&#xA;  SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT_LTD,&#xD;&#xA;  SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST_LTD,&#xD;&#xA;  SUM(ISNULL(EE_RHIC_SER_PUR_CONT,0)) AS EE_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA;  SUM(ISNULL(ER_RHIC_SER_PUR_CONT,0)) AS ER_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA;  SUM(ISNULL(POST_TAX_EE_SER_PUR_CONT,0)) AS POST_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_EE_SER_PUR_CONT,0)) AS PRE_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_ER_SER_PUR_CONT,0)) AS PRE_TAX_ER_SER_PUR_CONT_LTD&#xD;&#xA;  FROM&#xD;&#xA;  (&#xD;&#xA;   SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;   SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;   SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;   SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;   SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;   SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;   0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;   0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;   0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   0 AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;   FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;   WHERE  TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC' AND&#xD;&#xA;   EFFECTIVE_DATE &lt; = '06/30/' + CAST(YEAR(DATEADD(&quot;YY&quot;,-1,@EFFECTIVE_DATE)) AS VARCHAR(4))&#xD;&#xA;   GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;   UNION ALL&#xD;&#xA;&#xD;&#xA;   SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;   0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;   0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;   0 AS EE_RHIC_AMOUNT,&#xD;&#xA;   0 AS ER_RHIC_AMOUNT,&#xD;&#xA;   0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;   SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;   SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;   SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;   SUM(ISNULL(EE_RHIC_AMOUNT,0)) AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(ER_RHIC_AMOUNT,0)) AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;   FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;   WHERE  TRANSACTION_TYPE_VALUE = 'PURC' AND&#xD;&#xA;   EFFECTIVE_DATE &lt; = '06/30/' + CAST(YEAR(DATEADD(&quot;YY&quot;,-1,@EFFECTIVE_DATE)) AS VARCHAR(4))&#xD;&#xA;   GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;  ) AS TEMP1&#xD;&#xA;  GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA; ) AS MABPREV ON MABPREV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; (&#xD;&#xA;  SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;  SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;  SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;  SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;  SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;  SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;  SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;  SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;  SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;  SUM(ISNULL(EE_RHIC_SER_PUR_CONT,0)) AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(ER_RHIC_SER_PUR_CONT,0)) AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(POST_TAX_EE_SER_PUR_CONT,0)) AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_EE_SER_PUR_CONT,0)) AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_ER_SER_PUR_CONT,0)) AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;  FROM&#xD;&#xA;  (&#xD;&#xA;   SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;   SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;   SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;   SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;   SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;   SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;   0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;   0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;   0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   0 AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;   FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;   WHERE &#xD;&#xA;   /* Effective date &gt;= Previous Fiscal year start date ie. Contributions after previous Annual Report send date.  */&#xD;&#xA;   (CAST(YEAR(EFFECTIVE_DATE) AS VARCHAR(4))+ RIGHT('00' + CAST(MONTH(EFFECTIVE_DATE) AS VARCHAR(2)),2)) &gt;= &#xD;&#xA;   (CASE WHEN MONTH(@EFFECTIVE_DATE) &gt;= 7 THEN CAST(YEAR(@EFFECTIVE_DATE) AS VARCHAR(4)) + '07' ELSE CAST(YEAR(@EFFECTIVE_DATE)-1 AS VARCHAR(4)) + '07' END) AND&#xD;&#xA;&#xD;&#xA;   (CAST(YEAR(EFFECTIVE_DATE) AS VARCHAR(4))+ RIGHT('00' + CAST(MONTH(EFFECTIVE_DATE) AS VARCHAR(2)),2)) &lt;= &#xD;&#xA;   CASE WHEN @BATCHREQUESTTYPE = 'ANNL' THEN(&#xD;&#xA;    /*  Only for Annual request, Effective date &lt;= Next Fiscal year end date ie. Contributions till next Annual Report send date. */   &#xD;&#xA;   (CASE WHEN MONTH(@EFFECTIVE_DATE) &gt;= 7 THEN CAST(YEAR(@EFFECTIVE_DATE)+1 AS VARCHAR(4)) + '06' ELSE CAST(YEAR(@EFFECTIVE_DATE) AS VARCHAR(4)) + '06' END) &#xD;&#xA;   )&#xD;&#xA;   ELSE &#xD;&#xA;   (&#xD;&#xA;   /*  For other request, Effective date &lt;= Statement Effective date ie. Contributions till statement effective date. */   &#xD;&#xA;   (CAST(YEAR(@EFFECTIVE_DATE) AS VARCHAR(4))+ RIGHT('00' + CAST(MONTH(@EFFECTIVE_DATE) AS VARCHAR(2)),2))&#xD;&#xA;   )&#xD;&#xA;   END AND&#xD;&#xA;   TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC' GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;   UNION ALL&#xD;&#xA;&#xD;&#xA;   SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;   0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;   0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;   0 AS EE_RHIC_AMOUNT,&#xD;&#xA;   0 AS ER_RHIC_AMOUNT,&#xD;&#xA;   0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;   SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;   SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;   SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;   SUM(ISNULL(EE_RHIC_AMOUNT,0)) AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(ER_RHIC_AMOUNT,0)) AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;   FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;   WHERE &#xD;&#xA;   /* Effective date &gt;= Previous Fiscal year start date ie. Contributions after previous Annual Report send date.  */&#xD;&#xA;   (CAST(YEAR(EFFECTIVE_DATE) AS VARCHAR(4))+ RIGHT('00' + CAST(MONTH(EFFECTIVE_DATE) AS VARCHAR(2)),2)) &gt;= &#xD;&#xA;   (CASE WHEN MONTH(@EFFECTIVE_DATE) &gt;= 7 THEN CAST(YEAR(@EFFECTIVE_DATE) AS VARCHAR(4)) + '07' ELSE CAST(YEAR(@EFFECTIVE_DATE)-1 AS VARCHAR(4)) + '07' END) AND&#xD;&#xA;&#xD;&#xA;   (CAST(YEAR(EFFECTIVE_DATE) AS VARCHAR(4))+ RIGHT('00' + CAST(MONTH(EFFECTIVE_DATE) AS VARCHAR(2)),2)) &lt;= &#xD;&#xA;   CASE WHEN @BATCHREQUESTTYPE = 'ANNL' THEN(&#xD;&#xA;    /*  Only for Annual request, Effective date &lt;= Next Fiscal year end date ie. Contributions till next Annual Report send date. */   &#xD;&#xA;   (CASE WHEN MONTH(@EFFECTIVE_DATE) &gt;= 7 THEN CAST(YEAR(@EFFECTIVE_DATE)+1 AS VARCHAR(4)) + '06' ELSE CAST(YEAR(@EFFECTIVE_DATE) AS VARCHAR(4)) + '06' END) &#xD;&#xA;   )&#xD;&#xA;   ELSE &#xD;&#xA;   (&#xD;&#xA;   /*  For other request, Effective date &lt;= Statement Effective date ie. Contributions till statement effective date. */   &#xD;&#xA;   (CAST(YEAR(@EFFECTIVE_DATE) AS VARCHAR(4))+ RIGHT('00' + CAST(MONTH(@EFFECTIVE_DATE) AS VARCHAR(2)),2))&#xD;&#xA;   )&#xD;&#xA;   END&#xD;&#xA;   AND&#xD;&#xA;   TRANSACTION_TYPE_VALUE = 'PURC'&#xD;&#xA;   GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;  ) AS TEMP&#xD;&#xA;  GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA; ) AS FYTD ON FYTD.PERSON_ACCOUNT_ID= ACC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE ACC.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1','SUS2') &#xD;&#xA;GROUP BY ACC.PERSON_ACCOUNT_ID,&#xD;&#xA;MASPER.MAS_PERSON_ID,&#xD;&#xA;ACC.PERSON_ID, PER.PERSON_ID, ACC.PLAN_ID,PLN.BENEFIT_PROVISION_ID, PLN.PLAN_NAME,SCV.DESCRIPTION&#xD;&#xA;) AS MAINTABLE &#xD;&#xA;GROUP BY MAINTABLE.MAS_PERSON_ID,MAINTABLE.PLAN_ID,MAINTABLE.PLAN_NAME&#xD;&#xA;ORDER BY MAINTABLE.PLAN_ID, MAINTABLE.PLAN_NAME">
      <parameters>
        <parameter ID="@EFFECTIVE_DATE" sfwDataType="DateTime" />
        <parameter ID="@BATCHRUNDATE" sfwDataType="DateTime" />
        <parameter ID="@BATCHREQUESTID" sfwDataType="int" />
        <parameter ID="@BATCHREQUESTTYPE" sfwDataType="string" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Fetch_MAS_Person" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;PER.PERSON_ID,&#xD;&#xA;(&#xD;&#xA; SELECT CASE WHEN COUNT(*) &gt;0 THEN 'Y' ELSE 'N' END FROM SGT_MAS_PERSON_CALCULATION SMPC WITH(NOLOCK) &#xD;&#xA; WHERE SMPC.MAS_PERSON_ID=SMP.MAS_PERSON_ID AND SMPC.IS_DEFAULT_RETIREMENT='Y' AND SMPC.NORMAL_RETIREMENT_DATE &lt; MAS.STATEMENT_EFFECTIVE_DATE&#xD;&#xA;) AS 'IS_NRD_ATTAINED',&#xD;&#xA;SMP.*,mas.statement_effective_date, ISNULL(PER.Limit_401a,'N') as Limit_401a&#xD;&#xA;FROM SGT_MAS_PERSON SMP WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION SEL WITH(NOLOCK) ON SEL.MAS_SELECTION_ID=SMP.MAS_SELECTION_ID&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=SEL.PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_BATCH_REQUEST MAS WITH(NOLOCK) ON MAS.MAS_BATCH_REQUEST_ID=SEL.MAS_BATCH_REQUEST_ID&#xD;&#xA;WHERE SEL.MAS_BATCH_REQUEST_ID = @BATCH_REQUEST_ID &#xD;&#xA;AND SEL.IS_DATA_PULLED_FLAG='Y'&#xD;&#xA;AND ((@SELECTION_ID &gt; 0 AND SMP.MAS_SELECTION_ID = @SELECTION_ID) OR (@SELECTION_ID = 0 AND SEL.IS_REPORT_CREATED_FLAG='N'))">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@SELECTION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Select_MAS_Person" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;PER.PERSON_ID,&#xD;&#xA;SMP.* &#xD;&#xA;FROM SGT_MAS_PERSON SMP WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION SEL WITH(NOLOCK) ON SEL.MAS_SELECTION_ID=SMP.MAS_SELECTION_ID&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=SEL.PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_BATCH_REQUEST MAS WITH(NOLOCK) ON MAS.MAS_BATCH_REQUEST_ID=SEL.MAS_BATCH_REQUEST_ID&#xD;&#xA;WHERE SEL.MAS_BATCH_REQUEST_ID = @BATCH_REQUEST_ID &#xD;&#xA;AND SEL.IS_DATA_PULLED_FLAG='N'&#xD;&#xA;AND SEL.IS_REPORT_CREATED_FLAG='N'">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Select_MAS_Person_Plan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MAS.PERSON_ID, REQ.STATEMENT_EFFECTIVE_DATE, SMPP.* FROM SGT_MAS_PERSON_PLAN SMPP WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_PERSON SMP WITH(NOLOCK) ON SMP.MAS_PERSON_ID=SMPP.MAS_PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.MAS_SELECTION_ID=SMP.MAS_SELECTION_ID&#xD;&#xA;INNER JOIN SGT_MAS_BATCH_REQUEST REQ WITH(NOLOCK) ON REQ.MAS_BATCH_REQUEST_ID=MAS.MAS_BATCH_REQUEST_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID = @BATCH_REQUEST_ID AND MAS.IS_DATA_PULLED_FLAG='N' AND &#xD;&#xA;MAS.IS_REPORT_CREATED_FLAG='N'">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Select_MAS_DB_Person_Plan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;MAS.PERSON_ID, &#xD;&#xA;REQ.STATEMENT_EFFECTIVE_DATE,&#xD;&#xA;(&#xD;&#xA; -- Final FAS is the amount without projections&#xD;&#xA; -- Final FAS is introduced to calculate FAS without projections.&#xD;&#xA; -- FAS related UAT PIRS are fixed. FINAL_FAS from SGT_MAS_PERSON_CALCULATION table is not used anymore&#xD;&#xA; SELECT SMPC.FINAL_AVERAGE_SALARY FROM SGT_MAS_PERSON_CALCULATION SMPC WITH(NOLOCK) &#xD;&#xA; WHERE SMPC.MAS_PERSON_ID=SMP.MAS_PERSON_ID AND SMPC.IS_DEFAULT_RETIREMENT='Y' AND SMPC.PLAN_ID=SMPP.PLAN_ID&#xD;&#xA;) AS 'FINAL_FAS',&#xD;&#xA;SMPP.* &#xD;&#xA;FROM SGT_MAS_PERSON_PLAN SMPP WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_PERSON SMP WITH(NOLOCK) ON SMP.MAS_PERSON_ID=SMPP.MAS_PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.MAS_SELECTION_ID=SMP.MAS_SELECTION_ID&#xD;&#xA;INNER JOIN SGT_MAS_BATCH_REQUEST REQ WITH(NOLOCK) ON REQ.MAS_BATCH_REQUEST_ID=MAS.MAS_BATCH_REQUEST_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID = @BATCH_REQUEST_ID AND &#xD;&#xA;(SMPP.PLAN_ID NOT IN (7,28,30)) AND MAS.IS_DATA_PULLED_FLAG=@DATA_PULLED_FLAG &#xD;&#xA;AND ((@SELECTION_ID &gt; 0 AND SMP.MAS_SELECTION_ID = @SELECTION_ID) OR (@SELECTION_ID = 0 AND MAS.IS_REPORT_CREATED_FLAG='N'))">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@DATA_PULLED_FLAG" sfwDataType="string" />
        <parameter ID="@SELECTION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Select_MAS_DC_Person_Plan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MAS.PERSON_ID,REQ.STATEMENT_EFFECTIVE_DATE, SMPP.* FROM SGT_MAS_PERSON_PLAN SMPP WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_PERSON SMP WITH(NOLOCK) ON SMP.MAS_PERSON_ID=SMPP.MAS_PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.MAS_SELECTION_ID=SMP.MAS_SELECTION_ID&#xD;&#xA;INNER JOIN SGT_MAS_BATCH_REQUEST REQ WITH(NOLOCK) ON REQ.MAS_BATCH_REQUEST_ID=MAS.MAS_BATCH_REQUEST_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID = @BATCH_REQUEST_ID AND (SMPP.PLAN_ID=7 OR SMPP.PLAN_ID=28 OR SMPP.PLAN_ID=30) &#xD;&#xA;AND MAS.IS_DATA_PULLED_FLAG=@DATA_PULLED_FLAG &#xD;&#xA;AND ((@SELECTION_ID &gt; 0 AND SMP.MAS_SELECTION_ID = @SELECTION_ID) OR (@SELECTION_ID = 0 AND MAS.IS_REPORT_CREATED_FLAG='N'))">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@DATA_PULLED_FLAG" sfwDataType="string" />
        <parameter ID="@SELECTION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Select_MAS_Person_Plan_Beneficiary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MAS.PERSON_ID, BEN.* FROM SGT_MAS_PERSON_PLAN_BENEFICIARY_DEPENDENT BEN WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_PERSON SMP WITH(NOLOCK) ON SMP.MAS_PERSON_ID=BEN.MAS_PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.MAS_SELECTION_ID=SMP.MAS_SELECTION_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID = @BATCH_REQUEST_ID&#xD;&#xA;AND ((@SELECTION_ID &gt; 0 AND SMP.MAS_SELECTION_ID = @SELECTION_ID) OR (@SELECTION_ID = 0)) &#xD;&#xA;ORDER BY BEN.BENEFICIARY_TYPE_DESCRIPTION DESC">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@SELECTION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Select_MAS_Deff_Comp_Provider" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MAS.PERSON_ID, DEFF.* FROM SGT_MAS_DEF_COMP_PROVIDER DEFF WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_PERSON SMP WITH(NOLOCK) ON SMP.MAS_PERSON_ID=DEFF.MAS_PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.MAS_SELECTION_ID=SMP.MAS_SELECTION_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID = @BATCH_REQUEST_ID&#xD;&#xA;AND ((@SELECTION_ID &gt; 0 AND SMP.MAS_SELECTION_ID = @SELECTION_ID) OR (@SELECTION_ID = 0))">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@SELECTION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Select_MAS_Flex_Option" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MAS.PERSON_ID, FLEXOPT.* FROM SGT_MAS_FLEX_OPTION FLEXOPT WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_PERSON SMP WITH(NOLOCK) ON SMP.MAS_PERSON_ID=FLEXOPT.MAS_PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.MAS_SELECTION_ID=SMP.MAS_SELECTION_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID = @BATCH_REQUEST_ID&#xD;&#xA;AND ((@SELECTION_ID &gt; 0 AND SMP.MAS_SELECTION_ID = @SELECTION_ID) OR (@SELECTION_ID = 0))">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@SELECTION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Select_MAS_Flex_Conversion" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MAS.PERSON_ID, FLEXCON.* FROM SGT_MAS_FLEX_CONVERSION FLEXCON WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_PERSON SMP WITH(NOLOCK) ON SMP.MAS_PERSON_ID=FLEXCON.MAS_PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.MAS_SELECTION_ID=SMP.MAS_SELECTION_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID = @BATCH_REQUEST_ID&#xD;&#xA;AND ((@SELECTION_ID &gt; 0 AND SMP.MAS_SELECTION_ID = @SELECTION_ID) OR (@SELECTION_ID = 0))">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@SELECTION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Select_MAS_Life_Options" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MAS.PERSON_ID, LIFEOPT.* FROM SGT_MAS_LIFE_OPTION LIFEOPT WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_PERSON SMP WITH(NOLOCK) ON SMP.MAS_PERSON_ID=LIFEOPT.MAS_PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.MAS_SELECTION_ID=SMP.MAS_SELECTION_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID = @BATCH_REQUEST_ID&#xD;&#xA;AND ((@SELECTION_ID &gt; 0 AND SMP.MAS_SELECTION_ID = @SELECTION_ID) OR (@SELECTION_ID = 0))">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@SELECTION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Select_MAS_Person_Calculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT MAS.PERSON_ID,&#xD;&#xA;(select TOP 1  'Y' from SGT_PERSON_TFFR_TIAA_SERVICE TFFR where TFFR.PERSON_ID = MAS.PERSON_ID) AS TFFRExist,&#xD;&#xA;(select Top 1 'Y' from SGT_BENEFIT_DRO_APPLICATION DRO where DRO.MEMBER_PERSLINK_ID = MAS.PERSON_ID OR DRO.ALTERNATE_PAYEE_PERSLINK_ID = MAS.PERSON_ID and dro.dro_status_value = 'QULF' and&#xD;&#xA;dro.PLAN_ID = calc.PLAN_ID) AS DROExists,&#xD;&#xA;CALC.*,ISNULL((' - ' + SMPP.PLAN_BENEFIT_TIER_DESCRIPTION),'') AS PLAN_BENEFIT_TIER_DESCRIPTION&#xD;&#xA;FROM SGT_MAS_PERSON_CALCULATION CALC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_PERSON SMP WITH(NOLOCK) ON SMP.MAS_PERSON_ID=CALC.MAS_PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.MAS_SELECTION_ID=SMP.MAS_SELECTION_ID&#xD;&#xA;INNER JOIN SGT_MAS_PERSON_PLAN SMPP WITH(NOLOCK) ON CALC.MAS_PERSON_ID=SMPP.MAS_PERSON_ID  AND CALC.PLAN_ID=SMPP.PLAN_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID = @BATCH_REQUEST_ID&#xD;&#xA;AND ((@SELECTION_ID &gt; 0 AND SMP.MAS_SELECTION_ID = @SELECTION_ID) OR (@SELECTION_ID = 0))">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@SELECTION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Insert_into_MAS_Selection_Retirees" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @BATCHREQUESTTYPE VARCHAR(4)&#xD;&#xA;DECLARE @PERSON_ID INT&#xD;&#xA;Declare @EffectiveDate datetime&#xD;&#xA;Declare @Ctr Int&#xD;&#xA;Declare @OrgId int &#xD;&#xA;Declare @BENEFIT_ACCOUNT_TYPE_VALUE  Varchar(4)&#xD;&#xA;Declare @BENEFIT_OPTION_VALUE Varchar(4)&#xD;&#xA;Declare @BENEFIT_ACCOUNT_SUB_TYPE_VALUE Varchar(4) &#xD;&#xA;&#xD;&#xA;select @BATCHREQUESTTYPE =  BATCH_REQUEST_TYPE_VALUE,&#xD;&#xA;  @EffectiveDate = STATEMENT_EFFECTIVE_DATE,&#xD;&#xA;  @PERSON_ID = PERSON_ID,&#xD;&#xA;  @OrgId = Org_id,&#xD;&#xA;  @BENEFIT_ACCOUNT_TYPE_VALUE = BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  @BENEFIT_OPTION_VALUE = BENEFIT_OPTION_VALUE,&#xD;&#xA;  @BENEFIT_ACCOUNT_SUB_TYPE_VALUE = BENEFIT_ACCOUNT_SUB_TYPE_VALUE&#xD;&#xA;from SGT_MAS_BATCH_REQUEST WITH(NOLOCK)&#xD;&#xA;where MAS_BATCH_REQUEST_ID  = @BATCHREQUESTID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT @Ctr = Count(0) &#xD;&#xA; FROM SGT_MAS_BATCH_REQUEST_PLAN R WITH(NOLOCK)&#xD;&#xA; Inner join sgt_Plan P WITH(NOLOCK) on  R.Plan_id = p.Plan_id&#xD;&#xA; WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID and Benefit_type_value = 'RETR'&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;-- Query for  Targeted group option&#xD;&#xA;&#xD;&#xA;-- Begin move to temp table if needed&#xD;&#xA;&#xD;&#xA;CREATE TABLE #TempPayee  &#xD;&#xA;(&#xD;&#xA; Person_id INT  &#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;If @Ctr &gt; 0 Or  @OrgId is Not Null Or &#xD;&#xA;  @BENEFIT_ACCOUNT_TYPE_VALUE Is Not Null Or &#xD;&#xA;  @BENEFIT_OPTION_VALUE Is Not Null &#xD;&#xA; Begin&#xD;&#xA;  Insert Into #TempPayee&#xD;&#xA;  SELECT DISTINCT PAYEE_PERSLINK_ID as PERSON_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE   &#xD;&#xA;   INNER JOIN SGT_MAS_BATCH_REQUEST SCH WITH(NOLOCK)&#xD;&#xA;      ON MAS_BATCH_REQUEST_ID =@BATCHREQUESTID &#xD;&#xA;   INNER JOIN SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;    ON PER.PERSON_ID=PA.PAYEE_PERSLINK_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK)&#xD;&#xA;    ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DROA WITH(NOLOCK)&#xD;&#xA;    ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA;   LEFT OUTER JOIN &#xD;&#xA;    (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WITH(NOLOCK)&#xD;&#xA;     WHERE YEAR(PAYMENT_DATE) = YEAR(@EffectiveDate) &#xD;&#xA;     AND STATUS_VALUE IN ('OUST','PRCD') and PAYMENT_DATE &lt;= @EffectiveDate&#xD;&#xA;    ) AS PHH&#xD;&#xA;    ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;    &#xD;&#xA;  WHERE CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;   and SCH.BATCH_REQUEST_TYPE_VALUE ='TGRP'&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @EffectiveDate&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @EffectiveDate)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE NOT IN('REFD','AURD')  &#xD;&#xA;   AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;   AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N'&#xD;&#xA;   AND PER.PERSON_ID=(CASE WHEN SCH.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN SCH.PERSON_ID &#xD;&#xA;        ELSE PER.PERSON_ID END&#xD;&#xA;         )&#xD;&#xA;   AND CASE WHEN PA.APPLICATION_ID IS not NULL &#xD;&#xA;        THEN BA.PLAN_ID &#xD;&#xA;        ELSE DROA.PLAN_ID END&#xD;&#xA;          &#xD;&#xA;      IN (&#xD;&#xA;        Select  Case When @Ctr &gt; 0 then R.Plan_id Else P.Plan_id End&#xD;&#xA;         from Sgt_plan P WITH(NOLOCK) left Outer Join &#xD;&#xA;         SGT_MAS_BATCH_REQUEST_PLAN R WITH(NOLOCK) on P.Plan_id = R.Plan_id and MAS_BATCH_REQUEST_ID =@BATCHREQUESTID&#xD;&#xA;         WHERE &#xD;&#xA;         Benefit_type_value = 'RETR' and Case When @Ctr &gt; 0 then R.Plan_id Else P.Plan_id End is not null&#xD;&#xA;       )&#xD;&#xA;     &#xD;&#xA;  --to uncomment after adding fields to the table &#xD;&#xA;&#xD;&#xA;   AND isnull(BA.RETIREMENT_ORG_ID,0) = CASE WHEN SCH.ORG_ID IS NULL &#xD;&#xA;            THEN isnull(BA.RETIREMENT_ORG_ID,0)&#xD;&#xA;            ELSE SCH.ORG_ID END&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CASE WHEN SCH.BENEFIT_ACCOUNT_TYPE_VALUE IS NULL &#xD;&#xA;            THEN PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;            ELSE SCH.BENEFIT_ACCOUNT_TYPE_VALUE END&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE = CASE WHEN SCH.BENEFIT_OPTION_VALUE IS NULL &#xD;&#xA;            THEN PA.BENEFIT_OPTION_VALUE&#xD;&#xA;            ELSE SCH.BENEFIT_OPTION_VALUE END&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE = CASE WHEN SCH.BENEFIT_ACCOUNT_SUB_TYPE_VALUE IS NULL &#xD;&#xA;            THEN PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE&#xD;&#xA;            ELSE SCH.BENEFIT_ACCOUNT_SUB_TYPE_VALUE END&#xD;&#xA;   AND ((PHH.PAYEE_ACCOUNT_ID IS NULL AND ISNULL(BA.PLAN_ID,DROA.PLAN_ID) =7) OR&#xD;&#xA;   (PHH.PAYEE_ACCOUNT_ID IS NOT NULL AND ISNULL(BA.PLAN_ID,DROA.PLAN_ID) NOT IN (7,23)))&#xD;&#xA;   --AND BA.PLAN_ID&lt;&gt;23&#xD;&#xA; End&#xD;&#xA;&#xD;&#xA;-- End of move to temp table if needed&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_SELECTION&#xD;&#xA;(&#xD;&#xA; MAS_BATCH_REQUEST_ID, PERSON_ID, IS_DATA_PULLED_FLAG, IS_REPORT_CREATED_FLAG, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT @BATCHREQUESTID AS BATCHREQUESTID, &#xD;&#xA;  PAYEE.PERSON_ID,&#xD;&#xA;  'N' as 'IS_DATA_PULLED_FLAG',&#xD;&#xA;  'N' as 'IS_REPORT_CREATED_FLAG',&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA;  getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA;  getdate() as MODIFIED_DATE,&#xD;&#xA;  0 as UPDATE_SEQ&#xD;&#xA;From&#xD;&#xA;(&#xD;&#xA;-- Query for Annual and Individual opions&#xD;&#xA;-- Begin -  Query to extract DB Payee Accounts&#xD;&#xA; SELECT DISTINCT PAYEE_PERSLINK_ID as PERSON_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN &#xD;&#xA;   (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WITH(NOLOCK)&#xD;&#xA;    WHERE YEAR(PAYMENT_DATE) = YEAR(@EffectiveDate) &#xD;&#xA;    AND STATUS_VALUE IN ('OUST','PRCD') and PAYMENT_DATE &lt;= @EffectiveDate&#xD;&#xA;   ) AS PHH&#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=PA.PAYEE_PERSLINK_ID&#xD;&#xA;  --PIR 8076&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID&#xD;&#xA;  INNER JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.PLAN_ID=APPPLAN.PLAN_ID&#xD;&#xA; WHERE (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  AND BENEFIT_BEGIN_DATE &lt;=  @EffectiveDate&#xD;&#xA;  AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @EffectiveDate)&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('REFD','AURD')  &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;  AND BENAPP.PLAN_ID&lt;&gt;23&#xD;&#xA;  AND isnull(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y' -- Added 8076&#xD;&#xA;  &#xD;&#xA;  UNION&#xD;&#xA;  &#xD;&#xA;  SELECT DISTINCT PAYEE_PERSLINK_ID as PERSON_ID &#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE  &#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=PA.PAYEE_PERSLINK_ID&#xD;&#xA;  --PIR 8076&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID&#xD;&#xA;  INNER JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.PLAN_ID=APPPLAN.PLAN_ID&#xD;&#xA; WHERE (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  AND BENEFIT_BEGIN_DATE &lt;=  @EffectiveDate&#xD;&#xA;  AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @EffectiveDate)&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('REFD','AURD')  &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )        &#xD;&#xA;  AND BENAPP.PLAN_ID=23&#xD;&#xA;  AND isnull(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y'&#xD;&#xA;  --PIR 8076&#xD;&#xA;-- End -  Query to extract DB Payee Accounts&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;-- Query for Annual and Individual opions&#xD;&#xA;-- Begin -  Query to extract DC Payee Accounts&#xD;&#xA; SELECT DISTINCT PAYEE_PERSLINK_ID as PERSON_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK)&#xD;&#xA;   ON PA.APPLICATION_ID=BA.BENEFIT_APPLICATION_ID AND BA.PLAN_ID =7&#xD;&#xA;   --PIR 8076&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE  &#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=PA.PAYEE_PERSLINK_ID&#xD;&#xA;&#xD;&#xA; WHERE (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  AND BENEFIT_BEGIN_DATE &lt;=  @EffectiveDate&#xD;&#xA;  AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @EffectiveDate)&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('REFD','AURD')  &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;-- End -  Query to extract DC Payee Accounts&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;-- Begin - Query to Extract Retirees participating in HDV and Life  Plans&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC  WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PLAN PLN WITH(NOLOCK)&#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV  WITH(NOLOCK)&#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  --pir 8076 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID&#xD;&#xA;  LEFT JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.plan_id = APPPLAN.PLAN_ID -- Added 8076 &#xD;&#xA;  --end&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  --end&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  --AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  --AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   --(SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   --FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;  -- WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   --AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  -- ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  --)&#xD;&#xA;  --AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  AND PAS.PAYEE_ACCOUNT_STATUS_ID IS NULL&#xD;&#xA;  --END&#xD;&#xA;  AND PLN.BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND ((HEALTH_INSURANCE_TYPE_VALUE IN('RT09','RT12') &#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (HEALTH_INSURANCE_TYPE_VALUE IN('NS12','ST12') &#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA;  --and FROM_PERSON_ACCOUNT_ID is null --PIR 15612&#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;  AND PLN.PLAN_ID in (12)&#xD;&#xA;  --AND BENAPP.PLAN_ID &lt;&gt; 23&#xD;&#xA;  AND ((isnull(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y') -- Added 8076&#xD;&#xA;   OR (ACC.END_DATE IS NULL AND GHDV.HEALTH_INSURANCE_TYPE_VALUE IN ('RT09','RT12'))) -- 10642&#xD;&#xA;&#xD;&#xA;--PIR 16868 Medicare start &#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT MED.MEMBER_PERSON_ID FROM SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY MED WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT ACC WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID = MED.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID = MED.MEMBER_PERSON_ID&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID = PLN.PLAN_ID&#xD;&#xA;&#xD;&#xA;LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;LEFT JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID&#xD;&#xA;LEFT JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.PLAN_ID = APPPLAN.PLAN_ID  &#xD;&#xA;LEFT JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA;    (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WITH(NOLOCK) &#xD;&#xA;     WHERE YEAR(PAYMENT_DATE) &lt;= YEAR(@EffectiveDate) &#xD;&#xA;    ) AS PHH&#xD;&#xA;    ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;WHERE  (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;&#xD;&#xA;AND PAS.PAYEE_ACCOUNT_STATUS_ID IS NULL&#xD;&#xA;AND PLN.BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  &#xD;&#xA;AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;AND PLN.PLAN_ID IN (9)&#xD;&#xA;AND ((ISNULL(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y')&#xD;&#xA;OR (ACC.END_DATE IS NULL))&#xD;&#xA;&#xD;&#xA;--PIR 16868 Medicare end&#xD;&#xA;  &#xD;&#xA;UNION&#xD;&#xA;-- Begin - Query to Extract Retirees participating in HDV and Life  Plans&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PLAN PLN WITH(NOLOCK)&#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  --pir 8076 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID &#xD;&#xA;  LEFT JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.plan_id = APPPLAN.PLAN_ID --Added 8076&#xD;&#xA;  --end&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   LEFT OUTER JOIN &#xD;&#xA;    (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WITH(NOLOCK) &#xD;&#xA;     WHERE YEAR(PAYMENT_DATE) &lt;= YEAR(@EffectiveDate) &#xD;&#xA;    ) AS PHH&#xD;&#xA;    ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;   --end&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  --AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  --AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   --(SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   --FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   --WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   --AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;   --ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  --)&#xD;&#xA;  --AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  --AND PAS.PAYEE_ACCOUNT_STATUS_ID IS NULL&#xD;&#xA;  --END&#xD;&#xA;  AND PLN.BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND ((VISION_INSURANCE_TYPE_VALUE ='RETR'&#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (VISION_INSURANCE_TYPE_VALUE ='COBR' &#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA;  --and FROM_PERSON_ACCOUNT_ID is null  --PIR 15612&#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;  AND PLN.PLAN_ID in (17)&#xD;&#xA;  --AND BENAPP.PLAN_ID &lt;&gt; 23&#xD;&#xA;  AND ((isnull(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y') --Added 8076&#xD;&#xA;   OR (ACC.END_DATE IS NULL AND GHDV.VISION_INSURANCE_TYPE_VALUE = 'RETR')) -- 10642&#xD;&#xA;  -- AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL --PIR 17213&#xD;&#xA;UNION&#xD;&#xA;-- Begin - Query to Extract Retirees participating in HDV and Life  Plans&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PLAN PLN WITH(NOLOCK)&#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  --pir 8076 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID &#xD;&#xA;  LEFT JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.plan_id = APPPLAN.PLAN_ID --Added 8076&#xD;&#xA;  --end&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;    (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WITH(NOLOCK)&#xD;&#xA;     WHERE YEAR(PAYMENT_DATE) &lt;= YEAR(@EffectiveDate) &#xD;&#xA;    ) AS PHH&#xD;&#xA;    ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;  --end&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  --AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  --AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  -- (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;  -- FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;  -- WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  -- AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  -- ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  --)&#xD;&#xA;  --AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  --AND PAS.PAYEE_ACCOUNT_STATUS_ID IS NULL&#xD;&#xA;  --END&#xD;&#xA;  AND PLN.BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND ((DENTAL_INSURANCE_TYPE_VALUE ='RT16'&#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (DENTAL_INSURANCE_TYPE_VALUE ='CB16' &#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA;  --and FROM_PERSON_ACCOUNT_ID is null  --PIR 15612&#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;  AND PLN.PLAN_ID =16&#xD;&#xA;  --AND BENAPP.PLAN_ID &lt;&gt; 23&#xD;&#xA;  AND ((isnull(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y') --Added 8076&#xD;&#xA;   OR (ACC.END_DATE IS NULL AND GHDV.DENTAL_INSURANCE_TYPE_VALUE = 'RT16')) -- 10642&#xD;&#xA;   --AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL --PIR 17213&#xD;&#xA;--   exclude Dependant COBRA Payees -- to check with satya on this - discussed&#xD;&#xA;--(( health insurance type in rt9 and 12 and cobara type value is null)&#xD;&#xA;-- or (health insurance type in state or non state and cobra type in  ('R18C','R36C','RDSC')&#xD;&#xA; --))&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT  ACC WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PLAN PLN WITH(NOLOCK)&#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_LIFE LIFE WITH(NOLOCK)&#xD;&#xA;   ON LIFE.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;   --pir 8076 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID &#xD;&#xA;  LEFT JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.plan_id = APPPLAN.PLAN_ID --Added 8076&#xD;&#xA;  --end&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  --end&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  --AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  --AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  -- (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;  -- FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;  -- WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  -- AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  -- ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA; -- )&#xD;&#xA;  --AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  --AND PAS.PAYEE_ACCOUNT_STATUS_ID IS NULL&#xD;&#xA;  --END&#xD;&#xA;  AND PLN.BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND LIFE_INSURANCE_TYPE_VALUE ='REME'&#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;         --AND BENAPP.PLAN_ID &lt;&gt; 23&#xD;&#xA;         AND ((isnull(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y') -- Added 8076&#xD;&#xA;          OR (ACC.END_DATE IS NULL AND LIFE_INSURANCE_TYPE_VALUE ='REME')) -- 10642&#xD;&#xA;-- End - Query to Extract Retirees participating in HDV and Life  Plans&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;-- Begin - Query to Extract Retirees participating in LTC Plan&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PLAN PLN WITH(NOLOCK)&#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION IBS WITH(NOLOCK)&#xD;&#xA;   ON IBS.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;   --pir 8076 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID &#xD;&#xA;  LEFT JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.plan_id = APPPLAN.PLAN_ID --Added 8076&#xD;&#xA;  --end&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  --end&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  --AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  --AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  -- (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;  -- FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;  -- WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  -- AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  -- ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA; -- )&#xD;&#xA;  --AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  --AND PAS.PAYEE_ACCOUNT_STATUS_ID IS NULL&#xD;&#xA;  --END&#xD;&#xA;  AND PLN.BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;  AND PLN.PLAN_ID = 15&#xD;&#xA;  AND IBS.IBS_FLAG = 'Y' &#xD;&#xA;  AND IBS.IBS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  --AND BENAPP.PLAN_ID &lt;&gt; 23&#xD;&#xA;  AND isnull(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y' -- Added 8076&#xD;&#xA;-- End  - Query to Extract Retirees participating in LTC Plan&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;select * from #TempPayee&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;------------------------------- Important Note ------------------------------------&#xD;&#xA;-- to check with satya on whether we need to add conditions of payee account &#xD;&#xA;-- related columns&#xD;&#xA;-- If it has to be included then move the block marked with begin and end above&#xD;&#xA;-- (move to temp table if needed)&#xD;&#xA;-- and inner join the temp table with the following queries below &#xD;&#xA;-----------------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PLAN PLN WITH(NOLOCK)&#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN&#xD;&#xA;   (&#xD;&#xA;    select Distinct Person_account_id, Org_id &#xD;&#xA;     from Sgt_person_account_employment_DETAIL PAE WITH(NOLOCK)&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT_DETAIL PED  WITH(NOLOCK)&#xD;&#xA;      ON PAE.PERSON_EMPLOYMENT_DTL_ID =  PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK)&#xD;&#xA;      ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;   ) EMPDTL&#xD;&#xA;   ON ACC.PERSON_ACCOUNT_ID = EMPDTL.PERSON_ACCOUNT_ID&#xD;&#xA;    --pir 8076 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID&#xD;&#xA;  LEFT JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.plan_id = APPPLAN.PLAN_ID --Added 8076 &#xD;&#xA;  --end&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  --end&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='TGRP')&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  --AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  --AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   --(SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   --FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   --WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   --AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;   --ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  --)&#xD;&#xA;  --AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  --AND PAS.PAYEE_ACCOUNT_STATUS_ID IS NULL&#xD;&#xA;  --END&#xD;&#xA;  AND PLN.BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND ((HEALTH_INSURANCE_TYPE_VALUE IN('RT09','RT12') &#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (HEALTH_INSURANCE_TYPE_VALUE IN('NS12','ST12') &#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA;  and FROM_PERSON_ACCOUNT_ID is null  &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PLN.PLAN_ID in (12,9)&#xD;&#xA;  --AND BENAPP.PLAN_ID &lt;&gt; 23&#xD;&#xA;  AND isnull(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y' --Added 8076&#xD;&#xA;  and PLN.PLAN_ID &#xD;&#xA;   IN (&#xD;&#xA;     SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN WITH(NOLOCK)&#xD;&#xA;       WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID&#xD;&#xA;    )&#xD;&#xA;  AND isnull(EMPDTL.ORG_ID,0) = CASE WHEN @ORGID is Null then isnull(EMPDTL.ORG_ID,0) Else isnull(@OrgId,0) End   &#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PLAN PLN WITH(NOLOCK)&#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN&#xD;&#xA;   (&#xD;&#xA;    select Distinct Person_account_id, Org_id &#xD;&#xA;     from Sgt_person_account_employment_DETAIL PAE WITH(NOLOCK)&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT_DETAIL PED  WITH(NOLOCK)&#xD;&#xA;      ON PAE.PERSON_EMPLOYMENT_DTL_ID =  PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK)&#xD;&#xA;      ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;   ) EMPDTL&#xD;&#xA;   ON ACC.PERSON_ACCOUNT_ID = EMPDTL.PERSON_ACCOUNT_ID&#xD;&#xA;    --pir 8076 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID &#xD;&#xA;  LEFT JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.plan_id = APPPLAN.PLAN_ID --Added 8076&#xD;&#xA;  --end&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  --end&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='TGRP')&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  --AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  --AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  -- (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;  -- FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;  -- WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  -- AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  -- ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  --)&#xD;&#xA;  --AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  --AND PAS.PAYEE_ACCOUNT_STATUS_ID IS NULL&#xD;&#xA;  --END&#xD;&#xA;  AND PLN.BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND ((DENTAL_INSURANCE_TYPE_VALUE ='RT16'&#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (DENTAL_INSURANCE_TYPE_VALUE ='CB16'&#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA;  and FROM_PERSON_ACCOUNT_ID is null  &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PLN.PLAN_ID =16&#xD;&#xA;  --AND BENAPP.PLAN_ID &lt;&gt; 23&#xD;&#xA;  AND isnull(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y' -- Added 8076&#xD;&#xA;  and PLN.PLAN_ID &#xD;&#xA;   IN (&#xD;&#xA;     SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN WITH(NOLOCK)&#xD;&#xA;       WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID&#xD;&#xA;    )&#xD;&#xA;  AND isnull(EMPDTL.ORG_ID,0) = CASE WHEN @ORGID is Null then isnull(EMPDTL.ORG_ID,0) Else isnull(@OrgId,0) End    &#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PLAN PLN WITH(NOLOCK)&#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_LIFE LIFE WITH(NOLOCK)&#xD;&#xA;   ON LIFE.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN&#xD;&#xA;   (&#xD;&#xA;    select Distinct Person_account_id, Org_id &#xD;&#xA;     from Sgt_person_account_employment_DETAIL PAE WITH(NOLOCK)&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK)&#xD;&#xA;      ON PAE.PERSON_EMPLOYMENT_DTL_ID =  PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK)&#xD;&#xA;      ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;   ) EMPDTL&#xD;&#xA;   ON ACC.PERSON_ACCOUNT_ID = EMPDTL.PERSON_ACCOUNT_ID&#xD;&#xA;    --pir 8076 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID &#xD;&#xA;  LEFT JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.plan_id = APPPLAN.PLAN_ID --Added 8076&#xD;&#xA;  --end&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  --end&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='TGRP')&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  --AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  --AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  -- (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;  -- FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;  -- WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  -- AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  -- ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  --)&#xD;&#xA;  --AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  --AND PAS.PAYEE_ACCOUNT_STATUS_ID IS NULL&#xD;&#xA;  --END&#xD;&#xA;  AND PLN.BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND LIFE_INSURANCE_TYPE_VALUE ='REME'&#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  and PLN.PLAN_ID &#xD;&#xA;   IN (&#xD;&#xA;     SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN WITH(NOLOCK)&#xD;&#xA;       WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID&#xD;&#xA;    )&#xD;&#xA;  AND isnull(EMPDTL.ORG_ID,0) = CASE WHEN @ORGID is Null then isnull(EMPDTL.ORG_ID,0) Else isnull(@OrgId,0) End&#xD;&#xA;  --AND BENAPP.PLAN_ID &lt;&gt; 23&#xD;&#xA;  AND isnull(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y' -- Added 8076   &#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PLAN PLN WITH(NOLOCK)&#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN&#xD;&#xA;   (&#xD;&#xA;    select Distinct Person_account_id, Org_id &#xD;&#xA;     from Sgt_person_account_employment_DETAIL PAE WITH(NOLOCK)&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT_DETAIL PED  WITH(NOLOCK)&#xD;&#xA;      ON PAE.PERSON_EMPLOYMENT_DTL_ID =  PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK)&#xD;&#xA;      ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;   ) EMPDTL&#xD;&#xA;   ON ACC.PERSON_ACCOUNT_ID = EMPDTL.PERSON_ACCOUNT_ID&#xD;&#xA;    --pir 8076 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID &#xD;&#xA;  LEFT JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.plan_id = APPPLAN.PLAN_ID --Added 8076&#xD;&#xA;  --end&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT_STATUS PAS  WITH(NOLOCK)&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  --end&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='TGRP')&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  --AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  --AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  -- (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;  -- FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;  -- WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  -- AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  -- ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  --)&#xD;&#xA;  --AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  --AND PAS.PAYEE_ACCOUNT_STATUS_ID IS NULL&#xD;&#xA;  --END&#xD;&#xA;  AND PLN.BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND ((VISION_INSURANCE_TYPE_VALUE ='RETR'&#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (VISION_INSURANCE_TYPE_VALUE ='COBR'&#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA;  and FROM_PERSON_ACCOUNT_ID is null  &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PLN.PLAN_ID =17&#xD;&#xA;  and PLN.PLAN_ID &#xD;&#xA;   IN (&#xD;&#xA;     SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN WITH(NOLOCK)&#xD;&#xA;       WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID&#xD;&#xA;    )&#xD;&#xA;  AND isnull(EMPDTL.ORG_ID,0) = CASE WHEN @ORGID is Null then isnull(EMPDTL.ORG_ID,0) Else isnull(@OrgId,0) End &#xD;&#xA;  --AND BENAPP.PLAN_ID &lt;&gt; 23 &#xD;&#xA;  AND isnull(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y' --Added 8076  &#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT ACC WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PLAN PLN WITH(NOLOCK)&#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION IBS WITH(NOLOCK)&#xD;&#xA;   ON IBS.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN&#xD;&#xA;   (&#xD;&#xA;    select Distinct Person_account_id, Org_id &#xD;&#xA;     from Sgt_person_account_employment_DETAIL PAE WITH(NOLOCK)&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK)&#xD;&#xA;      ON PAE.PERSON_EMPLOYMENT_DTL_ID =  PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK)&#xD;&#xA;      ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;   ) EMPDTL&#xD;&#xA;   ON ACC.PERSON_ACCOUNT_ID = EMPDTL.PERSON_ACCOUNT_ID&#xD;&#xA;  --pir 8076 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BENAPP WITH(NOLOCK) ON BENAPP.BENEFIT_APPLICATION_ID= PA.APPLICATION_ID &#xD;&#xA;  LEFT JOIN SGT_PLAN APPPLAN WITH(NOLOCK) ON BENAPP.plan_id = APPPLAN.PLAN_ID --Added 8076&#xD;&#xA;  --end&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  LEFT JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  --end&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='TGRP')&#xD;&#xA;  --pir 7992 start&#xD;&#xA;  --AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  --AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  -- (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;  -- FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;  -- WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  -- AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  -- ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  --)&#xD;&#xA;  --AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  --AND PAS.PAYEE_ACCOUNT_STATUS_ID IS NULL&#xD;&#xA;  --END&#xD;&#xA;  AND PLN.BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PLN.PLAN_ID = 15&#xD;&#xA;  AND IBS.IBS_FLAG = 'Y' &#xD;&#xA;  AND IBS.IBS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  and PLN.PLAN_ID &#xD;&#xA;   IN (&#xD;&#xA;     SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN WITH(NOLOCK)&#xD;&#xA;       WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID&#xD;&#xA;    )&#xD;&#xA;  AND isnull(EMPDTL.ORG_ID,0) = CASE WHEN @ORGID is Null then isnull(EMPDTL.ORG_ID,0) Else isnull(@OrgId,0) End&#xD;&#xA;  --AND BENAPP.PLAN_ID &lt;&gt; 23&#xD;&#xA;  AND isnull(APPPLAN.INCLUDE_IN_RETIREE_ANNUAL_STATEMENT_FLAG,'N') = 'Y' --Added 8076&#xD;&#xA;) AS PAYEE&#xD;&#xA;--PIR 12257 - don't select payees having only one address with UNDELIVERABLE_ADDRESS as 'Y'&#xD;&#xA; INNER JOIN SGT_PERSON_ADDRESS ADDR WITH(NOLOCK)&#xD;&#xA;  ON ADDR.PERSON_ID = PAYEE.PERSON_ID AND ISNULL(ADDR.UNDELIVERABLE_ADDRESS,'N') &lt;&gt; 'Y'&#xD;&#xA;  ORDER BY PERSON_ID">
      <parameters>
        <parameter ID="@BATCHREQUESTID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Insert_into_MAS_Person_Insurance_Retirees" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @BATCHREQUESTTYPE VARCHAR(4)&#xD;&#xA;DECLARE @PERSON_ID INT&#xD;&#xA;Declare @EFFECTIVE_DATE datetime&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;select @BATCHREQUESTTYPE =  BATCH_REQUEST_TYPE_VALUE,&#xD;&#xA;  @EFFECTIVE_DATE = STATEMENT_EFFECTIVE_DATE,&#xD;&#xA;  @PERSON_ID = PERSON_ID&#xD;&#xA;from SGT_MAS_BATCH_REQUEST WITH(NOLOCK)&#xD;&#xA;where MAS_BATCH_REQUEST_ID  = @MAS_BATCH_REQUEST_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_PERSON&#xD;&#xA;(&#xD;&#xA; MAS_SELECTION_ID, FULL_NAME, DATE_OF_BIRTH, GENDER_DESCRIPTION, MARITAL_DESCRIPTION, SPOUSE_FULL_NAME, SPOUSE_DOB, SPOUSE_GENDER_DESCRIPTION, PERSON_EMPL_DETAIL_ID, SEASONAL_MONTHS_DESCRIPTION, ADDR_LINE1, ADDR_LINE2, ADDR_CITY, ADDR_STATE_DESCRIPTION, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, ADDR_COUNTRY_DESCRIPTION, ZIPCODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE, IS_PERSON_MARRIED, IS_DEFERRED_ENROLLED, IS_HEALTH_ENROLLED, IS_LIFE_ENROLLED, IS_DENTAL_ENROLLED, IS_VISION_ENROLLED, IS_LTC_ENROLLED, IS_EAP_ENROLLED, IS_FLEX_ENROLLED, HEALTH_LEVEL_OF_COVERAGE, DENTAL_LEVEL_OF_COVERAGE, VISION_LEVEL_OF_COVERAGE, LTC_LEVEL_OF_COVERAGE, LTC_INSURANCE_TYPE, LTC_SPOUSE_LEVEL_OF_COVERAGE, EAP_PROVIDER_NAME, IS_BENEFICIARY_REQUIRED, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ, VESTED_EMPLOYER_SCHEDULE_PERCENTAGE, DC_VESTED_EMPLOYER_SCHEDULE_PERCENTAGE, IS_DB_PLAN_ENROLED, IS_DC_PLAN_ENROLED, IS_457_DEFERRED_ENROLLED, IS_MEDICARE_PART_D_ENROLLED, IS_PAYEE_ACCOUNT_EXIST_FLAG&#xD;&#xA;)&#xD;&#xA;SELECT  DISTINCT MASS.MAS_SELECTION_ID,&#xD;&#xA;ISNULL(PREFIX.DESCRIPTION,'') + ' ' + ISNULL(PER.FIRST_NAME,'') + ' ' + ISNULL(PER.MIDDLE_NAME,'') + ' ' + ISNULL(PER.LAST_NAME,'') + ' ' + ISNULL(SUFFIX.DESCRIPTION,'') AS FULLNAME ,&#xD;&#xA;PER.DATE_OF_BIRTH, &#xD;&#xA;GENDERCODE.DESCRIPTION AS 'GENDER DESCRIPTION',&#xD;&#xA;MARITALSTATUS.DESCRIPTION 'MARITAL_DESCRIPTION',&#xD;&#xA;ISNULL(BENPREFIX.DESCRIPTION,'') + ' ' +ISNULL(CONTACTPER.FIRST_NAME,'') + ' ' + ISNULL(CONTACTPER.MIDDLE_NAME,'') + ' ' + ISNULL(CONTACTPER.LAST_NAME,'') + ' ' + ISNULL(BENSUFFIX.DESCRIPTION,'')AS SPOUSE_FULL_NAME ,&#xD;&#xA;CONTACTPER.DATE_OF_BIRTH AS 'SPOUSE_DOB',&#xD;&#xA;SPOUGENDER.DESCRIPTION AS 'SPOUSE_GENDER_DESCRIPTION',&#xD;&#xA;null  AS 'PERSON_EMPL_DETAIL_ID',&#xD;&#xA;--EMPDET.SEASONAL_VALUE, ----NOT NEEDED&#xD;&#xA;null as  'SEASONAL_MONTHS_DESCRIPTION',&#xD;&#xA;isnull(PERADDR.ADDR_LINE_1,' ') as 'ADDR_LINE1',&#xD;&#xA;isnull(PERADDR.ADDR_LINE_2,'') as 'ADDR_LINE2',&#xD;&#xA;isnull(PERADDR.ADDR_CITY,' ' ) as 'ADDR_CITY',&#xD;&#xA;isnull(ADDRES.DESCRIPTION,' ' ) as 'ADDR_STATE_DESCRIPTION',&#xD;&#xA;isnull(PERADDR.ADDR_COUNTRY_ID,151 ) as 'ADDR_COUNTRY_ID',&#xD;&#xA;isnull(PERADDR.ADDR_COUNTRY_VALUE,' ' ) as 'ADDR_COUNTRY_VALUE',&#xD;&#xA;isnull(CON.DESCRIPTION,' ' ) as 'COUNTRY DESCRIPTION',&#xD;&#xA;isnull(PERADDR.ADDR_ZIP_CODE,'' )+'-'+ ISNULL(PERADDR.ADDR_ZIP_4_CODE,'') as 'ZIPCODE',&#xD;&#xA;isnull(PERADDR.FOREIGN_PROVINCE,' ' ) as 'FOREIGN_PROVINCE',&#xD;&#xA;isnull(PERADDR.FOREIGN_POSTAL_CODE,' ' ) as 'FOREIGN_POSTAL_CODE',&#xD;&#xA;CASE WHEN PER.MARITAL_STATUS_VALUE='MRID' THEN 'Y' ELSE 'N' END AS IS_PERSON_MARRIED,&#xD;&#xA;--CASE WHEN ISNULL(DEF1.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y'&#xD;&#xA;--WHEN ISNULL(DEF2.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END IS_DEFERRED_ENROLLED,&#xD;&#xA;CASE WHEN ISNULL(DEF1.PERSON_ACCOUNT_ID,0) &gt;0 THEN &#xD;&#xA;&#x9;CASE WHEN DEF1.START_DATE &gt; @EFFECTIVE_DATE THEN 'N' ELSE 'Y' END&#xD;&#xA;&#x9;&#x9;WHEN ISNULL(DEF2.PERSON_ACCOUNT_ID,0) &gt;0 THEN &#xD;&#xA;&#x9;&#x9;&#x9;CASE WHEN DEF2.START_DATE &gt; @EFFECTIVE_DATE THEN 'N' ELSE 'Y' END&#xD;&#xA;&#x9;ELSE 'N' END IS_DEFERRED_ENROLLED,&#xD;&#xA;--CASE WHEN ISNULL(HEALTH.PERSON_ACCOUNT_ID,0) &gt;0  THEN 'Y' ELSE 'N' END  AS IS_HEALTH_ENROLLED ,&#xD;&#xA;CASE WHEN ISNULL(HEALTH.PERSON_ACCOUNT_ID,0) &gt;0  THEN &#xD;&#xA;&#x9;CASE WHEN HEALTH.START_DATE &gt; @EFFECTIVE_DATE OR &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;( &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT ISNULL(SUM(PAID_PREMIUM_AMOUNT),0.00) as PAID_PREMIUM_AMOUNT&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM DBO.SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE YEAR(EFFECTIVE_DATE) = YEAR(@EFFECTIVE_DATE) AND &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;PERSON_ACCOUNT_ID = HEALTH.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND TRANSACTION_TYPE_VALUE IN ('IBSP')&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;) = 0&#xD;&#xA;&#x9;) THEN 'N' ELSE 'Y' END&#xD;&#xA;&#x9;&#x9;ELSE 'N' END AS IS_HEALTH_ENROLLED,&#xD;&#xA;--CASE WHEN ISNULL(LIFE.PERSON_ACCOUNT_ID,0) &gt;0  THEN 'Y' ELSE 'N' END  AS IS_LIFE_ENROLLED,&#xD;&#xA;CASE WHEN ISNULL(LIFE.PERSON_ACCOUNT_ID,0) &gt;0  THEN &#xD;&#xA;&#x9;CASE WHEN LIFE.START_DATE &gt; @EFFECTIVE_DATE OR &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;( &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT ISNULL(SUM(PAID_PREMIUM_AMOUNT),0.00) as PAID_PREMIUM_AMOUNT&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM DBO.SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE YEAR(EFFECTIVE_DATE) = YEAR(@EFFECTIVE_DATE) AND &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;PERSON_ACCOUNT_ID = LIFE.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND TRANSACTION_TYPE_VALUE IN ('IBSP')&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;) = 0&#xD;&#xA;&#x9;) THEN 'N' ELSE 'Y' END&#xD;&#xA;&#x9;&#x9;ELSE 'N' END as IS_LIFE_ENROLLED,&#xD;&#xA;--CASE WHEN ISNULL(DENTAL.PERSON_ACCOUNT_ID,0) &gt;0  THEN 'Y' ELSE 'N' END AS IS_DENTAL_ENROLLED,&#xD;&#xA;CASE WHEN ISNULL(DENTAL.PERSON_ACCOUNT_ID,0) &gt;0  THEN &#xD;&#xA;&#x9;CASE WHEN DENTAL.START_DATE &gt; @EFFECTIVE_DATE OR &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;( &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT ISNULL(SUM(PAID_PREMIUM_AMOUNT),0.00) as PAID_PREMIUM_AMOUNT&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM DBO.SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE YEAR(EFFECTIVE_DATE) = YEAR(@EFFECTIVE_DATE) AND &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;PERSON_ACCOUNT_ID = DENTAL.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND TRANSACTION_TYPE_VALUE IN ('IBSP')&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;) = 0&#xD;&#xA;&#x9;) THEN 'N' ELSE 'Y' END&#xD;&#xA;&#x9;&#x9;ELSE 'N' END as IS_DENTAL_ENROLLED,&#xD;&#xA;--CASE WHEN ISNULL(VISION.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END AS IS_VISION_ENROLLED,&#xD;&#xA;CASE WHEN ISNULL(VISION.PERSON_ACCOUNT_ID,0) &gt;0  THEN &#xD;&#xA;&#x9;CASE WHEN VISION.START_DATE &gt; @EFFECTIVE_DATE OR &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;( &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT ISNULL(SUM(PAID_PREMIUM_AMOUNT),0.00) as PAID_PREMIUM_AMOUNT&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM DBO.SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE YEAR(EFFECTIVE_DATE) = YEAR(@EFFECTIVE_DATE) AND &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;PERSON_ACCOUNT_ID = VISION.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND TRANSACTION_TYPE_VALUE IN ('IBSP')&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;) = 0&#xD;&#xA;&#x9;) THEN 'N' ELSE 'Y' END&#xD;&#xA;&#x9;&#x9;ELSE 'N' END as IS_VISION_ENROLLED,&#xD;&#xA;--CASE WHEN ISNULL(LTC.PERSON_ACCOUNT_ID,0) &gt;0 THEN 'Y' ELSE 'N' END  AS IS_LTC_ENROLLED,&#xD;&#xA;CASE WHEN ISNULL(LTC.PERSON_ACCOUNT_ID,0) &gt;0  THEN &#xD;&#xA;&#x9;CASE WHEN LTC.START_DATE &gt; @EFFECTIVE_DATE OR &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;( &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT ISNULL(SUM(PAID_PREMIUM_AMOUNT),0.00) as PAID_PREMIUM_AMOUNT&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM DBO.SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE YEAR(EFFECTIVE_DATE) = YEAR(@EFFECTIVE_DATE) AND &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;PERSON_ACCOUNT_ID = LTC.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND TRANSACTION_TYPE_VALUE IN ('IBSP')&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;) = 0&#xD;&#xA;&#x9;) THEN 'N' ELSE 'Y' END&#xD;&#xA;&#x9;&#x9;ELSE 'N' END as IS_LTC_ENROLLED,&#xD;&#xA;'N' AS IS_EAP_ENROLLED,&#xD;&#xA;'N' AS IS_FLEX_ENROLLED,&#xD;&#xA;-- add similar line here to include medicare part d plan and include the person account table in join&#xD;&#xA;(&#xD;&#xA;SELECT top 1 COV_REF.CLIENT_DESCRIPTION from SGT_ORG_PLAN_GROUP_HEALTH_MEDICARE_PART_D_COVERAGE_REF COV_REF(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV(NOLOCK) ON COV_REF.COVERAGE_CODE = GHDV.COVERAGE_CODE&#xD;&#xA; WHERE GHDV.PERSON_ACCOUNT_ID = HEALTH.PERSON_ACCOUNT_ID AND HEALTH.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA; AND ((GHDV.HEALTH_INSURANCE_TYPE_VALUE IN('RT12') &#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (GHDV.HEALTH_INSURANCE_TYPE_VALUE IN('NS12','ST12') &#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))   &#xD;&#xA;) AS 'HEALTH_LEVEL_OF_COVERAGE',&#xD;&#xA;--&#xD;&#xA;--(SELECT TOP 1 COV_REF.CLIENT_DESCRIPTION FROM SGT_ORG_PLAN_HEALTH_MEDICARE_PART_D_RATE RATE(NOLOCK)&#xD;&#xA;--INNER JOIN SGT_ORG_PLAN_GROUP_HEALTH_MEDICARE_PART_D_COVERAGE_REF COV_REF(NOLOCK) ON &#xD;&#xA;--COV_REF.ORG_PLAN_GROUP_HEALTH_MEDICARE_PART_D_COVERAGE_REF_ID=RATE.ORG_PLAN_GROUP_HEALTH_MEDICARE_PART_D_COVERAGE_REF_ID&#xD;&#xA;--INNER JOIN SGT_ORG_PLAN_GROUP_HEALTH_MEDICARE_PART_D_RATE_REF RATE_REF(NOLOCK) ON &#xD;&#xA;--COV_REF.ORG_PLAN_GROUP_HEALTH_MEDICARE_PART_D_RATE_REF_ID=RATE_REF.ORG_PLAN_GROUP_HEALTH_MEDICARE_PART_D_RATE_REF_ID &#xD;&#xA;-- INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV(NOLOCK) ON RATE.ORG_PLAN_GROUP_HEALTH_MEDICARE_PART_D_COVERAGE_REF_ID = GHDV.COVERAGE_CODE&#xD;&#xA;-- WHERE GHDV.PERSON_ACCOUNT_ID = HEALTH.PERSON_ACCOUNT_ID AND GHDV.COBRA_TYPE_VALUE IS NULL AND &#xD;&#xA;--GHDV.HEALTH_INSURANCE_TYPE_VALUE = 'RT09'&#xD;&#xA;--) AS 'MERICARE LEVEL OF COVERAGE',&#xD;&#xA;(SELECT CV.DESCRIPTION FROM  SGT_PERSON_ACCOUNT_GHDV DENTALGHDV(NOLOCK)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON CV.CODE_ID=DENTALGHDV.LEVEL_OF_COVERAGE_ID AND CV.CODE_VALUE=DENTALGHDV.LEVEL_OF_COVERAGE_VALUE&#xD;&#xA; WHERE DENTALGHDV.PERSON_ACCOUNT_ID = DENTAL.PERSON_ACCOUNT_ID AND DENTAL.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND&#xD;&#xA;    ((DENTALGHDV.COBRA_TYPE_VALUE IS NULL AND &#xD;&#xA;    DENTALGHDV.DENTAL_INSURANCE_TYPE_VALUE = 'RT16') OR (DENTALGHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC') AND &#xD;&#xA;    DENTALGHDV.DENTAL_INSURANCE_TYPE_VALUE = 'CB16'))&#xD;&#xA;) AS 'DENTAL_LEVEL_OF_COVERAGE',&#xD;&#xA;&#xD;&#xA;(SELECT CV.DESCRIPTION FROM SGT_PERSON_ACCOUNT_GHDV VISIONGHDV(NOLOCK)&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON CV.CODE_ID=VISIONGHDV.LEVEL_OF_COVERAGE_ID AND CV.CODE_VALUE=VISIONGHDV.LEVEL_OF_COVERAGE_VALUE&#xD;&#xA; WHERE VISIONGHDV.PERSON_ACCOUNT_ID = VISION.PERSON_ACCOUNT_ID AND VISION.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND&#xD;&#xA;    ((VISIONGHDV.COBRA_TYPE_VALUE IS NULL AND &#xD;&#xA;    VISIONGHDV.VISION_INSURANCE_TYPE_VALUE = 'RETR') OR (VISIONGHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC') AND &#xD;&#xA;    VISIONGHDV.VISION_INSURANCE_TYPE_VALUE = 'COBR'))&#xD;&#xA;) AS 'VISION_LEVEL_OF_COVERAGE',&#xD;&#xA;&#xD;&#xA;(&#xD;&#xA;Select top 1 COD.DESCRIPTION from SGT_PERSON_ACCOUNT_LTC_OPTION(NOLOCK)LTCOPT&#xD;&#xA;INNER JOIN SGS_CODE_VALUE(NOLOCK) COD on COD.CODE_VALUE=LTCOPT.LEVEL_OF_COVERAGE_VALUE AND COD.CODE_ID=LTCOPT.LEVEL_OF_COVERAGE_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION(NOLOCK) PAY on paY.PERSON_ACCOUNT_ID=LTC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE 1=(CASE WHEN PAY.PERSON_ACCOUNT_ID IS NOT NULL THEN CASE ISNULL(PAY.IBS_FLAG,'N') WHEN 'Y' THEN 2 ELSE 1 END ELSE 1 END)&#xD;&#xA;and  LTCOPT.PERSON_ACCOUNT_ID= LTC.PERSON_ACCOUNT_ID AND LTC.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;AND LTC_RELATIONSHIP_VALUE='MEBR' AND LTCOPT.EFFECTIVE_START_DATE IS NOT NULL&#xD;&#xA;) AS 'LTC_LEVEL_OF_COVERAGE',&#xD;&#xA;(Select top 1 COD.DESCRIPTION from SGT_PERSON_ACCOUNT_LTC_OPTION(NOLOCK)LTCOPT&#xD;&#xA;INNER JOIN SGS_CODE_VALUE(NOLOCK) COD on COD.CODE_VALUE=LTCOPT.LTC_INSURANCE_TYPE_VALUE  AND COD.CODE_ID=LTCOPT.LTC_INSURANCE_TYPE_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION(NOLOCK) PAY on paY.PERSON_ACCOUNT_ID=LTC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE 1=(CASE WHEN PAY.PERSON_ACCOUNT_ID IS NOT NULL THEN CASE ISNULL(PAY.IBS_FLAG,'N') WHEN 'Y' THEN 2 ELSE 1 END ELSE 1 END)&#xD;&#xA;and  LTCOPT.PERSON_ACCOUNT_ID= LTC.PERSON_ACCOUNT_ID AND LTC.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;AND LTC_RELATIONSHIP_VALUE='MEBR' AND LTCOPT.EFFECTIVE_START_DATE IS NOT NULL) AS 'LTC_Insurance_Type' ,&#xD;&#xA;&#xD;&#xA;(&#xD;&#xA;Select top 1 COD.DESCRIPTION from SGT_PERSON_ACCOUNT_LTC_OPTION(NOLOCK)LTCOPT&#xD;&#xA;INNER JOIN SGS_CODE_VALUE(NOLOCK) COD on COD.CODE_VALUE=LTCOPT.LEVEL_OF_COVERAGE_VALUE AND COD.CODE_ID=LTCOPT.LEVEL_OF_COVERAGE_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION(NOLOCK) PAY on paY.PERSON_ACCOUNT_ID=LTC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE 1=(CASE WHEN PAY.PERSON_ACCOUNT_ID IS NOT NULL THEN CASE ISNULL(PAY.IBS_FLAG,'N') WHEN 'Y' THEN 2 ELSE 1 END ELSE 1 END)&#xD;&#xA;and  LTCOPT.PERSON_ACCOUNT_ID= LTC.PERSON_ACCOUNT_ID AND LTC.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;AND LTC_RELATIONSHIP_VALUE='SPSE' AND LTCOPT.EFFECTIVE_START_DATE IS NOT NULL&#xD;&#xA;) AS 'LTC_spouse_LEVEL_OF_COVERAGE',&#xD;&#xA;NULL AS EAP_PROVIDER_NAME,&#xD;&#xA;--&#xD;&#xA;--,(Select COD.DESCRIPTION from SGT_PERSON_ACCOUNT_LTC_OPTION(NOLOCK)LTCOPT&#xD;&#xA;--INNER JOIN SGS_CODE_VALUE(NOLOCK) COD on COD.CODE_VALUE=LTCOPT.LTC_INSURANCE_TYPE_VALUE  AND COD.CODE_ID=LTCOPT.LTC_INSURANCE_TYPE_ID&#xD;&#xA;--LEFT OUTER JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION(NOLOCK) PAY on paY.PERSON_ACCOUNT_ID=LTC.PERSON_ACCOUNT_ID&#xD;&#xA;-- WHERE 1=(CASE WHEN PAY.PERSON_ACCOUNT_ID IS NOT NULL THEN CASE ISNULL(PAY.IBS_FLAG,'N') WHEN 'Y' THEN 2 ELSE 1 END ELSE 1 END)&#xD;&#xA;--and  LTCOPT.PERSON_ACCOUNT_ID= LTC.PERSON_ACCOUNT_ID&#xD;&#xA;--AND LTC_RELATIONSHIP_VALUE='SPSE' AND LTCOPT.EFFECTIVE_START_DATE IS NOT NULL) AS 'LTC SPOUSE INSURANCE TYPE'&#xD;&#xA;--&#xD;&#xA;--, EAPORG.ORG_NAME AS 'EAP PROVIDER NAME'&#xD;&#xA;per.BENEFICIARY_REQUIRED_FLAG as IS_BENEFICIARY_REQUIRED,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA;getdate() as CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA;getdate() as MODIFIED_DATE,&#xD;&#xA;0 as UPDATE_SEQ,&#xD;&#xA;0.00 as VESTED_EMPLOYER_SCHEDULE_PERCENTAGE,&#xD;&#xA;0.00 as DC_VESTED_EMPLOYER_SCHEDULE_PERCENTAGE,&#xD;&#xA;case when exists(&#xD;&#xA;(select top 1 '0' from sgt_person_account pac WITH(NOLOCK)&#xD;&#xA;inner join sgt_plan pl WITH(NOLOCK) on pac.plan_id = pl.plan_id &#xD;&#xA;where RETIREMENT_TYPE_VALUE  = 'DB' and pac.person_id = per.person_id  )) then 'Y' Else 'N' End as IS_DB_PLAN_ENROLED,&#xD;&#xA;case when exists(&#xD;&#xA;(select top 1 '0' from sgt_person_account pac WITH(NOLOCK) &#xD;&#xA;inner join sgt_plan pl WITH(NOLOCK) on pac.plan_id = pl.plan_id &#xD;&#xA;where RETIREMENT_TYPE_VALUE  = 'DC' and pac.person_id = per.person_id  )) then 'Y' Else 'N' End as IS_DC_PLAN_ENROLED,&#xD;&#xA;NULL AS IS_457_DEFERRED_ENROLLED,&#xD;&#xA;--NULL AS IS_MEDICARE_PART_D_ENROLLED,&#xD;&#xA;&#xD;&#xA;--PIR 16868 Medicare start&#xD;&#xA;CASE WHEN ISNULL(MEDICARE.PERSON_ACCOUNT_ID,0) &gt;0  THEN &#xD;&#xA;&#x9;CASE WHEN MEDICARE.START_DATE &gt; @EFFECTIVE_DATE OR &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT  ISNULL(SUM(PAID_PREMIUM_AMOUNT),0.00) as PAID_PREMIUM_AMOUNT&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM DBO.SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION CONT WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY MED WITH(NOLOCK) on MED.PERSON_ACCOUNT_ID = CONT.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE YEAR(EFFECTIVE_DATE) = YEAR(@EFFECTIVE_DATE)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;and MED.END_DATE is NULL&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;and MED.MEMBER_PERSON_ID = MEDICARE.MEMBER_PERSON_ID&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;) = 0&#xD;&#xA;&#x9;) THEN 'N' ELSE 'Y' END&#xD;&#xA;&#x9;&#x9;ELSE 'N' END AS IS_MEDICARE_PART_D_ENROLLED,&#xD;&#xA;&#xD;&#xA;--PIR 16868 Medicare end&#xD;&#xA;null as  IS_PAYEE_ACCOUNT_EXIST_FLAG&#xD;&#xA;--into #temp&#xD;&#xA;FROM SGT_PERSON(NOLOCK) PER&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) GENDERCODE ON GENDERCODE.CODE_ID=PER.GENDER_ID AND GENDERCODE.CODE_VALUE=PER.GENDER_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) MARITALSTATUS ON MARITALSTATUS.CODE_ID=PER.MARITAL_STATUS_ID &#xD;&#xA;AND MARITALSTATUS.CODE_VALUE=PER.MARITAL_STATUS_VALUE&#xD;&#xA;--INNER JOIN SGT_PERSON_EMPLOYMENT(NOLOCK) EMP ON EMP.PERSON_ID=PER.PERSON_ID&#xD;&#xA;--INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL(NOLOCK) EMPDET ON EMPDET.PERSON_EMPLOYMENT_ID=EMP.PERSON_EMPLOYMENT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_CONTACT(NOLOCK) CONTACT ON PER.PERSON_ID=CONTACT.PERSON_ID AND&#xD;&#xA; CONTACT.RELATIONSHIP_VALUE='SPOU' AND CONTACT.STATUS_VALUE = 'ACT'&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON(NOLOCK) CONTACTPER ON CONTACTPER.PERSON_ID=CONTACT.CONTACT_PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) SPOUGENDER ON SPOUGENDER.CODE_ID=CONTACTPER.GENDER_ID AND &#xD;&#xA;SPOUGENDER.CODE_VALUE=CONTACTPER.GENDER_VALUE&#xD;&#xA;--LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) SEASONAL ON SEASONAL.CODE_ID=EMPDET.SEASONAL_ID AND &#xD;&#xA;--SEASONAL.CODE_VALUE=EMPDET.SEASONAL_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) PREFIX on PREFIX.CODE_ID=PER.NAME_PREFIX_ID&#xD;&#xA;and prefix.code_value=PER.NAME_PREFIX_VALUE&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) SUFFIX on SUFFIX.CODE_ID=PER.NAME_SUFFIX_ID&#xD;&#xA;and SUFFIX.code_value=PER.NAME_SUFFIX_VALUE&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) BENPREFIX on BENPREFIX.CODE_ID=CONTACTPER.NAME_PREFIX_ID&#xD;&#xA;and BENprefix.code_value=CONTACTPER.NAME_PREFIX_VALUE&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) BENSUFFIX on BENSUFFIX.CODE_ID=CONTACTPER.NAME_SUFFIX_ID&#xD;&#xA;and BENSUFFIX.code_value=CONTACTPER.NAME_SUFFIX_VALUE&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA;(SELECT  P.PERSON_ID, &#xD;&#xA;      PA.ADDR_LINE_1 as ADDR_LINE_1,&#xD;&#xA;  PA.ADDR_LINE_2 as ADDR_LINE_2,&#xD;&#xA;  PA.ADDR_CITY as ADDR_CITY,&#xD;&#xA;  PA.ADDR_STATE_ID as ADDR_STATE_ID,&#xD;&#xA;  PA.ADDR_STATE_VALUE as ADDR_STATE_VALUE,&#xD;&#xA;  PA.ADDR_COUNTRY_ID as ADDR_COUNTRY_ID,&#xD;&#xA;  PA.ADDR_COUNTRY_VALUE as ADDR_COUNTRY_VALUE,&#xD;&#xA;  PA.ADDR_ZIP_CODE as ADDR_ZIP_CODE,&#xD;&#xA;  PA.ADDR_ZIP_4_CODE as ADDR_ZIP_4_CODE,&#xD;&#xA;  PA.FOREIGN_PROVINCE as FOREIGN_PROVINCE,&#xD;&#xA;  PA.FOREIGN_POSTAL_CODE as FOREIGN_POSTAL_CODE,&#xD;&#xA;  PA.UNDELIVERABLE_ADDRESS as UNDELIVERABLE,&#xD;&#xA;  ROW_NUMBER() OVER ( PARTITION BY p.person_id ORDER BY isnull(pa.end_date, '99991231') DESC) as ROWNUMBER  &#xD;&#xA;  FROM SGT_PERSON(NOLOCK) P &#xD;&#xA;   LEFT OUTER JOIN SGT_PERSON_ADDRESS(NOLOCK) PA   ON P.PERSON_ID  = PA.PERSON_ID&#xD;&#xA;         ) AS PERADDR&#xD;&#xA;           ON PERADDR.PERSON_ID=PER.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) ADDRES ON ADDRES.CODE_ID=PERADDR.ADDR_STATE_ID AND &#xD;&#xA;ADDRES.CODE_VALUE=PERADDR.ADDR_STATE_VALUE&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) CON ON CON.CODE_ID=&#xD;&#xA;PERADDR.ADDR_COUNTRY_ID AND CON.CODE_VALUE=PERADDR.ADDR_COUNTRY_VALUE&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT(NOLOCK) DEF1 ON DEF1.PERSON_ID =PER.PERSON_ID AND DEF1.PLAN_ID=19&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT(NOLOCK) DEF2 ON DEF2.PERSON_ID =PER.PERSON_ID AND DEF2.PLAN_ID=8&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN ( SELECT ACCT.* FROM SGT_PERSON_ACCOUNT (NOLOCK) ACCT INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;    ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    --WHERE ACCT.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA; --   AND ((HEALTH_INSURANCE_TYPE_VALUE IN('RT09','RT12') &#xD;&#xA; --     AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA; --     OR (HEALTH_INSURANCE_TYPE_VALUE IN('NS12','ST12') &#xD;&#xA; --      AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA; --   and ACCT.FROM_PERSON_ACCOUNT_ID is null&#xD;&#xA; )  HEALTH ON HEALTH.PERSON_ID =PER.PERSON_ID AND HEALTH.PLAN_ID=12    &#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN (SELECT ACCT.* FROM SGT_PERSON_ACCOUNT(NOLOCK) ACCT INNER JOIN SGT_PERSON_ACCOUNT_LIFE LIFE WITH(NOLOCK)&#xD;&#xA;    ON LIFE.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    --WHERE ACCT.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;    --AND LIFE_INSURANCE_TYPE_VALUE ='REME'&#xD;&#xA;&#x9;) LIFE ON LIFE.PERSON_ID =PER.PERSON_ID AND LIFE.PLAN_ID=13&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN (SELECT ACCT.* FROM SGT_PERSON_ACCOUNT(NOLOCK) ACCT INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;    ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    --WHERE ACCT.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA; --    AND ((DENTAL_INSURANCE_TYPE_VALUE ='RT16'&#xD;&#xA; --      AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA; --      OR (DENTAL_INSURANCE_TYPE_VALUE ='CB16'&#xD;&#xA; --       AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA; --    and ACCT.FROM_PERSON_ACCOUNT_ID is null&#xD;&#xA;&#x9; ) DENTAL ON DENTAL.PERSON_ID =PER.PERSON_ID AND DENTAL.PLAN_ID=16&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN (SELECT ACCT.* FROM SGT_PERSON_ACCOUNT(NOLOCK)  ACCT INNER JOIN SGT_PERSON_ACCOUNT_GHDV GHDV WITH(NOLOCK)&#xD;&#xA;    ON GHDV.PERSON_ACCOUNT_ID = ACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    --WHERE ACCT.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA; --     AND ((VISION_INSURANCE_TYPE_VALUE ='RETR'&#xD;&#xA; --    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA; --    OR (VISION_INSURANCE_TYPE_VALUE ='COBR'&#xD;&#xA; --     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA; --    and ACCT.FROM_PERSON_ACCOUNT_ID is null&#xD;&#xA;&#x9; )VISION ON VISION.PERSON_ID =PER.PERSON_ID AND VISION.PLAN_ID=17&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN (SELECT ACCT.* FROM SGT_PERSON_ACCOUNT(NOLOCK) ACCT INNER JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION IBS  WITH(NOLOCK)&#xD;&#xA;    ON IBS.PERSON_ACCOUNT_ID=ACCT.PERSON_ACCOUNT_ID &#xD;&#xA;    WHERE IBS.IBS_FLAG = 'Y' &#xD;&#xA;&#x9;--AND ACCT.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2'&#xD;&#xA;    AND IBS.IBS_EFFECTIVE_DATE &lt;= @EFFECTIVE_DATE) LTC ON LTC.PERSON_ID =PER.PERSON_ID AND LTC.PLAN_ID=15&#xD;&#xA;&#xD;&#xA;--PIR 16868 Medicare start&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN (select * from (&#xD;&#xA;select ACC.PERSON_ACCOUNT_ID, ACC.[START_DATE], MED.MEMBER_PERSON_ID, ROW_NUMBER() OVER (PARTITION BY MED.MEMBER_PERSON_ID ORDER BY acc.[START_DATE])&#xD;&#xA;AS ROWNUM, acc.PLAN_ID from SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY MED WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT acc WITH(NOLOCK) on acc.PERSON_ACCOUNT_ID = MED.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND MED.[START_DATE] != ISNULL(MED.END_DATE, '99991231') &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND (YEAR(@EFFECTIVE_DATE) BETWEEN YEAR(MED.[START_DATE])  AND YEAR(ISNULL(MED.END_DATE, '99991231'))) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND MED.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;) AS TEMP&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE TEMP.ROWNUM =1) AS MEDICARE ON MEMBER_PERSON_ID = PER.PERSON_ID &#xD;&#xA;&#xD;&#xA;--PIR 16868 Medicare end&#xD;&#xA;&#xD;&#xA;--LEFT OUTER JOIN SGT_PERSON_ACCOUNT(NOLOCK) EAP ON EAP.PERSON_ID =PER.PERSON_ID AND EAP.PLAN_ID=14&#xD;&#xA;--AND EAP.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2'&#xD;&#xA;--LEFT OUTER JOIN SGT_ORGANIZATION(NOLOCK) EAPORG on EAP.PROVIDER_ORG_ID= EAPORG.ORG_ID&#xD;&#xA;&#xD;&#xA;--LEFT OUTER JOIN SGT_PERSON_ACCOUNT(NOLOCK) FLEX ON FLEX.PERSON_ID =PER.PERSON_ID AND FLEX.PLAN_ID=18&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MASS WITH(NOLOCK) ON PER.PERSON_ID =MASS.PERSON_ID&#xD;&#xA;WHERE MASS.MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID&#xD;&#xA;and ROWNUMBER = 1 &#xD;&#xA;AND (UNDELIVERABLE IS NULL OR UNDELIVERABLE = 'N')&#xD;&#xA;--AND ISNULL(MASS.IS_DATA_PULLED_FLAG,'N')='N'  &#xD;&#xA;--ORDER BY PER.PERSON_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_LIFE_OPTION&#xD;&#xA;(&#xD;&#xA;MAS_PERSON_ID,&#xD;&#xA;LEVEL_OF_COVERAGE_VALUE,&#xD;&#xA;LEVEL_OF_COVERAGE,&#xD;&#xA;COVERAGE_AMOUNT,&#xD;&#xA;CREATED_BY,&#xD;&#xA;CREATED_DATE,&#xD;&#xA;MODIFIED_BY,&#xD;&#xA;MODIFIED_DATE,&#xD;&#xA;UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT&#xD;&#xA;MAS_PERSON_ID,&#xD;&#xA;OPT.LEVEL_OF_COVERAGE_VALUE,&#xD;&#xA;COD.DESCRIPTION LEVEL_OF_COVERAGE,&#xD;&#xA;COVERAGE_AMOUNT COVERAGE_AMOUNT,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) CREATED_BY,&#xD;&#xA;GETDATE() CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) MODIFIED_BY,&#xD;&#xA;GETDATE() MODIFIED_DATE,&#xD;&#xA;0 UPDATE_SEQ&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_LIFE_OPTION(NOLOCK) OPT&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT ACC(NOLOCK) ON OPT.PERSON_ACCOUNT_ID= ACC.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE(NOLOCK) COD ON COD.CODE_ID=OPT.LEVEL_OF_COVERAGE_ID AND COD.CODE_VALUE = OPT.LEVEL_OF_COVERAGE_VALUE&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MS WITH(NOLOCK) ON MS.PERSON_ID = ACC.PERSON_ID &#xD;&#xA;INNER JOIN SGT_MAS_PERSON MP WITH(NOLOCK) ON MS.MAS_SELECTION_ID = MP.MAS_SELECTION_ID AND ISNULL(MP.IS_LIFE_ENROLLED,'N') = 'Y'&#xD;&#xA;WHERE @EFFECTIVE_DATE BETWEEN OPT.EFFECTIVE_START_DATE AND  (CASE WHEN OPT.EFFECTIVE_END_DATE IS NULL THEN '99991231' ELSE OPT.EFFECTIVE_END_DATE END)&#xD;&#xA;AND COVERAGE_AMOUNT &gt; 0 AND MS.MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID">
      <parameters>
        <parameter ID="@MAS_BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Insert_into_MAS_Payee_Account" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @BATCHREQUESTTYPE VARCHAR(4)&#xD;&#xA;DECLARE @PERSON_ID INT&#xD;&#xA;Declare @EffectiveDate datetime&#xD;&#xA;Declare @Ctr Int&#xD;&#xA;Declare @OrgId int &#xD;&#xA;Declare @BENEFIT_ACCOUNT_TYPE_VALUE  Varchar(4)&#xD;&#xA;Declare @BENEFIT_OPTION_VALUE Varchar(4)&#xD;&#xA;Declare @BENEFIT_ACCOUNT_SUB_TYPE_VALUE Varchar(4) &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;select @BATCHREQUESTTYPE =  BATCH_REQUEST_TYPE_VALUE,&#xD;&#xA;  @EffectiveDate = STATEMENT_EFFECTIVE_DATE,&#xD;&#xA;  @PERSON_ID = PERSON_ID,&#xD;&#xA;  @OrgId = Org_id,&#xD;&#xA;  @BENEFIT_ACCOUNT_TYPE_VALUE = BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  @BENEFIT_OPTION_VALUE = BENEFIT_OPTION_VALUE,&#xD;&#xA;  @BENEFIT_ACCOUNT_SUB_TYPE_VALUE = BENEFIT_ACCOUNT_SUB_TYPE_VALUE&#xD;&#xA;from SGT_MAS_BATCH_REQUEST WITH(NOLOCK)&#xD;&#xA;where MAS_BATCH_REQUEST_ID  = @MAS_BATCH_REQUEST_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT @Ctr = Count(0) &#xD;&#xA; FROM SGT_MAS_BATCH_REQUEST_PLAN R WITH(NOLOCK)&#xD;&#xA; Inner join sgt_Plan P WITH(NOLOCK) on  R.Plan_id = p.Plan_id&#xD;&#xA; WHERE MAS_BATCH_REQUEST_ID =@MAS_BATCH_REQUEST_ID and Benefit_type_value = 'RETR'&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  SELECT PA.PAYEE_PERSLINK_ID as PERSON_ID,&#xD;&#xA;   CASE WHEN PA.APPLICATION_ID IS not NULL &#xD;&#xA;        THEN BA.PLAN_ID &#xD;&#xA;        ELSE DROA.PLAN_ID END AS PLAN_ID,&#xD;&#xA;  CASE WHEN PA.DRO_APPLICATION_ID &gt;0 THEN DROA.MEMBER_PERSLINK_ID ELSE BA.MEMBER_PERSON_ID END AS MEMBER_PERSON_ID,&#xD;&#xA;  BAC.SSLI_CHANGE_DATE,&#xD;&#xA;  SSLI_AGE,&#xD;&#xA;  BA.UNIFORM_INCOME_FLAG,&#xD;&#xA;  BA.RETIREMENT_ORG_ID,&#xD;&#xA;  PA.BENEFIT_BEGIN_DATE,&#xD;&#xA;  PA.BENEFIT_END_DATE,&#xD;&#xA;  BA.JOINT_ANNUITANT_PERSLINK_ID,&#xD;&#xA;  (BAC.STARTING_TAXABLE_AMOUNT + BAC.STARTING_NONTAXABLE_AMOUNT) AS ACCOUNT_BALANCE,&#xD;&#xA;  PA.PAYEE_ACCOUNT_ID, &#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_SUB_TYPE_ID,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE,&#xD;&#xA;  PA.BENEFIT_OPTION_ID,&#xD;&#xA;  PA.BENEFIT_OPTION_VALUE,&#xD;&#xA;  PA.ACCOUNT_RELATION_ID,&#xD;&#xA;  PA.ACCOUNT_RELATION_VALUE,&#xD;&#xA;  PA.FAMILY_RELATION_ID,&#xD;&#xA;  PA.FAMILY_RELATION_VALUE,&#xD;&#xA;  PA.MINIMUM_GUARANTEE_AMOUNT,&#xD;&#xA;  PA.NONTAXABLE_BEGINNING_BALANCE,&#xD;&#xA;  BA.RHIC_OPTION_ID AS RHIC_BENEFIT_OPTION_ID,&#xD;&#xA;  BA.RHIC_OPTION_VALUE AS RHIC_BENEFIT_OPTION_VALUE, &#xD;&#xA;  PA.TERM_CERTAIN_END_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA;  getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA;  getdate() as MODIFIED_DATE,&#xD;&#xA;  0 as UPDATE_SEQ&#xD;&#xA;  ,PAR.PERSON_ACCOUNT_ID&#xD;&#xA;  ,CVTIER.DESCRIPTION&#xD;&#xA;  INTO #TEMP_TGRP&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA  WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_BENEFIT_ACCOUNT BAC WITH(NOLOCK)&#xD;&#xA;    ON PA.BENEFIT_ACCOUNT_ID=BAC.BENEFIT_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK)&#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;     INNER JOIN &#xD;&#xA;    (SELECT PERSON_ID FROM SGT_MAS_SELECTION(NOLOCK) &#xD;&#xA;      WHERE MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID AND&#xD;&#xA;      ISNULL(IS_DATA_PULLED_FLAG,'N')='N'&#xD;&#xA;    ) AS MAS&#xD;&#xA;   ON MAS.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;   INNER JOIN SGT_MAS_BATCH_REQUEST SCH WITH(NOLOCK)&#xD;&#xA;      ON MAS_BATCH_REQUEST_ID =@MAS_BATCH_REQUEST_ID &#xD;&#xA;   INNER JOIN SGT_PERSON PER  WITH(NOLOCK)&#xD;&#xA;    ON PER.PERSON_ID=PA.PAYEE_PERSLINK_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK)&#xD;&#xA;    ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DROA WITH(NOLOCK)&#xD;&#xA;    ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA;   LEFT OUTER JOIN &#xD;&#xA;    (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WITH(NOLOCK)&#xD;&#xA;     WHERE YEAR(PAYMENT_DATE) = YEAR(@EffectiveDate) &#xD;&#xA;     AND STATUS_VALUE IN ('OUST','PRCD')&#xD;&#xA;    ) AS PHH&#xD;&#xA;    ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;    LEFT JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) ON BAPA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID&#xD;&#xA;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_RETIREMENT PAR WITH(NOLOCK) ON PAR.PERSON_ACCOUNT_ID =  CASE WHEN PA.APPLICATION_ID IS not NULL THEN  BAPA.PERSON_ACCOUNT_ID ELSE DROA.PERSON_ACCOUNT_ID END&#xD;&#xA;&#x9;LEFT JOIN SGS_CODE_VALUE CVTIER WITH(NOLOCK) ON CVTIER.CODE_ID = PAR.BENEFIT_TIER_ID  AND CVTIER.CODE_VALUE = PAR.BENEFIT_TIER_VALUE&#xD;&#xA;  WHERE CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;   and SCH.BATCH_REQUEST_TYPE_VALUE ='TGRP'&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @EffectiveDate&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @EffectiveDate)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE NOT IN('REFD','AURD')  &#xD;&#xA;   AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;   AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N'&#xD;&#xA;   AND PER.PERSON_ID=(CASE WHEN SCH.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN SCH.PERSON_ID &#xD;&#xA;        ELSE PER.PERSON_ID END&#xD;&#xA;         )&#xD;&#xA;   AND CASE WHEN PA.APPLICATION_ID IS not NULL &#xD;&#xA;        THEN BA.PLAN_ID &#xD;&#xA;        ELSE DROA.PLAN_ID END&#xD;&#xA;          &#xD;&#xA;      IN (&#xD;&#xA;        Select  Case When @Ctr &gt; 0 then R.Plan_id Else P.Plan_id End&#xD;&#xA;         from Sgt_plan P WITH(NOLOCK) left Outer Join &#xD;&#xA;         SGT_MAS_BATCH_REQUEST_PLAN R WITH(NOLOCK) on P.Plan_id = R.Plan_id and MAS_BATCH_REQUEST_ID =@MAS_BATCH_REQUEST_ID&#xD;&#xA;         WHERE &#xD;&#xA;         Benefit_type_value = 'RETR' and Case When @Ctr &gt; 0 then R.Plan_id Else P.Plan_id End is not null&#xD;&#xA;       )&#xD;&#xA;   AND isnull(BA.RETIREMENT_ORG_ID,0) = CASE WHEN SCH.ORG_ID IS NULL &#xD;&#xA;            THEN isnull(BA.RETIREMENT_ORG_ID,0)&#xD;&#xA;            ELSE SCH.ORG_ID END&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CASE WHEN SCH.BENEFIT_ACCOUNT_TYPE_VALUE IS NULL &#xD;&#xA;            THEN PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;            ELSE SCH.BENEFIT_ACCOUNT_TYPE_VALUE END&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE = CASE WHEN SCH.BENEFIT_OPTION_VALUE IS NULL &#xD;&#xA;            THEN PA.BENEFIT_OPTION_VALUE&#xD;&#xA;            ELSE SCH.BENEFIT_OPTION_VALUE END&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE = CASE WHEN SCH.BENEFIT_ACCOUNT_SUB_TYPE_VALUE IS NULL &#xD;&#xA;            THEN PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE&#xD;&#xA;            ELSE SCH.BENEFIT_ACCOUNT_SUB_TYPE_VALUE END&#xD;&#xA;   AND ((PHH.PAYEE_ACCOUNT_ID IS NULL AND ISNULL(BA.PLAN_ID,DROA.PLAN_ID) IN (7,23)) OR&#xD;&#xA;   (PHH.PAYEE_ACCOUNT_ID IS NOT NULL AND ISNULL(BA.PLAN_ID,DROA.PLAN_ID) NOT IN (7,23)))&#xD;&#xA;&#xD;&#xA; SELECT  PERSON_ID ,&#xD;&#xA;   PLAN_ID,&#xD;&#xA;   MEMBER_PERSON_ID,&#xD;&#xA;   SSLI_CHANGE_DATE,&#xD;&#xA;   SSLI_AGE,&#xD;&#xA;   UNIFORM_INCOME_FLAG,&#xD;&#xA;   RETIREMENT_ORG_ID,&#xD;&#xA;   BENEFIT_BEGIN_DATE,&#xD;&#xA;   BENEFIT_END_DATE,&#xD;&#xA;   JOINT_ANNUITANT_PERSLINK_ID,&#xD;&#xA;   ACCOUNT_BALANCE,&#xD;&#xA;   PAYEE_ACCOUNT_ID,&#xD;&#xA;   BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;   BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;   BENEFIT_ACCOUNT_SUB_TYPE_ID,&#xD;&#xA;   BENEFIT_ACCOUNT_SUB_TYPE_VALUE,&#xD;&#xA;   BENEFIT_OPTION_ID,&#xD;&#xA;   BENEFIT_OPTION_VALUE,&#xD;&#xA;   ACCOUNT_RELATION_ID,&#xD;&#xA;   ACCOUNT_RELATION_VALUE,&#xD;&#xA;   FAMILY_RELATION_ID,&#xD;&#xA;   FAMILY_RELATION_VALUE,&#xD;&#xA;   MINIMUM_GUARANTEE_AMOUNT,&#xD;&#xA;   NONTAXABLE_BEGINNING_BALANCE,&#xD;&#xA;   RHIC_BENEFIT_OPTION_ID,&#xD;&#xA;   RHIC_BENEFIT_OPTION_VALUE,   &#xD;&#xA;   TERM_CERTAIN_END_DATE,&#xD;&#xA;   'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA;   getdate() as CREATED_DATE,&#xD;&#xA;   'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA;   getdate() as MODIFIED_DATE,&#xD;&#xA;   0 as UPDATE_SEQ &#xD;&#xA;   ,PERSON_ACCOUNT_ID&#xD;&#xA;  ,DESCRIPTION&#xD;&#xA;  into #temp&#xD;&#xA; From&#xD;&#xA; (&#xD;&#xA; -- Query for Annual and Individual opions&#xD;&#xA;&#xD;&#xA;  SELECT PA.PAYEE_ACCOUNT_ID, PA.PAYEE_PERSLINK_ID as PERSON_ID,&#xD;&#xA;   CASE WHEN PA.APPLICATION_ID IS not NULL &#xD;&#xA;        THEN BA.PLAN_ID &#xD;&#xA;        ELSE DROA.PLAN_ID END AS PLAN_ID,&#xD;&#xA;  CASE WHEN PA.DRO_APPLICATION_ID &gt;0 THEN DROA.MEMBER_PERSLINK_ID ELSE BA.MEMBER_PERSON_ID END AS MEMBER_PERSON_ID,&#xD;&#xA;  BAC.SSLI_CHANGE_DATE,&#xD;&#xA;  SSLI_AGE,&#xD;&#xA;  BA.UNIFORM_INCOME_FLAG,&#xD;&#xA;  BA.RETIREMENT_ORG_ID,&#xD;&#xA;  PA.BENEFIT_BEGIN_DATE,&#xD;&#xA;  PA.BENEFIT_END_DATE,&#xD;&#xA;  BA.JOINT_ANNUITANT_PERSLINK_ID,&#xD;&#xA;  (BAC.STARTING_TAXABLE_AMOUNT+ BAC.STARTING_NONTAXABLE_AMOUNT) AS ACCOUNT_BALANCE,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_SUB_TYPE_ID,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE,&#xD;&#xA;  PA.BENEFIT_OPTION_ID,&#xD;&#xA;  PA.BENEFIT_OPTION_VALUE,&#xD;&#xA;  PA.ACCOUNT_RELATION_ID,&#xD;&#xA;  PA.ACCOUNT_RELATION_VALUE,&#xD;&#xA;  PA.FAMILY_RELATION_ID,&#xD;&#xA;  PA.FAMILY_RELATION_VALUE,&#xD;&#xA;  PA.MINIMUM_GUARANTEE_AMOUNT,&#xD;&#xA;  PA.NONTAXABLE_BEGINNING_BALANCE,&#xD;&#xA;  BA.RHIC_OPTION_ID AS RHIC_BENEFIT_OPTION_ID,&#xD;&#xA;  BA.RHIC_OPTION_VALUE AS RHIC_BENEFIT_OPTION_VALUE, &#xD;&#xA;  PA.TERM_CERTAIN_END_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA;  getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA;  getdate() as MODIFIED_DATE,&#xD;&#xA;  0 as UPDATE_SEQ&#xD;&#xA;  ,PAR.PERSON_ACCOUNT_ID&#xD;&#xA;  ,CVTIER.DESCRIPTION&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_BENEFIT_ACCOUNT BAC WITH(NOLOCK)&#xD;&#xA;    ON PA.BENEFIT_ACCOUNT_ID=BAC.BENEFIT_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   left JOIN &#xD;&#xA;    (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WITH(NOLOCK)&#xD;&#xA;     WHERE YEAR(PAYMENT_DATE) = YEAR(@EffectiveDate) &#xD;&#xA;     AND STATUS_VALUE IN ('OUST','PRCD')&#xD;&#xA;    ) AS PHH&#xD;&#xA;    ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=PA.PAYEE_PERSLINK_ID&#xD;&#xA;   INNER JOIN &#xD;&#xA;    (SELECT PERSON_ID FROM SGT_MAS_SELECTION(NOLOCK) &#xD;&#xA;      WHERE MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID AND&#xD;&#xA;      ISNULL(IS_DATA_PULLED_FLAG,'N')='N'&#xD;&#xA;    ) AS MAS&#xD;&#xA;   ON MAS.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK)&#xD;&#xA;    ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DROA WITH(NOLOCK)&#xD;&#xA;    ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA;    LEFT JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) ON BAPA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID&#xD;&#xA;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_RETIREMENT PAR WITH(NOLOCK) ON PAR.PERSON_ACCOUNT_ID =  CASE WHEN PA.APPLICATION_ID IS not NULL THEN  BAPA.PERSON_ACCOUNT_ID ELSE DROA.PERSON_ACCOUNT_ID END&#xD;&#xA;&#x9;LEFT JOIN SGS_CODE_VALUE CVTIER WITH(NOLOCK) ON CVTIER.CODE_ID = PAR.BENEFIT_TIER_ID  AND CVTIER.CODE_VALUE = PAR.BENEFIT_TIER_VALUE&#xD;&#xA;  WHERE (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;   AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @EffectiveDate&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @EffectiveDate)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE NOT IN('REFD','AURD')  &#xD;&#xA;   AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;   AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N'&#xD;&#xA;   AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;        THEN @PERSON_ID &#xD;&#xA;        ELSE PER.PERSON_ID END&#xD;&#xA;         )&#xD;&#xA;   AND ((PHH.PAYEE_ACCOUNT_ID IS NULL AND ISNULL(BA.PLAN_ID,DROA.PLAN_ID) IN (7,23)) OR&#xD;&#xA;   (PHH.PAYEE_ACCOUNT_ID IS NOT NULL AND ISNULL(BA.PLAN_ID,DROA.PLAN_ID) NOT IN (7,23)))         &#xD;&#xA; )&#xD;&#xA; AS PAYEE&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID('TEMPDB..#TEMP_TGRP') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA; INSERT INTO #TEMP&#xD;&#xA; SELECT * FROM #TEMP_TGRP WITH(NOLOCK)&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;select distinct tem.Person_id  into #temp1 from #temp tem  WITH(NOLOCK)&#xD;&#xA;  inner join  sgt_mas_selection sel WITH(NOLOCK) on tem.person_id = sel.person_id &#xD;&#xA;   left outer join  sgt_mas_person mp WITH(NOLOCK) on mp.mas_selection_id = sel.mas_selection_id &#xD;&#xA;where sel.mas_batch_request_id = @MAS_BATCH_REQUEST_ID  &#xD;&#xA;and mp.mas_selection_id is null&#xD;&#xA;---------------------&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_PERSON&#xD;&#xA;(&#xD;&#xA; MAS_SELECTION_ID, FULL_NAME, DATE_OF_BIRTH, GENDER_DESCRIPTION, MARITAL_DESCRIPTION, SPOUSE_FULL_NAME, SPOUSE_DOB, SPOUSE_GENDER_DESCRIPTION, PERSON_EMPL_DETAIL_ID, SEASONAL_MONTHS_DESCRIPTION, ADDR_LINE1, ADDR_LINE2, ADDR_CITY, ADDR_STATE_DESCRIPTION, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, ADDR_COUNTRY_DESCRIPTION, ZIPCODE, FOREIGN_PROVINCE, FOREIGN_POSTAL_CODE, IS_PERSON_MARRIED, IS_DEFERRED_ENROLLED, IS_HEALTH_ENROLLED, IS_LIFE_ENROLLED, IS_DENTAL_ENROLLED, IS_VISION_ENROLLED, IS_LTC_ENROLLED, IS_EAP_ENROLLED, IS_FLEX_ENROLLED, HEALTH_LEVEL_OF_COVERAGE, DENTAL_LEVEL_OF_COVERAGE, VISION_LEVEL_OF_COVERAGE, LTC_LEVEL_OF_COVERAGE, LTC_INSURANCE_TYPE, LTC_SPOUSE_LEVEL_OF_COVERAGE, EAP_PROVIDER_NAME, IS_BENEFICIARY_REQUIRED, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ, VESTED_EMPLOYER_SCHEDULE_PERCENTAGE, DC_VESTED_EMPLOYER_SCHEDULE_PERCENTAGE, IS_DB_PLAN_ENROLED, IS_DC_PLAN_ENROLED, IS_457_DEFERRED_ENROLLED, IS_MEDICARE_PART_D_ENROLLED, IS_PAYEE_ACCOUNT_EXIST_FLAG&#xD;&#xA;)&#xD;&#xA;SELECT   MASS.MAS_SELECTION_ID,&#xD;&#xA;ISNULL(PREFIX.DESCRIPTION,'') + ' ' + ISNULL(PER.FIRST_NAME,'') + ' ' + ISNULL(PER.MIDDLE_NAME,'') + ' ' + ISNULL(PER.LAST_NAME,'') + ' ' + ISNULL(SUFFIX.DESCRIPTION,'') AS FULLNAME ,&#xD;&#xA;PER.DATE_OF_BIRTH, &#xD;&#xA;GENDERCODE.DESCRIPTION AS 'GENDER DESCRIPTION',&#xD;&#xA;MARITALSTATUS.DESCRIPTION 'MARITAL_DESCRIPTION',&#xD;&#xA;ISNULL(BENPREFIX.DESCRIPTION,'') + ' ' +ISNULL(BENPER.FIRST_NAME,'') + ' ' + ISNULL(BENPER.MIDDLE_NAME,'') + ' ' + ISNULL(BENPER.LAST_NAME,'') + ' ' + ISNULL(BENSUFFIX.DESCRIPTION,'')AS SPOUSE_FULL_NAME ,&#xD;&#xA;BENPER.DATE_OF_BIRTH AS 'SPOUSE_DOB',&#xD;&#xA;SPOUGENDERCODE.DESCRIPTION AS 'SPOUSE_GENDER_DESCRIPTION',&#xD;&#xA;null  AS 'PERSON_EMPL_DETAIL_ID',&#xD;&#xA;--EMPDET.SEASONAL_VALUE, ----NOT NEEDED&#xD;&#xA;null as  'SEASONAL_MONTHS_DESCRIPTION',&#xD;&#xA;isnull(PERADDR.ADDR_LINE_1,' ') as 'ADDR_LINE1',&#xD;&#xA;isnull(PERADDR.ADDR_LINE_2,'') as 'ADDR_LINE2',&#xD;&#xA;isnull(PERADDR.ADDR_CITY,' ' ) as 'ADDR_CITY',&#xD;&#xA;isnull(ADDRES.DESCRIPTION,' ' ) as 'ADDR_STATE_DESCRIPTION',&#xD;&#xA;isnull(PERADDR.ADDR_COUNTRY_ID,151 ) as 'ADDR_COUNTRY_ID',&#xD;&#xA;isnull(PERADDR.ADDR_COUNTRY_VALUE,' ' ) as 'ADDR_COUNTRY_VALUE',&#xD;&#xA;isnull(CON.DESCRIPTION,' ' ) as 'COUNTRY DESCRIPTION',&#xD;&#xA;isnull(PERADDR.ADDR_ZIP_CODE + ISNULL(PERADDR.ADDR_ZIP_4_CODE,''),' ' ) as 'ZIPCODE',&#xD;&#xA;isnull(PERADDR.FOREIGN_PROVINCE,' ' ) as 'FOREIGN_PROVINCE',&#xD;&#xA;isnull(PERADDR.FOREIGN_POSTAL_CODE,' ' ) as 'FOREIGN_POSTAL_CODE',&#xD;&#xA;CASE WHEN PER.MARITAL_STATUS_VALUE='MRID' THEN 'Y' ELSE 'N' END AS IS_PERSON_MARRIED,&#xD;&#xA;'N' AS IS_DEFERRED_ENROLLED,&#xD;&#xA;'N' AS IS_HEALTH_ENROLLED ,&#xD;&#xA;'N' AS IS_LIFE_ENROLLED,&#xD;&#xA;'N' AS IS_DENTAL_ENROLLED,&#xD;&#xA;'N' AS IS_VISION_ENROLLED,&#xD;&#xA;'N' AS IS_LTC_ENROLLED,&#xD;&#xA;'N' AS IS_EAP_ENROLLED,&#xD;&#xA;'N' AS IS_FLEX_ENROLLED,&#xD;&#xA;'' AS 'HEALTH_LEVEL_OF_COVERAGE',&#xD;&#xA;'' AS 'DENTAL_LEVEL_OF_COVERAGE',&#xD;&#xA;'' AS 'VISION_LEVEL_OF_COVERAGE',&#xD;&#xA;'' AS 'LTC_LEVEL_OF_COVERAGE',&#xD;&#xA;'' AS 'LTC_Insurance_Type' ,&#xD;&#xA;'' AS 'LTC_spouse_LEVEL_OF_COVERAGE',&#xD;&#xA;per.BENEFICIARY_REQUIRED_FLAG as IS_BENEFICIARY_REQUIRED,&#xD;&#xA;NULL AS EAP_PROVIDER_NAME,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA;getdate() as CREATED_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA;getdate() as MODIFIED_DATE,&#xD;&#xA;0 as UPDATE_SEQ,&#xD;&#xA;0.00 as VESTED_EMPLOYER_SCHEDULE_PERCENTAGE,&#xD;&#xA;0.00 as DC_VESTED_EMPLOYER_SCHEDULE_PERCENTAGE,&#xD;&#xA;case when exists(&#xD;&#xA;(select top 1 '0' from sgt_person_account pac WITH(NOLOCK)&#xD;&#xA;inner join sgt_plan pl WITH(NOLOCK) on pac.plan_id = pl.plan_id &#xD;&#xA;where RETIREMENT_TYPE_VALUE  = 'DB' and pac.person_id = per.person_id  )) then 'Y' Else 'N' End as IS_DB_PLAN_ENROLED,&#xD;&#xA;case when exists(&#xD;&#xA;(select top 1 '0' from sgt_person_account pac WITH(NOLOCK)&#xD;&#xA;inner join sgt_plan pl WITH(NOLOCK) on pac.plan_id = pl.plan_id &#xD;&#xA;where RETIREMENT_TYPE_VALUE  = 'DC' and pac.person_id = per.person_id  )) then 'Y' Else 'N' End as IS_DC_PLAN_ENROLED,&#xD;&#xA;NULL AS IS_457_DEFERRED_ENROLLED,&#xD;&#xA;'N' AS IS_MEDICARE_PART_D_ENROLLED,&#xD;&#xA;'Y' as  IS_PAYEE_ACCOUNT_EXIST_FLAG&#xD;&#xA;FROM SGT_PERSON(NOLOCK) PER&#xD;&#xA;inner join  #temp1 tmp WITH(NOLOCK) on  tmp.person_id = per.person_id &#xD;&#xA;INNER JOIN SGS_CODE_VALUE(NOLOCK) GENDERCODE ON GENDERCODE.CODE_ID=PER.GENDER_ID AND GENDERCODE.CODE_VALUE=PER.GENDER_VALUE&#xD;&#xA;INNER JOIN SGS_CODE_VALUE(NOLOCK) MARITALSTATUS ON MARITALSTATUS.CODE_ID=PER.MARITAL_STATUS_ID &#xD;&#xA;AND MARITALSTATUS.CODE_VALUE=PER.MARITAL_STATUS_VALUE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_CONTACT(NOLOCK) BEN ON BEN.PERSON_ID=PER.PERSON_ID and RELATIONSHIP_VALUE = 'SPOU' AND BEN.STATUS_VALUE = 'ACT'&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON(NOLOCK) BENPER ON BENPER.PERSON_ID=BEN.CONTACT_PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) SPOUGENDERCODE ON SPOUGENDERCODE.CODE_ID=BENPER.GENDER_ID AND &#xD;&#xA;SPOUGENDERCODE.CODE_VALUE=BENPER.GENDER_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) PREFIX on PREFIX.CODE_ID=PER.NAME_PREFIX_ID&#xD;&#xA;and prefix.code_value=PER.NAME_PREFIX_VALUE&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) SUFFIX on SUFFIX.CODE_ID=PER.NAME_SUFFIX_ID&#xD;&#xA;and SUFFIX.code_value=PER.NAME_SUFFIX_VALUE&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) BENPREFIX on BENPREFIX.CODE_ID=BENPER.NAME_PREFIX_ID&#xD;&#xA;and BENprefix.code_value=BENPER.NAME_PREFIX_VALUE&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) BENSUFFIX on BENSUFFIX.CODE_ID=BENPER.NAME_SUFFIX_ID&#xD;&#xA;and BENSUFFIX.code_value=BENPER.NAME_SUFFIX_VALUE&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA;(SELECT  P.PERSON_ID, &#xD;&#xA;  CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;      CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN PA2.ADDR_LINE_1  &#xD;&#xA;        WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;        THEN PA1.ADDR_LINE_1  END&#xD;&#xA;      ELSE  PA3.ADDR_LINE_1 END&#xD;&#xA;     AS ADDR_LINE_1,&#xD;&#xA;  CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;      CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN PA2.ADDR_LINE_2  &#xD;&#xA;        WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;        THEN PA1.ADDR_LINE_2  END&#xD;&#xA;      ELSE  PA3.ADDR_LINE_2 END&#xD;&#xA;     AS ADDR_LINE_2,&#xD;&#xA;  CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;      CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN PA2.ADDR_CITY  &#xD;&#xA;        WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;        THEN PA1.ADDR_CITY  END&#xD;&#xA;      ELSE  PA3.ADDR_CITY END&#xD;&#xA;     AS ADDR_CITY,&#xD;&#xA;  CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;      CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN PA2.ADDR_STATE_ID  &#xD;&#xA;        WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;        THEN PA1.ADDR_STATE_ID  END&#xD;&#xA;      ELSE  PA3.ADDR_STATE_ID END&#xD;&#xA;     AS ADDR_STATE_ID,&#xD;&#xA;  CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;      CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN PA2.ADDR_STATE_VALUE  &#xD;&#xA;        WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;        THEN PA1.ADDR_STATE_VALUE  END&#xD;&#xA;      ELSE  PA3.ADDR_STATE_VALUE END&#xD;&#xA;     AS ADDR_STATE_VALUE,&#xD;&#xA;  CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;      CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN PA2.ADDR_COUNTRY_ID &#xD;&#xA;        WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;        THEN PA1.ADDR_COUNTRY_ID  END&#xD;&#xA;      ELSE  PA3.ADDR_COUNTRY_ID END&#xD;&#xA;     AS ADDR_COUNTRY_ID,&#xD;&#xA;  CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;      CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN PA2.ADDR_COUNTRY_VALUE  &#xD;&#xA;        WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;        THEN PA1.ADDR_COUNTRY_VALUE  END&#xD;&#xA;      ELSE  PA3.ADDR_COUNTRY_VALUE END&#xD;&#xA;     AS ADDR_COUNTRY_VALUE,&#xD;&#xA;  CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;      CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN PA2.ADDR_ZIP_CODE &#xD;&#xA;        WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;        THEN PA1.ADDR_ZIP_CODE  END&#xD;&#xA;      ELSE  PA3.ADDR_ZIP_CODE END&#xD;&#xA;     AS ADDR_ZIP_CODE,&#xD;&#xA;  CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;      CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN PA2.ADDR_ZIP_4_CODE  &#xD;&#xA;        WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;        THEN PA1.ADDR_ZIP_4_CODE  END&#xD;&#xA;      ELSE  PA3.ADDR_ZIP_4_CODE END&#xD;&#xA;     AS ADDR_ZIP_4_CODE,&#xD;&#xA;  CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;      CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN PA2.FOREIGN_PROVINCE  &#xD;&#xA;        WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;        THEN PA1.FOREIGN_PROVINCE  END&#xD;&#xA;      ELSE  PA3.FOREIGN_PROVINCE END&#xD;&#xA;     AS FOREIGN_PROVINCE,&#xD;&#xA;  CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;      CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;        THEN PA2.FOREIGN_POSTAL_CODE  &#xD;&#xA;        WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;        THEN PA1.FOREIGN_POSTAL_CODE  END&#xD;&#xA;      ELSE  PA3.FOREIGN_POSTAL_CODE END&#xD;&#xA;     AS FOREIGN_POSTAL_CODE,&#xD;&#xA;     ROW_NUMBER() OVER ( PARTITION BY p.person_id ORDER BY pa1.person_address_id desc) as ROWNUMBER --PIR 12257&#xD;&#xA;  FROM SGT_PERSON(NOLOCK) P &#xD;&#xA;  LEFT OUTER JOIN SGT_PERSON_ADDRESS(NOLOCK) PA1   ON P.PERSON_ID  = PA1.PERSON_ID  AND PA1.ADDRESS_TYPE_VALUE = 'PERM'  AND ISNULL(PA1.UNDELIVERABLE_ADDRESS,'N') &lt;&gt; 'Y' --PIR 12257&#xD;&#xA;&#xD;&#xA;  LEFT OUTER JOIN SGT_PERSON_ADDRESS(NOLOCK) PA2  ON P.PERSON_ID  = PA2.PERSON_ID AND PA2.ADDRESS_TYPE_VALUE = 'TEMP' AND ISNULL(PA2.UNDELIVERABLE_ADDRESS,'N') &lt;&gt; 'Y' --PIR 12257&#xD;&#xA;&#xD;&#xA;  LEFT OUTER JOIN SGT_PERSON_ADDRESS(NOLOCK) PA3  ON P.PERSON_ID  = PA3.PERSON_ID AND PA3.ADDRESS_TYPE_VALUE = 'PAYM' AND ISNULL(PA3.UNDELIVERABLE_ADDRESS,'N') &lt;&gt; 'Y' --PIR 12257&#xD;&#xA;) AS PERADDR&#xD;&#xA;           ON PERADDR.PERSON_ID=PER.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) ADDRES ON ADDRES.CODE_ID=PERADDR.ADDR_STATE_ID AND &#xD;&#xA;ADDRES.CODE_VALUE=PERADDR.ADDR_STATE_VALUE&#xD;&#xA;&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) CON ON CON.CODE_ID=&#xD;&#xA;PERADDR.ADDR_COUNTRY_ID AND CON.CODE_VALUE=PERADDR.ADDR_COUNTRY_VALUE&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MASS WITH(NOLOCK) ON PER.PERSON_ID =MASS.PERSON_ID&#xD;&#xA;&#xD;&#xA;WHERE &#xD;&#xA; MASS.MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID &#xD;&#xA; AND ROWNUMBER = 1 --PIR 12257&#xD;&#xA;ORDER BY PER.PERSON_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_PAYEE_ACCOUNT&#xD;&#xA;(&#xD;&#xA; MAS_PERSON_ID, MEMBER_PERSON_ID, PAYEE_PERSLINK_ID, PLAN_ID, PAYEE_ACCOUNT_ID, BENEFIT_ACCOUNT_TYPE_ID, BENEFIT_ACCOUNT_TYPE_VALUE, BENEFIT_ACCOUNT_SUB_TYPE_ID, BENEFIT_ACCOUNT_SUB_TYPE_VALUE, BENEFIT_OPTION_ID, BENEFIT_OPTION_VALUE, ACCOUNT_RELATION_ID, ACCOUNT_RELATION_VALUE, FAMILY_RELATION_ID, FAMILY_RELATION_VALUE, MINIMUM_GUARANTEE_AMOUNT, NONTAXABLE_BEGINNING_BALANCE, RHIC_BENEFIT_OPTION_ID, RHIC_BENEFIT_OPTION_VALUE,SSLI_CHANGE_DATE, SSLI_AGE, UNIFORM_INCOME_FLAG, BENEFIT_BEGIN_DATE, BENEFIT_END_DATE, JOINT_ANNUITANT_PERSLINK_ID, RETIREMENT_ORG_ID, ACCOUNT_BALANCE,&#xD;&#xA;  TERM_CERTAIN_END_DATE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ,PERSON_ACCOUNT_ID , PLAN_BENEFIT_TIER_DESCRIPTION&#xD;&#xA;)&#xD;&#xA; SELECT  MAS_PERSON_ID,&#xD;&#xA;   MEMBER_PERSON_ID,&#xD;&#xA;   PAYEE_PERSLINK_ID,&#xD;&#xA;   PLAN_ID,   &#xD;&#xA;   PAYEE_ACCOUNT_ID,&#xD;&#xA;   BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;   BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;   BENEFIT_ACCOUNT_SUB_TYPE_ID,&#xD;&#xA;   BENEFIT_ACCOUNT_SUB_TYPE_VALUE,&#xD;&#xA;   BENEFIT_OPTION_ID,&#xD;&#xA;   BENEFIT_OPTION_VALUE,&#xD;&#xA;   ACCOUNT_RELATION_ID,&#xD;&#xA;   ACCOUNT_RELATION_VALUE,&#xD;&#xA;   FAMILY_RELATION_ID,&#xD;&#xA;   FAMILY_RELATION_VALUE,&#xD;&#xA;   MINIMUM_GUARANTEE_AMOUNT,&#xD;&#xA;   NONTAXABLE_BEGINNING_BALANCE,&#xD;&#xA;   RHIC_BENEFIT_OPTION_ID,&#xD;&#xA;   RHIC_BENEFIT_OPTION_VALUE,&#xD;&#xA;   SSLI_CHANGE_DATE,&#xD;&#xA;   SSLI_AGE,&#xD;&#xA;   UNIFORM_INCOME_FLAG,&#xD;&#xA;   BENEFIT_BEGIN_DATE,&#xD;&#xA;   BENEFIT_END_DATE,&#xD;&#xA;   JOINT_ANNUITANT_PERSLINK_ID,&#xD;&#xA;   RETIREMENT_ORG_ID,&#xD;&#xA;   ACCOUNT_BALANCE,   &#xD;&#xA;   TERM_CERTAIN_END_DATE,&#xD;&#xA;   'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA;   getdate() as CREATED_DATE,&#xD;&#xA;   'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA;   getdate() as MODIFIED_DATE,&#xD;&#xA;   0 as UPDATE_SEQ ,&#xD;&#xA;&#x9;PERSON_ACCOUNT_ID,&#xD;&#xA;&#x9;DESCRIPTION&#xD;&#xA;FROM(&#xD;&#xA;select mp.mas_person_id,tem.PERSON_ID AS PAYEE_PERSLINK_ID,tem.* from #temp tem WITH(NOLOCK)&#xD;&#xA;  inner join  sgt_mas_selection sel WITH(NOLOCK) on tem.person_id = sel.person_id &#xD;&#xA;   inner join  sgt_mas_person mp WITH(NOLOCK) on mp.mas_selection_id = sel.mas_selection_id &#xD;&#xA;where sel.mas_batch_request_id =@MAS_BATCH_REQUEST_ID)MASPayee&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;---------------------&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Insert into SGT_MAS_PAYEE_ACCOUNT_PAPIT&#xD;&#xA;(&#xD;&#xA;MAS_PAYEE_ACCOUNT_ID, PAYMENT_ITEM_TYPE_ID, AMOUNT, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;Select  MPA.MAS_PAYEE_ACCOUNT_ID,&#xD;&#xA;  PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;  AMOUNT,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA;  getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA;  getdate() as MODIFIED_DATE,&#xD;&#xA;  0 as UPDATE_SEQ &#xD;&#xA;  From SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WITH(NOLOCK)&#xD;&#xA;    INNER JOIN SGT_MAS_PAYEE_ACCOUNT MPA WITH(NOLOCK)&#xD;&#xA;     ON MPA.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;    INNER JOIN SGT_MAS_PERSON MP WITH(NOLOCK)&#xD;&#xA;     ON MP.MAS_PERSON_ID=MPA.MAS_PERSON_ID&#xD;&#xA;    INNER JOIN SGT_MAS_SELECTION MS WITH(NOLOCK)&#xD;&#xA;     ON MP.MAS_SELECTION_ID=MS.MAS_SELECTION_ID&#xD;&#xA;  WHERE MS.mas_batch_request_id =@MAS_BATCH_REQUEST_ID AND &#xD;&#xA;   @EffectiveDate BETWEEN PAPIT.START_DATE &#xD;&#xA;   AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)">
      <parameters>
        <parameter ID="@MAS_BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Insert_into_MAS_Ben_Dep" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @BATCHREQUESTTYPE VARCHAR(4)&#xD;&#xA;DECLARE @PERSON_ID INT&#xD;&#xA;Declare @EFFECTIVE_DATE datetime&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;select @BATCHREQUESTTYPE =  BATCH_REQUEST_TYPE_VALUE,&#xD;&#xA;  @EFFECTIVE_DATE = STATEMENT_EFFECTIVE_DATE,&#xD;&#xA;  @PERSON_ID = PERSON_ID&#xD;&#xA;from SGT_MAS_BATCH_REQUEST WITH(NOLOCK)&#xD;&#xA;where MAS_BATCH_REQUEST_ID  = @MAS_BATCH_REQUEST_ID&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_MAS_PERSON_PLAN_BENEFICIARY_DEPENDENT &#xD;&#xA;(&#xD;&#xA;MAS_PERSON_ID, PLAN_ID, PLAN_NAME, BENEFICIARY_TYPE_DESCRIPTION, BENEFICIARY_FULL_NAME, RELATIONSHIP_DESCRIPTION, DATE_OF_BIRTH, PERCENTAGE, IS_BENEFICIARY_FLAG, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT &#xD;&#xA; MAS_PERSON_ID, &#xD;&#xA; PLAN_ID,&#xD;&#xA; PLAN_NAME,&#xD;&#xA; BENEFICIARY_TYPE_DESCRIPTION,&#xD;&#xA; BENEFICIARY_FULL_NAME,&#xD;&#xA; RELATIONSHIP_DESCRIPTION,&#xD;&#xA; DATE_OF_BIRTH,&#xD;&#xA; PERCENTAGE,&#xD;&#xA; IS_BENEFICIARY_FLAG,&#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid)  as CREATED_BY,&#xD;&#xA; getdate() as CREATED_DATE,&#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA; getdate() as MODIFIED_DATE,&#xD;&#xA; 0 as UPDATE_SEQ&#xD;&#xA;&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA; SELECT MP.MAS_PERSON_ID,PER.PERSON_ID,&#xD;&#xA; PERACC.PLAN_ID,&#xD;&#xA; PLN.PLAN_NAME,&#xD;&#xA; BENTYPE.DESCRIPTION 'BENEFICIARY_TYPE_DESCRIPTION',&#xD;&#xA; CASE WHEN ISNULL(BENEFICIARY_PERSON_ID,0) =0 THEN&#xD;&#xA;  CASE WHEN ISNULL(BENIFICIARY_ORG_ID,0)=0 THEN ISNULL(BEN.FIRST_NAME,'') + ' ' + ISNULL(BEN.MIDDLE_NAME,'') + ' ' + ISNULL(BEN.LAST_NAME,'')&#xD;&#xA;  ELSE BENEORG.ORG_NAME END     &#xD;&#xA; ELSE    &#xD;&#xA; ISNULL(PREFIX.DESCRIPTION,'') + ' ' +ISNULL(BENE.FIRST_NAME,'') + ' ' + ISNULL(BENE.MIDDLE_NAME,'') + ' ' + ISNULL(BENE.LAST_NAME,'')+ ' ' + ISNULL(SUFFIX.DESCRIPTION,'') END 'BENEFICIARY_FULL_NAME',&#xD;&#xA; ISNULL(RELTYPE.DESCRIPTION,'UnKnown') 'RELATIONSHIP_DESCRIPTION',&#xD;&#xA; CASE WHEN ISNULL(BENEFICIARY_PERSON_ID,0) &gt; 0 THEN &#xD;&#xA;  BENE.DATE_OF_BIRTH ELSE BEN.DATE_OF_BIRTH END AS 'DATE_OF_BIRTH',&#xD;&#xA; BENACC.DIST_PERCENT AS PERCENTAGE,&#xD;&#xA; 'Y' AS 'IS_BENEFICIARY_FLAG'&#xD;&#xA; FROM SGT_PERSON(NOLOCK) PER&#xD;&#xA; INNER JOIN SGT_MAS_SELECTION MS (NOLOCK) ON PER.PERSON_ID=MS.PERSON_ID AND MS.MAS_BATCH_REQUEST_ID = @MAS_BATCH_REQUEST_ID&#xD;&#xA; INNER JOIN SGT_MAS_PERSON MP (NOLOCK) ON MS.MAS_SELECTION_ID=MP.MAS_SELECTION_ID&#xD;&#xA; INNER JOIN SGT_PERSON_BENEFICIARY(NOLOCK) BEN ON PER.PERSON_ID=BEN.PERSON_ID &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_BENEFICIARY(NOLOCK) BENACC ON BENACC.BENEFICIARY_ID=BEN.BENEFICIARY_ID&#xD;&#xA; INNER JOIN (SELECT DISTINCT ISNULL(APPACC.PERSON_ACCOUNT_ID ,DRO.PERSON_ACCOUNT_ID) AS PERSON_ACCOUNT_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PAY WITH(NOLOCK)&#xD;&#xA;    LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP WITH(NOLOCK) ON PAY.APPLICATION_ID=APP.BENEFIT_APPLICATION_ID&#xD;&#xA;    LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT APPACC WITH(NOLOCK) ON APPACC.BENEFIT_APPLICATION_ID=APP.BENEFIT_APPLICATION_ID &#xD;&#xA;    LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DRO WITH(NOLOCK) ON PAY.DRO_APPLICATION_ID = DRO.DRO_APPLICATION_ID&#xD;&#xA;    WHERE  ISNULL(APPACC.IS_APPLICATION_PERSON_ACCOUNT_FLAG,'Y')='Y'&#xD;&#xA;    AND PAY.ACCOUNT_RELATION_VALUE = 'MEMB' &#xD;&#xA;    AND (PAY.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' OR PAY.BENEFIT_OPTION_VALUE NOT IN ('RGRD','AURD','REFD'))&#xD;&#xA;    ) PAC ON PAC.PERSON_ACCOUNT_ID = BENACC.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT(NOLOCK)  PERACC ON PERACC.PERSON_ACCOUNT_ID= BENACC.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PLAN(NOLOCK) PLN ON PLN.PLAN_ID=PERACC.PLAN_ID&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) BENTYPE ON BENTYPE.CODE_ID=BENACC.BENEFICIARY_TYPE_ID&#xD;&#xA; AND BENTYPE.CODE_VALUE=BENACC.BENEFICIARY_TYPE_VALUE&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) RELTYPE ON RELTYPE.CODE_ID=BEN.RELATIONSHIP_ID&#xD;&#xA; AND RELTYPE.CODE_VALUE=BEN.RELATIONSHIP_VALUE&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON BENE(NOLOCK) ON BEN.BENEFICIARY_PERSON_ID = BENE.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION BENEORG(NOLOCK) ON BEN.BENIFICIARY_ORG_ID = BENEORG.ORG_ID&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) PREFIX on PREFIX.CODE_ID=BENE.NAME_PREFIX_ID&#xD;&#xA; and prefix.code_value=BENE.NAME_PREFIX_VALUE&#xD;&#xA;&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) SUFFIX on SUFFIX.CODE_ID=BENE.NAME_SUFFIX_ID&#xD;&#xA; and SUFFIX.code_value=BENE.NAME_SUFFIX_VALUE&#xD;&#xA; WHERE&#xD;&#xA; PER.PERSON_ID IN (SELECT PERSON_ID FROM SGT_MAS_SELECTION WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID AND&#xD;&#xA; ISNULL(IS_DATA_PULLED_FLAG,'N')='N') and&#xD;&#xA; @effective_date BETWEEN BENACC.START_DATE AND (CASE WHEN BENACC.END_DATE IS NULL THEN '99991231' ELSE BENACC.END_DATE END)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; union all&#xD;&#xA; &#xD;&#xA; SELECT MP.MAS_PERSON_ID,PER.PERSON_ID,&#xD;&#xA; PERACC.PLAN_ID,&#xD;&#xA; PLN.PLAN_NAME,&#xD;&#xA; BENTYPE.DESCRIPTION 'BENEFICIARY_TYPE_DESCRIPTION',&#xD;&#xA; CASE WHEN ISNULL(BENEFICIARY_PERSON_ID,0) =0 THEN&#xD;&#xA;  CASE WHEN ISNULL(BENIFICIARY_ORG_ID,0)=0 THEN ISNULL(BEN.FIRST_NAME,'') + ' ' + ISNULL(BEN.MIDDLE_NAME,'') + ' ' + ISNULL(BEN.LAST_NAME,'')&#xD;&#xA;  ELSE BENEORG.ORG_NAME END     &#xD;&#xA; ELSE    &#xD;&#xA; ISNULL(PREFIX.DESCRIPTION,'') + ' ' +ISNULL(BENE.FIRST_NAME,'') + ' ' + ISNULL(BENE.MIDDLE_NAME,'') + ' ' + ISNULL(BENE.LAST_NAME,'')+ ' ' + ISNULL(SUFFIX.DESCRIPTION,'') END 'BENEFICIARY_FULL_NAME',&#xD;&#xA; ISNULL(RELTYPE.DESCRIPTION,'UnKnown') 'RELATIONSHIP_DESCRIPTION',&#xD;&#xA; CASE WHEN ISNULL(BENEFICIARY_PERSON_ID,0) &gt; 0 THEN &#xD;&#xA;  BENE.DATE_OF_BIRTH ELSE BEN.DATE_OF_BIRTH END AS 'DATE_OF_BIRTH',&#xD;&#xA; BENACC.DIST_PERCENT AS PERCENTAGE,&#xD;&#xA; 'Y' AS 'IS_BENEFICIARY_FLAG'&#xD;&#xA; FROM SGT_PERSON(NOLOCK) PER&#xD;&#xA; INNER JOIN SGT_MAS_SELECTION MS (NOLOCK) ON PER.PERSON_ID=MS.PERSON_ID AND MS.MAS_BATCH_REQUEST_ID = @MAS_BATCH_REQUEST_ID&#xD;&#xA; INNER JOIN SGT_MAS_PERSON MP (NOLOCK) ON MS.MAS_SELECTION_ID=MP.MAS_SELECTION_ID&#xD;&#xA; INNER JOIN SGT_PERSON_BENEFICIARY(NOLOCK) BEN ON PER.PERSON_ID=BEN.PERSON_ID &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_BENEFICIARY(NOLOCK) BENACC ON BENACC.BENEFICIARY_ID=BEN.BENEFICIARY_ID &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT(NOLOCK)  PERACC ON PERACC.PERSON_ACCOUNT_ID= BENACC.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PLAN(NOLOCK) PLN ON PLN.PLAN_ID=PERACC.PLAN_ID&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) BENTYPE ON BENTYPE.CODE_ID=BENACC.BENEFICIARY_TYPE_ID&#xD;&#xA; AND BENTYPE.CODE_VALUE=BENACC.BENEFICIARY_TYPE_VALUE&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) RELTYPE ON RELTYPE.CODE_ID=BEN.RELATIONSHIP_ID&#xD;&#xA; AND RELTYPE.CODE_VALUE=BEN.RELATIONSHIP_VALUE&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON BENE(NOLOCK) ON BEN.BENEFICIARY_PERSON_ID = BENE.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION BENEORG(NOLOCK) ON BEN.BENIFICIARY_ORG_ID = BENEORG.ORG_ID&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) PREFIX on PREFIX.CODE_ID=BENE.NAME_PREFIX_ID&#xD;&#xA; and prefix.code_value=BENE.NAME_PREFIX_VALUE&#xD;&#xA;&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) SUFFIX on SUFFIX.CODE_ID=BENE.NAME_SUFFIX_ID&#xD;&#xA; and SUFFIX.code_value=BENE.NAME_SUFFIX_VALUE&#xD;&#xA; WHERE&#xD;&#xA; PER.PERSON_ID IN (SELECT PERSON_ID FROM SGT_MAS_SELECTION WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID AND&#xD;&#xA; ISNULL(IS_DATA_PULLED_FLAG,'N')='N') and&#xD;&#xA; @effective_date BETWEEN BENACC.START_DATE AND (CASE WHEN BENACC.END_DATE IS NULL THEN '99991231' ELSE BENACC.END_DATE END)&#xD;&#xA; AND PERACC.PLAN_ID = 13&#xD;&#xA;&#xD;&#xA; union all&#xD;&#xA;&#xD;&#xA; SELECT MP.MAS_PERSON_ID,PER.PERSON_ID,&#xD;&#xA; PERACC.PLAN_ID,&#xD;&#xA; PLN.PLAN_NAME,&#xD;&#xA; 'DEPENDENT' AS BENEFICIARY_TYPE_DESCRIPTION,&#xD;&#xA; CASE WHEN ISNULL(DEPENDENT_PERSLINK_ID,0) =0 THEN&#xD;&#xA;  ISNULL(DEP.FIRST_NAME,'') + ' ' + ISNULL(DEP.MIDDLE_NAME,'') + ' ' + ISNULL(DEP.LAST_NAME,'') &#xD;&#xA; ELSE    &#xD;&#xA; ISNULL(PREFIX.DESCRIPTION,'') + ' ' +ISNULL(DEPPERSON.FIRST_NAME,'') + ' ' + ISNULL(DEPPERSON.MIDDLE_NAME,'') + ' ' + ISNULL(DEPPERSON.LAST_NAME,'') END  + ' ' + ISNULL(SUFFIX.DESCRIPTION,'')'BENEFICIARY_FULL_NAME',&#xD;&#xA; NULL AS RELATIONSHIP_DESCRIPTION,&#xD;&#xA; CASE WHEN ISNULL(DEPENDENT_PERSLINK_ID,0) &gt; 0 THEN &#xD;&#xA;  DEPPERSON.DATE_OF_BIRTH ELSE DEP.DATE_OF_BIRTH END AS 'DATE_OF_BIRTH',&#xD;&#xA; 100 AS PERCENTAGE,'N' as 'IS_BENEFICIARY_FLAG'&#xD;&#xA; FROM SGT_PERSON(NOLOCK) PER&#xD;&#xA; INNER JOIN SGT_MAS_SELECTION MS (NOLOCK) ON PER.PERSON_ID=MS.PERSON_ID&#xD;&#xA; INNER JOIN SGT_MAS_PERSON MP (NOLOCK) ON MS.MAS_SELECTION_ID=MP.MAS_SELECTION_ID&#xD;&#xA; INNER JOIN SGT_PERSON_DEPENDENT(NOLOCK) DEP ON DEP.PERSON_ID=PER.PERSON_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_DEPENDENT(NOLOCK) DEPACC ON DEPACC.PERSON_DEPENDENT_ID=DEP.PERSON_DEPENDENT_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT(NOLOCK)  PERACC ON PERACC.PERSON_ACCOUNT_ID= DEPACC.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PLAN(NOLOCK) PLN ON PLN.PLAN_ID=PERACC.PLAN_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON DEPPERSON(NOLOCK) ON DEP.DEPENDENT_PERSLINK_ID = DEPPERSON.PERSON_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_GHDV(NOLOCK) GHDV ON GHDV.PERSON_ACCOUNT_ID=PERACC.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) PREFIX on PREFIX.CODE_ID=DEPPERSON.NAME_PREFIX_ID&#xD;&#xA; and prefix.code_value=DEPPERSON.NAME_PREFIX_VALUE&#xD;&#xA;&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) SUFFIX on SUFFIX.CODE_ID=DEPPERSON.NAME_SUFFIX_ID&#xD;&#xA; and SUFFIX.code_value=DEPPERSON.NAME_SUFFIX_VALUE&#xD;&#xA; WHERE&#xD;&#xA; PER.PERSON_ID IN (SELECT PERSON_ID FROM SGT_MAS_SELECTION WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID AND&#xD;&#xA; ISNULL(IS_DATA_PULLED_FLAG,'N')='N') AND&#xD;&#xA; @EFFECTIVE_DATE BETWEEN DEPACC.START_DATE AND (CASE WHEN DEPACC.END_DATE IS NULL THEN '99991231' ELSE DEPACC.END_DATE END)&#xD;&#xA; AND ((GHDV.HEALTH_INSURANCE_TYPE_VALUE IN('RT12') &#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (GHDV.HEALTH_INSURANCE_TYPE_VALUE IN('NS12','ST12') &#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC'))) AND PERACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2'&#xD;&#xA; AND PLn.PLAN_ID =12&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; SELECT MP.MAS_PERSON_ID,PER.PERSON_ID,&#xD;&#xA; PERACC.PLAN_ID,&#xD;&#xA; PLN.PLAN_NAME,&#xD;&#xA; 'DEPENDENT' AS BENEFICIARY_TYPE_DESCRIPTION,&#xD;&#xA; CASE WHEN ISNULL(DEPENDENT_PERSLINK_ID,0) =0 THEN&#xD;&#xA;  ISNULL(DEP.FIRST_NAME,'') + ' ' + ISNULL(DEP.MIDDLE_NAME,'') + ' ' + ISNULL(DEP.LAST_NAME,'') &#xD;&#xA; ELSE    &#xD;&#xA; ISNULL(PREFIX.DESCRIPTION,'') + ' ' +ISNULL(DEPPERSON.FIRST_NAME,'') + ' ' + ISNULL(DEPPERSON.MIDDLE_NAME,'') + ' ' + ISNULL(DEPPERSON.LAST_NAME,'') END  + ' ' + ISNULL(SUFFIX.DESCRIPTION,'') 'BENEFICIARY_FULL_NAME',&#xD;&#xA; NULL AS RELATIONSHIP_DESCRIPTION,&#xD;&#xA; CASE WHEN ISNULL(DEPENDENT_PERSLINK_ID,0) &gt; 0 THEN &#xD;&#xA;  DEPPERSON.DATE_OF_BIRTH ELSE DEP.DATE_OF_BIRTH END AS 'DATE_OF_BIRTH',&#xD;&#xA; 100 AS PERCENTAGE,'N' as 'IS_BENEFICIARY_FLAG'&#xD;&#xA; FROM SGT_PERSON(NOLOCK) PER&#xD;&#xA; INNER JOIN SGT_MAS_SELECTION MS (NOLOCK) ON PER.PERSON_ID=MS.PERSON_ID&#xD;&#xA; INNER JOIN SGT_MAS_PERSON MP (NOLOCK) ON MS.MAS_SELECTION_ID=MP.MAS_SELECTION_ID&#xD;&#xA; INNER JOIN SGT_PERSON_DEPENDENT(NOLOCK) DEP ON DEP.PERSON_ID=PER.PERSON_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_DEPENDENT(NOLOCK) DEPACC ON DEPACC.PERSON_DEPENDENT_ID=DEP.PERSON_DEPENDENT_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT(NOLOCK)  PERACC ON PERACC.PERSON_ACCOUNT_ID= DEPACC.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PLAN(NOLOCK) PLN ON PLN.PLAN_ID=PERACC.PLAN_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON DEPPERSON(NOLOCK) ON DEP.DEPENDENT_PERSLINK_ID = DEPPERSON.PERSON_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_GHDV(NOLOCK) GHDV ON GHDV.PERSON_ACCOUNT_ID=PERACC.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) PREFIX on PREFIX.CODE_ID=DEPPERSON.NAME_PREFIX_ID&#xD;&#xA; and prefix.code_value=DEPPERSON.NAME_PREFIX_VALUE&#xD;&#xA;&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) SUFFIX on SUFFIX.CODE_ID=DEPPERSON.NAME_SUFFIX_ID&#xD;&#xA; and SUFFIX.code_value=DEPPERSON.NAME_SUFFIX_VALUE&#xD;&#xA; WHERE&#xD;&#xA; PER.PERSON_ID IN (SELECT PERSON_ID FROM SGT_MAS_SELECTION WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID AND&#xD;&#xA; ISNULL(IS_DATA_PULLED_FLAG,'N')='N') AND&#xD;&#xA; @EFFECTIVE_DATE BETWEEN DEPACC.START_DATE AND (CASE WHEN DEPACC.END_DATE IS NULL THEN '99991231' ELSE DEPACC.END_DATE END)&#xD;&#xA; AND ((GHDV.COBRA_TYPE_VALUE IS NULL AND GHDV.DENTAL_INSURANCE_TYPE_VALUE  in ('RT16')) OR&#xD;&#xA;  (GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC') AND GHDV.DENTAL_INSURANCE_TYPE_VALUE='CB16'))&#xD;&#xA; AND PERACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2'&#xD;&#xA; AND PLn.PLAN_ID =16&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; SELECT MP.MAS_PERSON_ID,PER.PERSON_ID,&#xD;&#xA; PERACC.PLAN_ID,&#xD;&#xA; PLN.PLAN_NAME,&#xD;&#xA; 'DEPENDENT',&#xD;&#xA; CASE WHEN ISNULL(DEPENDENT_PERSLINK_ID,0) =0 THEN&#xD;&#xA;  ISNULL(DEP.FIRST_NAME,'') + ' ' + ISNULL(DEP.MIDDLE_NAME,'') + ' ' + ISNULL(DEP.LAST_NAME,'') &#xD;&#xA; ELSE    &#xD;&#xA; ISNULL(PREFIX.DESCRIPTION,'') + ' ' +ISNULL(DEPPERSON.FIRST_NAME,'') + ' ' + ISNULL(DEPPERSON.MIDDLE_NAME,'') + ' ' + ISNULL(DEPPERSON.LAST_NAME,'') END  + ' ' + ISNULL(SUFFIX.DESCRIPTION,'')'DEPENDENT FULL_NAME',&#xD;&#xA; NULL AS  RELATIONSHIP_DESCRIPTION,&#xD;&#xA; CASE WHEN ISNULL(DEPENDENT_PERSLINK_ID,0) &gt; 0 THEN &#xD;&#xA;  DEPPERSON.DATE_OF_BIRTH ELSE DEP.DATE_OF_BIRTH END AS 'DATE_OF_BIRTH',&#xD;&#xA; 100 AS PERCENTAGE,'N' as 'IS_BENEFICIARY_FLAG'&#xD;&#xA; FROM SGT_PERSON(NOLOCK) PER&#xD;&#xA; INNER JOIN SGT_MAS_SELECTION MS (NOLOCK) ON PER.PERSON_ID=MS.PERSON_ID&#xD;&#xA; INNER JOIN SGT_MAS_PERSON MP (NOLOCK) ON MS.MAS_SELECTION_ID=MP.MAS_SELECTION_ID&#xD;&#xA; INNER JOIN SGT_PERSON_DEPENDENT(NOLOCK) DEP ON DEP.PERSON_ID=PER.PERSON_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_DEPENDENT(NOLOCK) DEPACC ON DEPACC.PERSON_DEPENDENT_ID=DEP.PERSON_DEPENDENT_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT(NOLOCK)  PERACC ON PERACC.PERSON_ACCOUNT_ID= DEPACC.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PLAN(NOLOCK) PLN ON PLN.PLAN_ID=PERACC.PLAN_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PERSON DEPPERSON(NOLOCK) ON DEP.DEPENDENT_PERSLINK_ID = DEPPERSON.PERSON_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_GHDV(NOLOCK) GHDV ON GHDV.PERSON_ACCOUNT_ID=PERACC.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) PREFIX on PREFIX.CODE_ID=DEPPERSON.NAME_PREFIX_ID&#xD;&#xA; and prefix.code_value=DEPPERSON.NAME_PREFIX_VALUE&#xD;&#xA;&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE(NOLOCK) SUFFIX on SUFFIX.CODE_ID=DEPPERSON.NAME_SUFFIX_ID&#xD;&#xA; and SUFFIX.code_value=DEPPERSON.NAME_SUFFIX_VALUE&#xD;&#xA; WHERE&#xD;&#xA; PER.PERSON_ID IN (SELECT PERSON_ID FROM SGT_MAS_SELECTION WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID AND&#xD;&#xA; ISNULL(IS_DATA_PULLED_FLAG,'N')='N') AND&#xD;&#xA; @EFFECTIVE_DATE BETWEEN DEPACC.START_DATE AND (CASE WHEN DEPACC.END_DATE IS NULL THEN '99991231' ELSE DEPACC.END_DATE END)&#xD;&#xA; AND (GHDV.COBRA_TYPE_VALUE IS NULL AND  GHDV.VISION_INSURANCE_TYPE_VALUE  in ('RETR') or&#xD;&#xA;  (GHDV.VISION_INSURANCE_TYPE_VALUE ='COBR' AND GHDV.COBRA_TYPE_VALUE  in ('R18C','R36C','RDSC')))&#xD;&#xA; AND PERACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2'&#xD;&#xA; AND PLn.PLAN_ID =17 &#xD;&#xA;)BENDEP ORDER BY IS_BENEFICIARY_FLAG, PERSON_ID,PLAN_ID">
      <parameters>
        <parameter ID="@MAS_BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Update_Vested_Employer_Percentage" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_MAS_PERSON SET &#xD;&#xA;VESTED_EMPLOYER_SCHEDULE_PERCENTAGE=&#xD;&#xA;  (SELECT TOP 1 ER_VESTED_PERCENTAGE FROM SGT_VESTED_ER_PERCENTAGE_REF WITH(NOLOCK) &#xD;&#xA;   WHERE RETIREMENT_TYPE_VALUE='DB'AND EFFECTIVE_DATE &lt; = @EFFECTIVE_DATE AND &#xD;&#xA;   ISNULL((SELECT SUM(TVSC_IN_YEAR_MONTHS) FROM SGT_MAS_PERSON_PLAN WITH(NOLOCK) &#xD;&#xA;   WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID AND PLAN_ID &lt;&gt; 7),0) BETWEEN VSC_FROM AND VSC_TO&#xD;&#xA;   ORDER BY EFFECTIVE_DATE DESC),&#xD;&#xA;DC_VESTED_EMPLOYER_SCHEDULE_PERCENTAGE=&#xD;&#xA;  (SELECT TOP 1 ER_VESTED_PERCENTAGE FROM SGT_VESTED_ER_PERCENTAGE_REF WITH(NOLOCK)&#xD;&#xA;   WHERE RETIREMENT_TYPE_VALUE='DC'AND EFFECTIVE_DATE &lt; = @EFFECTIVE_DATE AND &#xD;&#xA;   ISNULL((SELECT SUM(TVSC_IN_YEAR_MONTHS) FROM SGT_MAS_PERSON_PLAN WITH(NOLOCK) WHERE MAS_BATCH_REQUEST_ID=@BATCHREQUESTID AND PLAN_ID = 7),0)&#xD;&#xA;   BETWEEN VSC_FROM AND VSC_TO &#xD;&#xA;   ORDER BY EFFECTIVE_DATE DESC)&#xD;&#xA;FROM SGT_MAS_PERSON PER&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION SEL WITH(NOLOCK) ON SEL.MAS_BATCH_REQUEST_ID=@BATCHREQUESTID AND PER.MAS_SELECTION_ID=SEL.MAS_SELECTION_ID AND IS_DATA_PULLED_FLAG='N'&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE SGT_MAS_PERSON_PLAN SET VESTED_EMPLOYER_CONT_PERCENT=&#xD;&#xA;ISNULL((SELECT TOP 1 ER_VESTED_PERCENTAGE FROM SGT_VESTED_ER_PERCENTAGE_REF WITH(NOLOCK) WHERE RETIREMENT_TYPE_VALUE=&#xD;&#xA;  (CASE WHEN PLAN_ID=7 THEN 'DC' ELSE 'DB' END) AND EFFECTIVE_DATE &lt; = @EFFECTIVE_DATE AND &#xD;&#xA;  (ISNULL(TVSC_IN_YEAR_MONTHS,0) + ISNULL(TFFR_SERVICE,0) + &#xD;&#xA;   ISNULL(TIAA_CREF_SERVICE,0) + ISNULL(JOBSERVICE_SICK_LEAVE,0)) BETWEEN VSC_FROM AND VSC_TO ORDER BY EFFECTIVE_DATE DESC),0) &#xD;&#xA;FROM SGT_MAS_PERSON_PLAN PLN&#xD;&#xA;INNER JOIN SGT_MAS_PERSON PER WITH(NOLOCK) ON PER.MAS_PERSON_ID=PLN.MAS_PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION SEL WITH(NOLOCK) ON SEL.MAS_BATCH_REQUEST_ID=@BATCHREQUESTID AND PER.MAS_SELECTION_ID=SEL.MAS_SELECTION_ID AND IS_DATA_PULLED_FLAG='N'">
      <parameters>
        <parameter ID="@EFFECTIVE_DATE" sfwDataType="DateTime" />
        <parameter ID="@BATCHREQUESTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="DeleteError" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DELETE FROM SGT_MAS_BATCH_REQUEST_ERROR WHERE MAS_BATCH_REQUEST_ID=@BATCH_REQUEST_ID">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetCountOfRetirees" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @BATCHREQUESTTYPE VARCHAR(4)&#xD;&#xA;DECLARE @PERSON_ID INT&#xD;&#xA;Declare @EffectiveDate datetime&#xD;&#xA;Declare @Ctr Int&#xD;&#xA;Declare @OrgId int &#xD;&#xA;Declare @BENEFIT_ACCOUNT_TYPE_VALUE  Varchar(4)&#xD;&#xA;Declare @BENEFIT_OPTION_VALUE Varchar(4)&#xD;&#xA;Declare @BENEFIT_ACCOUNT_SUB_TYPE_VALUE Varchar(4) &#xD;&#xA;&#xD;&#xA;select @BATCHREQUESTTYPE =  BATCH_REQUEST_TYPE_VALUE,&#xD;&#xA;  @EffectiveDate = STATEMENT_EFFECTIVE_DATE,&#xD;&#xA;  @PERSON_ID = PERSON_ID,&#xD;&#xA;  @OrgId = Org_id,&#xD;&#xA;  @BENEFIT_ACCOUNT_TYPE_VALUE = BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  @BENEFIT_OPTION_VALUE = BENEFIT_OPTION_VALUE,&#xD;&#xA;  @BENEFIT_ACCOUNT_SUB_TYPE_VALUE = BENEFIT_ACCOUNT_SUB_TYPE_VALUE&#xD;&#xA;from SGT_MAS_BATCH_REQUEST&#xD;&#xA;where MAS_BATCH_REQUEST_ID  = @BATCHREQUESTID&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;SELECT @Ctr = Count(0) &#xD;&#xA; FROM SGT_MAS_BATCH_REQUEST_PLAN R&#xD;&#xA; Inner join sgt_Plan P on  R.Plan_id = p.Plan_id&#xD;&#xA; WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID and Benefit_type_value = 'RETR'&#xD;&#xA;&#xD;&#xA;          &#xD;&#xA;-- Query for  Targeted group option&#xD;&#xA;&#xD;&#xA;-- Begin move to temp table if needed&#xD;&#xA;&#xD;&#xA;CREATE TABLE #TempPayee  &#xD;&#xA;(&#xD;&#xA; Person_id INT  &#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;If @Ctr &gt; 0 Or  @OrgId is Not Null Or &#xD;&#xA;  @BENEFIT_ACCOUNT_TYPE_VALUE Is Not Null Or &#xD;&#xA;  @BENEFIT_OPTION_VALUE Is Not Null &#xD;&#xA; Begin&#xD;&#xA; Insert Into #TempPayee&#xD;&#xA; SELECT DISTINCT PAYEE_PERSLINK_ID as PERSON_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA  &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE  &#xD;&#xA;  INNER JOIN SGT_MAS_BATCH_REQUEST SCH&#xD;&#xA;     ON MAS_BATCH_REQUEST_ID =@BATCHREQUESTID &#xD;&#xA;  INNER JOIN SGT_PERSON PER &#xD;&#xA;   ON PER.PERSON_ID=PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DROA&#xD;&#xA;   ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;   (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER &#xD;&#xA;    WHERE YEAR(PAYMENT_DATE) = YEAR(@EffectiveDate) &#xD;&#xA;     AND STATUS_VALUE IN ('OUST','PRCD') and PAYMENT_DATE &lt;= @EffectiveDate&#xD;&#xA;   ) AS PHH&#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  and SCH.BATCH_REQUEST_TYPE_VALUE ='TGRP'&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  AND BENEFIT_BEGIN_DATE &lt;=  @EffectiveDate&#xD;&#xA;  AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @EffectiveDate)&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('REFD','AURD')  &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN SCH.PERSON_ID IS NOT NULL &#xD;&#xA;       THEN SCH.PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;  AND CASE WHEN PA.APPLICATION_ID IS not NULL &#xD;&#xA;       THEN BA.PLAN_ID &#xD;&#xA;       ELSE DROA.PLAN_ID END&#xD;&#xA;         &#xD;&#xA;     IN (&#xD;&#xA;        Select  Case When @Ctr &gt; 0 then R.Plan_id Else P.Plan_id End&#xD;&#xA;         from Sgt_plan P left Outer Join &#xD;&#xA;         SGT_MAS_BATCH_REQUEST_PLAN R on P.Plan_id = R.Plan_id and MAS_BATCH_REQUEST_ID =@BATCHREQUESTID&#xD;&#xA;         WHERE &#xD;&#xA;         Benefit_type_value = 'RETR' and Case When @Ctr &gt; 0 then R.Plan_id Else P.Plan_id End is not null&#xD;&#xA;      )&#xD;&#xA;--to uncomment after adding fields to the table &#xD;&#xA;&#xD;&#xA;   AND isnull(BA.RETIREMENT_ORG_ID,0) = CASE WHEN SCH.ORG_ID IS NULL &#xD;&#xA;            THEN isnull(BA.RETIREMENT_ORG_ID,0) &#xD;&#xA;            ELSE SCH.ORG_ID END&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CASE WHEN SCH.BENEFIT_ACCOUNT_TYPE_VALUE IS NULL &#xD;&#xA;           THEN PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;           ELSE SCH.BENEFIT_ACCOUNT_TYPE_VALUE END&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE = CASE WHEN SCH.BENEFIT_OPTION_VALUE IS NULL &#xD;&#xA;           THEN PA.BENEFIT_OPTION_VALUE&#xD;&#xA;           ELSE SCH.BENEFIT_OPTION_VALUE END&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE = CASE WHEN SCH.BENEFIT_ACCOUNT_SUB_TYPE_VALUE IS NULL &#xD;&#xA;           THEN PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE&#xD;&#xA;           ELSE SCH.BENEFIT_ACCOUNT_SUB_TYPE_VALUE END&#xD;&#xA;  AND ((PHH.PAYEE_ACCOUNT_ID IS NULL AND ISNULL(BA.PLAN_ID,DROA.PLAN_ID) IN (7,23)) OR&#xD;&#xA;   (PHH.PAYEE_ACCOUNT_ID IS NOT NULL AND ISNULL(BA.PLAN_ID,DROA.PLAN_ID) NOT IN (7,23)))&#xD;&#xA; End&#xD;&#xA;&#xD;&#xA;-- End of move to temp table if needed&#xD;&#xA;&#xD;&#xA;SELECT @BATCHREQUESTID AS BATCHREQUESTID, &#xD;&#xA;  PERSON_ID,&#xD;&#xA;  'N' as 'IS_DATA_PULLED_FLAG',&#xD;&#xA;  'N' as 'IS_REPORT_CREATED_FLAG',&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@BATCHREQUESTID) as CREATED_BY,&#xD;&#xA;  getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@BATCHREQUESTID) as MODIFIED_BY,&#xD;&#xA;  getdate() as MODIFIED_DATE,&#xD;&#xA;  0 as UPDATE_SEQ into #Retirees&#xD;&#xA;From&#xD;&#xA;(&#xD;&#xA;-- Query for Annual and Individual opions&#xD;&#xA;-- Begin -  Query to extract DB Payee Accounts&#xD;&#xA; SELECT DISTINCT PAYEE_PERSLINK_ID as PERSON_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA  &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN &#xD;&#xA;   (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER &#xD;&#xA;    WHERE YEAR(PAYMENT_DATE) = YEAR(@EffectiveDate) &#xD;&#xA;    AND STATUS_VALUE IN ('OUST','PRCD') and PAYMENT_DATE &lt;= @EffectiveDate&#xD;&#xA;   ) AS PHH&#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PERSON PER ON PER.PERSON_ID=PA.PAYEE_PERSLINK_ID&#xD;&#xA; WHERE (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  AND BENEFIT_BEGIN_DATE &lt;=  @EffectiveDate&#xD;&#xA;  AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @EffectiveDate)&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('REFD','AURD')  &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;-- End -  Query to extract DB Payee Accounts&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;-- Query for Annual and Individual opions&#xD;&#xA;-- Begin -  Query to extract DC Payee Accounts&#xD;&#xA; SELECT DISTINCT PAYEE_PERSLINK_ID as PERSON_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA&#xD;&#xA;   ON PA.APPLICATION_ID=BA.BENEFIT_APPLICATION_ID AND BA.PLAN_ID IN (7,23)&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE  &#xD;&#xA;  INNER JOIN SGT_PERSON PER ON PER.PERSON_ID=PA.PAYEE_PERSLINK_ID&#xD;&#xA; WHERE (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  AND CV.DATA2 NOT in ('CNLD','SPND','TRMD') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  AND BENEFIT_BEGIN_DATE &lt;=  @EffectiveDate&#xD;&#xA;  AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @EffectiveDate)&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('REFD','AURD')  &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') = 'N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;-- End -  Query to extract DC Payee Accounts&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;-- Begin - Query to Extract Retirees participating in HDV and Life  Plans&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT(NOLOCK) ACC&#xD;&#xA;  INNER JOIN SGT_PLAN(NOLOCK) PLN &#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON(NOLOCK)PER&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV(NOLOCK) GHDV &#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  AND BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND ((HEALTH_INSURANCE_TYPE_VALUE IN('RT09','RT12') &#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (HEALTH_INSURANCE_TYPE_VALUE IN('NS12','ST12') &#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA;  and FROM_PERSON_ACCOUNT_ID is null&#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;  AND PLN.PLAN_ID in (12,9)&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;-- Begin - Query to Extract Retirees participating in HDV and Life  Plans&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT(NOLOCK) ACC&#xD;&#xA;  INNER JOIN SGT_PLAN(NOLOCK) PLN &#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON(NOLOCK)PER&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV(NOLOCK) GHDV &#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  AND BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND ((VISION_INSURANCE_TYPE_VALUE ='RETR'&#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (VISION_INSURANCE_TYPE_VALUE ='COBR' &#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA;  and FROM_PERSON_ACCOUNT_ID is null&#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;  AND PLN.PLAN_ID in (17)&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;-- Begin - Query to Extract Retirees participating in HDV and Life  Plans&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT(NOLOCK) ACC&#xD;&#xA;  INNER JOIN SGT_PLAN(NOLOCK) PLN &#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON(NOLOCK)PER&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV(NOLOCK) GHDV &#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  AND BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND ((DENTAL_INSURANCE_TYPE_VALUE ='RT16'&#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (DENTAL_INSURANCE_TYPE_VALUE ='CB16' &#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA;  and FROM_PERSON_ACCOUNT_ID is null&#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;  AND PLN.PLAN_ID =16&#xD;&#xA;--   exclude Dependant COBRA Payees -- to check with satya on this - discussed&#xD;&#xA;--(( health insurance type in rt9 and 12 and cobara type value is null)&#xD;&#xA;-- or (health insurance type in state or non state and cobra type in  ('R18C','R36C','RDSC')&#xD;&#xA; --))&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT(NOLOCK) ACC&#xD;&#xA;  INNER JOIN SGT_PLAN(NOLOCK) PLN &#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON(NOLOCK)PER&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_LIFE(NOLOCK) LIFE &#xD;&#xA;   ON LIFE.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  AND BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND LIFE_INSURANCE_TYPE_VALUE ='REME'&#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;-- End - Query to Extract Retirees participating in HDV and Life  Plans&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;-- Begin - Query to Extract Retirees participating in LTC Plan&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT(NOLOCK) ACC&#xD;&#xA;  INNER JOIN SGT_PLAN(NOLOCK) PLN &#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON(NOLOCK)PER&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION IBS &#xD;&#xA;   ON IBS.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='ANNL' OR @BATCHREQUESTTYPE='INON')&#xD;&#xA;  AND BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PER.PERSON_ID=(CASE WHEN @BATCHREQUESTTYPE='INON' &#xD;&#xA;       THEN @PERSON_ID &#xD;&#xA;       ELSE PER.PERSON_ID END&#xD;&#xA;        )&#xD;&#xA;  AND PLN.PLAN_ID = 15&#xD;&#xA;  AND IBS.IBS_FLAG = 'Y' &#xD;&#xA;  AND IBS.IBS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;&#xD;&#xA;-- End  - Query to Extract Retirees participating in LTC Plan&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;select * from #TempPayee&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;------------------------------- Important Note ------------------------------------&#xD;&#xA;-- to check with satya on whether we need to add conditions of payee account &#xD;&#xA;-- related columns&#xD;&#xA;-- If it has to be included then move the block marked with begin and end above&#xD;&#xA;-- (move to temp table if needed)&#xD;&#xA;-- and inner join the temp table with the following queries below &#xD;&#xA;-----------------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT(NOLOCK) ACC&#xD;&#xA;  INNER JOIN SGT_PLAN(NOLOCK) PLN &#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON(NOLOCK)PER&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV(NOLOCK) GHDV &#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN&#xD;&#xA;   (&#xD;&#xA;    select Distinct Person_account_id, Org_id &#xD;&#xA;     from Sgt_person_account_employment_DETAIL PAE&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT_DETAIL PED &#xD;&#xA;      ON PAE.PERSON_EMPLOYMENT_DTL_ID =  PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT PE&#xD;&#xA;      ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;   ) EMPDTL&#xD;&#xA;   ON ACC.PERSON_ACCOUNT_ID = EMPDTL.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='TGRP')&#xD;&#xA;  AND BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND ((HEALTH_INSURANCE_TYPE_VALUE IN('RT09','RT12') &#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (HEALTH_INSURANCE_TYPE_VALUE IN('NS12','ST12') &#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA;  and FROM_PERSON_ACCOUNT_ID is null  &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PLN.PLAN_ID in (12,9)&#xD;&#xA;  and PLN.PLAN_ID &#xD;&#xA;   IN (&#xD;&#xA;     SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN&#xD;&#xA;       WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID&#xD;&#xA;    )&#xD;&#xA;  AND isnull(EMPDTL.ORG_ID,0) = CASE WHEN @ORGID is Null then isnull(EMPDTL.ORG_ID,0) Else isnull(@OrgId,0) End    &#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT(NOLOCK) ACC&#xD;&#xA;  INNER JOIN SGT_PLAN(NOLOCK) PLN &#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON(NOLOCK)PER&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV(NOLOCK) GHDV &#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN&#xD;&#xA;   (&#xD;&#xA;    select Distinct Person_account_id, Org_id &#xD;&#xA;     from Sgt_person_account_employment_DETAIL PAE&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT_DETAIL PED &#xD;&#xA;      ON PAE.PERSON_EMPLOYMENT_DTL_ID =  PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT PE&#xD;&#xA;      ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;   ) EMPDTL&#xD;&#xA;   ON ACC.PERSON_ACCOUNT_ID = EMPDTL.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='TGRP')&#xD;&#xA;  AND BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND ((DENTAL_INSURANCE_TYPE_VALUE ='RT16'&#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (DENTAL_INSURANCE_TYPE_VALUE ='CB16'&#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA;  and FROM_PERSON_ACCOUNT_ID is null  &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PLN.PLAN_ID =16&#xD;&#xA;  and PLN.PLAN_ID &#xD;&#xA;   IN (&#xD;&#xA;     SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN&#xD;&#xA;       WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID&#xD;&#xA;    )&#xD;&#xA;  AND isnull(EMPDTL.ORG_ID,0) = CASE WHEN @ORGID is Null then isnull(EMPDTL.ORG_ID,0) Else isnull(@OrgId,0) End    &#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT(NOLOCK) ACC&#xD;&#xA;  INNER JOIN SGT_PLAN(NOLOCK) PLN &#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON(NOLOCK)PER&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_LIFE(NOLOCK) LIFE &#xD;&#xA;   ON LIFE.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN&#xD;&#xA;   (&#xD;&#xA;    select Distinct Person_account_id, Org_id &#xD;&#xA;     from Sgt_person_account_employment_DETAIL PAE&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT_DETAIL PED &#xD;&#xA;      ON PAE.PERSON_EMPLOYMENT_DTL_ID =  PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT PE&#xD;&#xA;      ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;   ) EMPDTL&#xD;&#xA;   ON ACC.PERSON_ACCOUNT_ID = EMPDTL.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='TGRP')&#xD;&#xA;  AND BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND LIFE_INSURANCE_TYPE_VALUE ='REME'&#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  and PLN.PLAN_ID &#xD;&#xA;   IN (&#xD;&#xA;     SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN&#xD;&#xA;       WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID&#xD;&#xA;    )&#xD;&#xA;  AND isnull(EMPDTL.ORG_ID,0) = CASE WHEN @ORGID is Null then isnull(EMPDTL.ORG_ID,0) Else isnull(@OrgId,0) End    &#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT(NOLOCK) ACC&#xD;&#xA;  INNER JOIN SGT_PLAN(NOLOCK) PLN &#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON(NOLOCK)PER&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_GHDV(NOLOCK) GHDV &#xD;&#xA;   ON GHDV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN&#xD;&#xA;   (&#xD;&#xA;    select Distinct Person_account_id, Org_id &#xD;&#xA;     from Sgt_person_account_employment_DETAIL PAE&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT_DETAIL PED &#xD;&#xA;      ON PAE.PERSON_EMPLOYMENT_DTL_ID =  PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT PE&#xD;&#xA;      ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;   ) EMPDTL&#xD;&#xA;   ON ACC.PERSON_ACCOUNT_ID = EMPDTL.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='TGRP')&#xD;&#xA;  AND BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND ((VISION_INSURANCE_TYPE_VALUE ='RETR'&#xD;&#xA;    AND GHDV.COBRA_TYPE_VALUE IS NULL)&#xD;&#xA;    OR (VISION_INSURANCE_TYPE_VALUE ='COBR'&#xD;&#xA;     AND GHDV.COBRA_TYPE_VALUE IN ('R18C','R36C','RDSC')))&#xD;&#xA;  and FROM_PERSON_ACCOUNT_ID is null  &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PLN.PLAN_ID =17&#xD;&#xA;  and PLN.PLAN_ID &#xD;&#xA;   IN (&#xD;&#xA;     SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN&#xD;&#xA;       WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID&#xD;&#xA;    )&#xD;&#xA;  AND isnull(EMPDTL.ORG_ID,0) = CASE WHEN @ORGID is Null then isnull(EMPDTL.ORG_ID,0) Else isnull(@OrgId,0) End    &#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA; SELECT DISTINCT PER.PERSON_ID FROM SGT_PERSON_ACCOUNT(NOLOCK) ACC&#xD;&#xA;  INNER JOIN SGT_PLAN(NOLOCK) PLN &#xD;&#xA;   ON ACC.PLAN_ID=PLN.PLAN_ID &#xD;&#xA;  INNER JOIN SGT_PERSON(NOLOCK)PER&#xD;&#xA;   ON PER.PERSON_ID=ACC.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT_PAYMENT_ELECTION IBS &#xD;&#xA;   ON IBS.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN&#xD;&#xA;   (&#xD;&#xA;    select Distinct Person_account_id, Org_id &#xD;&#xA;     from Sgt_person_account_employment_DETAIL PAE&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT_DETAIL PED &#xD;&#xA;      ON PAE.PERSON_EMPLOYMENT_DTL_ID =  PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;     Inner Join SGT_PERSON_EMPLOYMENT PE&#xD;&#xA;      ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;   ) EMPDTL&#xD;&#xA;   ON ACC.PERSON_ACCOUNT_ID = EMPDTL.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE  (@BATCHREQUESTTYPE='TGRP')&#xD;&#xA;  AND BENEFIT_TYPE_VALUE='INSR' &#xD;&#xA;  AND ACC.PLAN_PARTICIPATION_STATUS_VALUE ='ENL2' &#xD;&#xA;  AND PER.DATE_OF_DEATH IS NULL &#xD;&#xA;  AND ISNULL(SUPPRESS_ANNUAL_STATEMENT_FLAG,'N') ='N'&#xD;&#xA;  AND PLN.PLAN_ID = 15&#xD;&#xA;  AND IBS.IBS_FLAG = 'Y' &#xD;&#xA;  AND IBS.IBS_EFFECTIVE_DATE &lt;= @EffectiveDate&#xD;&#xA;  and PLN.PLAN_ID &#xD;&#xA;   IN (&#xD;&#xA;     SELECT PLAN_ID FROM SGT_MAS_BATCH_REQUEST_PLAN&#xD;&#xA;       WHERE MAS_BATCH_REQUEST_ID =@BATCHREQUESTID&#xD;&#xA;    )&#xD;&#xA;  AND isnull(EMPDTL.ORG_ID,0) = CASE WHEN @ORGID is Null then isnull(EMPDTL.ORG_ID,0) Else isnull(@OrgId,0) End&#xD;&#xA;) AS PAYEE&#xD;&#xA;ORDER BY PERSON_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;select count(*) as record_count from #Retirees">
      <parameters>
        <parameter ID="@BATCHREQUESTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllEmploymentByPersonAccount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PER.PERSON_ACCOUNT_ID,PED.*,PE.* FROM SGT_PERSON_ACCOUNT PER WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.PERSON_ID=PER.PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_PERSON SMP WITH(NOLOCK) ON SMP.MAS_SELECTION_ID=MAS.MAS_SELECTION_ID&#xD;&#xA;INNER JOIN SGT_MAS_PERSON_PLAN PPLN WITH(NOLOCK) ON PPLN.MAS_PERSON_ID=SMP.MAS_PERSON_ID AND PPLN.PLAN_ID=PER.PLAN_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON CV.CODE_ID=PER.PLAN_PARTICIPATION_STATUS_ID AND CV.CODE_VALUE=PER.PLAN_PARTICIPATION_STATUS_VALUE&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED WITH(NOLOCK) ON PER.PERSON_ACCOUNT_ID = PAED.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK) ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID AND CV.DATA2 &lt;&gt; 'WTDN' AND MAS.IS_DATA_PULLED_FLAG='N'&#xD;&#xA;AND MAS.IS_REPORT_CREATED_FLAG='N'">
      <parameters>
        <parameter ID="@MAS_BATCH_REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllPersonEmployment" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PE.* FROM SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.PERSON_ID=PE.PERSON_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID AND MAS.IS_DATA_PULLED_FLAG='N'&#xD;&#xA;AND MAS.IS_REPORT_CREATED_FLAG='N'">
      <parameters>
        <parameter ID="@MAS_BATCH_REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllPersonEmploymentDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PED.* FROM SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK) ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.PERSON_ID=PE.PERSON_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID AND MAS.IS_DATA_PULLED_FLAG='N'&#xD;&#xA;AND MAS.IS_REPORT_CREATED_FLAG='N'">
      <parameters>
        <parameter ID="@MAS_BATCH_REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllBeneficiaries" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT BEN.*,PABEN.* FROM SGT_PERSON_BENEFICIARY BEN WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_BENEFICIARY PABEN WITH(NOLOCK) ON BEN.BENEFICIARY_ID = PABEN.BENEFICIARY_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.PERSON_ID=BEN.PERSON_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID=@MAS_BATCH_REQUEST_ID AND MAS.IS_DATA_PULLED_FLAG='N'&#xD;&#xA;AND MAS.IS_REPORT_CREATED_FLAG='N'">
      <parameters>
        <parameter ID="@MAS_BATCH_REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadMASStatementFile" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_MAS_STATEMENT_FILE FIL WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION SEL WITH(NOLOCK) ON SEL.MAS_SELECTION_ID=FIL.MAS_SELECTION_ID&#xD;&#xA;INNER JOIN SGT_MAS_BATCH_REQUEST REQ WITH(NOLOCK) ON SEL.MAS_BATCH_REQUEST_ID=REQ.MAS_BATCH_REQUEST_ID&#xD;&#xA;WHERE SEL.PERSON_ID=@PERSON_ID AND&#xD;&#xA;--((GROUP_TYPE_VALUE = 'NRTR') OR (GROUP_TYPE_VALUE = 'RETR' AND STATEMENT_TYPE_VALUE = 'SUMM')) -- PIR 9790&#xD;&#xA;STATEMENT_TYPE_VALUE = 'SUMM' -- PIR 12730&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadMASSelectionOrderbyAddress" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SEL.* FROM SGT_MAS_SELECTION SEL WITH(NOLOCK)&#xD;&#xA;INNER JOIN &#xD;&#xA;(SELECT SEL.MAS_SELECTION_ID,MS.ADDR_COUNTRY_VALUE,PER.LAST_NAME FROM SGT_MAS_SELECTION SEL WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=SEL.PERSON_ID&#xD;&#xA; INNER JOIN SGT_MAS_PERSON MS WITH(NOLOCK) ON MS.MAS_SELECTION_ID=SEL.MAS_SELECTION_ID&#xD;&#xA; WHERE &#xD;&#xA; SEL.MAS_BATCH_REQUEST_ID= @BATCH_REQUEST_ID AND&#xD;&#xA; SEL.IS_DATA_PULLED_FLAG=@IS_DATA_PULLED_FLAG AND&#xD;&#xA; SEL.IS_REPORT_CREATED_FLAG=@IS_REPORT_CREATED_FLAG&#xD;&#xA; GROUP BY SEL.MAS_SELECTION_ID,MS.ADDR_COUNTRY_VALUE,PER.LAST_NAME&#xD;&#xA; ) AS TMP ON SEL.MAS_SELECTION_ID = TMP.MAS_SELECTION_ID&#xD;&#xA;ORDER BY ADDR_COUNTRY_VALUE DESC, LAST_NAME">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@IS_DATA_PULLED_FLAG" sfwDataType="string" />
        <parameter ID="@IS_REPORT_CREATED_FLAG" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadBatchRequestWithUserID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;ISNULL(USR.FIRST_NAME,'') +' '+ CASE WHEN USR.MIDDLE_INITIAL IS NULL THEN '' ELSE USR.MIDDLE_INITIAL+' ' END + ISNULL(USR.LAST_NAME,'') AS 'REQUESTED_BY',&#xD;&#xA;* FROM SGT_MAS_BATCH_REQUEST REQ WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGS_USER USR WITH(NOLOCK) ON REQ.CREATED_BY=USR.USER_ID&#xD;&#xA;WHERE REQ.MAS_BATCH_REQUEST_ID=@BATCH_REQUEST_ID">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Update_Vested_Flag" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_MAS_PERSON &#xD;&#xA;SET IS_VESTED_IN_DB = 'Y'&#xD;&#xA;WHERE MAS_PERSON_ID = @MAS_PERSON_ID&#xD;&#xA;">
      <parameters>
        <parameter ID="@MAS_PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="Select_MAS_All_Person_Plan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;MAS.PERSON_ID, &#xD;&#xA;REQ.STATEMENT_EFFECTIVE_DATE,&#xD;&#xA;(&#xD;&#xA; -- Final FAS is the amount without projections&#xD;&#xA; -- Final FAS is introduced to calculate FAS without projections.&#xD;&#xA; -- FAS related UAT PIRS are fixed. FINAL_FAS from SGT_MAS_PERSON_CALCULATION table is not used anymore&#xD;&#xA; SELECT SMPC.FINAL_AVERAGE_SALARY FROM SGT_MAS_PERSON_CALCULATION SMPC WITH(NOLOCK) &#xD;&#xA; WHERE SMPC.MAS_PERSON_ID=SMP.MAS_PERSON_ID AND SMPC.IS_DEFAULT_RETIREMENT='Y' AND SMPC.PLAN_ID=SMPP.PLAN_ID&#xD;&#xA;) AS 'FINAL_FAS',ISNULL(' - ' + SMPP.PLAN_BENEFIT_TIER_DESCRIPTION,'') AS PLAN_BENEFIT_TIER_DESCRIPTION,&#xD;&#xA;SMPP.* &#xD;&#xA;FROM SGT_MAS_PERSON_PLAN SMPP WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_MAS_PERSON SMP WITH(NOLOCK) ON SMP.MAS_PERSON_ID=SMPP.MAS_PERSON_ID&#xD;&#xA;INNER JOIN SGT_MAS_SELECTION MAS WITH(NOLOCK) ON MAS.MAS_SELECTION_ID=SMP.MAS_SELECTION_ID&#xD;&#xA;INNER JOIN SGT_MAS_BATCH_REQUEST REQ WITH(NOLOCK) ON REQ.MAS_BATCH_REQUEST_ID=MAS.MAS_BATCH_REQUEST_ID&#xD;&#xA;WHERE MAS.MAS_BATCH_REQUEST_ID = @BATCH_REQUEST_ID &#xD;&#xA;AND MAS.IS_DATA_PULLED_FLAG=@DATA_PULLED_FLAG &#xD;&#xA;AND ((@SELECTION_ID &gt; 0 AND SMP.MAS_SELECTION_ID = @SELECTION_ID) OR (@SELECTION_ID = 0 AND MAS.IS_REPORT_CREATED_FLAG='N'))">
      <parameters>
        <parameter ID="@BATCH_REQUEST_ID" sfwDataType="int" />
        <parameter ID="@DATA_PULLED_FLAG" sfwDataType="string" />
        <parameter ID="@SELECTION_ID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="MasBatchRequestId" sfwType="Column" sfwValue="mas_batch_request_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="True" sfwDataType="int" sfwRequired="False" />
    <attribute ID="GroupTypeDescription" sfwType="Description" sfwValue="group_type_description" />
    <attribute ID="GroupTypeId" sfwType="Column" sfwValue="group_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="3050" sfwDataType="int" sfwRequired="False" />
    <attribute ID="GroupTypeValue" sfwType="Column" sfwValue="group_type_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="BatchRequestTypeDescription" sfwType="Description" sfwValue="batch_request_type_description" />
    <attribute ID="BatchRequestTypeId" sfwType="Column" sfwValue="batch_request_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="3051" sfwDataType="int" sfwRequired="False" />
    <attribute ID="BatchRequestTypeValue" sfwType="Column" sfwValue="batch_request_type_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="StatementEffectiveDate" sfwType="Column" sfwValue="statement_effective_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="PersonId" sfwType="Column" sfwValue="person_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PlanParticipationStatusDescription" sfwType="Description" sfwValue="plan_participation_status_description" />
    <attribute ID="PlanParticipationStatusId" sfwType="Column" sfwValue="plan_participation_status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="3053" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PlanParticipationStatusValue" sfwType="Column" sfwValue="plan_participation_status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="JobClassDescription" sfwType="Description" sfwValue="job_class_description" />
    <attribute ID="JobClassId" sfwType="Column" sfwValue="job_class_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="314" sfwDataType="int" sfwRequired="False" />
    <attribute ID="JobClassValue" sfwType="Column" sfwValue="job_class_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="EmploymentTypeDescription" sfwType="Description" sfwValue="employment_type_description" />
    <attribute ID="EmploymentTypeId" sfwType="Column" sfwValue="employment_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="313" sfwDataType="int" sfwRequired="False" />
    <attribute ID="EmploymentTypeValue" sfwType="Column" sfwValue="employment_type_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="OrgId" sfwType="Column" sfwValue="org_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="StatusDescription" sfwType="Description" sfwValue="status_description" />
    <attribute ID="StatusId" sfwType="Column" sfwValue="status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="3052" sfwDataType="int" sfwRequired="False" />
    <attribute ID="StatusValue" sfwType="Column" sfwValue="status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="BatchCurrentStatusDescription" sfwType="Description" sfwValue="batch_current_status_description" />
    <attribute ID="BatchCurrentStatusId" sfwType="Column" sfwValue="batch_current_status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="3054" sfwDataType="int" sfwRequired="False" />
    <attribute ID="BatchCurrentStatusValue" sfwType="Column" sfwValue="batch_current_status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="ActionStatusDescription" sfwType="Description" sfwValue="action_status_description" />
    <attribute ID="ActionStatusId" sfwType="Column" sfwValue="action_status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="3055" sfwDataType="int" sfwRequired="False" />
    <attribute ID="ActionStatusValue" sfwType="Column" sfwValue="action_status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="EmploymentStatusDescription" sfwType="Description" sfwValue="employment_status_description" />
    <attribute ID="EmploymentStatusId" sfwType="Column" sfwValue="employment_status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="310" sfwDataType="int" sfwRequired="False" />
    <attribute ID="EmploymentStatusValue" sfwType="Column" sfwValue="employment_status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="PayeeOrgId" sfwType="Column" sfwValue="payee_org_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="BenefitAccountTypeDescription" sfwType="Description" sfwValue="benefit_account_type_description" />
    <attribute ID="BenefitAccountTypeId" sfwType="Column" sfwValue="benefit_account_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="1904" sfwDataType="int" sfwRequired="False" />
    <attribute ID="BenefitAccountTypeValue" sfwType="Column" sfwValue="benefit_account_type_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="BenefitAccountSubTypeDescription" sfwType="Description" sfwValue="benefit_account_sub_type_description" />
    <attribute ID="BenefitAccountSubTypeId" sfwType="Column" sfwValue="benefit_account_sub_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="2201" sfwDataType="int" sfwRequired="False" />
    <attribute ID="BenefitAccountSubTypeValue" sfwType="Column" sfwValue="benefit_account_sub_type_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="BenefitOptionDescription" sfwType="Description" sfwValue="benefit_option_description" />
    <attribute ID="BenefitOptionId" sfwType="Column" sfwValue="benefit_option_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="2216" sfwDataType="int" sfwRequired="False" />
    <attribute ID="BenefitOptionValue" sfwType="Column" sfwValue="benefit_option_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="SuppressWarningsFlag" sfwType="Column" sfwValue="suppress_warnings_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="SuppressWarningsBy" sfwType="Column" sfwValue="suppress_warnings_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="SuppressWarningsDate" sfwType="Column" sfwValue="suppress_warnings_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="BulkInsertMasDataFlag" sfwType="Column" sfwValue="bulk_insert_mas_data_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="MailingGenerateFlag" sfwType="Column" sfwValue="mailing_generate_flag" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" />
    <attribute sfwDataType="int" sfwType="Property" ID="RecordCount" sfwValue="icdoMasBatchRequest.record_count" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="AnnualStatementEffectiveDate" sfwValue="icdoMasBatchRequest.annual_statement_effective_date" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IndividualStatementEffectiveDate" sfwValue="icdoMasBatchRequest.individual_statement_effective_date" />
    <attribute sfwType="CDOCollection" sfwEntity="entMasBatchRequestPlan" ID="lstIclcNRPensionPlan" sfwValue="iclcNRPensionPlan" />
    <attribute sfwType="CDOCollection" sfwEntity="entMasBatchRequestPlan" ID="lstIclcNRInsurancePlan" sfwValue="iclcNRInsurancePlan" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="TargetedStatementEffectiveDate" sfwValue="icdoMasBatchRequest.targeted_statement_effective_date" />
    <attribute sfwType="CDOCollection" sfwEntity="entMasBatchRequestPlan" ID="lstIclcPensionPlan" sfwValue="iclcPensionPlan" />
    <attribute sfwType="CDOCollection" sfwEntity="entMasBatchRequestPlan" ID="lstIclcInsurancePlan" sfwValue="iclcInsurancePlan" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="RetireeTargetedStatementEffectiveDate" sfwValue="icdoMasBatchRequest.retiree_targeted_statement_effective_date" />
    <attribute sfwDataType="int" sfwType="Property" ID="RetiredPersonId" sfwValue="icdoMasBatchRequest.retired_person_id" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="RetireeIndividualStatementEffectiveDate" sfwValue="icdoMasBatchRequest.retiree_individual_statement_effective_date" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="RetireeAnnualStatementEffectiveDate" sfwValue="icdoMasBatchRequest.retiree_annual_statement_effective_date" />
    <attribute sfwDataType="int" sfwType="Property" ID="StatementYear" sfwValue="icdoMasBatchRequest.statement_year" />
    <attribute sfwType="Collection" sfwEntity="entMasSelection" ID="lstMasSelection" sfwValue="iclbMasSelection" />
    <attribute sfwType="Property" ID="SoftErrors" sfwValue="ibusSoftErrors" />
    <attribute sfwType="CDOCollection" sfwEntity="entMasBatchRequestPlan" ID="lstIclcPlan" sfwValue="iclcPlan" />
    <attribute ID="Org_code_non_retired" sfwDataType="string" sfwPrivate="False" sfwValue="icdoMasBatchRequest.org_code_non_retired" sfwType="Property" />
    <attribute ID="Org_code_retired" sfwDataType="string" sfwPrivate="False" sfwValue="icdoMasBatchRequest.org_code_retired" sfwType="Property" />
  </attributes>
  <objectmethods>
    <method ID="btnCount_Clicked" sfwReturnType="ArrayList" />
    <method ID="LoadSelection" sfwReturnType="Void" />
    <method ID="LoadErrors" sfwReturnType="Void" />
    <method ID="LoadMASPlan" sfwReturnType="Void" />
  </objectmethods>
  <constraint />
  <methods />
  <lifecycle />
  <ExtraFields />
</entity>