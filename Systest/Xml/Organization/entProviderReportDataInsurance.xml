<?xml version="1.0" encoding="utf-8"?>
<entity ID="entProviderReportDataInsurance" sfwMainCDO="icdoProviderReportDataInsurance" sfwType="BusinessRule" sfwActive="True" sfwStatus="Review" sfwObjectID="busProviderReportDataInsurance" sfwTableName="sgt_provider_report_data_insurance" sfwView="False">
  <queries>
    <query ID="GetCurrentMonthRegularDataByProvider" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;SPLT.PERSON_ID,SPLT.SSN,INS.PLAN_ID,SPLT.FIRST_NAME,SPLT.LAST_NAME,INS.RECORD_TYPE_VALUE,CAST(((CAST(YEAR(INS.EFFECTIVE_DATE) AS VARCHAR(4)))+'/'+(CAST(MONTH(INS.EFFECTIVE_DATE) AS VARCHAR(2)))+'/'+'01') AS DATETIME) AS EFFECTIVE_DATE,&#xD;&#xA;SUM(SPLT.PREMIUM_AMOUNT) AS PREMIUM_AMOUNT,INS.GROUP_NUMBER,SPLT.COVERAGE_CODE,INS.RATE_STRUCTURE_CODE&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE INS&#xD;&#xA;INNER JOIN SGT_PROVIDER_REPORT_DATA_INSURANCE_SPLIT SPLT&#xD;&#xA; ON SPLT.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID = INS.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID &#xD;&#xA;WHERE INS.BATCH_REQUEST_ID IS NULL AND&#xD;&#xA;INS.RECORD_TYPE_VALUE='REG' AND&#xD;&#xA;MONTH(INS.EFFECTIVE_DATE)=MONTH(@effectivedate) AND&#xD;&#xA;YEAR(INS.EFFECTIVE_DATE)=YEAR(@effectivedate) AND&#xD;&#xA;INS.PROVIDER_ORG_ID=@PROVIDER_ORG_ID&#xD;&#xA;GROUP BY SPLT.PERSON_ID,SPLT.SSN,INS.PLAN_ID,SPLT.FIRST_NAME,SPLT.LAST_NAME,INS.RECORD_TYPE_VALUE,&#xD;&#xA;CAST(((CAST(YEAR(INS.EFFECTIVE_DATE) AS VARCHAR(4)))+'/'+(CAST(MONTH(INS.EFFECTIVE_DATE) AS VARCHAR(2)))+'/'+'01') AS DATETIME),SPLT.COVERAGE_CODE,INS.RATE_STRUCTURE_CODE,INS.GROUP_NUMBER&#xD;&#xA;ORDER BY SPLT.PERSON_ID">
      <parameters>
        <parameter ID="@PROVIDER_ORG_ID" sfwDataType="int" />
        <parameter ID="@effectivedate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetCurrentMonthAdjustmentsDataByMember" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SPLT.PERSON_ID,SPLT.SSN,INS.PLAN_ID,SPLT.FIRST_NAME,SPLT.LAST_NAME,CASE WHEN SUM(SPLT.PREMIUM_AMOUNT) &gt;= 0 THEN '+ADJ' ELSE '-ADJ' END AS RECORD_TYPE_VALUE,&#xD;&#xA;CAST(((CAST(YEAR(INS.EFFECTIVE_DATE) AS VARCHAR(4)))+'/'+(CAST(MONTH(INS.EFFECTIVE_DATE) AS VARCHAR(2)))+'/'+'01') AS DATETIME) AS EFFECTIVE_DATE,SUM(SPLT.PREMIUM_AMOUNT) AS PREMIUM_AMOUNT,&#xD;&#xA;SPLT.COVERAGE_CODE,INS.RATE_STRUCTURE_CODE,INS.GROUP_NUMBER&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE INS&#xD;&#xA;INNER JOIN SGT_PROVIDER_REPORT_DATA_INSURANCE_SPLIT SPLT&#xD;&#xA; ON SPLT.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID = INS.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID&#xD;&#xA;WHERE INS.BATCH_REQUEST_ID IS NULL AND&#xD;&#xA;INS.RECORD_TYPE_VALUE &lt;&gt; 'REG' AND&#xD;&#xA;MONTH(INS.EFFECTIVE_DATE)=MONTH(@effectivedate) AND&#xD;&#xA;YEAR(INS.EFFECTIVE_DATE)=YEAR(@effectivedate) AND&#xD;&#xA;SPLT.PERSON_ID=@PERSON_ID AND INS.PLAN_ID=@PLAN_ID&#xD;&#xA;AND INS.PROVIDER_ORG_ID=@PROVIDER_ORG_ID&#xD;&#xA;GROUP BY SPLT.PERSON_ID,SPLT.SSN,INS.PLAN_ID,SPLT.FIRST_NAME,SPLT.LAST_NAME,&#xD;&#xA;CAST(((CAST(YEAR(INS.EFFECTIVE_DATE) AS VARCHAR(4)))+'/'+(CAST(MONTH(INS.EFFECTIVE_DATE) AS VARCHAR(2)))+'/'+'01') AS DATETIME),SPLT.COVERAGE_CODE,INS.RATE_STRUCTURE_CODE,INS.GROUP_NUMBER&#xD;&#xA;ORDER BY CAST(((CAST(YEAR(INS.EFFECTIVE_DATE) AS VARCHAR(4)))+'/'+(CAST(MONTH(INS.EFFECTIVE_DATE) AS VARCHAR(2)))+'/'+'01') AS DATETIME) DESC,SUM(SPLT.PREMIUM_AMOUNT) DESC">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@effectivedate" sfwDataType="DateTime" />
        <parameter ID="@PROVIDER_ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPriorMonthAdjustmentsDataByMember" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SPLT.PERSON_ID,SPLT.SSN,INS.PLAN_ID,SPLT.FIRST_NAME,SPLT.LAST_NAME,CASE WHEN SUM(SPLT.PREMIUM_AMOUNT) &gt;= 0 THEN '+ADJ' ELSE '-ADJ' END AS RECORD_TYPE_VALUE,&#xD;&#xA;CAST(((CAST(YEAR(INS.EFFECTIVE_DATE) AS VARCHAR(4)))+'/'+(CAST(MONTH(INS.EFFECTIVE_DATE) AS VARCHAR(2)))+'/'+'01') AS DATETIME) AS EFFECTIVE_DATE,SUM(SPLT.PREMIUM_AMOUNT) AS PREMIUM_AMOUNT,&#xD;&#xA;SPLT.COVERAGE_CODE,INS.RATE_STRUCTURE_CODE,INS.GROUP_NUMBER&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE INS&#xD;&#xA;INNER JOIN SGT_PROVIDER_REPORT_DATA_INSURANCE_SPLIT SPLT&#xD;&#xA; ON SPLT.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID = INS.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID&#xD;&#xA;WHERE INS.BATCH_REQUEST_ID IS NULL AND&#xD;&#xA;--RECORD_TYPE_VALUE&lt;&gt;'REG' AND&#xD;&#xA;INS.EFFECTIVE_DATE &lt; CONVERT(DATETIME,CONVERT(VARCHAR,CAST(YEAR(@effectivedate) as varchar(4)) + RIGHT('00' + CAST(MONTH(@effectivedate) as varchar(2)),2) + '01',101) ,110) AND&#xD;&#xA;SPLT.PERSON_ID=@PERSON_ID AND INS.PLAN_ID=@PLAN_ID&#xD;&#xA;AND INS.PROVIDER_ORG_ID=@PROVIDER_ORG_ID&#xD;&#xA;GROUP BY SPLT.PERSON_ID,SPLT.SSN,INS.PLAN_ID,SPLT.FIRST_NAME,SPLT.LAST_NAME,&#xD;&#xA;CAST(((CAST(YEAR(INS.EFFECTIVE_DATE) AS VARCHAR(4)))+'/'+(CAST(MONTH(INS.EFFECTIVE_DATE) AS VARCHAR(2)))+'/'+'01') AS DATETIME),SPLT.COVERAGE_CODE,INS.RATE_STRUCTURE_CODE,INS.GROUP_NUMBER&#xD;&#xA;ORDER BY CAST(((CAST(YEAR(INS.EFFECTIVE_DATE) AS VARCHAR(4)))+'/'+(CAST(MONTH(INS.EFFECTIVE_DATE) AS VARCHAR(2)))+'/'+'01') AS DATETIME) DESC,SUM(SPLT.PREMIUM_AMOUNT) DESC">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@effectivedate" sfwDataType="DateTime" />
        <parameter ID="@PROVIDER_ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadByOrgID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PROVIDER_REPORT_DATA_INSURANCE&#xD;&#xA;WHERE &#xD;&#xA;PROVIDER_ORG_ID=@PROVIDER_ORG_ID AND&#xD;&#xA;BATCH_REQUEST_ID IS NULL&#xD;&#xA;and effective_Date &lt;= @paymentdate">
      <parameters>
        <parameter ID="@PROVIDER_ORG_ID" sfwDataType="int" />
        <parameter ID="@paymentdate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetOnlyCurrentMonthAdjustments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;PERSON_ID,SSN,PLAN_ID,FIRST_NAME,LAST_NAME,RECORD_TYPE_VALUE,EFFECTIVE_DATE,SUM(PREMIUM_AMOUNT) AS PREMIUM_AMOUNT,&#xD;&#xA;COVERAGE_CODE,RATE_STRUCTURE_CODE,GROUP_NUMBER&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE WHERE &#xD;&#xA;BATCH_REQUEST_ID IS NULL AND&#xD;&#xA;RECORD_TYPE_VALUE!='REG' AND&#xD;&#xA;PROVIDER_ORG_ID=@PROVIDER_ORG_ID AND&#xD;&#xA;MONTH(EFFECTIVE_DATE)=MONTH(@effectivedate) AND&#xD;&#xA;YEAR(EFFECTIVE_DATE)=YEAR(@effectivedate) AND&#xD;&#xA;PERSON_ID NOT IN (&#xD;&#xA;SELECT PERSON_ID &#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE &#xD;&#xA;WHERE BATCH_REQUEST_ID IS NULL AND RECORD_TYPE_VALUE='REG'AND&#xD;&#xA;MONTH(EFFECTIVE_DATE)=MONTH(@effectivedate) AND YEAR(EFFECTIVE_DATE)=YEAR(@effectivedate))&#xD;&#xA;GROUP BY PERSON_ID,SSN,PLAN_ID,FIRST_NAME,LAST_NAME,RECORD_TYPE_VALUE,EFFECTIVE_DATE,COVERAGE_CODE,RATE_STRUCTURE_CODE,GROUP_NUMBER">
      <parameters>
        <parameter ID="@effectivedate" sfwDataType="DateTime" />
        <parameter ID="@PROVIDER_ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetOnlyPriorMonthAdjustments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;PERSON_ID,SSN,PLAN_ID,FIRST_NAME,LAST_NAME,RECORD_TYPE_VALUE,EFFECTIVE_DATE,SUM(PREMIUM_AMOUNT) AS PREMIUM_AMOUNT,&#xD;&#xA;COVERAGE_CODE,RATE_STRUCTURE_CODE,GROUP_NUMBER&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE WHERE &#xD;&#xA;BATCH_REQUEST_ID IS NULL AND&#xD;&#xA;RECORD_TYPE_VALUE!='REG' AND&#xD;&#xA;PROVIDER_ORG_ID=@PROVIDER_ORG_ID AND&#xD;&#xA;EFFECTIVE_DATE &lt; CONVERT(DATETIME,CONVERT(VARCHAR,CAST(YEAR(@effectivedate) as varchar(4)) + RIGHT('00' + CAST(MONTH(@effectivedate) as varchar(2)),2) + '01',101) ,110) AND&#xD;&#xA;PERSON_ID NOT IN (&#xD;&#xA;SELECT PERSON_ID &#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE &#xD;&#xA;WHERE BATCH_REQUEST_ID IS NULL AND RECORD_TYPE_VALUE='REG'AND&#xD;&#xA;MONTH(EFFECTIVE_DATE)=MONTH(@effectivedate) AND YEAR(EFFECTIVE_DATE)= YEAR(@effectivedate))&#xD;&#xA;GROUP BY PERSON_ID,SSN,PLAN_ID,FIRST_NAME,LAST_NAME,RECORD_TYPE_VALUE,EFFECTIVE_DATE,COVERAGE_CODE,RATE_STRUCTURE_CODE,GROUP_NUMBER">
      <parameters>
        <parameter ID="@effectivedate" sfwDataType="DateTime" />
        <parameter ID="@PROVIDER_ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadInsuranceDataGroupByOrgIDPlanID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;ISNULL(INSU.PROVIDER_ORG_ID,0) PROVIDER_ORG_ID,&#xD;&#xA;ISNULL(INSU.PLAN_ID,0) PLAN_ID,&#xD;&#xA;CASE WHEN ORG.ACH_ACCOUNT_NUMBER IS NOT NULL THEN ORG.ACH_ACCOUNT_NUMBER ELSE ISNULL(ORG.ORG_CODE,'') END AS ORG_CODE,&#xD;&#xA;ISNULL(ORG.ORG_NAME,'') ORG_NAME,&#xD;&#xA;ISNULL(SUM(INSU.PREMIUM_AMOUNT),0) CONTRIBUTION_AMOUNT,PAYMENT_OPTION_VALUE&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE INSU&#xD;&#xA;INNER JOIN SGT_ORGANIZATION ORG ON ORG.ORG_ID=INSU.PROVIDER_ORG_ID&#xD;&#xA;--INNER JOIN SGT_PROVIDER_REPORT_DATA_BATCH_REQUEST PRDBR WITH(NOLOCK) ON INSU.PROVIDER_ORG_ID=PRDBR.ORG_ID&#xD;&#xA;WHERE INSU.BATCH_REQUEST_ID IS NULL&#xD;&#xA;AND INSU.EFFECTIVE_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;AND ISNULL(PAYMENT_OPTION_VALUE,'') = 'A'&#xD;&#xA;--AND PRDBR.EFFECTIVE_START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;GROUP BY INSU.PROVIDER_ORG_ID,INSU.PLAN_ID,ORG.ORG_CODE,ORG.ORG_NAME,PAYMENT_OPTION_VALUE,&#xD;&#xA;CASE WHEN ORG.ACH_ACCOUNT_NUMBER IS NOT NULL THEN ORG.ACH_ACCOUNT_NUMBER ELSE ISNULL(ORG.ORG_CODE,'') END">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadInsuranceProviderData" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PRDI.*,CASE WHEN PRDI.SUBSYSTEM_VALUE = 'IBSD' THEN IBS.OTHR_RHIC_AMOUNT &#xD;&#xA;   WHEN PRDI.SUBSYSTEM_VALUE = 'PAYR' THEN EMP.RHIC_BENEFIT_AMOUNT&#xD;&#xA;   ELSE 0.0 END AS RHIC_AMOUNT_FOR_GL  ,&#xD;&#xA;CASE WHEN PRDI.SUBSYSTEM_VALUE = 'IBSD' THEN 0 &#xD;&#xA;                        WHEN PRDI.SUBSYSTEM_VALUE = 'PAYR' THEN EMP.HSA_AMOUNT * CASE WHEN EMP.RECORD_TYPE_VALUE = '-ADJ' THEN -1 ELSE 1 END&#xD;&#xA;                        ELSE 0.0 END AS HSA_AMOUNT_FOR_GL ,&#xD;&#xA;CASE WHEN PRDI.SUBSYSTEM_VALUE = 'IBSD' THEN 0 &#xD;&#xA;                        WHEN PRDI.SUBSYSTEM_VALUE = 'PAYR' THEN EMP.VENDOR_AMOUNT * CASE WHEN EMP.RECORD_TYPE_VALUE = '-ADJ' THEN -1 ELSE 1 END&#xD;&#xA;                        ELSE 0.0 END AS VENDOR_AMOUNT_FOR_GL&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE PRDI WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PROVIDER_REPORT_DATA_BATCH_REQUEST PRDBR WITH(NOLOCK) &#xD;&#xA;  ON PRDI.PROVIDER_ORG_ID=PRDBR.ORG_ID&#xD;&#xA;LEFT JOIN SGT_IBS_DETAIL IBS ON PRDI.SUBSYSTEM_REF_ID = IBS.IBS_DETAIL_ID&#xD;&#xA;LEFT JOIN SGT_EMPLOYER_PAYROLL_DETAIL EMP ON PRDI.SUBSYSTEM_REF_ID = EMP.EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;WHERE PRDI.BATCH_REQUEST_ID IS NULL&#xD;&#xA;   AND PRDBR.STATUS_VALUE='NTPR' &#xD;&#xA;   AND PRDI.EFFECTIVE_DATE &lt;= PRDBR.EFFECTIVE_START_DATE&#xD;&#xA;   AND PRDBR.EFFECTIVE_START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;   AND PRDBR.EFFECTIVE_END_DATE IS NULL&#xD;&#xA;   AND ISNULL(PRDBR.VISIBILITY_FLAG,'') = 'Y'&#xD;&#xA;   AND ISNULL(PRDI.HSA_FLAG,'') != 'Y'&#xD;&#xA;   AND ISNULL(IBS.DETAIL_STATUS_VALUE, '') &lt;&gt; 'IGNR'">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetAllAdjustments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;SPLT.PERSON_ID,SPLT.SSN,INS.PLAN_ID,SPLT.FIRST_NAME,SPLT.LAST_NAME,CASE WHEN SUM(SPLT.PREMIUM_AMOUNT) &gt;= 0 THEN '+ADJ' ELSE '-ADJ' END AS RECORD_TYPE_VALUE,&#xD;&#xA;CAST(((CAST(YEAR(INS.EFFECTIVE_DATE) AS VARCHAR(4)))+'/'+(CAST(MONTH(INS.EFFECTIVE_DATE) AS VARCHAR(2)))+'/'+'01') AS DATETIME) AS EFFECTIVE_DATE,SUM(SPLT.PREMIUM_AMOUNT) AS PREMIUM_AMOUNT,&#xD;&#xA;SPLT.COVERAGE_CODE,INS.RATE_STRUCTURE_CODE,INS.GROUP_NUMBER&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE  INS&#xD;&#xA;INNER JOIN SGT_PROVIDER_REPORT_DATA_INSURANCE_SPLIT SPLT&#xD;&#xA; ON SPLT.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID = INS.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID&#xD;&#xA;WHERE INS.BATCH_REQUEST_ID IS NULL AND&#xD;&#xA;--RECORD_TYPE_VALUE&lt;&gt;'REG' AND&#xD;&#xA;INS.PROVIDER_ORG_ID=@PROVIDER_ORG_ID AND&#xD;&#xA;INS.EFFECTIVE_DATE &lt;= CONVERT(DATETIME,CONVERT(VARCHAR,CAST(YEAR(@effectivedate) as varchar(4)) + RIGHT('00' + CAST(MONTH(@effectivedate) as varchar(2)),2) + '01',101) ,110) AND&#xD;&#xA;SPLT.PERSON_ID NOT IN (&#xD;&#xA;SELECT SPT.PERSON_ID &#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE INSR&#xD;&#xA;INNER JOIN SGT_PROVIDER_REPORT_DATA_INSURANCE_SPLIT SPT&#xD;&#xA; ON SPT.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID = INSR.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID&#xD;&#xA;WHERE INSR.BATCH_REQUEST_ID IS NULL AND INSR.RECORD_TYPE_VALUE='REG' AND INSR.PROVIDER_ORG_ID=@PROVIDER_ORG_ID AND&#xD;&#xA;MONTH(INSR.EFFECTIVE_DATE)=MONTH(@effectivedate) AND YEAR(INSR.EFFECTIVE_DATE)= YEAR(@effectivedate))&#xD;&#xA;GROUP BY SPLT.PERSON_ID,SPLT.SSN,INS.PLAN_ID,SPLT.FIRST_NAME,SPLT.LAST_NAME,&#xD;&#xA;CAST(((CAST(YEAR(INS.EFFECTIVE_DATE) AS VARCHAR(4)))+'/'+(CAST(MONTH(INS.EFFECTIVE_DATE) AS VARCHAR(2)))+'/'+'01') AS DATETIME),SPLT.COVERAGE_CODE,INS.RATE_STRUCTURE_CODE,INS.GROUP_NUMBER&#xD;&#xA;ORDER BY SPLT.PERSON_ID, CAST(((CAST(YEAR(INS.EFFECTIVE_DATE) AS VARCHAR(4)))+'/'+(CAST(MONTH(INS.EFFECTIVE_DATE) AS VARCHAR(2)))+'/'+'01') AS DATETIME) DESC,&#xD;&#xA;SUM(SPLT.PREMIUM_AMOUNT) DESC">
      <parameters>
        <parameter ID="@PROVIDER_ORG_ID" sfwDataType="int" />
        <parameter ID="@effectivedate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetDistinctPersonAdjustments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;SPLT.PERSON_ID,SPLT.SSN,INS.PLAN_ID,SPLT.FIRST_NAME,SPLT.LAST_NAME&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE INS&#xD;&#xA;INNER JOIN SGT_PROVIDER_REPORT_DATA_INSURANCE_SPLIT SPLT&#xD;&#xA; ON SPLT.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID = INS.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID&#xD;&#xA;WHERE INS.BATCH_REQUEST_ID IS NULL AND&#xD;&#xA;--RECORD_TYPE_VALUE!='REG' AND&#xD;&#xA;INS.PROVIDER_ORG_ID=@PROVIDER_ORG_ID AND&#xD;&#xA;INS.EFFECTIVE_DATE &lt;= CONVERT(DATETIME,CONVERT(VARCHAR,CAST(YEAR(@effectivedate) as varchar(4)) + RIGHT('00' + CAST(MONTH(@effectivedate) as varchar(2)),2) + '01',101) ,110) AND&#xD;&#xA;SPLT.PERSON_ID NOT IN (&#xD;&#xA;SELECT SPT.PERSON_ID &#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE  INSUR&#xD;&#xA;INNER JOIN SGT_PROVIDER_REPORT_DATA_INSURANCE_SPLIT SPT&#xD;&#xA; ON SPT.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID = INSUR.PROVIDER_REPORT_DATA_INSURANCE_COMP_ID&#xD;&#xA;WHERE INSUR.BATCH_REQUEST_ID IS NULL AND INSUR.RECORD_TYPE_VALUE='REG' AND INSUR.PROVIDER_ORG_ID=@PROVIDER_ORG_ID AND&#xD;&#xA;MONTH(INSUR.EFFECTIVE_DATE)=MONTH(@effectivedate) AND YEAR(INSUR.EFFECTIVE_DATE)= YEAR(@effectivedate))&#xD;&#xA;GROUP BY SPLT.PERSON_ID,SPLT.SSN,INS.PLAN_ID,SPLT.FIRST_NAME,SPLT.LAST_NAME&#xD;&#xA;ORDER BY SPLT.PERSON_ID">
      <parameters>
        <parameter ID="@PROVIDER_ORG_ID" sfwDataType="int" />
        <parameter ID="@effectivedate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetTotalPremiumAmount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(PREMIUM_AMOUNT) AS TOTAL_PREMIUM_AMOUNT&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE WHERE &#xD;&#xA;BATCH_REQUEST_ID IS NULL AND&#xD;&#xA;((MONTH(EFFECTIVE_DATE)=MONTH(@EFFECTIVEDATE) AND YEAR(EFFECTIVE_DATE)=YEAR(@EFFECTIVEDATE)) OR&#xD;&#xA;(EFFECTIVE_DATE &lt; CONVERT(DATETIME,CONVERT(VARCHAR,CAST(YEAR(@EFFECTIVEDATE) AS VARCHAR(4)) + RIGHT('00' + CAST(MONTH(@EFFECTIVEDATE) AS VARCHAR(2)),2) + '01',101) ,110)&#xD;&#xA;)) AND &#xD;&#xA;PROVIDER_ORG_ID=@PROVIDER_ORG_ID">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
        <parameter ID="@PROVIDER_ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptGroupLifePremium" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @EFFECTIVEDATE DATETIME&#xD;&#xA;SET @EFFECTIVEDATE = GETDATE()&#xD;&#xA;&#xD;&#xA;DECLARE @AGECALCDATE DATETIME&#xD;&#xA;&#xD;&#xA;IF @BATCHREQUESTID IS NOT NULL BEGIN&#xD;&#xA; SELECT  @EFFECTIVEDATE = EFFECTIVE_START_DATE &#xD;&#xA;  FROM SGT_PROVIDER_REPORT_DATA_BATCH_REQUEST &#xD;&#xA;  WHERE PROVIDER_REPORT_DATA_BATCH_REQUEST_ID = @BATCHREQUESTID&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; PROVIDER_REPORT_DATA_INSURANCE_COMP_ID,&#xD;&#xA; SUBSYSTEM_VALUE,&#xD;&#xA; A.RECORD_TYPE_VALUE,&#xD;&#xA; SUBSYSTEM_REF_ID,&#xD;&#xA; A.PERSON_ID,A.PLAN_ID,&#xD;&#xA; A.PROVIDER_ORG_ID,&#xD;&#xA; EFFECTIVE_DATE,A.PREMIUM_AMOUNT,&#xD;&#xA; C.PERSON_ACCOUNT_ID,&#xD;&#xA; BASIC_PREMIUM * case when b.RECORD_TYPE_VALUE = '-ADJ' then -1 else 1 end as BASIC_PREMIUM,&#xD;&#xA; SUPPLEMENTAL_PREMIUM * case when b.RECORD_TYPE_VALUE = '-ADJ' then -1 else 1 end as SUPPLEMENTAL_PREMIUM ,          &#xD;&#xA; DEPENDENT_PREMIUM * case when b.RECORD_TYPE_VALUE = '-ADJ' then -1 else 1 end  as DEPENDENT_PREMIUM,                       &#xD;&#xA; SPOUSE_PREMIUM * case when b.RECORD_TYPE_VALUE = '-ADJ' then -1 else 1 end  as SPOUSE_PREMIUM ,&#xD;&#xA; LIFE_BASIC_COVERAGE_AMOUNT * case when b.RECORD_TYPE_VALUE = '-ADJ' then -1 else 1 end as LIFE_BASIC_COVERAGE_AMOUNT,&#xD;&#xA; LIFE_SUPP_COVERAGE_AMOUNT * case when b.RECORD_TYPE_VALUE = '-ADJ' then -1 else 1 end as LIFE_SUPP_COVERAGE_AMOUNT,&#xD;&#xA; LIFE_SPOUSE_SUPP_COVERAGE_AMOUNT * case when b.RECORD_TYPE_VALUE = '-ADJ' then -1 else 1 end as LIFE_SPOUSE_SUPP_COVERAGE_AMOUNT ,&#xD;&#xA; LIFE_DEP_SUPP_COVERAGE_AMOUNT * case when b.RECORD_TYPE_VALUE = '-ADJ' then -1 else 1 end as LIFE_DEP_SUPP_COVERAGE_AMOUNT,&#xD;&#xA; AD_AND_D_BASIC_PREMIUM_RATE * case when b.RECORD_TYPE_VALUE = '-ADJ' then -1 else 1 end as AD_AND_D_BASIC_PREMIUM_RATE,&#xD;&#xA; AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE * case when b.RECORD_TYPE_VALUE = '-ADJ' then -1 else 1 end as AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE&#xD;&#xA;INTO ##TEMP1&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE A &#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B&#xD;&#xA; ON A.SUBSYSTEM_REF_ID = B.EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT C &#xD;&#xA; ON A.PERSON_ID = C.PERSON_ID AND A.PLAN_ID = C.PLAN_ID&#xD;&#xA;WHERE ISNULL(BATCH_REQUEST_ID,0) = ISNULL(@BATCHREQUESTID,0)&#xD;&#xA; AND SUBSYSTEM_VALUE = 'PAYR' AND A.PLAN_ID = 13&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; PROVIDER_REPORT_DATA_INSURANCE_COMP_ID,&#xD;&#xA; SUBSYSTEM_VALUE,&#xD;&#xA; A.RECORD_TYPE_VALUE,&#xD;&#xA; SUBSYSTEM_REF_ID,&#xD;&#xA; A.PERSON_ID,A.PLAN_ID,&#xD;&#xA; A.PROVIDER_ORG_ID,&#xD;&#xA; EFFECTIVE_DATE,A.PREMIUM_AMOUNT,&#xD;&#xA; C.PERSON_ACCOUNT_ID,&#xD;&#xA; LIFE_BASIC_PREMIUM_AMOUNT AS BASIC_PREMIUM,&#xD;&#xA; LIFE_SUPP_PREMIUM_AMOUNT  AS  SUPPLEMENTAL_PREMIUM,             &#xD;&#xA; LIFE_DEP_SUPP_PREMIUM_AMOUNT AS DEPENDENT_PREMIUM ,&#xD;&#xA; LIFE_SPOUSE_SUPP_PREMIUM_AMOUNT AS SPOUSE_PREMIUM,   &#xD;&#xA; LIFE_BASIC_COVERAGE_AMOUNT,&#xD;&#xA; LIFE_SUPP_COVERAGE_AMOUNT,&#xD;&#xA; LIFE_SPOUSE_SUPP_COVERAGE_AMOUNT,&#xD;&#xA; LIFE_DEP_SUPP_COVERAGE_AMOUNT,&#xD;&#xA; AD_AND_D_BASIC_PREMIUM_RATE,&#xD;&#xA; AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE A &#xD;&#xA;INNER JOIN SGT_IBS_DETAIL B&#xD;&#xA; ON A.SUBSYSTEM_REF_ID = B.IBS_DETAIL_ID AND ISNULL(B.DETAIL_STATUS_VALUE, '') &lt;&gt; 'IGNR'&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT C &#xD;&#xA; ON A.PERSON_ID = C.PERSON_ID AND A.PLAN_ID = C.PLAN_ID&#xD;&#xA;WHERE ISNULL(BATCH_REQUEST_ID,0) = ISNULL(@BATCHREQUESTID,0)&#xD;&#xA; AND SUBSYSTEM_VALUE = 'IBSD' AND A.PLAN_ID = 13&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; H.PERSON_ACCOUNT_ID,&#xD;&#xA; H.PERSON_ID,&#xD;&#xA; H.RECORD_TYPE_VALUE,&#xD;&#xA; HIS.LIFE_INSURANCE_TYPE_VALUE,&#xD;&#xA; CAST('BASC' as  varchar(4)) AS LEVEL_OF_COVERAGE_VALUE,&#xD;&#xA; H.LIFE_BASIC_COVERAGE_AMOUNT AS COVERAGE_AMOUNT ,&#xD;&#xA; CAST(NULL AS VARCHAR(4)) AS SUPPLEMENTAL_RATE_CRITERIA_VALUE,&#xD;&#xA; DATEDIFF(YY,E.DATE_OF_BIRTH,H.EFFECTIVE_DATE) AS AGE,&#xD;&#xA; CAST(0 AS INT)  AS MIN_AGE_YRS, CAST(0 AS INT) AS MAX_AGE_YRS,&#xD;&#xA; H.PREMIUM_AMOUNT,H.EFFECTIVE_DATE,&#xD;&#xA; CAST(NULL AS VARCHAR(100))  AS COVERAGE_DESCRIPTION,&#xD;&#xA; CAST(NULL AS VARCHAR(100))  AS RATING_CRITERIA,&#xD;&#xA; CAST(BASIC_PREMIUM as decimal(13,4)) as REP_PREMIUM_AMOUNT,&#xD;&#xA; cast(H.AD_AND_D_BASIC_PREMIUM_RATE as decimal(13,4))  as Rate,&#xD;&#xA; BASIC_PREMIUM,&#xD;&#xA; SUPPLEMENTAL_PREMIUM,          &#xD;&#xA; DEPENDENT_PREMIUM,                       &#xD;&#xA; SPOUSE_PREMIUM,&#xD;&#xA; H.AD_AND_D_BASIC_PREMIUM_RATE,&#xD;&#xA; H.AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE,&#xD;&#xA; cast(0 as decimal(13,4)) as SUPPLEMENTAL_PREMIUM_RATE_AMT,&#xD;&#xA; NULL AS LIFE_COUNT&#xD;&#xA;INTO ##TEMPFinal &#xD;&#xA;FROM ##Temp1 h&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY HIS WITH(NOLOCK) ON HIS.PERSON_ACCOUNT_ID = h.PERSON_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND HIS.LEVEL_OF_COVERAGE_VALUE = 'BASC'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND HIS.EFFECTIVE_START_DATE != ISNULL(HIS.EFFECTIVE_END_DATE, '99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND HIS.EFFECTIVE_START_DATE = &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(SELECT TOP 1 HIS1.EFFECTIVE_START_DATE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_LIFE_HISTORY HIS1 (NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE HIS1.PERSON_ACCOUNT_ID = H.PERSON_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND (HIS1.EFFECTIVE_START_DATE != ISNULL(HIS1.EFFECTIVE_END_DATE, '99991231')) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND&#x9;(H.EFFECTIVE_DATE BETWEEN HIS1.EFFECTIVE_START_DATE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND ISNULL(HIS1.EFFECTIVE_END_DATE, '99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY HIS1.EFFECTIVE_START_DATE DESC, ISNULL(HIS1.EFFECTIVE_END_DATE, '99991231') DESC&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;INNER JOIN SGT_PERSON E &#xD;&#xA; ON E.PERSON_ID = H.PERSON_ID&#xD;&#xA;AND ISNULL(BASIC_PREMIUM,0) &lt;&gt; 0 &#xD;&#xA;&#xD;&#xA;UNION ALL &#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; H.PERSON_ACCOUNT_ID,&#xD;&#xA; H.PERSON_ID,&#xD;&#xA; H.RECORD_TYPE_VALUE,&#xD;&#xA; HIS.LIFE_INSURANCE_TYPE_VALUE,&#xD;&#xA; CAST('SPML' as  varchar(4)) AS LEVEL_OF_COVERAGE_VALUE,&#xD;&#xA; H.LIFE_SUPP_COVERAGE_AMOUNT AS COVERAGE_AMOUNT ,&#xD;&#xA; G.SUPPLEMENTAL_RATE_CRITERIA_VALUE,&#xD;&#xA; DATEDIFF(YY,E.DATE_OF_BIRTH,H.EFFECTIVE_DATE) AS AGE,&#xD;&#xA; MIN_AGE_YRS, MAX_AGE_YRS,&#xD;&#xA; H.PREMIUM_AMOUNT,H.EFFECTIVE_DATE,&#xD;&#xA; CAST(NULL AS VARCHAR(100))  AS COVERAGE_DESCRIPTION,&#xD;&#xA; CAST(NULL AS VARCHAR(100))  AS RATING_CRITERIA,&#xD;&#xA; CAST(SUPPLEMENTAL_PREMIUM as decimal(13,4)) as REP_PREMIUM_AMOUNT,&#xD;&#xA; Cast(H.AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE as decimal(13,4)) as Rate,&#xD;&#xA; BASIC_PREMIUM,&#xD;&#xA; SUPPLEMENTAL_PREMIUM,          &#xD;&#xA; DEPENDENT_PREMIUM,                       &#xD;&#xA; SPOUSE_PREMIUM,&#xD;&#xA; H.AD_AND_D_BASIC_PREMIUM_RATE,&#xD;&#xA; H.AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE,&#xD;&#xA; SUPPLEMENTAL_PREMIUM_RATE_AMT,&#xD;&#xA; NULL AS LIFE_COUNT&#xD;&#xA;FROM ##Temp1 h&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY HIS WITH(NOLOCK) ON HIS.PERSON_ACCOUNT_ID = h.PERSON_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND HIS.LEVEL_OF_COVERAGE_VALUE = 'SPML'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND HIS.EFFECTIVE_START_DATE != ISNULL(HIS.EFFECTIVE_END_DATE, '99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND HIS.EFFECTIVE_START_DATE = &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(SELECT TOP 1 HIS1.EFFECTIVE_START_DATE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_LIFE_HISTORY HIS1 (NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE HIS1.PERSON_ACCOUNT_ID = H.PERSON_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND (HIS1.EFFECTIVE_START_DATE != ISNULL(HIS1.EFFECTIVE_END_DATE, '99991231')) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND&#x9;(H.EFFECTIVE_DATE BETWEEN HIS1.EFFECTIVE_START_DATE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND ISNULL(HIS1.EFFECTIVE_END_DATE, '99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY HIS1.EFFECTIVE_START_DATE DESC, ISNULL(HIS1.EFFECTIVE_END_DATE, '99991231') DESC&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;INNER JOIN SGT_PERSON E &#xD;&#xA; ON E.PERSON_ID = H.PERSON_ID&#xD;&#xA;INNER JOIN SGT_ORG_PLAN_LIFE_RATE G &#xD;&#xA; ON G.LIFE_INSURANCE_TYPE_VALUE = HIS.LIFE_INSURANCE_TYPE_VALUE &#xD;&#xA;  AND G.LEVEL_OF_COVERAGE_VALUE = 'SPML'&#xD;&#xA;  AND ISNULL(G.SUPPLEMENTAL_COVERAGE_AMT,0)  = CASE WHEN G.LEVEL_OF_COVERAGE_VALUE = 'DSPL' &#xD;&#xA;    THEN abs(H.LIFE_DEP_SUPP_COVERAGE_AMOUNT)&#xD;&#xA;    ELSE ISNULL(G.SUPPLEMENTAL_COVERAGE_AMT,0)  END&#xD;&#xA;WHERE CASE WHEN MONTH(E.DATE_OF_BIRTH) &lt; MONTH(CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) )&#xD;&#xA;     OR (&#xD;&#xA;       MONTH(E.DATE_OF_BIRTH) =  MONTH(CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) )&#xD;&#xA;      AND DAY(E.DATE_OF_BIRTH) &lt;=  DAY(CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) )&#xD;&#xA;      )&#xD;&#xA;  THEN  DATEDIFF(YY,E.DATE_OF_BIRTH,CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) )  &#xD;&#xA;  ELSE DATEDIFF(YY,E.DATE_OF_BIRTH,CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) ) -1 END&#xD;&#xA;BETWEEN G.MIN_AGE_YRS AND G.MAX_AGE_YRS&#xD;&#xA;AND G.EFFECTIVE_DATE = (SELECT TOP 1 EFFECTIVE_DATE  FROM SGT_ORG_PLAN_LIFE_RATE RATE&#xD;&#xA;      WHERE EFFECTIVE_DATE &lt;= H.EFFECTIVE_DATE &#xD;&#xA;       AND RATE.LIFE_INSURANCE_TYPE_VALUE = G.LIFE_INSURANCE_TYPE_VALUE &#xD;&#xA;       AND RATE.LEVEL_OF_COVERAGE_VALUE = G.LEVEL_OF_COVERAGE_VALUE&#xD;&#xA;      ORDER BY EFFECTIVE_DATE DESC)&#xD;&#xA;AND ISNULL(SUPPLEMENTAL_PREMIUM,0) &lt;&gt; 0 &#xD;&#xA;&#xD;&#xA;UNION ALL &#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; H.PERSON_ACCOUNT_ID,&#xD;&#xA; H.PERSON_ID,&#xD;&#xA; H.RECORD_TYPE_VALUE,&#xD;&#xA; HIS.LIFE_INSURANCE_TYPE_VALUE,&#xD;&#xA; CAST('DSPL' as  varchar(4)) AS LEVEL_OF_COVERAGE_VALUE,&#xD;&#xA; H.LIFE_DEP_SUPP_COVERAGE_AMOUNT AS COVERAGE_AMOUNT ,&#xD;&#xA; G.SUPPLEMENTAL_RATE_CRITERIA_VALUE,&#xD;&#xA; DATEDIFF(YY,E.DATE_OF_BIRTH,H.EFFECTIVE_DATE) AS AGE,&#xD;&#xA; MIN_AGE_YRS, MAX_AGE_YRS,&#xD;&#xA; H.PREMIUM_AMOUNT,H.EFFECTIVE_DATE,&#xD;&#xA; CAST(NULL AS VARCHAR(100))  AS COVERAGE_DESCRIPTION,&#xD;&#xA; CAST(NULL AS VARCHAR(100))  AS RATING_CRITERIA,&#xD;&#xA; CAST(DEPENDENT_PREMIUM as decimal(13,4)) as REP_PREMIUM_AMOUNT,&#xD;&#xA; cast(G.SUPPLEMENTAL_PREMIUM_AMT  as decimal(13,4)) as Rate,&#xD;&#xA; BASIC_PREMIUM,&#xD;&#xA; SUPPLEMENTAL_PREMIUM,          &#xD;&#xA; DEPENDENT_PREMIUM,                       &#xD;&#xA; SPOUSE_PREMIUM,&#xD;&#xA; H.AD_AND_D_BASIC_PREMIUM_RATE,&#xD;&#xA; H.AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE,&#xD;&#xA; cast(0 as decimal(13,4)) as SUPPLEMENTAL_PREMIUM_RATE_AMT,&#xD;&#xA; NULL AS LIFE_COUNT&#xD;&#xA;FROM ##Temp1 h&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY HIS WITH(NOLOCK) ON HIS.PERSON_ACCOUNT_ID = h.PERSON_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND HIS.LEVEL_OF_COVERAGE_VALUE = 'DSPL'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND HIS.EFFECTIVE_START_DATE != ISNULL(HIS.EFFECTIVE_END_DATE, '99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND HIS.EFFECTIVE_START_DATE = &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(SELECT TOP 1 HIS1.EFFECTIVE_START_DATE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_LIFE_HISTORY HIS1 (NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE HIS1.PERSON_ACCOUNT_ID = H.PERSON_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND (HIS1.EFFECTIVE_START_DATE != ISNULL(HIS1.EFFECTIVE_END_DATE, '99991231')) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND&#x9;(H.EFFECTIVE_DATE BETWEEN HIS1.EFFECTIVE_START_DATE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND ISNULL(HIS1.EFFECTIVE_END_DATE, '99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY HIS1.EFFECTIVE_START_DATE DESC, ISNULL(HIS1.EFFECTIVE_END_DATE, '99991231') DESC&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#xD;&#xA;INNER JOIN SGT_PERSON E &#xD;&#xA; ON E.PERSON_ID = H.PERSON_ID&#xD;&#xA;INNER JOIN SGT_ORG_PLAN_LIFE_RATE G &#xD;&#xA; ON G.LIFE_INSURANCE_TYPE_VALUE = HIS.LIFE_INSURANCE_TYPE_VALUE &#xD;&#xA;  AND G.LEVEL_OF_COVERAGE_VALUE = 'DSPL'&#xD;&#xA;  AND ISNULL(G.SUPPLEMENTAL_COVERAGE_AMT,0)  = CASE WHEN G.LEVEL_OF_COVERAGE_VALUE = 'DSPL' &#xD;&#xA;    THEN abs(H.LIFE_DEP_SUPP_COVERAGE_AMOUNT)&#xD;&#xA;    ELSE ISNULL(G.SUPPLEMENTAL_COVERAGE_AMT,0)  END&#xD;&#xA;WHERE CASE WHEN MONTH(E.DATE_OF_BIRTH) &lt; MONTH(CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) )&#xD;&#xA;     OR (&#xD;&#xA;       MONTH(E.DATE_OF_BIRTH) =  MONTH(CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) )&#xD;&#xA;      AND DAY(E.DATE_OF_BIRTH) &lt;=  DAY(CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) )&#xD;&#xA;      )&#xD;&#xA;  THEN  DATEDIFF(YY,E.DATE_OF_BIRTH,CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) )  &#xD;&#xA;  ELSE DATEDIFF(YY,E.DATE_OF_BIRTH,CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) ) -1 END&#xD;&#xA;BETWEEN G.MIN_AGE_YRS AND G.MAX_AGE_YRS&#xD;&#xA;AND G.EFFECTIVE_DATE = (SELECT TOP 1 EFFECTIVE_DATE  FROM SGT_ORG_PLAN_LIFE_RATE RATE&#xD;&#xA;      WHERE EFFECTIVE_DATE &lt;= H.EFFECTIVE_DATE &#xD;&#xA;       AND RATE.LIFE_INSURANCE_TYPE_VALUE = G.LIFE_INSURANCE_TYPE_VALUE &#xD;&#xA;       AND RATE.LEVEL_OF_COVERAGE_VALUE = G.LEVEL_OF_COVERAGE_VALUE&#xD;&#xA;      ORDER BY EFFECTIVE_DATE DESC)&#xD;&#xA;AND ISNULL(DEPENDENT_PREMIUM,0) &lt;&gt; 0 &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UNION ALL &#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; H.PERSON_ACCOUNT_ID,&#xD;&#xA; H.PERSON_ID,&#xD;&#xA; H.RECORD_TYPE_VALUE,&#xD;&#xA; HIS.LIFE_INSURANCE_TYPE_VALUE,&#xD;&#xA; CAST('SPSL' as  varchar(4)) AS LEVEL_OF_COVERAGE_VALUE,&#xD;&#xA; H.LIFE_SPOUSE_SUPP_COVERAGE_AMOUNT AS COVERAGE_AMOUNT ,&#xD;&#xA; G.SUPPLEMENTAL_RATE_CRITERIA_VALUE,&#xD;&#xA; DATEDIFF(YY,E.DATE_OF_BIRTH,H.EFFECTIVE_DATE) AS AGE,&#xD;&#xA; MIN_AGE_YRS, MAX_AGE_YRS,&#xD;&#xA; H.PREMIUM_AMOUNT,H.EFFECTIVE_DATE,&#xD;&#xA; CAST(NULL AS VARCHAR(100))  AS COVERAGE_DESCRIPTION,&#xD;&#xA; CAST(NULL AS VARCHAR(100))  AS RATING_CRITERIA,&#xD;&#xA; CAST(SPOUSE_PREMIUM as decimal(13,4)) as REP_PREMIUM_AMOUNT,&#xD;&#xA; cast(G.SUPPLEMENTAL_PREMIUM_RATE_AMT  as decimal(13,4)) as Rate,&#xD;&#xA; BASIC_PREMIUM,&#xD;&#xA; SUPPLEMENTAL_PREMIUM,          &#xD;&#xA; DEPENDENT_PREMIUM,                       &#xD;&#xA; SPOUSE_PREMIUM,&#xD;&#xA; H.AD_AND_D_BASIC_PREMIUM_RATE,&#xD;&#xA; H.AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE,&#xD;&#xA; cast(0 as decimal(13,4)) as SUPPLEMENTAL_PREMIUM_RATE_AMT,&#xD;&#xA; NULL AS LIFE_COUNT &#xD;&#xA;FROM ##Temp1 h&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY HIS WITH(NOLOCK) ON HIS.PERSON_ACCOUNT_ID = h.PERSON_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND HIS.LEVEL_OF_COVERAGE_VALUE = 'SPSL'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND HIS.EFFECTIVE_START_DATE != ISNULL(HIS.EFFECTIVE_END_DATE, '99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND HIS.EFFECTIVE_START_DATE = &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(SELECT TOP 1 HIS1.EFFECTIVE_START_DATE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_LIFE_HISTORY HIS1 (NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE HIS1.PERSON_ACCOUNT_ID = H.PERSON_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND (HIS1.EFFECTIVE_START_DATE != ISNULL(HIS1.EFFECTIVE_END_DATE, '99991231')) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND&#x9;(H.EFFECTIVE_DATE BETWEEN HIS1.EFFECTIVE_START_DATE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND ISNULL(HIS1.EFFECTIVE_END_DATE, '99991231')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY HIS1.EFFECTIVE_START_DATE DESC, ISNULL(HIS1.EFFECTIVE_END_DATE, '99991231') DESC&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;INNER JOIN SGT_PERSON E &#xD;&#xA; ON E.PERSON_ID = H.PERSON_ID&#xD;&#xA;INNER JOIN SGT_ORG_PLAN_LIFE_RATE G &#xD;&#xA; ON G.LIFE_INSURANCE_TYPE_VALUE = HIS.LIFE_INSURANCE_TYPE_VALUE &#xD;&#xA;  AND G.LEVEL_OF_COVERAGE_VALUE = 'SPSL'&#xD;&#xA;  AND ISNULL(G.SUPPLEMENTAL_COVERAGE_AMT,0)  = CASE WHEN G.LEVEL_OF_COVERAGE_VALUE = 'DSPL' &#xD;&#xA;    THEN abs(H.LIFE_DEP_SUPP_COVERAGE_AMOUNT)&#xD;&#xA;    ELSE ISNULL(G.SUPPLEMENTAL_COVERAGE_AMT,0)  END&#xD;&#xA;WHERE CASE WHEN MONTH(E.DATE_OF_BIRTH) &lt; MONTH(CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) )&#xD;&#xA;     OR (&#xD;&#xA;       MONTH(E.DATE_OF_BIRTH) =  MONTH(CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) )&#xD;&#xA;      AND DAY(E.DATE_OF_BIRTH) &lt;=  DAY(CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) )&#xD;&#xA;      )&#xD;&#xA;  THEN  DATEDIFF(YY,E.DATE_OF_BIRTH,CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) )  &#xD;&#xA;  ELSE DATEDIFF(YY,E.DATE_OF_BIRTH,CAST(CAST(YEAR(H.EFFECTIVE_DATE) -1 AS VARCHAR(4))+'1231' AS DATETIME) ) -1 END&#xD;&#xA;BETWEEN G.MIN_AGE_YRS AND G.MAX_AGE_YRS&#xD;&#xA;AND G.EFFECTIVE_DATE = (SELECT TOP 1 EFFECTIVE_DATE  FROM SGT_ORG_PLAN_LIFE_RATE RATE&#xD;&#xA;      WHERE EFFECTIVE_DATE &lt;= H.EFFECTIVE_DATE &#xD;&#xA;       AND RATE.LIFE_INSURANCE_TYPE_VALUE = G.LIFE_INSURANCE_TYPE_VALUE &#xD;&#xA;       AND RATE.LEVEL_OF_COVERAGE_VALUE = G.LEVEL_OF_COVERAGE_VALUE&#xD;&#xA;      ORDER BY EFFECTIVE_DATE DESC)&#xD;&#xA;AND ISNULL(SPOUSE_PREMIUM,0) &lt;&gt; 0 &#xD;&#xA;&#xD;&#xA;SELECT * INTO ##TEMP11 FROM ##tempfinal WHERE  LEVEL_OF_COVERAGE_VALUE  IN ('BASC','SPML')&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE ##TEMP11 SET COVERAGE_DESCRIPTION = 'AD&amp;D'+ &#xD;&#xA;   CASE WHEN LEVEL_OF_COVERAGE_VALUE  ='BASC' THEN ' BASIC' ELSE '  VOLUNTARY' END +&#xD;&#xA;   CASE WHEN LIFE_INSURANCE_TYPE_VALUE = 'REME' THEN ' RETIREE' ELSE ' EMPLOYEE ' END,&#xD;&#xA;   basic_premium = 0 ,SUPPLEMENTAL_PREMIUM =0,&#xD;&#xA;   RATING_CRITERIA = 'ALL MEMBERS ',&#xD;&#xA;   REP_PREMIUM_AMOUNT = &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN LEVEL_OF_COVERAGE_VALUE  ='BASC' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN AD_AND_D_BASIC_PREMIUM_RATE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(ROUND(ISNULL(COVERAGE_AMOUNT,0)* ISNULL(AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE,0)/1000.0000,4)&#xD;&#xA;          &#xD;&#xA;          *  CASE WHEN isnull(SUPPLEMENTAL_PREMIUM,0) &lt;0  THEN -1 ELSE 1 END) END,&#xD;&#xA;   Rate = CASE WHEN LEVEL_OF_COVERAGE_VALUE  ='BASC' THEN AD_AND_D_BASIC_PREMIUM_RATE &#xD;&#xA;           ELSE ISNULL(AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE,0)&#xD;&#xA;          END&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE ##tempFinal SET COVERAGE_DESCRIPTION = 'LIFE BASIC'+ &#xD;&#xA;   CASE WHEN LIFE_INSURANCE_TYPE_VALUE = 'REME' THEN ' RETIREE' ELSE ' EMPLOYEE ' END,&#xD;&#xA;   RATING_CRITERIA = 'ALL MEMBERS ',&#xD;&#xA;   REP_PREMIUM_AMOUNT =  CAST(BASIC_PREMIUM AS DECIMAL(9,4)) - AD_AND_D_BASIC_PREMIUM_RATE,   &#xD;&#xA;   RATE = CAST(BASIC_PREMIUM AS DECIMAL(9,4)) - AD_AND_D_BASIC_PREMIUM_RATE  &#xD;&#xA;   WHERE LEVEL_OF_COVERAGE_VALUE  ='BASC'&#xD;&#xA;&#xD;&#xA;UPDATE ##tempFinal SET COVERAGE_DESCRIPTION = 'LIFE VOLUNTARY DEPENDENT',&#xD;&#xA;   RATING_CRITERIA = 'COVERED DEPENDENT '+&#xD;&#xA;   '$'+CAST(abs(COVERAGE_AMOUNT) AS VARCHAR(20)) + ' OPTION'+&#xD;&#xA;   ' - AGE (' + &#xD;&#xA;   CAST(MIN_AGE_YRS AS VARCHAR(3)) +'-'+&#xD;&#xA;   CAST(MAX_AGE_YRS AS VARCHAR(3))+ ')',&#xD;&#xA;   REP_PREMIUM_AMOUNT =  DEPENDENT_PREMIUM,&#xD;&#xA;   RATE = CASE WHEN DEPENDENT_PREMIUM &lt; 0 then RATE*-1 ELSE RATE END&#xD;&#xA;   WHERE LEVEL_OF_COVERAGE_VALUE  ='DSPL'&#xD;&#xA;&#xD;&#xA;UPDATE ##tempFinal SET COVERAGE_DESCRIPTION = 'LIFE VOLUNTARY SPOUSE',&#xD;&#xA;   RATING_CRITERIA = 'COVERED DEPENDENT AGE ('+ &#xD;&#xA;   CAST(MIN_AGE_YRS AS VARCHAR(3)) +'-'+&#xD;&#xA;   CAST(MAX_AGE_YRS AS VARCHAR(3))+ ')',&#xD;&#xA;   REP_PREMIUM_AMOUNT = SPOUSE_PREMIUM&#xD;&#xA;   WHERE LEVEL_OF_COVERAGE_VALUE  ='SPSL'&#xD;&#xA;      &#xD;&#xA;UPDATE ##tempFinal SET SUPPLEMENTAL_PREMIUM = SUPPLEMENTAL_PREMIUM * -1&#xD;&#xA;WHERE LEVEL_OF_COVERAGE_VALUE  ='SPML' AND COVERAGE_AMOUNT &lt; 0&#xD;&#xA;&#xD;&#xA;UPDATE ##tempFinal SET COVERAGE_DESCRIPTION = 'LIFE VOLUNTARY EMPLOYEE',&#xD;&#xA;   RATING_CRITERIA = 'MEMBER AGE('+ &#xD;&#xA;   CAST(MIN_AGE_YRS AS VARCHAR(3)) +'-'+&#xD;&#xA;   CAST(MAX_AGE_YRS AS VARCHAR(3))+ ')',&#xD;&#xA;   REP_PREMIUM_AMOUNT = CAST(SUPPLEMENTAL_PREMIUM AS DECIMAL(13,4))- &#xD;&#xA;        ( ROUND(ISNULL(COVERAGE_AMOUNT,0)*ISNULL(AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE,0)/1000.00,4)),&#xD;&#xA;   RATE =  (ISNULL(SUPPLEMENTAL_PREMIUM_RATE_AMT,0) - (CASE WHEN RECORD_TYPE_VALUE = '-ADJ' THEN -1 * AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE ELSE AD_AND_D_SUPPLEMENTAL_PREMIUM_RATE END))&#xD;&#xA;   WHERE LEVEL_OF_COVERAGE_VALUE  ='SPML'&#xD;&#xA;&#xD;&#xA;UPDATE ##tempFinal SET SUPPLEMENTAL_PREMIUM = SUPPLEMENTAL_PREMIUM * -1, REP_PREMIUM_AMOUNT = REP_PREMIUM_AMOUNT * -1&#xD;&#xA;WHERE LEVEL_OF_COVERAGE_VALUE  ='SPML' AND COVERAGE_AMOUNT &lt; 0&#xD;&#xA;&#xD;&#xA;INSERT INTO ##tempFinal SELECT * FROM ##Temp11&#xD;&#xA;&#xD;&#xA;UPDATE ##tempFinal SET LIFE_COUNT = CASE WHEN RECORD_TYPE_VALUE IN ('REG','+ADJ') THEN 1 ELSE -1 END&#xD;&#xA;&#xD;&#xA;SELECT COVERAGE_DESCRIPTION AS COVERAGE_DESC,&#xD;&#xA;  REPLACE(RATING_CRITERIA,'-999','+') AS RATING_CRITERIA,&#xD;&#xA;  SUM(LIFE_COUNT) AS ACTUAL_LIVES,&#xD;&#xA;  SUM(isnull(COVERAGE_AMOUNT,0)) AS ACTUAL_VOLUME,&#xD;&#xA;  RECORD_TYPE_VALUE,&#xD;&#xA;  RATE,&#xD;&#xA;  SUM(CASE WHEN RECORD_TYPE_VALUE = 'REG'&#xD;&#xA;     THEN isnull(REP_PREMIUM_AMOUNT,0) ELSE 0 END&#xD;&#xA;   ) AS TOTAL_PREMIUM_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN RECORD_TYPE_VALUE &lt;&gt; 'REG'&#xD;&#xA;     THEN isnull(REP_PREMIUM_AMOUNT,0)&#xD;&#xA;     ELSE 0 END&#xD;&#xA;   )&#xD;&#xA;   AS TOTAL_ADJUSTMENT_AMOUNT,&#xD;&#xA;   CAST(0.00 AS DECIMAL(13,4)) AS TOTALAMOUNT,&#xD;&#xA;   CAST(0.00 AS DECIMAL(13,4)) AS CALCULATEDAMOUNT,&#xD;&#xA;   CAST(0.00 AS DECIMAL(13,4)) AS ROUNDOFFDIFFERENCE&#xD;&#xA;  INTO ##TEMPREPFINAL&#xD;&#xA;  FROM ##TEMPFINAL&#xD;&#xA;GROUP BY  &#xD;&#xA;  COVERAGE_DESCRIPTION,&#xD;&#xA;  REPLACE(RATING_CRITERIA,'-999','+'), RATE, RECORD_TYPE_VALUE&#xD;&#xA;ORDER BY &#xD;&#xA;  COVERAGE_DESCRIPTION,&#xD;&#xA;  REPLACE(RATING_CRITERIA,'-999','+')&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE ##TEMPREPFINAL SET RATE = CASE WHEN RATE &lt; 0 THEN RATE * -1 ELSE RATE END&#xD;&#xA;&#xD;&#xA;-- Do not change the  sequence of the update commands below&#xD;&#xA;UPDATE ##TEMPREPFINAL SET TOTALAMOUNT = TOTAL_PREMIUM_AMOUNT+TOTAL_ADJUSTMENT_AMOUNT&#xD;&#xA;UPDATE ##TEMPREPFINAL SET CALCULATEDAMOUNT = ISNULL(ACTUAL_VOLUME,0)/1000.00 * ISNULL(RATE,0) --* CASE WHEN  TOTALAMOUNT &lt;0 THEN -1 ELSE 1 END &#xD;&#xA; WHERE COVERAGE_DESC LIKE '%VOLUNTARY%'&#xD;&#xA;UPDATE ##TEMPREPFINAL SET CALCULATEDAMOUNT = ISNULL(RATE,0) * ISNULL(ACTUAL_LIVES,0) &#xD;&#xA; WHERE COVERAGE_DESC LIKE '%BASIC%'&#xD;&#xA;UPDATE ##TEMPREPFINAL SET CALCULATEDAMOUNT = ISNULL(RATE,0) * ISNULL(ACTUAL_LIVES,0)&#xD;&#xA; WHERE COVERAGE_DESC = 'LIFE VOLUNTARY DEPENDENT'&#xD;&#xA;UPDATE ##TEMPREPFINAL SET ROUNDOFFDIFFERENCE = CALCULATEDAMOUNT - TOTALAMOUNT&#xD;&#xA;&#xD;&#xA;SELECT COVERAGE_DESC,&#xD;&#xA;  RATING_CRITERIA,&#xD;&#xA;  SUM(ACTUAL_LIVES) AS ACTUAL_LIVES,&#xD;&#xA;  SUM(ACTUAL_VOLUME) AS ACTUAL_VOLUME,&#xD;&#xA;  RATE,&#xD;&#xA;  SUM(TOTAL_PREMIUM_AMOUNT) AS TOTAL_PREMIUM_AMOUNT,&#xD;&#xA;  SUM(TOTAL_ADJUSTMENT_AMOUNT) AS TOTAL_ADJUSTMENT_AMOUNT,&#xD;&#xA;  SUM(TOTALAMOUNT) AS TOTALAMOUNT,&#xD;&#xA;  SUM(CALCULATEDAMOUNT) AS CALCULATEDAMOUNT,&#xD;&#xA;  SUM(ROUNDOFFDIFFERENCE) AS ROUNDOFFDIFFERENCE &#xD;&#xA;FROM &#xD;&#xA;&#x9;##TEMPREPFINAL &#xD;&#xA;GROUP BY&#xD;&#xA;&#x9;COVERAGE_DESC,&#xD;&#xA;&#x9;RATING_CRITERIA,&#xD;&#xA;&#x9;RATE&#xD;&#xA;ORDER BY &#xD;&#xA;  COVERAGE_DESC,&#xD;&#xA;  REPLACE(RATING_CRITERIA,'-999','+')&#xD;&#xA;&#xD;&#xA;Drop table ##TempRepFinal&#xD;&#xA;drop table ##temp1&#xD;&#xA;drop table ##tempFINAL&#xD;&#xA;drop table ##Temp11">
      <parameters>
        <parameter ID="@BATCHREQUESTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="fleHSAContributionFileOut" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PRDI.*,&#xD;&#xA;CASE WHEN PRDI.SUBSYSTEM_VALUE = 'IBSD' THEN 0 &#xD;&#xA;                        WHEN PRDI.SUBSYSTEM_VALUE = 'PAYR' THEN EMP.HSA_AMOUNT * CASE WHEN EMP.RECORD_TYPE_VALUE = '-ADJ' THEN -1 ELSE 1 END&#xD;&#xA;                        ELSE 0.0 END AS HSA_AMOUNT_FOR_GL ,&#xD;&#xA;CASE WHEN PRDI.SUBSYSTEM_VALUE = 'IBSD' THEN 0&#xD;&#xA;                        WHEN PRDI.SUBSYSTEM_VALUE = 'PAYR' THEN EMP.VENDOR_AMOUNT * CASE WHEN EMP.RECORD_TYPE_VALUE = '-ADJ' THEN -1 ELSE 1 END&#xD;&#xA;                        ELSE 0.0 END AS VENDOR_AMOUNT_FOR_GL&#xD;&#xA;FROM SGT_PROVIDER_REPORT_DATA_INSURANCE PRDI WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PROVIDER_REPORT_DATA_BATCH_REQUEST PRDBR WITH(NOLOCK) &#xD;&#xA;  ON PRDI.PROVIDER_ORG_ID=PRDBR.ORG_ID&#xD;&#xA;LEFT JOIN SGT_IBS_DETAIL IBS WITH(NOLOCK) ON PRDI.SUBSYSTEM_REF_ID = IBS.IBS_DETAIL_ID AND ISNULL(IBS.DETAIL_STATUS_VALUE, '') &lt;&gt; 'IGNR'&#xD;&#xA;LEFT JOIN SGT_EMPLOYER_PAYROLL_DETAIL EMP WITH(NOLOCK) ON PRDI.SUBSYSTEM_REF_ID = EMP.EMPLOYER_PAYROLL_DETAIL_ID&#xD;&#xA;WHERE PRDI.BATCH_REQUEST_ID IS NULL&#xD;&#xA;   AND PRDBR.STATUS_VALUE='NTPR' &#xD;&#xA;   AND PRDI.EFFECTIVE_DATE &lt;= PRDBR.EFFECTIVE_START_DATE&#xD;&#xA;   --AND PRDBR.EFFECTIVE_START_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;   AND DATEPART(YEAR,PRDI.EFFECTIVE_DATE) &lt;= DATEPART(YEAR,DATEADD(MONTH,-1,PRDBR.EFFECTIVE_START_DATE))&#xD;&#xA;   AND DATEPART(MONTH,PRDI.EFFECTIVE_DATE) &lt;= DATEPART(MONTH,DATEADD(MONTH,-1,PRDBR.EFFECTIVE_START_DATE))&#xD;&#xA;   AND PRDBR.EFFECTIVE_END_DATE IS NULL&#xD;&#xA;   AND ISNULL(PRDBR.VISIBILITY_FLAG,'') = 'Y'&#xD;&#xA;   AND ISNULL(PRDI.HSA_FLAG,'') = 'Y'">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="ProviderReportDataInsuranceCompId" sfwType="Column" sfwValue="provider_report_data_insurance_comp_id" sfwIsNull="False" sfwKeyNo="1" sfwIsIdentity="True" sfwDataType="int" sfwIsSequence="False" />
    <attribute ID="SubsystemDescription" sfwType="Description" sfwValue="subsystem_description" />
    <attribute ID="SubsystemId" sfwType="Column" sfwValue="subsystem_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwCodeID="349" sfwIsSequence="False" />
    <attribute ID="SubsystemValue" sfwType="Column" sfwValue="subsystem_value" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" sfwIsSequence="False" />
    <attribute ID="SubsystemRefId" sfwType="Column" sfwValue="subsystem_ref_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsSequence="False" />
    <attribute ID="PersonId" sfwType="Column" sfwValue="person_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsSequence="False" />
    <attribute ID="Ssn" sfwType="Column" sfwValue="ssn" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="9" sfwIsSequence="False" />
    <attribute ID="FirstName" sfwType="Column" sfwValue="first_name" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" sfwIsSequence="False" />
    <attribute ID="LastName" sfwType="Column" sfwValue="last_name" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" sfwIsSequence="False" />
    <attribute ID="ProviderOrgId" sfwType="Column" sfwValue="provider_org_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsSequence="False" />
    <attribute ID="PlanId" sfwType="Column" sfwValue="plan_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsSequence="False" />
    <attribute ID="EffectiveDate" sfwType="Column" sfwValue="effective_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="RecordTypeDescription" sfwType="Description" sfwValue="record_type_description" />
    <attribute ID="RecordTypeId" sfwType="Column" sfwValue="record_type_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwCodeID="1208" sfwIsSequence="False" />
    <attribute ID="RecordTypeValue" sfwType="Column" sfwValue="record_type_value" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" sfwIsSequence="False" />
    <attribute ID="PremiumAmount" sfwType="Column" sfwValue="premium_amount" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="BatchRequestId" sfwType="Column" sfwValue="batch_request_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsSequence="False" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwIsNull="False" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" sfwIsSequence="False" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwIsNull="False" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwIsNull="False" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" sfwIsSequence="False" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwIsNull="False" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwIsNull="False" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwIsSequence="False" />
    <attribute ID="FeeAmount" sfwType="Column" sfwValue="fee_amount" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="GroupNumber" sfwType="Column" sfwValue="group_number" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" sfwIsSequence="False" />
    <attribute ID="RateStructureCode" sfwType="Column" sfwValue="rate_structure_code" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" sfwIsSequence="False" />
    <attribute ID="CoverageCode" sfwType="Column" sfwValue="coverage_code" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="4" sfwIsSequence="False" />
    <attribute ID="HsaFlag" sfwType="Column" sfwValue="hsa_flag" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" sfwIsSequence="False" />
    <attribute ID="HsaEffectiveDate" sfwType="Column" sfwValue="hsa_effective_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" sfwIsSequence="False" />
    <attribute ID="BuydownAmount" sfwType="Column" sfwValue="buydown_amount" sfwIsNull="False" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="11,2" sfwIsSequence="False" />
    <attribute ID="MedicarePartDAmt" sfwType="Column" sfwValue="medicare_part_d_amt" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwLength="7,2" />
    <attribute ID="PersonName" sfwDataType="string" sfwPrivate="False" sfwValue="lstrPersonName" sfwType="Property" />
    <attribute ID="ProviderName" sfwDataType="string" sfwPrivate="False" sfwValue="lstrProviderName" sfwType="Property" />
    <attribute ID="ProviderNamebyOrgid" sfwDataType="string" sfwPrivate="False" sfwValue="lstrProviderNamebyOrgid" sfwType="Property" />
    <attribute ID="LastFourDigitsOfSSN" sfwDataType="string" sfwPrivate="False" sfwValue="lstrLastFourDigitsOfSSN" sfwType="Property" />
  </attributes>
</entity>