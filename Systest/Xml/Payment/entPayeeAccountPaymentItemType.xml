<?xml version="1.0" encoding="utf-8"?>
<entity ID="entPayeeAccountPaymentItemType" sfwActive="True" sfwStatus="Valid" sfwType="BusinessRule" sfwMainCDO="icdoPayeeAccountPaymentItemType" sfwObjectID="busPayeeAccountPaymentItemType" sfwTableName="sgt_payee_account_payment_item_type" sfwView="False" sfwParentEntity="entExtendBase">
  <rules>
    <rule ID="IsDeductioallowedToDelete" sfwMessageId="6415" sfwExpression="(this.AreFieldsReadOnly() == True)" sfwObjectBased="True" />
    <rule ID="IsDuesAmountEntered" sfwMessageId="5679" sfwExpression="(this.IsAmountEnteredDues() == True)" sfwObjectBased="True" />
    <rule ID="IsDuesAmountZero" sfwMessageId="5680" sfwExpression="(this.IsDuesAmountZero() == True)" sfwObjectBased="True" />
    <rule ID="IsDuesCreatedManually" sfwMessageId="5643" sfwExpression="(this.IsPaymentItemDues() == True)" sfwObjectBased="True" />
    <rule ID="IsItAnUpdatableDeductionItem" sfwMessageId="6418" sfwExpression="!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPaymentItemType.icdoPaymentItemType.deduction_value&quot;) == &quot;UPDT&quot;)" sfwObjectBased="True" />
    <rule ID="IsPAStatusCPorCLD" sfwMessageId="5655" sfwExpression="(this.IsPayeeAccountStatusCancelPendingOrCancelled() == True)" sfwObjectBased="True" />
    <rule ID="IsPaymentOptionInvalid" sfwMessageId="5644" sfwExpression="!(string.IsNullOrEmpty(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccountDeductionRefund.icdoPayeeAccountDeductionRefund.payment_option_value&quot;))) &amp;&amp; &#xA;(this.IsSelectedDeductionItemRefund() == True) &amp;&amp; &#xA;(this.IsPaymentOptionInvalid() == True)" sfwObjectBased="True" />
    <rule ID="IsPaymentOptionNotRequired" sfwMessageId="6417" sfwExpression="!(this.IsSelectedDeductionItemRefund() == True) &amp;&amp; &#xA;!(string.IsNullOrEmpty(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccountDeductionRefund.icdoPayeeAccountDeductionRefund.payment_option_value&quot;)))" sfwObjectBased="True" />
    <rule ID="IsPaymentOptionRequired" sfwMessageId="6416" sfwExpression="(this.IsSelectedDeductionItemRefund() == True) &amp;&amp; &#xA;(string.IsNullOrEmpty(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccountDeductionRefund.icdoPayeeAccountDeductionRefund.payment_option_value&quot;)))" sfwObjectBased="True" />
    <rule ID="RuleDeductionExistsWithOverlappingDates" sfwMessageId="5605" sfwExpression="(this.IsOverlappingDeductionsExists() == True)" sfwObjectBased="True" />
    <rule ID="RuleIsDeductionAmountGreaterThanBenefitAmount" sfwMessageId="5613" sfwExpression="!(this.icdoPayeeAccountPaymentItemType.amount == 0) &amp;&amp; &#xA;(this.IsValidationRequired() == True) &amp;&amp; &#xA;(this.IsDeductionAmountGreaterThanBenefitAmount() == True)" sfwObjectBased="True" />
    <rule ID="RuleIsDeductionAmountNull" sfwMessageId="5606" sfwExpression="(this.IsValidationRequired() == True) &amp;&amp; &#xA;!(this.IsPaymentItemDues() == True) &amp;&amp; &#xA;(this.icdoPayeeAccountPaymentItemType.amount == 0)" sfwObjectBased="True" />
    <rule ID="RuleIsDeductionNOTAssociatedToVendorForGivenPeriod" sfwMessageId="5607" sfwExpression="!(this.icdoPayeeAccountPaymentItemType.vendor_org_id == 0) &amp;&amp; &#xA;!(this.icdoPayeeAccountPaymentItemType.payment_item_type_id == 0) &amp;&amp; &#xA;!(this.icdoPayeeAccountPaymentItemType.start_date == DateTime.MinValue) &amp;&amp; &#xA;(this.IsValidationRequired() == True) &amp;&amp; &#xA;(this.IsDeductionAssociatedToVendor() == False)" sfwObjectBased="True" />
    <rule ID="RuleIsDeductionTypeNull" sfwMessageId="5601" sfwExpression="(this.IsValidationRequired() == True) &amp;&amp; &#xA;(this.icdoPayeeAccountPaymentItemType.payment_item_type_id == 0)" sfwObjectBased="True" />
    <rule ID="RuleIsEndDateLessThanNextBenefitDate" sfwMessageId="5609" sfwExpression="(this.IsEnddateNotValid() == True)" sfwObjectBased="True" />
    <rule ID="RuleIsStartDateGreaterThanEndDate" sfwMessageId="5612" sfwExpression="(this.icdoPayeeAccountPaymentItemType.end_date != DateTime.MinValue) &amp;&amp; &#xA;(this.icdoPayeeAccountPaymentItemType.start_date &gt; this.icdoPayeeAccountPaymentItemType.end_date)" sfwObjectBased="True" />
    <rule ID="RuleIsStartDateGreaterThanNextBenefitDate" sfwMessageId="5608" sfwExpression="(this.IsStartdateNotValid() == True)" sfwObjectBased="True" />
    <rule ID="RuleIsStartDateNull" sfwMessageId="5600" sfwExpression="(this.IsValidationRequired() == True) &amp;&amp; &#xA;(this.icdoPayeeAccountPaymentItemType.start_date == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="RuleIsVendorNull" sfwMessageId="5602" sfwExpression="(this.IsVendorToBeSelected() == True) &amp;&amp; &#xA;(this.IsValidationRequired() == True) &amp;&amp; &#xA;(this.icdoPayeeAccountPaymentItemType.vendor_org_id == 0)" sfwObjectBased="True" />
    <rule ID="RuleIsVendorOrgNOTActive" sfwMessageId="5604" sfwExpression="!(this.icdoPayeeAccountPaymentItemType.vendor_org_id == 0) &amp;&amp; &#xA;(this.IsValidationRequired() == True) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusVendor.icdoOrganization.status_value&quot;) == &quot;PEND&quot;)" sfwObjectBased="True" />
    <rule ID="RuleIsVendorOrgTypeNOTVendor" sfwMessageId="5603" sfwExpression="!(this.icdoPayeeAccountPaymentItemType.vendor_org_id == 0) &amp;&amp; &#xA;(this.IsValidationRequired() == True) &amp;&amp; &#xA;(this.IsOrgTypeVendor() == False)" sfwObjectBased="True" />
    <rule ID="VisibleRuleAretheFieldsNotReadOnly" sfwExpression="(this.AreFieldsReadOnly() == False)" sfwObjectBased="True" />
    <rule ID="VisibleRuleAretheFieldsReadOnly" sfwExpression="(this.AreFieldsReadOnly() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsPayeeOrg" sfwExpression="(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPayeeAccount.icdoPayeeAccount.payee_org_id&quot;) != 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsPayeePerson" sfwExpression="(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPayeeAccount.icdoPayeeAccount.payee_perslink_id&quot;) != 0)" sfwObjectBased="True" />
    <rule ID="VisbleRuleEndDateTextBox" sfwExpression="!(this.IsEndDateReadOnly() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleEndDateLabel" sfwExpression="(this.IsEndDateReadOnly() == True)" sfwObjectBased="True" />
  </rules>
  <delete />
  <checklist />
  <initialload>
    <item ID="VisibleRuleIsPayeePerson" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsPayeeOrg" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleAretheFieldsReadOnly" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleAretheFieldsNotReadOnly" sfwMode="All" sfwStatus="Active" />
    <item ID="VisbleRuleEndDateTextBox" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleEndDateLabel" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror />
  <harderror>
    <item ID="RuleIsStartDateNull" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsDeductionTypeNull" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsVendorOrgTypeNOTVendor" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsVendorOrgNOTActive" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleDeductionExistsWithOverlappingDates" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsDeductionAmountNull" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsDeductionNOTAssociatedToVendorForGivenPeriod" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsStartDateGreaterThanEndDate" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsDeductionAmountGreaterThanBenefitAmount" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPaymentOptionRequired" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPaymentOptionNotRequired" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsStartDateGreaterThanNextBenefitDate" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsEndDateLessThanNextBenefitDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPaymentOptionInvalid" sfwMode="All" sfwStatus="Active" />
    <item ID="IsDuesAmountEntered" sfwMode="All" sfwStatus="Active" />
    <item ID="IsDuesAmountZero" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsVendorNull" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPAStatusCPorCLD" sfwMode="All" sfwStatus="Active" />
  </harderror>
  <validatedelete>
    <item ID="IsDeductioallowedToDelete" sfwMode="All" sfwStatus="Active" />
    <item ID="IsItAnUpdatableDeductionItem" sfwMode="All" sfwStatus="Active" />
  </validatedelete>
  <groupslist />
  <updateablecdo />
  <commonproperties>
    <item ID="person_id" sfwObjectField="ibusPayeeAccount.icdoPayeeAccount.payee_perslink_id" sfwBeforeMethodName="LoadPayeeAccount" />
  </commonproperties>
  <queries>
    <query ID="LoadPayeeAccountPaymentItemType" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT *,ISNULL(SPEIT.UPDATE_SEQ,0) AS PAPIT_UPDATE_SEQ FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE SPEIT WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE SPIT WITH(NOLOCK) ON SPIT.PAYMENT_ITEM_TYPE_ID=SPEIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON ORG.ORG_ID=SPEIT.VENDOR_ORG_ID&#xD;&#xA;WHERE SPEIT.PAYEE_ACCOUNT_ID=@PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateNonTaxableAmount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @PAYMENT_ITEM_TYPE_ID INT&#xD;&#xA;SELECT @PAYMENT_ITEM_TYPE_ID = PAYMENT_ITEM_TYPE_ID &#xD;&#xA;FROM &#xD;&#xA;SGT_PAYMENT_ITEM_TYPE  WHERE ITEM_TYPE_CODE = 'ITEM37'&#xD;&#xA;&#xD;&#xA;DECLARE @PAYMENT_ITEM_TYPE_ID_NON_TAXABLE &#xD;&#xA;INT&#xD;&#xA;SELECT @PAYMENT_ITEM_TYPE_ID_NON_TAXABLE = PAYMENT_ITEM_TYPE_ID FROM &#xD;&#xA;SGT_PAYMENT_ITEM_TYPE  &#xD;&#xA;WHERE ITEM_TYPE_CODE = 'ITEM38'&#xD;&#xA;&#xD;&#xA;DECLARE @EFFECTIVE_DATE DATETIME&#xD;&#xA;DECLARE &#xD;&#xA;@SCHEDULE_ID INT&#xD;&#xA;SELECT @EFFECTIVE_DATE = EFFECTIVE_DATE,@SCHEDULE_ID = PAYMENT_SCHEDULE_ID &#xD;&#xA;FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_DATE = @PAYMENTDATE &#xD;&#xA;&#xD;&#xA;SELECT PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID, &#xD;&#xA;PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA; PAPIT.PAYMENT_ITEM_TYPE_ID,(PAPIT.AMOUNT-DIFF_AMOUNT) AS AMOUNT, DIFF_AMOUNT&#xD;&#xA; &#xD;&#xA;INTO #NONTXBLAMT &#xD;&#xA; FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT  &#xD;&#xA;INNER JOIN  &#xD;&#xA;(&#xD;&#xA; &#xD;&#xA;SELECT PHH.PAYEE_ACCOUNT_ID, &#xD;&#xA;  PHD.PAYMENT_ITEM_TYPE_ID ,PAYEE.NONTAXABLE_BEGINNING_BALANCE,&#xD;&#xA;  &#xD;&#xA;SUM(PHD.AMOUNT) AS AMOUNT, CASE WHEN PAYEE.NONTAXABLE_BEGINNING_BALANCE &lt;= 0 &#xD;&#xA;  THEN 0 ELSE &#xD;&#xA;(PAYEE.NONTAXABLE_BEGINNING_BALANCE - SUM(PHD.AMOUNT)) END AS DIFF_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN PHH.PAYMENT_SCHEDULE_ID &#xD;&#xA;= @SCHEDULE_ID THEN PHD.AMOUNT ELSE 0 END) AS FTM_AMOUNT&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD  &#xD;&#xA;    ON PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;= PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT  &#xD;&#xA;    ON PHD.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;=  PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN  &#xD;&#xA;  (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID &#xD;&#xA;, PA.NONTAXABLE_BEGINNING_BALANCE&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS &#xD;&#xA;PAS  &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE &#xD;&#xA;CV &#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  WHERE (CV.DATA2 &#xD;&#xA;&lt;&gt; 'CNLD' AND CV.DATA2 &lt;&gt; 'TRMD' )  &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    &#xD;&#xA;(SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     &#xD;&#xA;WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= &#xD;&#xA;@PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    &#xD;&#xA;)&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  &#xD;&#xA;@PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   &#xD;&#xA;AND ISNULL(EXCLUSION_METHOD_VALUE,'') &lt;&gt; 'SHMT' -- EXCLUDE MEMBERS WITH SAFE HARBOR METHOD ,  &#xD;&#xA;  &#xD;&#xA;) AS PAYEE&#xD;&#xA;  ON PAYEE.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID &#xD;&#xA; WHERE PHH.PAYMENT_DATE &#xD;&#xA;&lt;= @EFFECTIVE_DATE&#xD;&#xA;  AND PIT.ITEM_TYPE_CODE = 'ITEM38' -- NON  TAXABLE AMOUNT &#xD;&#xA;  &#xD;&#xA;AND PHH.STATUS_VALUE &lt;&gt; 'CNLD'  &#xD;&#xA; GROUP BY PHH.PAYEE_ACCOUNT_ID,PHD.PAYMENT_ITEM_TYPE_ID,PAYEE.NONTAXABLE_BEGINNING_BALANCE&#xD;&#xA; &#xD;&#xA;HAVING (PAYEE.NONTAXABLE_BEGINNING_BALANCE - SUM(PHD.AMOUNT))  &lt; &#xD;&#xA;   SUM(CASE WHEN PHH.PAYMENT_DATE &#xD;&#xA;= @EFFECTIVE_DATE THEN PHD.AMOUNT ELSE 0 END)   &#xD;&#xA;) PAYMENTS&#xD;&#xA;ON PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;= PAYMENTS.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAPIT.PAYMENT_ITEM_TYPE_ID = PAYMENTS.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   &#xD;&#xA;AND PAPIT.END_DATE IS NULL&#xD;&#xA;&#xD;&#xA;SELECT PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID, PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA; &#xD;&#xA;PAPIT.PAYMENT_ITEM_TYPE_ID,PAPIT.AMOUNT,0 AS DIFF_AMOUNT&#xD;&#xA;INTO #TXBLAMT &#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA;PAPIT , #NONTXBLAMT NON &#xD;&#xA;WHERE PAPIT.PAYEE_ACCOUNT_ID = NON.PAYEE_ACCOUNT_ID AND PAPIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;= @PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  AND PAPIT.END_DATE IS NULL&#xD;&#xA;&#xD;&#xA;INSERT INTO #NONTXBLAMT &#xD;&#xA;&#xD;&#xA;SELECT * FROM #TXBLAMT &#xD;&#xA;&#xD;&#xA;UPDATE A SET END_DATE = (DATEADD(D,-1,DATEADD(M,1,@PAYMENTDATE))) &#xD;&#xA;,MODIFIED_DATE=GETDATE() ,&#xD;&#xA; MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),BATCH_SCHEDULE_ID=Null,UPDATE_SEQ = &#xD;&#xA;UPDATE_SEQ+1&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE A  &#xD;&#xA; INNER JOIN #NONTXBLAMT &#xD;&#xA;B  &#xD;&#xA;  ON A.PAYEE_ACCOUNT_ID = B.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND A.PAYMENT_ITEM_TYPE_ID = B.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   &#xD;&#xA;AND A.END_DATE IS NULL&#xD;&#xA;   AND A.START_DATE &lt;= @PAYMENTDATE&#xD;&#xA;&#xD;&#xA;INSERT INTO &#xD;&#xA;SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA; (PAYEE_ACCOUNT_ID, PAYMENT_ITEM_TYPE_ID, ACCOUNT_NUMBER, &#xD;&#xA;VENDOR_ORG_ID,AMOUNT,START_DATE,END_DATE,&#xD;&#xA; CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, &#xD;&#xA;UPDATE_SEQ, BATCH_SCHEDULE_ID)&#xD;&#xA; SELECT &#xD;&#xA;  PAYEE_ACCOUNT_ID ,&#xD;&#xA;  @PAYMENT_ITEM_TYPE_ID &#xD;&#xA;AS PAYMENT_ITEM_TYPE_ID ,&#xD;&#xA;  NULL AS ACCOUNT_NUMBER,      &#xD;&#xA;  NULL VENDOR_ORG_ID,&#xD;&#xA;  &#xD;&#xA;  SUM(AMOUNT) AS AMOUNT,                                  &#xD;&#xA;  DATEADD(M,1,@PAYMENTDATE) AS START_DATE,              &#xD;&#xA;&#xD;&#xA;  NULL AS END_DATE  ,              &#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY,&#xD;&#xA;  GETDATE() AS CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY,&#xD;&#xA;  GETDATE() AS MODIFIED_DATE,&#xD;&#xA;  0 AS UPDATE_SEQ,&#xD;&#xA;  Null AS BATCH_SCHEDULE_ID&#xD;&#xA;  FROM #NONTXBLAMT &#xD;&#xA;  GROUP BY &#xD;&#xA;PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA; (PAYEE_ACCOUNT_ID, &#xD;&#xA;PAYMENT_ITEM_TYPE_ID, ACCOUNT_NUMBER, VENDOR_ORG_ID,AMOUNT,START_DATE,END_DATE,&#xD;&#xA; CREATED_BY, &#xD;&#xA;CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ, BATCH_SCHEDULE_ID)&#xD;&#xA; SELECT &#xD;&#xA;  &#xD;&#xA;PAYEE_ACCOUNT_ID ,&#xD;&#xA;  PAYMENT_ITEM_TYPE_ID ,&#xD;&#xA;  NULL AS ACCOUNT_NUMBER,      &#xD;&#xA;  &#xD;&#xA;NULL VENDOR_ORG_ID,&#xD;&#xA;  DIFF_AMOUNT AS AMOUNT,                                  &#xD;&#xA;  DATEADD(M,1,@PAYMENTDATE) &#xD;&#xA;AS START_DATE,              &#xD;&#xA;  NULL AS END_DATE  ,              &#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) &#xD;&#xA;AS CREATED_BY,&#xD;&#xA;  GETDATE() AS CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY,&#xD;&#xA;  &#xD;&#xA;GETDATE() AS MODIFIED_DATE,&#xD;&#xA;  0 AS UPDATE_SEQ,&#xD;&#xA;  Null AS BATCH_SCHEDULE_ID&#xD;&#xA;  &#xD;&#xA;FROM #NONTXBLAMT &#xD;&#xA;  WHERE DIFF_AMOUNT &gt; 0 AND PAYMENT_ITEM_TYPE_ID = @PAYMENT_ITEM_TYPE_ID_NON_TAXABLE&#xD;&#xA;&#xD;&#xA;DROP &#xD;&#xA;TABLE #NONTXBLAMT&#xD;&#xA;DROP TABLE #TXBLAMT">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPaymentItemsForNextPaymentDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PAPIT.* FROM &#xD;&#xA;SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WITH(NOLOCK) &#xD;&#xA;INNER JOIN  &#xD;&#xA;(SELECT &#xD;&#xA; PA.PAYEE_ACCOUNT_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA;&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = &#xD;&#xA;PA.PAYEE_ACCOUNT_ID  &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;  ON PAS.STATUS_ID= &#xD;&#xA;CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE &#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' &#xD;&#xA;) &#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (&#xD;&#xA;   SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    &#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     &#xD;&#xA;AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID &#xD;&#xA;DESC&#xD;&#xA;  )&#xD;&#xA; AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA; AND (BENEFIT_END_DATE &#xD;&#xA;IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA; AND PA.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA; &#xD;&#xA;AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL') &#xD;&#xA;) AS PAYEE&#xD;&#xA;ON PAYEE.PAYEE_ACCOUNT_ID &#xD;&#xA;= PAPIT.PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="UpdateRefundItems" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE NEW &#xD;&#xA;     SET NEW.END_DATE = @PAYMENTDATE, --PROR PIR 7052&#xD;&#xA;   NEW.START_DATE = @PAYMENTDATE,  --- DATEADD(S,-1,DATEADD(MM, DATEDIFF(M,0,@PAYMENTDATE)+1,0))&#xD;&#xA;   NEW.MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;   NEW.MODIFIED_DATE = GETDATE(),&#xD;&#xA;   NEW.UPDATE_SEQ=NEW.UPDATE_SEQ+1&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA;NEW&#xD;&#xA;INNER JOIN&#xD;&#xA; (&#xD;&#xA;SELECT PAPIT.*&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA;PAPIT&#xD;&#xA;INNER JOIN&#xD;&#xA;( &#xD;&#xA; SELECT DISTINCT PA.PAYEE_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT &#xD;&#xA;PA&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE &#xD;&#xA;= CV.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID &#xD;&#xA;&#xD;&#xA;WHERE (CV.DATA2 = 'TRMD')   &#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP &#xD;&#xA;1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID &#xD;&#xA;= PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER &#xD;&#xA;BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &#xD;&#xA;&lt;= @PAYMENTDATE&#xD;&#xA; AND  PA.BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA; AND (PA.BENEFIT_END_DATE &#xD;&#xA;IS NULL OR PA.BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID &#xD;&#xA;&#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;DISTINCT PA.PAYEE_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT PA&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS &#xD;&#xA;PAS&#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;&#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER &#xD;&#xA;PHH &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;WHERE (CV.CODE_VALUE = 'RPCD')    &#xD;&#xA;&#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   &#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   &#xD;&#xA;AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID &#xD;&#xA;DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND  DATEADD(M,-1,PA.BENEFIT_BEGIN_DATE) &#xD;&#xA;&lt;= @PAYMENTDATE&#xD;&#xA; AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA; &#xD;&#xA;AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID &#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;) &#xD;&#xA;AS TEMP&#xD;&#xA;ON PAPIT.PAYEE_ACCOUNT_ID=TEMP.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION ALL &#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;PAPIT.*&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT&#xD;&#xA;INNER JOIN&#xD;&#xA;( &#xD;&#xA; &#xD;&#xA;SELECT DISTINCT PA.PAYEE_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT PA&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS &#xD;&#xA;PAS&#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;&#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER &#xD;&#xA;PHH &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 &#xD;&#xA;= 'DCRC')&#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   &#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   &#xD;&#xA;AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID &#xD;&#xA;DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_ACCOUNT_TYPE_VALUE='RETR'&#xD;&#xA; &#xD;&#xA;AND PA.BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA; AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &#xD;&#xA;&gt; @PAYMENTDATE)&#xD;&#xA; AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID &#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;IS NOT NULL&#xD;&#xA;)AS TEMP&#xD;&#xA;ON PAPIT.PAYEE_ACCOUNT_ID=TEMP.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER &#xD;&#xA;JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPIT.PAYMENT_ITEM_TYPE_ID= PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE  &#xD;&#xA;PIT.ALLOW_ROLLOVER_CODE_VALUE='RRED' OR PIT.PLSO_FLAG='Y'&#xD;&#xA;) AS TEMP&#xD;&#xA;ON TEMP.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID=NEW.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE &#xD;&#xA;NEW.END_DATE IS NULL OR NEW.END_DATE &gt;= @PAYMENTDATE">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateRefundItemAdhoc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Update New &#xD;&#xA;     set New.Start_date=@PAYMENTDATE,&#xD;&#xA;   New.END_DATE= &#xD;&#xA;@PAYMENTDATE, &#xD;&#xA;   New.MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;   new.Modified_date = Getdate(),&#xD;&#xA;   &#xD;&#xA;New.UPDATE_SEQ=new.UPDATE_SEQ+1&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE New&#xD;&#xA;inner &#xD;&#xA;join&#xD;&#xA; (&#xD;&#xA; Select A.* from &#xD;&#xA; SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE a inner join(&#xD;&#xA; &#xD;&#xA;Select PHH.PAYEE_ACCOUNT_ID &#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  inner join sgt_payee_Account &#xD;&#xA;pa on phh.payee_Account_id =pa.payee_Account_id&#xD;&#xA; WHERE pa.benefit_Account_type_value='RFND'&#xD;&#xA;  &#xD;&#xA;AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID &#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL)TEMP&#xD;&#xA;    &#xD;&#xA;on a.payee_account_id=Temp.payee_account_id &#xD;&#xA;&#xD;&#xA; UNION ALL &#xD;&#xA;&#xD;&#xA; SELECT  &#xD;&#xA;PAPIT.* &#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT    &#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_HEADER &#xD;&#xA;PHH&#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT &#xD;&#xA;RP &#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=RP.PAYEE_ACCOUNT_ID AND RP.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;    &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL RPD&#xD;&#xA;    ON RP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID=RPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID &#xD;&#xA;&#xD;&#xA;     AND PAPIT.PAYMENT_ITEM_TYPE_ID=RPD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE APPROVED_FLAG &#xD;&#xA;= 'Y' &#xD;&#xA;       AND PAYMENT_OPTION_VALUE = 'SPCK'&#xD;&#xA;    AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID   &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;--- PIR 2010&#xD;&#xA; UNION ALL &#xD;&#xA;&#xD;&#xA; SELECT  PAPIT.* &#xD;&#xA;    &#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT    &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER &#xD;&#xA;PHH&#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID=PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT &#xD;&#xA;RP &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID=RP.PAYEE_ACCOUNT_ID AND RP.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  &#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; &#xD;&#xA;WHERE APPROVED_FLAG = 'Y' &#xD;&#xA;  AND PAYMENT_OPTION_VALUE = 'SPCK'&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID   &#xD;&#xA;&#xD;&#xA;  AND PAPIT.END_DATE IS NOT NULL&#xD;&#xA;  AND @PAYMENTDATE &lt; PAPIT.END_DATE &#xD;&#xA;  &#xD;&#xA;AND MONTH(PAPIT.START_DATE) = MONTH(PAPIT.END_DATE)&#xD;&#xA;  AND YEAR(PAPIT.START_DATE) = YEAR(PAPIT.END_DATE)&#xD;&#xA;  &#xD;&#xA;AND RECEIAVABLE_ITEM_FOR_RETRO_FLAG  = 'Y' &#xD;&#xA;----&#xD;&#xA; UNION ALL &#xD;&#xA;&#xD;&#xA; SELECT  &#xD;&#xA;PAPIT.* &#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT    &#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_HEADER &#xD;&#xA;PHH&#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PAPIT.PAYEE_ACCOUNT_ID   &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND &#xD;&#xA;DR&#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=DR.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID=DR.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;     &#xD;&#xA;AND DR.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; WHERE DR.PAYMENT_OPTION_VALUE &#xD;&#xA;= 'SPCL'&#xD;&#xA;    AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID &#xD;&#xA;    &#xD;&#xA; UNION ALL&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA; SELECT PAPIT.*&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA;PAPIT &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID &#xD;&#xA;= @PAYMENTSCHEDULEID&#xD;&#xA; INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;= PIT.PAYMENT_ITEM_TYPE_ID  &#xD;&#xA; WHERE PAPIT.START_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND @PAYMENTDATE &#xD;&#xA;&lt;= (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &#xD;&#xA;= 'SPCK' &#xD;&#xA;  &#xD;&#xA;  UNION ALL&#xD;&#xA;  &#xD;&#xA; SELECT PAPIT.*&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER &#xD;&#xA;PHH &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;= PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA; INNER &#xD;&#xA;JOIN  SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID  &#xD;&#xA;&#xD;&#xA; WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE &#xD;&#xA;END)&#xD;&#xA;  AND PAPIT.REISSUE_ITEM_FLAG = 'Y' &#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;--PROD PIR 5695&#xD;&#xA; Select A.* from &#xD;&#xA; SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE a inner join( &#xD;&#xA;  Select PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;    inner join sgt_payee_Account &#xD;&#xA;  pa on phh.payee_Account_id =pa.payee_Account_id&#xD;&#xA;   WHERE PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;     AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'  &#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID &#xD;&#xA;    AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL)TEMP    &#xD;&#xA;on a.payee_account_id=Temp.payee_account_id &#xD;&#xA;&#xD;&#xA;)  temp&#xD;&#xA;on temp.payee_account_payment_item_type_id=new.payee_account_payment_item_type_id&#xD;&#xA;WHERE &#xD;&#xA;NEW.END_DATE IS NULL OR NEW.END_DATE &gt;= @PAYMENTDATE">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePensionReceivables" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="update papit&#xD;&#xA;    set papit.end_date=dateadd(d,-1,dateadd(m,1,@paymentdate)),&#xD;&#xA;     &#xD;&#xA;papit.modified_date=getdate(),&#xD;&#xA;     papit.modified_by='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;     PAPIT.UPDATE_SEQ=PAPIT.UPDATE_SEQ+1&#xD;&#xA;from &#xD;&#xA;SGT_PAYMENT_RECOVERY  R &#xD;&#xA; Inner Join &#xD;&#xA; (&#xD;&#xA; Select PAYMENT_RECOVERY_ID, sum(Principle_amount_paid) &#xD;&#xA;as amount_paid &#xD;&#xA; from sgt_payment_recovery_history &#xD;&#xA; group by PAYMENT_RECOVERY_ID&#xD;&#xA; &#xD;&#xA;)PH On R.PAYMENT_RECOVERY_ID = PH.PAYMENT_RECOVERY_ID&#xD;&#xA; inner join sgt_payee_Account_payment_item_type &#xD;&#xA;papit&#xD;&#xA;  on papit.payee_Account_id=r.payee_account_id&#xD;&#xA; inner join sgt_payment_item_type &#xD;&#xA;pit&#xD;&#xA;  on pit.payment_item_type_id=papit.payment_item_type_id&#xD;&#xA; inner join sgt_payee_account &#xD;&#xA;pa&#xD;&#xA;   on pa.payee_Account_id=r.payee_Account_id &#xD;&#xA; inner join sgt_payment_history_header &#xD;&#xA;phh&#xD;&#xA;   on pa.payee_Account_id=phh.payment_history_header_id&#xD;&#xA;Where r.STATUS_VALUE ='INPR' &#xD;&#xA;and  Recovery_amount = ph.amount_paid &#xD;&#xA;   and pit.item_type_code='ITEM65' and phh.payment_schedule_id=@paymentscheduleid&#xD;&#xA;   &#xD;&#xA;AND (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt;= @PAYMENTDATE)">
      <parameters>
        <parameter ID="@paymentdate" sfwDataType="DateTime" />
        <parameter ID="@paymentscheduleid" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreatePensionReceivableFinalPayment" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @PAYMENT_ITEM_TYPE_ID INT&#xD;&#xA;SET @PAYMENT_ITEM_TYPE_ID=(SELECT PAYMENT_ITEM_TYPE_ID &#xD;&#xA;FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE='ITEM65')&#xD;&#xA;--GETTING THE RECOVERIES SATISFYING THE CONDITION&#xD;&#xA;SELECT &#xD;&#xA; PAYEE_ACCOUNT_ID ,&#xD;&#xA; @PAYMENT_ITEM_TYPE_ID AS PAYMENT_ITEM_TYPE_ID &#xD;&#xA;,&#xD;&#xA; NULL AS ACCOUNT_NUMBER,      &#xD;&#xA; NULL VENDOR_ORG_ID,&#xD;&#xA; AMOUNT,                                  &#xD;&#xA;&#xD;&#xA; DATEADD(M,1,@PAYMENTDATE) AS START_DATE,              &#xD;&#xA; NULL AS END_DATE  ,              &#xD;&#xA;&#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY,&#xD;&#xA; GETDATE() AS CREATED_DATE,&#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) &#xD;&#xA;AS MODIFIED_BY,&#xD;&#xA; GETDATE() AS MODIFIED_DATE,&#xD;&#xA; 0 AS UPDATE_SEQ,&#xD;&#xA; NULL AS BATCH_SCHEDULE_ID &#xD;&#xA;INTO #TEMPPAPIT&#xD;&#xA;FROM&#xD;&#xA; (SELECT R.PAYEE_ACCOUNT_ID,SUM(GROSS_REDUCTION_AMOUNT - (RECOVERY_AMOUNT &#xD;&#xA;- PH.AMOUNT_PAID)) AS AMOUNT&#xD;&#xA; FROM SGT_PAYMENT_RECOVERY  R&#xD;&#xA;  INNER JOIN &#xD;&#xA;  &#xD;&#xA;(&#xD;&#xA;   SELECT PAYMENT_RECOVERY_ID, SUM(PRINCIPLE_AMOUNT_PAID) AS AMOUNT_PAID &#xD;&#xA;   FROM &#xD;&#xA;SGT_PAYMENT_RECOVERY_HISTORY &#xD;&#xA;   GROUP BY PAYMENT_RECOVERY_ID&#xD;&#xA;  )PH ON R.PAYMENT_RECOVERY_ID &#xD;&#xA;= PH.PAYMENT_RECOVERY_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID=R.PAYEE_ACCOUNT_ID&#xD;&#xA; &#xD;&#xA;WHERE PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID AND R.STATUS_VALUE IN ('INPR') AND  &#xD;&#xA;    RECOVERY_AMOUNT-PH.AMOUNT_PAID &#xD;&#xA;&lt; GROSS_REDUCTION_AMOUNT&#xD;&#xA; GROUP BY R.PAYEE_ACCOUNT_ID&#xD;&#xA; )TEMP &#xD;&#xA;--CREATING TEMP TABLE WITH UPDATED AMOUNT&#xD;&#xA;SELECT A.PAYEE_ACCOUNT_ID,&#xD;&#xA;  A.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;  &#xD;&#xA;A.ACCOUNT_NUMBER,&#xD;&#xA;  A.VENDOR_ORG_ID,&#xD;&#xA;  (PAPIT.AMOUNT - A.AMOUNT) AS AMOUNT,&#xD;&#xA;  &#xD;&#xA;A.[START_DATE],&#xD;&#xA;  A.END_DATE,&#xD;&#xA;  A.CREATED_BY,&#xD;&#xA;  A.CREATED_DATE,&#xD;&#xA;  &#xD;&#xA;A.MODIFIED_BY,&#xD;&#xA;  A.MODIFIED_DATE,&#xD;&#xA;  A.UPDATE_SEQ,&#xD;&#xA;  A.BATCH_SCHEDULE_ID INTO &#xD;&#xA;#FINAL&#xD;&#xA;FROM #TEMPPAPIT A&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT&#xD;&#xA;  &#xD;&#xA;ON PAPIT.PAYMENT_ITEM_TYPE_ID=A.PAYMENT_ITEM_TYPE_ID AND A.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;&#xD;&#xA;   AND PAPIT.END_DATE IS NULL&#xD;&#xA;--END DATING OLD RECORD&#xD;&#xA;UPDATE PAPIT&#xD;&#xA;SET &#xD;&#xA;PAPIT.END_DATE=DATEADD(D,-1,DATEADD(M,1,@PAYMENTDATE)),&#xD;&#xA;    PAPIT.MODIFIED_DATE=GETDATE(),&#xD;&#xA;    &#xD;&#xA;PAPIT.MODIFIED_BY='PERSLINK BATCH',&#xD;&#xA;    PAPIT.UPDATE_SEQ=PAPIT.UPDATE_SEQ+1&#xD;&#xA;FROM #TEMPPAPIT &#xD;&#xA;A&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT&#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID=A.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;AND A.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAPIT.END_DATE IS NULL&#xD;&#xA;--CREATING NEW RECORDS&#xD;&#xA;INSERT INTO SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA; (&#xD;&#xA;PAYEE_ACCOUNT_ID, &#xD;&#xA;PAYMENT_ITEM_TYPE_ID, ACCOUNT_NUMBER, VENDOR_ORG_ID,AMOUNT,START_DATE,END_DATE,&#xD;&#xA;CREATED_BY, &#xD;&#xA;CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ, BATCH_SCHEDULE_ID&#xD;&#xA; )&#xD;&#xA;SELECT * &#xD;&#xA;FROM #FINAL WHERE AMOUNT &gt; 0&#xD;&#xA;&#xD;&#xA;DROP TABLE #TEMPPAPIT&#xD;&#xA;DROP TABLE #FINAL">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateTaxableAmountWithSSLIReduction" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @PAYMENT_ITEM_TAXABLE INT&#xD;&#xA;SELECT @PAYMENT_ITEM_TAXABLE = PAYMENT_ITEM_TYPE_ID &#xD;&#xA;FROM SGT_PAYMENT_ITEM_TYPE&#xD;&#xA;WHERE ITEM_TYPE_CODE = 'ITEM37'&#xD;&#xA;&#xD;&#xA;DECLARE @LASTDAY &#xD;&#xA;DATETIME&#xD;&#xA;SET @LASTDAY = DATEADD(DD,-1,@NEXTPAYMENTDATE)&#xD;&#xA;&#xD;&#xA;SELECT   PAPIT.*,BENACCT.ESTIMATED_SS_BENEFIT_AMOUNT &#xD;&#xA;&#xD;&#xA;INTO   #TEMP&#xD;&#xA;FROM   SGT_BENEFIT_ACCOUNT BENACCT&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT &#xD;&#xA;PA&#xD;&#xA;   ON PA.BENEFIT_ACCOUNT_ID = BENACCT.BENEFIT_ACCOUNT_ID AND BENACCT.SSLI_CHANGE_DATE = @NEXTPAYMENTDATE&#xD;&#xA; &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; &#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID = CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT&#xD;&#xA;   ON PAPIT.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;AND PAPIT.PAYMENT_ITEM_TYPE_ID = @PAYMENT_ITEM_TAXABLE&#xD;&#xA;WHERE   (CV.DATA2 &lt;&gt; 'CNLD' AND &#xD;&#xA;CV.DATA2 &lt;&gt; 'TRMD' )  &#xD;&#xA;   AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP &#xD;&#xA;1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE &#xD;&#xA;PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @NEXTPAYMENTDATE&#xD;&#xA;     &#xD;&#xA;ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   &#xD;&#xA;AND PAS.STATUS_EFFECTIVE_DATE &lt;= @NEXTPAYMENTDATE&#xD;&#xA;   AND PA.BENEFIT_BEGIN_DATE &lt;= @NEXTPAYMENTDATE&#xD;&#xA;   &#xD;&#xA;AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt; @NEXTPAYMENTDATE)&#xD;&#xA;   AND PAPIT.START_DATE &#xD;&#xA;&lt;= @NEXTPAYMENTDATE&#xD;&#xA;   AND (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt; @NEXTPAYMENTDATE)&#xD;&#xA;   &#xD;&#xA;AND ISNULL(BENACCT.ESTIMATED_SS_BENEFIT_AMOUNT,0) &gt; 0 &#xD;&#xA;&#xD;&#xA;UPDATE   PAPIT&#xD;&#xA;SET    &#xD;&#xA;PAPIT.END_DATE = @LASTDAY,&#xD;&#xA;    PAPIT.MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;    PAPIT.MODIFIED_DATE &#xD;&#xA;= GETDATE(),&#xD;&#xA;    PAPIT.UPDATE_SEQ = PAPIT.UPDATE_SEQ + 1&#xD;&#xA;FROM   SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA;PAPIT&#xD;&#xA; INNER JOIN #TEMP TEMP&#xD;&#xA;   ON TEMP.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE   &#xD;&#xA;PAPIT.START_DATE &lt; @NEXTPAYMENTDATE&#xD;&#xA;&#xD;&#xA;UPDATE   PAPIT&#xD;&#xA;SET    PAPIT.AMOUNT &#xD;&#xA;= PAPIT.AMOUNT - TEMP.ESTIMATED_SS_BENEFIT_AMOUNT,&#xD;&#xA;    PAPIT.MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;    &#xD;&#xA;PAPIT.MODIFIED_DATE = GETDATE(),&#xD;&#xA;    PAPIT.UPDATE_SEQ = PAPIT.UPDATE_SEQ + 1&#xD;&#xA;FROM   &#xD;&#xA;SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT&#xD;&#xA; INNER JOIN #TEMP TEMP&#xD;&#xA;   ON TEMP.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID &#xD;&#xA;= PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE   PAPIT.START_DATE = @NEXTPAYMENTDATE&#xD;&#xA;&#xD;&#xA;DELETE &#xD;&#xA;FROM  #TEMP&#xD;&#xA;WHERE   START_DATE = @NEXTPAYMENTDATE&#xD;&#xA;&#xD;&#xA;INSERT INTO  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE&#xD;&#xA;    &#xD;&#xA;(PAYEE_ACCOUNT_ID, PAYMENT_ITEM_TYPE_ID, ACCOUNT_NUMBER, VENDOR_ORG_ID, AMOUNT, START_DATE, END_DATE, &#xD;&#xA;CREATED_BY, &#xD;&#xA;    CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ, BATCH_SCHEDULE_ID, REISSUE_ITEM_FLAG, &#xD;&#xA;MISCELLANEOUS_CORRECTION_FLAG)&#xD;&#xA;SELECT   PAYEE_ACCOUNT_ID, PAYMENT_ITEM_TYPE_ID, ACCOUNT_NUMBER, &#xD;&#xA;VENDOR_ORG_ID, AMOUNT - ESTIMATED_SS_BENEFIT_AMOUNT, @NEXTPAYMENTDATE, NULL, &#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), GETDATE(), 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), GETDATE(), 0, BATCH_SCHEDULE_ID, REISSUE_ITEM_FLAG, MISCELLANEOUS_CORRECTION_FLAG&#xD;&#xA;FROM   &#xD;&#xA;#TEMP&#xD;&#xA;WHERE   AMOUNT - ESTIMATED_SS_BENEFIT_AMOUNT &gt; 0&#xD;&#xA;&#xD;&#xA;DROP TABLE  #TEMP">
      <parameters>
        <parameter ID="@NEXTPAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetDuesAmount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select isnull(monthly_amount,0.0) from SGT_DUES_RATE_CHANGE_REQUEST where effective_date=(&#xD;&#xA;select max(effective_date)from SGT_DUES_RATE_CHANGE_REQUEST where vendor_org_id=@vendororgid and effective_date&lt;=@effectivedate )&#xD;&#xA;and vendor_org_id=@vendororgid">
      <parameters>
        <parameter ID="@vendororgid" sfwDataType="int" />
        <parameter ID="@effectivedate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="AddGraduatedBenefit" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @PAYMENTDATE DATETIME&#xD;&#xA;&#xD;&#xA;SELECT @PAYMENTDATE = &#xD;&#xA;PAYMENT_DATE  &#xD;&#xA; FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA; WHERE PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;DECLARE @STATUSCHECKDATE DATETIME &#xD;&#xA;SET @STATUSCHECKDATE = DATEADD(M,1,@PAYMENTDATE)&#xD;&#xA;&#xD;&#xA;DECLARE &#xD;&#xA;@GBRM INT&#xD;&#xA;SELECT @GBRM =  CAST(DATA1 AS INT) &#xD;&#xA; FROM SGS_CODE_VALUE &#xD;&#xA; WHERE &#xD;&#xA;CODE_ID = 52 &#xD;&#xA;  AND CODE_VALUE = 'GBRM'&#xD;&#xA;&#xD;&#xA;DECLARE @GRAD AS DATETIME&#xD;&#xA;SELECT &#xD;&#xA;@GRAD =  CAST(DATA1 AS DATETIME) &#xD;&#xA; FROM SGS_CODE_VALUE &#xD;&#xA; WHERE CODE_ID = 52 &#xD;&#xA;  &#xD;&#xA;AND CODE_VALUE = 'GRAD'&#xD;&#xA;&#xD;&#xA;IF MONTH(@PAYMENTDATE) = @GBRM AND @PAYMENTDATE &gt;= @GRAD&#xD;&#xA;BEGIN &#xD;&#xA;&#xD;&#xA;&#xD;&#xA; DECLARE @PAYMENT_ITEM_TYPE_ID INT&#xD;&#xA; SELECT @PAYMENT_ITEM_TYPE_ID = PAYMENT_ITEM_TYPE_ID &#xD;&#xA;FROM &#xD;&#xA; SGT_PAYMENT_ITEM_TYPE  WHERE ITEM_TYPE_CODE = 'ITEM37'&#xD;&#xA;&#xD;&#xA; DECLARE @LAST_DAY_OF_THE_YEAR &#xD;&#xA;DATETIME&#xD;&#xA; DECLARE @FIRST_DAY_OF_NEXT_YEAR DATETIME&#xD;&#xA;&#xD;&#xA; SET @LAST_DAY_OF_THE_YEAR  &#xD;&#xA;= DATEADD(M,1,@PAYMENTDATE) -1&#xD;&#xA; SET @FIRST_DAY_OF_NEXT_YEAR = DATEADD(D,1,@LAST_DAY_OF_THE_YEAR)&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;SELECT PIT.ITEM_TYPE_DESCRIPTION,&#xD;&#xA;  PAPIT.*,&#xD;&#xA;  CAST(DATA1 AS DECIMAL(9,2)) AS INCPERCENTAGE&#xD;&#xA;  &#xD;&#xA;INTO #TEMP&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE  PAPIT&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE &#xD;&#xA;PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN  &#xD;&#xA;   &#xD;&#xA;(&#xD;&#xA;    SELECT PA.PAYEE_ACCOUNT_ID ,GB.DATA1&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;     &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS  &#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;&#xD;&#xA;     INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE &#xD;&#xA;= CV.CODE_VALUE&#xD;&#xA;     LEFT JOIN SGS_CODE_VALUE GB &#xD;&#xA;      ON PA.GRADUATED_BENEFIT_OPTION_ID= &#xD;&#xA;GB.CODE_ID &#xD;&#xA;       AND PA.GRADUATED_BENEFIT_OPTION_VALUE = GB.CODE_VALUE&#xD;&#xA;    WHERE &#xD;&#xA;(CV.DATA2 &lt;&gt; 'CNLD' AND CV.DATA2 &lt;&gt; 'TRMD' )  &#xD;&#xA;     AND PAYEE_ACCOUNT_STATUS_ID  &#xD;&#xA;= &#xD;&#xA;      (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS &#xD;&#xA;PAS1 (NOLOCK)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &#xD;&#xA;&lt;= @STATUSCHECKDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID &#xD;&#xA;DESC&#xD;&#xA;      )&#xD;&#xA;     AND PAS.STATUS_EFFECTIVE_DATE &lt;= @STATUSCHECKDATE&#xD;&#xA;     &#xD;&#xA;AND BENEFIT_BEGIN_DATE &lt;=  @STATUSCHECKDATE&#xD;&#xA;     AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &#xD;&#xA;&gt; @STATUSCHECKDATE)&#xD;&#xA;     AND GRADUATED_BENEFIT_OPTION_VALUE IS NOT NULL&#xD;&#xA;   ) AS &#xD;&#xA;PAYEE&#xD;&#xA;  ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID   &#xD;&#xA;  WHERE PIT.CHECK_GROUP_CODE_VALUE &#xD;&#xA;= 'GRSS' AND PIT.BASE_AMOUNT_FLAG = 'Y'&#xD;&#xA;  AND (@STATUSCHECKDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;  &#xD;&#xA;AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END))&#xD;&#xA;  AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &#xD;&#xA;&lt;&gt; 'Y'&#xD;&#xA;&#xD;&#xA;UPDATE PAPIT &#xD;&#xA;  SET PAPIT.END_DATE = @LAST_DAY_OF_THE_YEAR, &#xD;&#xA;&#xD;&#xA;  PAPIT.MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), &#xD;&#xA;  PAPIT.MODIFIED_DATE = GETDATE(),&#xD;&#xA;  &#xD;&#xA;PAPIT.BATCH_SCHEDULE_ID = NULL,&#xD;&#xA;  PAPIT.REISSUE_ITEM_FLAG = NULL,  &#xD;&#xA;  PAPIT.UPDATE_SEQ &#xD;&#xA;= ISNULL(PAPIT.UPDATE_SEQ,0)+1 &#xD;&#xA;  FROM #TEMP A&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA;PAPIT &#xD;&#xA;   ON A.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  &#xD;&#xA;WHERE PAPIT.PAYMENT_ITEM_TYPE_ID = @PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#xD;&#xA; INSERT INTO SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE&#xD;&#xA; &#xD;&#xA;(&#xD;&#xA;  PAYEE_ACCOUNT_ID, &#xD;&#xA;  PAYMENT_ITEM_TYPE_ID, &#xD;&#xA;  AMOUNT, &#xD;&#xA;  [START_DATE],&#xD;&#xA;  &#xD;&#xA;CREATED_BY, &#xD;&#xA;  CREATED_DATE, &#xD;&#xA;  MODIFIED_BY, &#xD;&#xA;  MODIFIED_DATE, &#xD;&#xA;  &#xD;&#xA;UPDATE_SEQ&#xD;&#xA; )&#xD;&#xA; SELECT PAYEE_ACCOUNT_ID, &#xD;&#xA;  @PAYMENT_ITEM_TYPE_ID AS PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;  &#xD;&#xA;SUM(CASE WHEN PAYMENT_ITEM_TYPE_ID = @PAYMENT_ITEM_TYPE_ID THEN AMOUNT ELSE 0 END)&#xD;&#xA;  + ROUND(SUM(AMOUNT &#xD;&#xA;* ISNULL(INCPERCENTAGE,0.0)/100),2) AS AMOUNT,&#xD;&#xA;  @FIRST_DAY_OF_NEXT_YEAR,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), &#xD;&#xA;  GETDATE(),&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid), &#xD;&#xA;  GETDATE(),&#xD;&#xA;  0&#xD;&#xA;  &#xD;&#xA;FROM #TEMP &#xD;&#xA;  GROUP BY PAYEE_ACCOUNT_ID&#xD;&#xA;  &#xD;&#xA;  -- ADD PAYEE ACCOUNTS FOR TAX CALCULATION TO A TEMP TABLE  INCLUDE THESE PAYEE ACCOUNTS FOR TAX CALC.&#xD;&#xA;  IF OBJECT_ID('TEMP_GRADUATED_BENEFIT_PAYEE_ACCOUNT') &#xD;&#xA;IS NOT NULL&#xD;&#xA;   DROP TABLE TEMP_GRADUATED_BENEFIT_PAYEE_ACCOUNT&#xD;&#xA;  SELECT DISTINCT PAYEE_ACCOUNT_ID, &#xD;&#xA;@PAYMENT_ITEM_TYPE_ID AS PAYMENT_ITEM_TYPE_ID,'N' AS INDICATOR INTO TEMP_GRADUATED_BENEFIT_PAYEE_ACCOUNT&#xD;&#xA;  &#xD;&#xA;FROM #TEMP&#xD;&#xA; &#xD;&#xA; DROP TABLE #TEMP&#xD;&#xA;END">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPAPITForInsrRecv" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @NEXTBENEFITPAYMENTDATE DATETIME&#xD;&#xA;SELECT @NEXTBENEFITPAYMENTDATE &#xD;&#xA;= DATEADD(M,1,MAX(PAYMENT_DATE)) FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK)  &#xD;&#xA;WHERE SCHEDULE_TYPE_VALUE &#xD;&#xA;= 'MTLY' AND STATUS_VALUE = 'PRCD'&#xD;&#xA;&#xD;&#xA;SELECT PA.PAYEE_PERSLINK_ID AS PERSON_ID,SUM(PAPIT.AMOUNT) &#xD;&#xA;AS AMOUNT&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE &#xD;&#xA;PIT WITH(NOLOCK) ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT &#xD;&#xA;PA WITH(NOLOCK) ON PAPIT.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;WHERE PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;IN (79,80,81,82,83)&#xD;&#xA;AND @NEXTBENEFITPAYMENTDATE BETWEEN PAPIT.START_DATE AND ISNULL(PAPIT.END_DATE,'99991231')&#xD;&#xA;GROUP &#xD;&#xA;BY PA.PAYEE_PERSLINK_ID">
      <parameters />
    </query>
    <query ID="rptPensionPaymentHistory" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select b.ITEM_TYPE_DESCRIPTION as ITEM_DESCRIPTION,a.AMOUNT as ITEM_AMOUNT,a.START_DATE as StartDate,a.END_DATE as EndDate &#xD;&#xA;from SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE a&#xD;&#xA;inner join SGT_PAYMENT_ITEM_TYPE b&#xD;&#xA;on a.PAYMENT_ITEM_TYPE_ID =b.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;where PAYEE_ACCOUNT_ID = @payee_account_id&#xD;&#xA;and START_DATE &gt;= @start_date &#xD;&#xA;and ISNULL(END_DATE,'01/01/1753')&lt;=@end_date">
      <parameters>
        <parameter ID="@payee_account_id" sfwDataType="int" />
        <parameter ID="@start_date" sfwDataType="DateTime" />
        <parameter ID="@end_date" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="CheckResourceForLoggedInUserForSaveButton" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT U.* FROM SGS_USER U&#xD;&#xA;INNER JOIN SGS_USER_ROLES UR ON U.USER_SERIAL_ID = UR.USER_SERIAL_ID &#xD;&#xA;AND ((UR.EFFECTIVE_START_DATE IS NULL) OR (UR.EFFECTIVE_START_DATE&lt;=CONVERT(DATETIME,CONVERT(CHAR,GETDATE(),103),103)))&#xD;&#xA;AND ((UR.EFFECTIVE_END_DATE IS NULL) OR (UR.EFFECTIVE_END_DATE&gt;=CONVERT(DATETIME,CONVERT(CHAR,GETDATE(),103),103)))   &#xD;&#xA;INNER JOIN SGS_SECURITY S ON S.ROLE_ID = UR.ROLE_ID AND S.SECURITY_VALUE != 0&#xD;&#xA;INNER JOIN SGS_RESOURCES R ON R.RESOURCE_ID = S.RESOURCE_ID&#xD;&#xA;WHERE S.RESOURCE_ID = 420 AND U.USER_SERIAL_ID = @USER_SERIAL_ID&#xD;&#xA;">
      <parameters>
        <parameter ID="@USER_SERIAL_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountPaymentItemTypeRTW" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PAPIT.* FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE SPIT WITH(NOLOCK) ON SPIT.PAYMENT_ITEM_TYPE_ID=PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE PAPIT.PAYEE_ACCOUNT_ID=@Pre_RTW_Payee_Account_id&#xD;&#xA;AND SPIT.ITEM_TYPE_DIRECTION = 1&#xD;&#xA;AND @PAYMENTDATE BETWEEN PAPIT.START_DATE AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;">
      <parameters>
        <parameter ID="@Pre_RTW_Payee_Account_id" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPAPITForRTWRecalculation" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT *,ISNULL(SPEIT.UPDATE_SEQ,0) AS PAPIT_UPDATE_SEQ FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE SPEIT WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE SPIT WITH(NOLOCK) ON SPIT.PAYMENT_ITEM_TYPE_ID=SPEIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON ORG.ORG_ID=SPEIT.VENDOR_ORG_ID&#xD;&#xA;WHERE SPEIT.PAYEE_ACCOUNT_ID=@PAYEE_ACCOUNT_ID&#xD;&#xA;AND&#x9;PRE_RTW_PAYEE_ACCOUNT_ID IS NULL">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="PayeeAccountPaymentItemTypeId" sfwType="Column" sfwValue="payee_account_payment_item_type_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="True" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PayeeAccountId" sfwType="Column" sfwValue="payee_account_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PaymentItemTypeId" sfwType="Column" sfwValue="payment_item_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="AccountNumber" sfwType="Column" sfwValue="account_number" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="20" />
    <attribute ID="VendorOrgId" sfwType="Column" sfwValue="vendor_org_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="Amount" sfwType="Column" sfwValue="amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="15,2" />
    <attribute ID="StartDate" sfwType="Column" sfwValue="start_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="EndDate" sfwType="Column" sfwValue="end_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="BatchScheduleId" sfwType="Column" sfwValue="batch_schedule_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="ReissueItemFlag" sfwType="Column" sfwValue="reissue_item_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="MiscellaneousCorrectionFlag" sfwType="Column" sfwValue="miscellaneous_correction_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="PersonAccountId" sfwType="Column" sfwValue="person_account_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" />
    <attribute ID="PreRtwPayeeAccountId" sfwType="Column" sfwValue="pre_rtw_payee_account_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" />
    <attribute ID="objPayeeAccount" sfwType="Object" sfwEntity="entPayeeAccount" sfwValue="ibusPayeeAccount" />
    <attribute ID="objPaymentItemType" sfwType="Object" sfwEntity="entPaymentItemType" sfwValue="ibusPaymentItemType" />
    <attribute sfwDataType="string" sfwType="Property" ID="VendorOrgCode" sfwValue="icdoPayeeAccountPaymentItemType.vendor_org_code" />
    <attribute ID="objPayeeAccountDeductionRefund" sfwType="Object" sfwEntity="entPayeeAccountDeductionRefund" sfwValue="ibusPayeeAccountDeductionRefund" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountPaymentItemType" ID="lstDeductionHistory" sfwValue="iclbDeductionHistory" />
    <attribute ID="objVendor" sfwType="Object" sfwEntity="entOrganization" sfwValue="ibusVendor" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="Idecamountmultipliedbyitemdirection" sfwValue="idecamountmultipliedbyitemdirection" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecItemAmount" sfwValue="idecItemAmount" />
  </attributes>
</entity>