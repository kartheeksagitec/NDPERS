<?xml version="1.0" encoding="utf-8"?>
<entity ID="entPaymentHistoryHeader" sfwActive="True" sfwStatus="Valid" sfwType="BusinessRule" sfwMainCDO="icdoPaymentHistoryHeader" sfwObjectID="busPaymentHistoryHeader" sfwTableName="sgt_payment_history_header" sfwView="False" sfwParentEntity="entExtendBase">
  <rules>
    <rule ID="VisibleRuleIsBtnCancelPendingVisible" sfwExpression="!(this.IsPaymentTypeVendor() == True) &amp;&amp; &#xA;(this.icdoPaymentHistoryHeader.status_value == &quot;OUST&quot;) &amp;&amp; &#xA;!(this.icdoPaymentHistoryHeader.payment_schedule_id == 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsBtnCancelVisible" sfwExpression="(this.IsbtnCancelPriorPaymentVisible() == &quot;CNLD&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsBtnReceivableCreatedVisible" sfwExpression="(this.icdoPaymentHistoryHeader.status_value == &quot;RPND&quot;) &amp;&amp; &#xA;!(this.icdoPaymentHistoryHeader.modified_by == RFunc.GetValue&lt;String&gt;(this, &quot;iobjPassInfo.istrUserID&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsBtnReceivablePendingVisible" sfwExpression="!(this.IsPaymentTypeVendor() == True) &amp;&amp; &#xA;(this.icdoPaymentHistoryHeader.status_value == &quot;PRCD&quot;) &amp;&amp; &#xA;!(this.icdoPaymentHistoryHeader.payment_schedule_id == 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsCancelPriorPaymentVisible" sfwExpression="!(this.icdoPaymentHistoryHeader.modified_by == RFunc.GetValue&lt;String&gt;(this, &quot;iobjPassInfo.istrUserID&quot;)) &amp;&amp; &#xA;(this.IsbtnCancelPriorPaymentVisible() == &quot;CPYP&quot;)" sfwObjectBased="True" />
  </rules>
  <delete />
  <checklist />
  <initialload>
    <item ID="VisibleRuleIsBtnCancelPendingVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsBtnReceivableCreatedVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsBtnCancelVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsBtnReceivablePendingVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsCancelPriorPaymentVisible" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror />
  <harderror />
  <validatedelete />
  <groupslist />
  <updateablecdo />
  <commonproperties />
  <queries>
    <query ID="Lookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT phh.PAYMENT_HISTORY_HEADER_ID,phh.PLAN_ID,phh.PAYMENT_SCHEDULE_ID,phh.PAYEE_ACCOUNT_ID,phh.PERSON_ID,phh.PAYMENT_DATE,phh.STATUS_ID,&#xD;&#xA;  phh.STATUS_VALUE,ORG_CODE,temp1.transaction_date as transaction_date,gross_amount,plan_name FROM&#xD;&#xA;  &#xD;&#xA;(&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,max(PHD.TRANSACTION_DATE) as transaction_date    &#xD;&#xA;FROM &#xD;&#xA;SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)  &#xD;&#xA;LEFT JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;) temp1,&#xD;&#xA;(&#xD;&#xA;SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,sum(case when pit.item_type_direction = 1 then Amount else 0 end ) as gross_amount    &#xD;&#xA;FROM &#xD;&#xA;SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)  &#xD;&#xA;INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID -- AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'  &#xD;&#xA;GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;) temp&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER phh WITH(NOLOCK) ON phh.PAYMENT_HISTORY_HEADER_ID = temp.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;LEFT JOIN SGT_ORGANIZATION ORG WITH(NOLOCK)  ON ORG.ORG_ID=phh.ORG_ID&#xD;&#xA;LEFT JOIN sgt_plan p with(nolock) on phh.plan_id=p.plan_id &#xD;&#xA;where temp1.PAYMENT_HISTORY_HEADER_ID = temp.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;order by PHH.PAYMENT_HISTORY_HEADER_ID desc">
      <parameters />
    </query>
    <query ID="LoadPaymentHistoryDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select * from SGT_PAYMENT_HISTORY_DETAIL a WITH(NOLOCK)  inner join &#xD;&#xA;SGT_PAYMENT_ITEM_TYPE b WITH(NOLOCK)  on a.PAYMENT_ITEM_TYPE_ID=b.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;where PAYMENT_HISTORY_HEADER_ID=@headerid">
      <parameters>
        <parameter ID="@headerid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="createPaymentHistory" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @EFFECTIVE_DATE DATETIME&#xD;&#xA;SELECT @EFFECTIVE_DATE = EFFECTIVE_DATE FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_HEADER(PLAN_ID,PAYEE_ACCOUNT_ID,PERSON_ID,ORG_ID,PAYMENT_DATE,STATUS_ID,STATUS_VALUE,&#xD;&#xA; PAYMENT_SCHEDULE_ID,FED_TAX_OPTION_ID,FED_TAX_OPTION_VALUE,FED_TAX_ALLOWANCE,FED_MARITAL_STATUS_ID,FED_MARITAL_STATUS_VALUE,&#xD;&#xA; FED_ADDITIONAL_TAX_AMOUNT,STATE_TAX_OPTION_ID,STATE_TAX_OPTION_VALUE,STATE_TAX_ALLOWANCE,STATE_MARITAL_STATUS_ID,STATE_MARITAL_STATUS_VALUE,&#xD;&#xA; STATE_ADDITIONAL_TAX_AMOUNT,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ,ROLLOVER_TYPE_ID,ROLLOVER_TYPE_VALUE, STATE_TAX_FLAT_AMOUNT, FED_FILING_STATUS_ID, FED_FILING_STATUS_VALUE, EMPLOYER_PAYROLL_HEADER_ID)&#xD;&#xA;&#xD;&#xA;SELECT TEMP.* FROM &#xD;&#xA;(&#xD;&#xA; SELECT &#xD;&#xA;  Case When BA.plan_id is Not null then BA.Plan_id Else DROA.Plan_id END as PLAN_ID,&#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PA.PAYEE_PERSLINK_ID  AS PERSON_ID, &#xD;&#xA;  PA.PAYEE_ORG_ID AS ORG_ID ,&#xD;&#xA;  @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;  2507 AS STATUS_ID ,&#xD;&#xA;  'OUST' AS STATUS_VALUE,&#xD;&#xA;  @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;  Case When TF.TAX_OPTION_ID is not null then TF.TAX_OPTION_ID else 2218 end AS FED_TAX_OPTION_ID ,&#xD;&#xA;  TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;  TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;  case when TF.MARITAL_STATUS_ID is not null then TF.MARITAL_STATUS_ID else 306 end AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;  TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;  CASE WHEN ISNULL(TF.ADDITIONAL_TAX_AMOUNT,0) != 0 THEN TF.ADDITIONAL_TAX_AMOUNT ELSE TF.FOUR_c END AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  Case When TS.TAX_OPTION_ID is not null then TS.TAX_OPTION_ID else 2218 end AS STATE_TAX_OPTION_ID ,&#xD;&#xA;  TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;  TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;  case when TS.MARITAL_STATUS_ID is not null then TS.MARITAL_STATUS_ID else 306 end AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;  TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;  TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  CREATED_BY ,getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ,&#xD;&#xA;  2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;  Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;  CASE WHEN TS.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' THEN TS.STATE_FLAT_AMOUNT ELSE TS.REFUND_STATE_AMT END AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  CASE&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NOT NULL THEN TF.FILING_STATUS_VALUE &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE IN ('SNGL', 'MRDW') THEN 'SGMF' &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE = 'MRID' THEN 'MFJQ' ELSE NULL END AS FED_FILING_STATUS_VALUE,&#xD;&#xA; NULL AS EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;  INNER JOIN &#xD;&#xA;  (&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID    &#xD;&#xA;   WHERE&#xD;&#xA;    @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;    AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;    AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;    AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;   GROUP BY PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;  ) AS PAPI&#xD;&#xA;   ON PAPI.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;  left join SGT_BENEFIT_APPLICATION BA  on PA.APPLICATION_ID  = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;  left join SGT_BENEFIT_DRO_CALCULATION  DROC  on PA.DRO_CALCULATION_ID = DROC.DRO_CALCULATION_ID&#xD;&#xA;  left join dbo.SGT_BENEFIT_DRO_APPLICATION DROA  on PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT outer join SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF &#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;    AND @PAYMENTDATE BETWEEN TF.START_DATE AND (CASE WHEN TF.END_DATE IS NULL THEN '99991231' ELSE TF.END_DATE end)&#xD;&#xA;    and TF.BENEFIT_DISTRIBUTION_TYPE_VALUE NOT IN ('PSLO', 'RMD')&#xD;&#xA;  LEFT outer join SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS &#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;    AND @PAYMENTDATE BETWEEN TS.START_DATE AND (CASE WHEN TS.END_DATE IS NULL THEN '99991231' ELSE TS.END_DATE end)&#xD;&#xA;    and TS.BENEFIT_DISTRIBUTION_TYPE_VALUE NOT IN ('PSLO', 'RMD')&#xD;&#xA;  Left Outer Join Sgt_benefit_calculation  BC &#xD;&#xA;   on Pa.Calculation_id = Bc.benefit_calculation_id&#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;=@PAYMENTDATE&#xD;&#xA;  AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA; --26652&#xD;&#xA; SELECT DISTINCT&#xD;&#xA;     PLAN_ID AS PLAN_ID,&#xD;&#xA;     NULL AS PAYEE_ACCOUNT_ID,&#xD;&#xA;     PERSON_ID, &#xD;&#xA;     ORG_ID ,&#xD;&#xA;     @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;     2507 AS STATUS_ID ,&#xD;&#xA;     'OUST' AS STATUS_VALUE,&#xD;&#xA;     @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;     2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;     NULL AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;     NULL AS FED_TAX_ALLOWANCE ,&#xD;&#xA;     306  AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;     NULL AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;     0.0 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;     NULL AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;     NULL AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;     NULL AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;     0.0 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 UPDATE_SEQ,&#xD;&#xA;     2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;     Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;&#x9; 0.00 AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;&#x9;7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;&#x9;NULL AS FED_FILING_STATUS_VALUE,&#xD;&#xA;&#x9;EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;FROM &#xD;&#xA;     (SELECT  CASE WHEN REFUND_TO_VALUE = 'SMME' THEN REFUND_TO_PERSON_ID ELSE NULL END AS PERSON_ID,&#xD;&#xA;      NULL AS ORG_ID,&#xD;&#xA;        CASE WHEN OVERRIDDEN_REFUND_AMOUNT &gt; 0 THEN OVERRIDDEN_REFUND_AMOUNT &#xD;&#xA;          ELSE COMPUTED_REFUND_AMOUNT END AS AMOUNT &#xD;&#xA;          ,PLAN_ID -- Backlog PIR 938&#xD;&#xA;&#x9;&#x9;  , D.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;      FROM SGT_REMITTANCE R WITH(NOLOCK) &#xD;&#xA;&#x9;  INNER JOIN SGT_DEPOSIT D WITH(NOLOCK) ON R.DEPOSIT_ID = D.DEPOSIT_ID&#xD;&#xA;&#x9;  WHERE REFUND_STATUS_VALUE = 'APRD'  AND REMITTANCE_TYPE_VALUE IN ('P501', 'P502', 'P503','P504','P505')&#xD;&#xA;     ) AS EXREF&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT &#xD;&#xA;  Case When BA.plan_id is Not null then BA.Plan_id Else DROA.Plan_id END as PLAN_ID,&#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  Null  AS PERSON_ID, &#xD;&#xA;  PAPI.ROLLOVER_ORG_ID AS ORG_ID ,&#xD;&#xA;  @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;  2507 AS STATUS_ID ,&#xD;&#xA;  'OUST' AS STATUS_VALUE,&#xD;&#xA;  @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;  2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;  Null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;  0 AS FED_TAX_ALLOWANCE ,&#xD;&#xA;  306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;  Null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;  0.00 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;  Null STATE_TAX_OPTION_VALUE ,&#xD;&#xA;  0 AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;  306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;  Null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;  0.00 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  CREATED_BY ,getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ,&#xD;&#xA;  2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;  PAPI.ROLLOVER_TYPE_VALUE as ROLLOVER_TYPE_VALUE,&#xD;&#xA;  0.00 AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  NULL AS FED_FILING_STATUS_VALUE,&#xD;&#xA;  NULL AS EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;  INNER JOIN &#xD;&#xA;  (&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PARD.ROLLOVER_ORG_ID, PARD.ROLLOVER_TYPE_VALUE FROM &#xD;&#xA;    SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   WHERE&#xD;&#xA;    @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;    AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;    AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;    AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;    AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;    AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;   GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID ,PARD.ROLLOVER_TYPE_VALUE&#xD;&#xA;  ) AS PAPI&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  left join SGT_BENEFIT_APPLICATION BA  on PA.APPLICATION_ID  = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;  left join SGT_BENEFIT_DRO_CALCULATION  DROC  on PA.DRO_CALCULATION_ID = DROC.DRO_CALCULATION_ID&#xD;&#xA;  left join dbo.SGT_BENEFIT_DRO_APPLICATION DROA  on PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  Left Outer Join Sgt_benefit_calculation  BC &#xD;&#xA;   on Pa.Calculation_id = Bc.benefit_calculation_id&#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;=@PAYMENTDATE&#xD;&#xA;  AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;&#xD;&#xA;) AS TEMP&#xD;&#xA;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PA ON TEMP.PAYEE_ACCOUNT_ID  = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P  ON TEMP.PERSON_ID= P.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION O  ON TEMP.ORG_ID = O.ORG_ID&#xD;&#xA;ORDER BY &#xD;&#xA;CASE &#xD;&#xA;    WHEN ISNULL(PA.PULL_CHECK_FLAG,'N') = 'Y' THEN 'D'&#xD;&#xA;    WHEN ISNULL(PA.PULL_CHECK_FLAG,'N') = 'S' THEN 'E' &#xD;&#xA;    ELSE 'C' &#xD;&#xA;END,&#xD;&#xA;CASE WHEN PA.BENEFIT_OPTION_VALUE NOT IN ('REFD', 'RGRD', 'AURD') THEN 'A' ELSE 'B' END,  &#xD;&#xA;CASE WHEN TEMP.PERSON_ID IS NOT NULL  &#xD;&#xA; THEN  &#xD;&#xA;  ISNULL(P.LAST_NAME,'') +' '+ ISNULL(P.FIRST_NAME,'') +' '+ ISNULL(P.MIDDLE_NAME,'') &#xD;&#xA; ELSE &#xD;&#xA;  O.ORG_CODE+','+O.ORG_NAME END">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRefundAmtForPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT   YEAR(PAYMENT_DATE) AS PAYMENT_YEAR,&#xD;&#xA;     SUM(CASE WHEN CHECK_GROUP_CODE_VALUE = 'GRSS' AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET' &#xD;&#xA;      THEN AMOUNT ELSE 0 END) AS GROSS_AMOUNT,&#xD;&#xA;     SUM(CASE WHEN CHECK_GROUP_CODE_VALUE = 'DEDT' &#xD;&#xA;      THEN AMOUNT ELSE 0 END) AS DEDUCTION_AMOUNT,&#xD;&#xA;     SUM(CASE WHEN TAXABLE_ITEM_FLAG = 'Y' AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;      THEN AMOUNT ELSE 0 END) AS TAXABLE_AMOUNT,&#xD;&#xA;        SUM(CASE WHEN (TAXABLE_ITEM_FLAG = 'N' AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET' &#xD;&#xA;      AND CHECK_GROUP_CODE_VALUE &lt;&gt; 'DEDT')&#xD;&#xA;      THEN AMOUNT ELSE 0 END) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ITEM_TYPE_DIRECTION * AMOUNT ) AS NET_AMOUNT&#xD;&#xA;FROM     SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA; INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) &#xD;&#xA;     ON  PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) &#xD;&#xA;     ON  PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;WHERE    PHH.PERSON_ID = @PERSONID &#xD;&#xA;     AND  PHH.PAYMENT_DATE &lt;= @LASTPAYMENTDATE&#xD;&#xA;      AND  PIT.ITEM_TYPE_CODE = CASE WHEN UPPER(@PITFLAG) = 'Y' THEN 'ITEM1' ELSE PIT.ITEM_TYPE_CODE END&#xD;&#xA;GROUP BY   YEAR(PAYMENT_DATE)&#xD;&#xA;ORDER BY   YEAR(PAYMENT_DATE) DESC">
      <parameters>
        <parameter ID="@PERSONID" sfwDataType="int" />
        <parameter ID="@LASTPAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PITFLAG" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadRefundAmtForOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT YEAR(PAYMENT_DATE ) AS PAYMENT_YEAR,&#xD;&#xA;CAST(CAST(YEAR(PAYMENT_DATE) AS VARCHAR(4)) + '/' + '01' + '/01' AS DATETIME) as PaymentYearStartDate,&#xD;&#xA;dateadd(dd,-1,dateadd(yy,1,CAST(CAST(YEAR(PAYMENT_DATE) AS VARCHAR(4)) + '/' + '01' + '/01' AS DATETIME))) as PaymentYearEndDate,&#xD;&#xA; SUM(CASE WHEN CHECK_GROUP_CODE_VALUE = 'GRSS' AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;   THEN AMOUNT ELSE 0 END) AS GROSS_AMOUNT,&#xD;&#xA; SUM(CASE WHEN CHECK_GROUP_CODE_VALUE = 'DEDT' &#xD;&#xA;   THEN AMOUNT ELSE 0 END) AS DEDUCTION_AMOUNT,&#xD;&#xA; SUM(CASE WHEN TAXABLE_ITEM_FLAG = 'Y' AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;   THEN AMOUNT ELSE 0 END) AS TAXABLE_AMOUNT,&#xD;&#xA;    SUM(CASE WHEN (ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    and VENDOR_FLAG= 'N'  &#xD;&#xA;     and TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;    and ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET')&#xD;&#xA;   THEN AMOUNT ELSE 0 END) AS NonTaxable_Amount,&#xD;&#xA; SUM(ITEM_TYPE_DIRECTION * AMOUNT ) AS NET_AMOUNT&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD(NOLOCK) &#xD;&#xA;   ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT(NOLOCK) &#xD;&#xA;   ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;WHERE    PHH.ORG_ID = @ORGID &#xD;&#xA;     AND  PHH.PAYMENT_DATE &lt;= @LASTPAYMENTDATE&#xD;&#xA;      AND  PIT.ITEM_TYPE_CODE = CASE WHEN UPPER(@PITFLAG) = 'Y' THEN 'ITEM1' ELSE PIT.ITEM_TYPE_CODE END&#xD;&#xA;GROUP BY   YEAR(PAYMENT_DATE)&#xD;&#xA;ORDER BY   YEAR(PAYMENT_DATE) DESC">
      <parameters>
        <parameter ID="@ORGID" sfwDataType="int" />
        <parameter ID="@LASTPAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PITFLAG" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="CreatePaymentHistoryAdhoc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LASTDATE DATETIME&#xD;&#xA;SELECT @LASTDATE = MAX(PAYMENT_DATE) FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA;WHERE PROCESS_DATE &lt;= @PAYMENTDATE&#xD;&#xA;AND SCHEDULE_TYPE_VALUE = 'MTLY'&#xD;&#xA;AND STATUS_VALUE = 'PRCD'&#xD;&#xA;&#xD;&#xA;DECLARE @EFFECTIVE_DATE DATETIME&#xD;&#xA;SELECT @EFFECTIVE_DATE = EFFECTIVE_DATE FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_HEADER(PLAN_ID,PAYEE_ACCOUNT_ID,PERSON_ID,ORG_ID,PAYMENT_DATE,STATUS_ID,STATUS_VALUE,&#xD;&#xA; PAYMENT_SCHEDULE_ID,FED_TAX_OPTION_ID,FED_TAX_OPTION_VALUE,FED_TAX_ALLOWANCE,FED_MARITAL_STATUS_ID,FED_MARITAL_STATUS_VALUE,&#xD;&#xA; FED_ADDITIONAL_TAX_AMOUNT,STATE_TAX_OPTION_ID,STATE_TAX_OPTION_VALUE,STATE_TAX_ALLOWANCE,STATE_MARITAL_STATUS_ID,STATE_MARITAL_STATUS_VALUE,&#xD;&#xA; STATE_ADDITIONAL_TAX_AMOUNT,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ,ROLLOVER_TYPE_ID,ROLLOVER_TYPE_VALUE, STATE_TAX_FLAT_AMOUNT, FED_FILING_STATUS_ID, FED_FILING_STATUS_VALUE)&#xD;&#xA;&#xD;&#xA;SELECT  CASE WHEN (PA.BENEFIT_OPTION_VALUE='DBCT') THEN 7&#xD;&#xA;        WHEN PA.BENEFIT_OPTION_VALUE='SPEL' THEN CASE WHEN BA.PLAN_ID = 27 THEN 28 ELSE 7 END &#xD;&#xA;        ELSE BA.PLAN_ID END&#xD;&#xA;     AS PLAN_ID,&#xD;&#xA;     PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;     Null AS PERSON_ID, &#xD;&#xA;     case when (PA.BENEFIT_OPTION_VALUE  ='DBCT' OR PA.BENEFIT_OPTION_VALUE  ='SPEL') &#xD;&#xA;        then (Select org_id from sgt_organization &#xD;&#xA;          where org_code=cast((select data1 from sgs_code_value&#xD;&#xA;        where code_id=52 and code_value='FDCP') as int ) )      &#xD;&#xA;          when PA.BENEFIT_OPTION_VALUE IN ('DBDC','DBTT')  &#xD;&#xA;        then (Select org_id from sgt_organization &#xD;&#xA;          where org_code=&#xD;&#xA;   cast((select data1 from sgs_code_value where code_id=52 and code_value='TFRV') as int ) )&#xD;&#xA;       when PA.BENEFIT_OPTION_VALUE ='DTCT'&#xD;&#xA;         then &#xD;&#xA;       (Select org_id from sgt_organization &#xD;&#xA;          where org_code=&#xD;&#xA;        cast((select data1 from sgs_code_value &#xD;&#xA;       where code_id=52 and code_value='TIAV') as int ) )&#xD;&#xA;     end AS ORG_ID ,&#xD;&#xA;     @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;     2507 AS STATUS_ID ,&#xD;&#xA;     'OUST' AS STATUS_VALUE,&#xD;&#xA;     @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;     isnull(TF.TAX_OPTION_ID,2218) AS FED_TAX_OPTION_ID ,&#xD;&#xA;     TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;     TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;     TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;     CASE WHEN ISNULL(TF.ADDITIONAL_TAX_AMOUNT,0) != 0 THEN TF.ADDITIONAL_TAX_AMOUNT ELSE TF.FOUR_c END AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     isnull(TS.TAX_OPTION_ID,2218) AS STATE_TAX_OPTION_ID ,&#xD;&#xA;     TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;     TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;     TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;     TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 UPDATE_SEQ,&#xD;&#xA;     2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;     Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;&#x9; CASE WHEN TS.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' THEN TS.STATE_FLAT_AMOUNT ELSE TS.REFUND_STATE_AMT END AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;&#x9;7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;&#x9;CASE WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NOT NULL THEN TF.FILING_STATUS_VALUE &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE IN ('SNGL', 'MRDW') THEN 'SGMF' &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE = 'MRID' THEN 'MFJQ' ELSE NULL END AS FED_FILING_STATUS_VALUE &#xD;&#xA;&#x9; &#xD;&#xA;FROM    SGT_PAYEE_ACCOUNT PA  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON  PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON  PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA  &#xD;&#xA;   ON PA.APPLICATION_ID  = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF &#xD;&#xA;   ON  PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;   AND  @PAYMENTDATE BETWEEN TF.START_DATE AND (CASE WHEN TF.END_DATE IS NULL THEN '99991231' ELSE TF.END_DATE END)&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS &#xD;&#xA;   ON   PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;   AND  @PAYMENTDATE BETWEEN TS.START_DATE AND (CASE WHEN TS.END_DATE IS NULL THEN '99991231' ELSE TS.END_DATE END)&#xD;&#xA;WHERE    (CV.DATA2 = 'APRD' )  &#xD;&#xA;   AND  PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;   AND  PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND  dateadd(m,-1,pa.BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;   AND  (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND  PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;   AND  ( PA.BENEFIT_OPTION_VALUE IN ('DBCT','DTCT','DBDC','DBTT','SPEL')  &#xD;&#xA;     AND (isnull(RHIC_EE_AMOUNT_REFUND_FLAG,'')='' OR RHIC_EE_AMOUNT_REFUND_FLAG='N'))&#xD;&#xA;union&#xD;&#xA;&#xD;&#xA;SELECT   BA.PLAN_ID  AS PLAN_ID,&#xD;&#xA;     PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;     PA.PAYEE_PERSLINK_ID  AS PERSON_ID, &#xD;&#xA;     PA.PAYEE_ORG_ID AS ORG_ID ,&#xD;&#xA;     @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;     2507 AS STATUS_ID ,&#xD;&#xA;     'OUST' AS STATUS_VALUE,&#xD;&#xA;     @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;     isnull(TF.TAX_OPTION_ID,2218) AS FED_TAX_OPTION_ID ,&#xD;&#xA;     TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;     TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;     TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;     CASE WHEN ISNULL(TF.ADDITIONAL_TAX_AMOUNT,0) != 0 THEN TF.ADDITIONAL_TAX_AMOUNT ELSE TF.FOUR_c END AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     isnull(TS.TAX_OPTION_ID,2218) AS STATE_TAX_OPTION_ID ,&#xD;&#xA;     TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;     TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;     TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;     TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 UPDATE_SEQ,&#xD;&#xA;     2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;     Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;&#x9; CASE WHEN TS.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' THEN TS.STATE_FLAT_AMOUNT ELSE TS.REFUND_STATE_AMT END AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;&#x9;7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;&#x9;CASE WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NOT NULL THEN TF.FILING_STATUS_VALUE &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE IN ('SNGL', 'MRDW') THEN 'SGMF' &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE = 'MRID' THEN 'MFJQ' ELSE NULL END AS FED_FILING_STATUS_VALUE &#xD;&#xA;FROM    SGT_PAYEE_ACCOUNT PA  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON  PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON  PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA  ON PA.APPLICATION_ID  = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_CALCULATION  DROC  ON PA.DRO_CALCULATION_ID = DROC.DRO_CALCULATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_APPLICATION DROA  on PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF &#xD;&#xA;   ON  PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;   AND  @PAYMENTDATE BETWEEN TF.START_DATE AND (CASE WHEN TF.END_DATE IS NULL THEN '99991231' ELSE TF.END_DATE END)&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS &#xD;&#xA;   ON   PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;   AND  @PAYMENTDATE BETWEEN TS.START_DATE AND (CASE WHEN TS.END_DATE IS NULL THEN '99991231' ELSE TS.END_DATE END)&#xD;&#xA;WHERE    (CV.DATA2 = 'APRD' )  &#xD;&#xA;   AND  PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;   AND  PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND  dateadd(m,-1,pa.BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;   AND  (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND  PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;   AND  ( PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD') AND  BA.HARDSHIP_APPROVED_FLAG = 'Y' &#xD;&#xA;   AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE) --PROD PIR 4919&#xD;&#xA;UNION&#xD;&#xA;--Rollover items&#xD;&#xA;SELECT   BA.PLAN_ID  AS PLAN_ID,&#xD;&#xA;     PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;     NULL  AS PERSON_ID, &#xD;&#xA;     PAPI.ROLLOVER_ORG_ID AS ORG_ID ,&#xD;&#xA;     @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;     2507 AS STATUS_ID ,&#xD;&#xA;     'OUST' AS STATUS_VALUE,&#xD;&#xA;     @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;     isnull(TF.TAX_OPTION_ID,2218) AS FED_TAX_OPTION_ID ,&#xD;&#xA;     TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;     TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;     TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;     CASE WHEN ISNULL(TF.ADDITIONAL_TAX_AMOUNT,0) != 0 THEN TF.ADDITIONAL_TAX_AMOUNT ELSE TF.FOUR_c END AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     isnull(TS.TAX_OPTION_ID,2218) AS STATE_TAX_OPTION_ID ,&#xD;&#xA;     TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;     TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;     TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;     TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 UPDATE_SEQ,&#xD;&#xA;     2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;     PAPI.ROLLOVER_TYPE_VALUE as ROLLOVER_TYPE_VALUE,&#xD;&#xA;&#x9; CASE WHEN TS.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' THEN TS.STATE_FLAT_AMOUNT ELSE TS.REFUND_STATE_AMT END AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;&#x9;7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;&#x9;CASE&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NOT NULL THEN TF.FILING_STATUS_VALUE &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE IN ('SNGL', 'MRDW') THEN 'SGMF' &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE = 'MRID' THEN 'MFJQ' ELSE NULL END AS FED_FILING_STATUS_VALUE &#xD;&#xA;FROM    SGT_PAYEE_ACCOUNT PA  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON  PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN &#xD;&#xA;  (&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PARD.ROLLOVER_ORG_ID,PARD.ROLLOVER_TYPE_VALUE FROM &#xD;&#xA;    SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   WHERE&#xD;&#xA;     -- '2009-11-17 00:00:00.000' BETWEEN PAPIT.START_DATE &#xD;&#xA;   -- AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;    --AND&#xD;&#xA;     @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA;     AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'    &#xD;&#xA;    AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;   GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID, PARD.ROLLOVER_TYPE_VALUE&#xD;&#xA;  ) AS PAPI&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON  PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA  ON PA.APPLICATION_ID  = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_CALCULATION  DROC  ON PA.DRO_CALCULATION_ID = DROC.DRO_CALCULATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_APPLICATION DROA  on PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF &#xD;&#xA;   ON  PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;   AND  @PAYMENTDATE BETWEEN TF.START_DATE AND (CASE WHEN TF.END_DATE IS NULL THEN '99991231' ELSE TF.END_DATE END)&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS &#xD;&#xA;   ON   PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;   AND  @PAYMENTDATE BETWEEN TS.START_DATE AND (CASE WHEN TS.END_DATE IS NULL THEN '99991231' ELSE TS.END_DATE END)&#xD;&#xA;WHERE    (CV.DATA2 = 'APRD' )  &#xD;&#xA;   AND  PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;   AND  PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND  dateadd(m,-1,pa.BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;   AND  (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND  PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;   AND  ( PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD') AND  BA.HARDSHIP_APPROVED_FLAG = 'Y' &#xD;&#xA;   AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE) --PROD PIR 4919&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT       BA.PLAN_ID AS PLAN_ID,&#xD;&#xA;     PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;     PA.PAYEE_PERSLINK_ID  AS PERSON_ID, &#xD;&#xA;     null AS ORG_ID ,&#xD;&#xA;     @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;     2507 AS STATUS_ID ,&#xD;&#xA;     'OUST' AS STATUS_VALUE,&#xD;&#xA;     @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;     isnull(TF.TAX_OPTION_ID,2218) AS FED_TAX_OPTION_ID ,&#xD;&#xA;     TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;     TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;     TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;     CASE WHEN ISNULL(TF.ADDITIONAL_TAX_AMOUNT,0) != 0 THEN TF.ADDITIONAL_TAX_AMOUNT ELSE TF.FOUR_c END AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     isnull(TS.TAX_OPTION_ID,2218) AS STATE_TAX_OPTION_ID ,&#xD;&#xA;     TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;     TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;     TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;     TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 UPDATE_SEQ,&#xD;&#xA;     2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;     Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;&#x9; CASE WHEN TS.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' THEN TS.STATE_FLAT_AMOUNT ELSE TS.REFUND_STATE_AMT END AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  CASE&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NOT NULL THEN TF.FILING_STATUS_VALUE &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE IN ('SNGL', 'MRDW') THEN 'SGMF' &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE = 'MRID' THEN 'MFJQ' ELSE NULL END AS FED_FILING_STATUS_VALUE &#xD;&#xA;FROM    SGT_PAYEE_ACCOUNT PA  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON  PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON  PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA  ON PA.APPLICATION_ID  = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF &#xD;&#xA;   ON  PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;   AND  @PAYMENTDATE BETWEEN TF.START_DATE AND (CASE WHEN TF.END_DATE IS NULL THEN '99991231' ELSE TF.END_DATE END)&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS &#xD;&#xA;   ON   PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;   AND  @PAYMENTDATE BETWEEN TS.START_DATE AND (CASE WHEN TS.END_DATE IS NULL THEN '99991231' ELSE TS.END_DATE END)&#xD;&#xA;WHERE    (CV.DATA2 = 'APRD' )  &#xD;&#xA;   AND  PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;   AND  PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND  dateadd(m,-1,pa.BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;   AND  (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND  PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;   AND  PA.BENEFIT_OPTION_VALUE IN ('DTCT','DBDC','DBTT') AND RHIC_EE_AMOUNT_REFUND_FLAG='Y'&#xD;&#xA;   &#xD;&#xA;  &#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;     CASE WHEN BA.PLAN_ID IS NOT NULL THEN BA.PLAN_ID ELSE DROA.PLAN_ID END AS PLAN_ID,&#xD;&#xA;     PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;     PA.PAYEE_PERSLINK_ID  AS PERSON_ID, &#xD;&#xA;     PA.PAYEE_ORG_ID AS ORG_ID ,&#xD;&#xA;     @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;     2507 AS STATUS_ID ,&#xD;&#xA;     'OUST' AS STATUS_VALUE,&#xD;&#xA;     @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;     2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;     null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;     null AS FED_TAX_ALLOWANCE ,&#xD;&#xA;     306  AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;     null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;     0.0 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;     null AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;     null AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;     null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;     0.0 AS STATE_ADDITIONAL_TAX_AMOUNT , &#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 UPDATE_SEQ,&#xD;&#xA;     2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;     Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;&#x9; 0.00 AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;&#x9;7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;&#x9;NULL AS FED_FILING_STATUS_VALUE &#xD;&#xA;FROM    SGT_PAYEE_ACCOUNT PA  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON  PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON  PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN&#xD;&#xA;     (SELECT DISTINCT PAYEE_ACCOUNT_ID &#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT &#xD;&#xA;     WHERE APPROVED_FLAG = 'Y' &#xD;&#xA;       AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;       AND PAYMENT_HISTORY_HEADER_ID IS NULL       &#xD;&#xA;      ) AS RETRO&#xD;&#xA;     On RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA  ON PA.APPLICATION_ID  = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_CALCULATION  DROC  ON PA.DRO_CALCULATION_ID = DROC.DRO_CALCULATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_APPLICATION DROA  on PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;   AND  PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND  pa.BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND  (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND  PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA;  &#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;     CASE WHEN BA.PLAN_ID IS NOT NULL THEN BA.PLAN_ID ELSE DROA.PLAN_ID END AS PLAN_ID,&#xD;&#xA;     PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;     PA.PAYEE_PERSLINK_ID  AS PERSON_ID, &#xD;&#xA;     PA.PAYEE_ORG_ID AS ORG_ID ,&#xD;&#xA;     @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;     2507 AS STATUS_ID ,&#xD;&#xA;     'OUST' AS STATUS_VALUE,&#xD;&#xA;     @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;     2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;     null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;     null AS FED_TAX_ALLOWANCE ,&#xD;&#xA;     306  AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;     null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;     0.0 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;     null AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;     null AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;     null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;     0.0 AS STATE_ADDITIONAL_TAX_AMOUNT , &#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 UPDATE_SEQ,&#xD;&#xA;     2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;     Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;&#x9; 0.00 AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;&#x9;7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;&#x9;NULL AS FED_FILING_STATUS_VALUE &#xD;&#xA;FROM    SGT_PAYEE_ACCOUNT PA  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON  PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON  PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN&#xD;&#xA;     (SELECT DISTINCT PAYEE_ACCOUNT_ID &#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND &#xD;&#xA;     WHERE   PAYMENT_OPTION_VALUE = 'SPCL' &#xD;&#xA;       AND PAYMENT_HISTORY_HEADER_ID IS NULL&#xD;&#xA;      ) AS DEDREF&#xD;&#xA;     On DEDREF.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA  ON PA.APPLICATION_ID  = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_CALCULATION  DROC  ON PA.DRO_CALCULATION_ID = DROC.DRO_CALCULATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_APPLICATION DROA  on PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;   AND  PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND  pa.BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND  (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND  PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA;  &#xD;&#xA;UNION&#xD;&#xA;-- this part has to be modified after changing the code to take from remittance instead of deposit&#xD;&#xA;-- change code to take plan id from remittance&#xD;&#xA;SELECT &#xD;&#xA;     PLAN_ID AS PLAN_ID,&#xD;&#xA;     NULL AS PAYEE_ACCOUNT_ID,&#xD;&#xA;     PERSON_ID, &#xD;&#xA;     ORG_ID ,&#xD;&#xA;     @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;     2507 AS STATUS_ID ,&#xD;&#xA;     'OUST' AS STATUS_VALUE,&#xD;&#xA;     @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;     2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;     NULL AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;     NULL AS FED_TAX_ALLOWANCE ,&#xD;&#xA;     306  AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;     NULL AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;     0.0 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;     NULL AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;     NULL AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;     NULL AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;     0.0 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 UPDATE_SEQ,&#xD;&#xA;     2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;     Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;&#x9; 0.00 AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;&#x9;7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;&#x9;NULL AS FED_FILING_STATUS_VALUE &#xD;&#xA;FROM &#xD;&#xA;     (SELECT  CASE WHEN REFUND_TO_VALUE = 'SMME' OR REFUND_TO_VALUE = 'ESME' OR REFUND_TO_VALUE ='DFME' THEN REFUND_TO_PERSON_ID ELSE NULL END AS PERSON_ID,&#xD;&#xA;        CASE WHEN REFUND_TO_VALUE = 'SMOR' OR REFUND_TO_VALUE = 'DFOR' THEN REFUND_TO_ORG_ID ELSE NULL END AS ORG_ID,&#xD;&#xA;        CASE WHEN OVERRIDDEN_REFUND_AMOUNT &gt; 0 THEN OVERRIDDEN_REFUND_AMOUNT &#xD;&#xA;          ELSE COMPUTED_REFUND_AMOUNT END AS AMOUNT &#xD;&#xA;          ,PLAN_ID -- Backlog PIR 938&#xD;&#xA;      FROM SGT_REMITTANCE WHERE REFUND_STATUS_VALUE = 'APRD' AND REMITTANCE_TYPE_VALUE NOT IN ('P501', 'P502', 'P503','P504','P505')&#xD;&#xA;     ) AS EXREF&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;     CASE WHEN BA.PLAN_ID IS NOT NULL THEN BA.PLAN_ID ELSE DROA.PLAN_ID END AS PLAN_ID,&#xD;&#xA;     PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;     PA.PAYEE_PERSLINK_ID  AS PERSON_ID, &#xD;&#xA;     PA.PAYEE_ORG_ID AS ORG_ID ,&#xD;&#xA;     @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;     2507 AS STATUS_ID ,&#xD;&#xA;     'OUST' AS STATUS_VALUE,&#xD;&#xA;     @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;     2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;     null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;     null AS FED_TAX_ALLOWANCE ,&#xD;&#xA;     306  AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;     null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;     0.0 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;     null AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;     null AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;     null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;     0.0 AS STATE_ADDITIONAL_TAX_AMOUNT , &#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 UPDATE_SEQ,&#xD;&#xA;     2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;     Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;&#x9; 0.00 AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;&#x9;7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;&#x9;NULL AS FED_FILING_STATUS_VALUE     &#xD;&#xA;FROM    SGT_PAYEE_ACCOUNT PA  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON  PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON  PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT DISTINCT PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID    &#xD;&#xA;   WHERE PAPIT.START_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    AND @PAYMENTDATE &lt;= (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;    AND PIT.CHECK_TYPE_VALUE = 'SPCK'   &#xD;&#xA;  ) AS PAPI ON PAPI.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA  ON PA.APPLICATION_ID  = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_CALCULATION  DROC  ON PA.DRO_CALCULATION_ID = DROC.DRO_CALCULATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_APPLICATION DROA  on PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;   AND  PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND  pa.BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND  (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;    OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD')))&#xD;&#xA;    &#xD;&#xA;UNION&#xD;&#xA;--prod pir 5695&#xD;&#xA;SELECT &#xD;&#xA;     CASE WHEN BA.PLAN_ID IS NOT NULL THEN BA.PLAN_ID ELSE DROA.PLAN_ID END AS PLAN_ID,&#xD;&#xA;     PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;     PA.PAYEE_PERSLINK_ID  AS PERSON_ID, &#xD;&#xA;     PA.PAYEE_ORG_ID AS ORG_ID ,&#xD;&#xA;     @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;     2507 AS STATUS_ID ,&#xD;&#xA;     'OUST' AS STATUS_VALUE,&#xD;&#xA;     @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;     isnull(TF.TAX_OPTION_ID,2218) AS FED_TAX_OPTION_ID ,&#xD;&#xA;     TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;     TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;     TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;     CASE WHEN ISNULL(TF.ADDITIONAL_TAX_AMOUNT,0) != 0 THEN TF.ADDITIONAL_TAX_AMOUNT ELSE TF.FOUR_c END AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     isnull(TS.TAX_OPTION_ID,2218) AS STATE_TAX_OPTION_ID ,&#xD;&#xA;     TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;     TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;     TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;     TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 UPDATE_SEQ,&#xD;&#xA;     2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;     Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;&#x9; CASE WHEN TS.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' THEN TS.STATE_FLAT_AMOUNT ELSE TS.REFUND_STATE_AMT END AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  CASE&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NOT NULL THEN TF.FILING_STATUS_VALUE &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE IN ('SNGL', 'MRDW') THEN 'SGMF' &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE = 'MRID' THEN 'MFJQ' ELSE NULL END AS FED_FILING_STATUS_VALUE &#xD;&#xA;FROM    SGT_PAYEE_ACCOUNT PA  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON  PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON  PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT DISTINCT PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID    &#xD;&#xA;   WHERE @PAYMENTDATE &lt;= (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;  ) AS PAPI ON PAPI.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA  ON PA.APPLICATION_ID  = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_CALCULATION  DROC  ON PA.DRO_CALCULATION_ID = DROC.DRO_CALCULATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_APPLICATION DROA  on PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF &#xD;&#xA;   ON  PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;   AND  @PAYMENTDATE BETWEEN TF.START_DATE AND (CASE WHEN TF.END_DATE IS NULL THEN '99991231' ELSE TF.END_DATE END)&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS &#xD;&#xA;   ON   PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;   AND  @PAYMENTDATE BETWEEN TS.START_DATE AND (CASE WHEN TS.END_DATE IS NULL THEN '99991231' ELSE TS.END_DATE END)&#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;   AND  PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND  dateadd(m,-1,pa.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;   AND  (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') &#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;   AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA;&#xD;&#xA;union&#xD;&#xA;&#xD;&#xA;-- PIR 8301&#xD;&#xA;&#xD;&#xA;SELECT   BA.PLAN_ID  AS PLAN_ID,&#xD;&#xA;     PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;     NULL  AS PERSON_ID, &#xD;&#xA;     PAPI.ROLLOVER_ORG_ID AS ORG_ID ,&#xD;&#xA;     @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;     2507 AS STATUS_ID ,&#xD;&#xA;     'OUST' AS STATUS_VALUE,&#xD;&#xA;     @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;     isnull(TF.TAX_OPTION_ID,2218) AS FED_TAX_OPTION_ID ,&#xD;&#xA;     TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;     TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;     TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;     CASE WHEN ISNULL(TF.ADDITIONAL_TAX_AMOUNT,0) != 0 THEN TF.ADDITIONAL_TAX_AMOUNT ELSE TF.FOUR_c END AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     isnull(TS.TAX_OPTION_ID,2218) AS STATE_TAX_OPTION_ID ,&#xD;&#xA;     TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;     TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;     TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;     TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 UPDATE_SEQ,&#xD;&#xA;     2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;     PAPI.ROLLOVER_TYPE_VALUE as ROLLOVER_TYPE_VALUE,&#xD;&#xA;&#x9; CASE WHEN TS.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' THEN TS.STATE_FLAT_AMOUNT ELSE TS.REFUND_STATE_AMT END AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;&#x9;7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;&#x9;CASE&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NOT NULL THEN TF.FILING_STATUS_VALUE &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE IN ('SNGL', 'MRDW') THEN 'SGMF' &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE = 'MRID' THEN 'MFJQ' ELSE NULL END AS FED_FILING_STATUS_VALUE &#xD;&#xA;FROM    SGT_PAYEE_ACCOUNT PA  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON  PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN &#xD;&#xA;  (&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PARD.ROLLOVER_ORG_ID,PARD.ROLLOVER_TYPE_VALUE FROM &#xD;&#xA;    SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA;     AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'    &#xD;&#xA;    AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;   GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID ,PARD.ROLLOVER_TYPE_VALUE&#xD;&#xA;  ) AS PAPI&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON  PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT JOIN SGT_BENEFIT_APPLICATION BA  ON PA.APPLICATION_ID  = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_CALCULATION  DROC  ON PA.DRO_CALCULATION_ID = DROC.DRO_CALCULATION_ID&#xD;&#xA; LEFT JOIN SGT_BENEFIT_DRO_APPLICATION DROA  on PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF &#xD;&#xA;   ON  PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;   AND  @PAYMENTDATE BETWEEN TF.START_DATE AND (CASE WHEN TF.END_DATE IS NULL THEN '99991231' ELSE TF.END_DATE END)&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS &#xD;&#xA;   ON   PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;   AND  @PAYMENTDATE BETWEEN TS.START_DATE AND (CASE WHEN TS.END_DATE IS NULL THEN '99991231' ELSE TS.END_DATE END)&#xD;&#xA;WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA;   AND  PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND dateadd(m,-1,pa.BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') &#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;   AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CalculateInterest" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--entPaymentHistoryHeader.CalculateInterest original&#xD;&#xA;SELECT CAST(DATA2 AS DECIMAL(9,2)) AS INTPERCENTAGE,&#xD;&#xA;CAST(DATA3 AS INT) AS PLAN_ID,&#xD;&#xA;CAST(DATA1 AS DATETIME) AS EFFECTIVE_DATE,&#xD;&#xA;RANK() OVER (PARTITION BY CAST(DATA3 AS INT) &#xD;&#xA;ORDER BY CAST(DATA1 AS DATETIME) DESC) AS ROWRANK &#xD;&#xA;INTO #TEMP&#xD;&#xA; FROM SGS_CODE_VALUE &#xD;&#xA; WHERE CODE_ID = 2324 &#xD;&#xA;  AND CAST(DATA1 AS DATETIME) &lt;= @PAYMENTDATE &#xD;&#xA; ORDER BY CAST(DATA1 AS DATETIME) DESC&#xD;&#xA;&#xD;&#xA;SELECT PLAN_ID,&#xD;&#xA; CASE WHEN ISNULL(INTPERCENTAGE,0) &gt; 0 &#xD;&#xA;   THEN INTPERCENTAGE - 0.50 &#xD;&#xA;   ELSE 0 &#xD;&#xA;   END &#xD;&#xA;   AS INTPERCENTAGE &#xD;&#xA; INTO #TEMPRATE &#xD;&#xA; FROM #TEMP WHERE ROWRANK = 1&#xD;&#xA;    &#xD;&#xA;&#xD;&#xA;DECLARE @IntDueDays Int&#xD;&#xA;SELECT  @INTDUEDAYS = DATEDIFF(D,&#xD;&#xA;   DATEADD(M,1,CAST(&#xD;&#xA;    CAST(YEAR(DATEADD(M,-2,NEXT_RUN_DATE)) AS VARCHAR(4))+ &#xD;&#xA;    RIGHT('00'+CAST(MONTH(DATEADD(M,-2,NEXT_RUN_DATE)) AS VARCHAR(2)) ,2)&#xD;&#xA;    +'01' AS DATETIME))-1,&#xD;&#xA;   CAST(@PAYMENTDATE AS DATETIME)) &#xD;&#xA; FROM SGS_BATCH_SCHEDULE &#xD;&#xA; WHERE BATCH_SCHEDULE_ID = 20&#xD;&#xA;&#xD;&#xA; --NEW&#xD;&#xA;DECLARE @NewInterval INT&#xD;&#xA;SELECT @NewInterval = DATEDIFF(D, '12/31/2024', CAST(@PAYMENTDATE AS DATETIME))&#xD;&#xA;--SELECT @NewInterval = CASE WHEN @NewInterval &lt; 0 THEN DATEDIFF(D, CAST(@PAYMENTDATE AS DATETIME), '12/31/2024') ELSE @NewInterval END &#xD;&#xA;&#xD;&#xA;DECLARE @ENDDATE DATETIME&#xD;&#xA;SET @ENDDATE=(SELECT DATEADD(S,-1,DATEADD(MM, DATEDIFF(M,0,@PAYMENTDATE)+1,0)))&#xD;&#xA;&#xD;&#xA;DECLARE @ERINTERESTITEMTYPEID INT&#xD;&#xA;DECLARE @EEINTERESTITEMTYPEID INT&#xD;&#xA;SET @ERINTERESTITEMTYPEID =(SELECT PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE='ITEM8')&#xD;&#xA;SET @EEINTERESTITEMTYPEID =(SELECT PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE='ITEM18')&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;PAYEE_ACCOUNT_ID, PAYMENT_ITEM_TYPE_ID, ACCOUNT_NUMBER, VENDOR_ORG_ID, AMOUNT, START_DATE, END_DATE,&#xD;&#xA;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY,GETDATE() AS CREATED_DATE,'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY,&#xD;&#xA;GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ into #TempPapit&#xD;&#xA;FROM(&#xD;&#xA;SELECT &#xD;&#xA; PA.PAYEE_ACCOUNT_ID,&#xD;&#xA; CASE WHEN (OVERRIDDEN_ER_PRE_TAX_AMOUNT &gt; 0 OR OVERRIDDEN_ER_INTEREST_AMOUNT &gt; 0) THEN 0&#xD;&#xA;   ELSE&#xD;&#xA;   ROUND(&#xD;&#xA;   ( ( POWER((1+INTPERCENTAGE/100.0), @INTDUEDAYS/366.0)*&#xD;&#xA;    (ER_PRE_TAX_AMOUNT+&#xD;&#xA;     ER_INTEREST_AMOUNT+&#xD;&#xA;     ADDITIONAL_ER_AMOUNT_INTEREST+&#xD;&#xA;     ADDITIONAL_ER_AMOUNT)&#xD;&#xA;     )   - &#xD;&#xA;    (ER_PRE_TAX_AMOUNT+&#xD;&#xA;     ER_INTEREST_AMOUNT+&#xD;&#xA;     ADDITIONAL_ER_AMOUNT_INTEREST+&#xD;&#xA;     ADDITIONAL_ER_AMOUNT)&#xD;&#xA;   ),2) &#xD;&#xA; END&#xD;&#xA; AS AMOUNT,@ERINTERESTITEMTYPEID AS PAYMENT_ITEM_TYPE_ID,NULL AS ACCOUNT_NUMBER,NULL AS VENDOR_ORG_ID,@ENDDATE AS END_DATE,@PAYMENTDATE AS START_DATE&#xD;&#xA;&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_REFUND_CALCULATION BCA &#xD;&#xA;   ON BCA.BENEFIT_CALCULATION_ID = PA.CALCULATION_ID&#xD;&#xA;  INNER JOIN &#xD;&#xA;  (SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID,BA.PLAN_ID &#xD;&#xA;        FROM SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;       INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;       ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;       WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA;&#xD;&#xA;   )AS C ON PA.APPLICATION_ID=C.BENEFIT_APPLICATION_ID&#xD;&#xA;   INNER JOIN #TEMPRATE RT on C.PLAN_ID = RT.PLAN_ID&#xD;&#xA; WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.CALCULATION_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE = 'DBCT'  &#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; PA.PAYEE_ACCOUNT_ID,&#xD;&#xA; ROUND(&#xD;&#xA; ( ( POWER((1+INTPERCENTAGE/100.0), @INTDUEDAYS/366.0)*&#xD;&#xA;  (PRE_TAX_EE_CONTRIBUTION_AMOUNT+&#xD;&#xA;  POST_TAX_EE_CONTRIBUTION_AMOUNT+&#xD;&#xA;  EE_ER_PICKUP_AMOUNT+&#xD;&#xA;  EE_INTEREST_AMOUNT+&#xD;&#xA;  VESTED_ER_CONTRIBUTION_AMOUNT+&#xD;&#xA;  ADDITIONAL_EE_AMOUNT) &#xD;&#xA;   )   - &#xD;&#xA;  (PRE_TAX_EE_CONTRIBUTION_AMOUNT+&#xD;&#xA;  POST_TAX_EE_CONTRIBUTION_AMOUNT+&#xD;&#xA;  EE_ER_PICKUP_AMOUNT+&#xD;&#xA;  EE_INTEREST_AMOUNT+&#xD;&#xA;  VESTED_ER_CONTRIBUTION_AMOUNT+&#xD;&#xA;  ADDITIONAL_EE_AMOUNT) &#xD;&#xA; ),2) &#xD;&#xA; AS AMOUNT,@EEINTERESTITEMTYPEID AS PAYMENT_ITEM_TYPE_ID,NULL AS ACCOUNT_NUMBER,NULL AS VENDOR_ORG_ID,@ENDDATE AS END_DATE,@PAYMENTDATE AS START_DATE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_REFUND_CALCULATION BCA &#xD;&#xA;   ON BCA.BENEFIT_CALCULATION_ID = PA.CALCULATION_ID&#xD;&#xA;  INNER JOIN &#xD;&#xA;  (SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID,BA.PLAN_ID&#xD;&#xA;        FROM SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;       INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;       ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;       WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA;&#xD;&#xA;   )AS C ON PA.APPLICATION_ID=C.BENEFIT_APPLICATION_ID&#xD;&#xA;   INNER JOIN #TEMPRATE RT on C.PLAN_ID = RT.PLAN_ID&#xD;&#xA; WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.CALCULATION_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE = 'DBCT' &#xD;&#xA;  &#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; PA.PAYEE_ACCOUNT_ID,&#xD;&#xA; ROUND(&#xD;&#xA; (POWER((1+INTPERCENTAGE/100.0), @NewInterval/366.0)*&#xD;&#xA; (SELECT SUM(AMOUNT) FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WHERE PAYMENT_ITEM_TYPE_ID IN (1,5,6,199) AND PAPIT.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END))) - (SELECT SUM(AMOUNT) FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WHERE PAYMENT_ITEM_TYPE_ID IN (1,5,6,199) AND PAPIT.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA; ),2) &#xD;&#xA; AS AMOUNT,@EEINTERESTITEMTYPEID AS PAYMENT_ITEM_TYPE_ID,NULL AS ACCOUNT_NUMBER,NULL AS VENDOR_ORG_ID,@ENDDATE AS END_DATE,@PAYMENTDATE AS START_DATE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_REFUND_CALCULATION BCA &#xD;&#xA;   ON BCA.BENEFIT_CALCULATION_ID = PA.CALCULATION_ID&#xD;&#xA;  INNER JOIN &#xD;&#xA;  (SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID,BA.PLAN_ID&#xD;&#xA;        FROM SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;       INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;       ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;       WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA;&#xD;&#xA;   )AS C ON PA.APPLICATION_ID=C.BENEFIT_APPLICATION_ID&#xD;&#xA;   INNER JOIN #TEMPRATE RT on C.PLAN_ID = RT.PLAN_ID&#xD;&#xA; WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.CALCULATION_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE IN ('SPEL') &#xD;&#xA;  AND BCA.CALCULATED_ACTUARIAL_VALUE &gt; BCA.DB_ACCOUNT_BALANCE&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; PA.PAYEE_ACCOUNT_ID,&#xD;&#xA; ROUND(&#xD;&#xA; (POWER((1+INTPERCENTAGE/100.0), @NewInterval/366.0)*&#xD;&#xA; (SELECT SUM(AMOUNT) FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WHERE PAYMENT_ITEM_TYPE_ID IN (7,107) AND PAPIT.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END))) - (SELECT SUM(AMOUNT) FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WHERE PAYMENT_ITEM_TYPE_ID IN (7,107) AND PAPIT.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA; ),2) &#xD;&#xA; AS AMOUNT,@ERINTERESTITEMTYPEID AS PAYMENT_ITEM_TYPE_ID,NULL AS ACCOUNT_NUMBER,NULL AS VENDOR_ORG_ID,@ENDDATE AS END_DATE,@PAYMENTDATE AS START_DATE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_REFUND_CALCULATION BCA &#xD;&#xA;   ON BCA.BENEFIT_CALCULATION_ID = PA.CALCULATION_ID&#xD;&#xA;  INNER JOIN &#xD;&#xA;  (SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID,BA.PLAN_ID&#xD;&#xA;        FROM SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;       INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;       ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;       WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA;&#xD;&#xA;   )AS C ON PA.APPLICATION_ID=C.BENEFIT_APPLICATION_ID&#xD;&#xA;   INNER JOIN #TEMPRATE RT on C.PLAN_ID = RT.PLAN_ID&#xD;&#xA; WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.CALCULATION_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE IN ('SPEL') &#xD;&#xA;  AND BCA.CALCULATED_ACTUARIAL_VALUE &gt; BCA.DB_ACCOUNT_BALANCE&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; PA.PAYEE_ACCOUNT_ID,&#xD;&#xA; ROUND(&#xD;&#xA; (POWER((1+INTPERCENTAGE/100.0), @INTDUEDAYS/366.0)*&#xD;&#xA; (SELECT SUM(AMOUNT) FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WHERE PAYMENT_ITEM_TYPE_ID IN (1,5,6,199) AND PAPIT.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END))) - (SELECT SUM(AMOUNT) FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WHERE PAYMENT_ITEM_TYPE_ID IN (1,5,6,199) AND PAPIT.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA; ),2) &#xD;&#xA; AS AMOUNT,@EEINTERESTITEMTYPEID AS PAYMENT_ITEM_TYPE_ID,NULL AS ACCOUNT_NUMBER,NULL AS VENDOR_ORG_ID,@ENDDATE AS END_DATE,@PAYMENTDATE AS START_DATE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_REFUND_CALCULATION BCA &#xD;&#xA;   ON BCA.BENEFIT_CALCULATION_ID = PA.CALCULATION_ID&#xD;&#xA;  INNER JOIN &#xD;&#xA;  (SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID,BA.PLAN_ID&#xD;&#xA;        FROM SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;       INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;       ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;       WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA;&#xD;&#xA;   )AS C ON PA.APPLICATION_ID=C.BENEFIT_APPLICATION_ID&#xD;&#xA;   INNER JOIN #TEMPRATE RT on C.PLAN_ID = RT.PLAN_ID&#xD;&#xA; WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.CALCULATION_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE IN ('SPEL') &#xD;&#xA;  AND BCA.CALCULATED_ACTUARIAL_VALUE &lt; BCA.DB_ACCOUNT_BALANCE&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; PA.PAYEE_ACCOUNT_ID,&#xD;&#xA; ROUND(&#xD;&#xA; (POWER((1+INTPERCENTAGE/100.0), @INTDUEDAYS/366.0)*&#xD;&#xA; (SELECT SUM(AMOUNT) FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WHERE PAYMENT_ITEM_TYPE_ID IN (7,107) AND PAPIT.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END))) - (SELECT SUM(AMOUNT) FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WHERE PAYMENT_ITEM_TYPE_ID IN (7,107) AND PAPIT.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA; ),2) &#xD;&#xA; AS AMOUNT,@ERINTERESTITEMTYPEID AS PAYMENT_ITEM_TYPE_ID,NULL AS ACCOUNT_NUMBER,NULL AS VENDOR_ORG_ID,@ENDDATE AS END_DATE,@PAYMENTDATE AS START_DATE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_REFUND_CALCULATION BCA &#xD;&#xA;   ON BCA.BENEFIT_CALCULATION_ID = PA.CALCULATION_ID&#xD;&#xA;  INNER JOIN &#xD;&#xA;  (SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID,BA.PLAN_ID&#xD;&#xA;        FROM SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;       INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;       ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;       WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA;&#xD;&#xA;   )AS C ON PA.APPLICATION_ID=C.BENEFIT_APPLICATION_ID&#xD;&#xA;   INNER JOIN #TEMPRATE RT on C.PLAN_ID = RT.PLAN_ID&#xD;&#xA; WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.CALCULATION_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE IN ('SPEL') &#xD;&#xA;  AND BCA.CALCULATED_ACTUARIAL_VALUE &lt; BCA.DB_ACCOUNT_BALANCE&#xD;&#xA;&#xD;&#xA;   )TEMP&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE B SET&#xD;&#xA;    B.AMOUNT=(ISNULL(B.AMOUNT,0)+ISNULL(A.AMOUNT,0)), &#xD;&#xA;    B.MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;    B.MODIFIED_DATE=GETDATE(),&#xD;&#xA;    B.UPDATE_SEQ = B.UPDATE_SEQ+1&#xD;&#xA;FROM #TEMPPAPIT A INNER JOIN &#xD;&#xA;SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE B ON A.PAYEE_ACCOUNT_ID = B.PAYEE_ACCOUNT_ID &#xD;&#xA;AND A.PAYMENT_ITEM_TYPE_ID = B.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;AND A.START_DATE = B.START_DATE AND ISNULL(A.END_DATE,'99991231') = ISNULL(B.END_DATE,'99991231')&#xD;&#xA;&#xD;&#xA;DELETE A FROM #TEMPPAPIT A INNER JOIN &#xD;&#xA;SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE B ON A.PAYEE_ACCOUNT_ID = B.PAYEE_ACCOUNT_ID &#xD;&#xA;AND A.PAYMENT_ITEM_TYPE_ID = B.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;AND A.START_DATE = B.START_DATE AND ISNULL(A.END_DATE,'99991231') = ISNULL(B.END_DATE,'99991231')&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE&#xD;&#xA;(&#xD;&#xA; PAYEE_ACCOUNT_ID, &#xD;&#xA; PAYMENT_ITEM_TYPE_ID, &#xD;&#xA; ACCOUNT_NUMBER, &#xD;&#xA; VENDOR_ORG_ID, &#xD;&#xA; AMOUNT, &#xD;&#xA; [START_DATE], &#xD;&#xA; END_DATE, &#xD;&#xA; CREATED_BY, &#xD;&#xA; CREATED_DATE, &#xD;&#xA; MODIFIED_BY, &#xD;&#xA; MODIFIED_DATE, &#xD;&#xA; UPDATE_SEQ,&#xD;&#xA; BATCH_SCHEDULE_ID&#xD;&#xA;)&#xD;&#xA;SELECT &#xD;&#xA; PAYEE_ACCOUNT_ID, &#xD;&#xA; PAYMENT_ITEM_TYPE_ID, &#xD;&#xA; ACCOUNT_NUMBER, &#xD;&#xA; VENDOR_ORG_ID, &#xD;&#xA; AMOUNT, &#xD;&#xA; [START_DATE], &#xD;&#xA; END_DATE, &#xD;&#xA; CREATED_BY, &#xD;&#xA; CREATED_DATE, &#xD;&#xA; MODIFIED_BY, &#xD;&#xA; MODIFIED_DATE, &#xD;&#xA; UPDATE_SEQ,&#xD;&#xA; NULL AS BATCH_SCHEDULE_ID &#xD;&#xA;FROM #TEMPPAPIT&#xD;&#xA;WHERE ISNULL(AMOUNT,0) &gt; 0&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA; Contrib.PERSON_ACCOUNT_ID,Contrib.BENEFIT_ACCOUNT_TYPE_VALUE, &#xD;&#xA; SUM(ISNULL(INTEREST_AMOUNT,0.00)) AS INTEREST_AMOUNT,&#xD;&#xA; SUM(ISNULL(EMPLOYER_INTEREST,0.00)) AS EMPLOYER_INTEREST INTO #TEMPCONTRIB&#xD;&#xA;FROM &#xD;&#xA;(SELECT c.person_account_id,b.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  case when a.payment_item_type_id=@EEINTERESTITEMTYPEID then AMOUNT end as INTEREST_AMOUNT ,&#xD;&#xA;  case when a.payment_item_type_id=@ERINTERESTITEMTYPEID AND b.BENEFIT_ACCOUNT_SUB_TYPE_VALUE NOT IN ('SPEL') then AMOUNT end as EMPLOYER_INTEREST&#xD;&#xA;FROM #TEMPPAPIT a&#xD;&#xA;inner join sgt_payee_account b&#xD;&#xA; on a.payee_account_id=b.payee_account_id&#xD;&#xA;inner join &#xD;&#xA;(                  &#xD;&#xA;                    SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID &#xD;&#xA;      from SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;     inner JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;     ON  BA.BENEFIT_APPLICATION_ID = bapa.BENEFIT_APPLICATION_ID  &#xD;&#xA;     where isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA; )AS c on b.application_id=c.benefit_application_id&#xD;&#xA;)Contrib GROUP BY person_account_id,BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;(&#xD;&#xA; PERSON_ACCOUNT_ID, SUBSYSTEM_ID, SUBSYSTEM_VALUE, SUBSYSTEM_REF_ID, TRANSACTION_DATE, EFFECTIVE_DATE, PAY_PERIOD_MONTH, PAY_PERIOD_YEAR, PERSON_EMPLOYMENT_DTL_ID, TRANSACTION_TYPE_ID, TRANSACTION_TYPE_VALUE, SALARY_AMOUNT, POST_TAX_ER_AMOUNT, POST_TAX_EE_AMOUNT, PRE_TAX_ER_AMOUNT, PRE_TAX_EE_AMOUNT, EE_RHIC_AMOUNT, ER_RHIC_AMOUNT, EE_ER_PICKUP_AMOUNT, ER_VESTED_AMOUNT, INTEREST_AMOUNT, VESTED_SERVICE_CREDIT, PENSION_SERVICE_CREDIT, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ, EMPLOYER_INTEREST, VESTED_ER_PERCENTAGE_REF_ID, EMPLOYER_RHIC_INTEREST, TRANSFER_FLAG_ID, TRANSFER_FLAG_VALUE&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA; PERSON_ACCOUNT_ID,&#xD;&#xA; 349  as SUBSYSTEM_ID ,&#xD;&#xA; 'PMNT' AS SUBSYSTEM_VALUE ,&#xD;&#xA;  NULL AS SUBSYSTEM_REF_ID ,&#xD;&#xA; @PAYMENTDATE as TRANSACTION_DATE ,&#xD;&#xA; @PAYMENTDATE as EFFECTIVE_DATE ,         &#xD;&#xA; Month(@PAYMENTDATE) AS PAY_PERIOD_MONTH ,&#xD;&#xA; year(@PAYMENTDATE) as PAY_PERIOD_YEAR ,&#xD;&#xA; Null AS PERSON_EMPLOYMENT_DTL_ID ,&#xD;&#xA; 350 as TRANSACTION_TYPE_ID ,&#xD;&#xA; BENEFIT_ACCOUNT_TYPE_VALUE AS TRANSACTION_TYPE_VALUE ,&#xD;&#xA; 0.00 as SALARY_AMOUNT,&#xD;&#xA; 0.00 as POST_TAX_ER_AMOUNT,&#xD;&#xA; 0.00 as POST_TAX_EE_AMOUNT,&#xD;&#xA; 0.00 as PRE_TAX_ER_AMOUNT,&#xD;&#xA; 0.00 as PRE_TAX_EE_AMOUNT,&#xD;&#xA; 0.00 as EE_RHIC_AMOUNT,&#xD;&#xA; 0.00 as ER_RHIC_AMOUNT,&#xD;&#xA; 0.00 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA; 0.00 as ER_VESTED_AMOUNT,&#xD;&#xA; INTEREST_AMOUNT,&#xD;&#xA; 0.00 as VESTED_SERVICE_CREDIT,&#xD;&#xA; 0.00 as PENSION_SERVICE_CREDIT, &#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA; getdate() as CREATED_DATE,&#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA; getdate() as modified_date,&#xD;&#xA; 0 as UPDATE_SEQ,0.00 as EMPLOYER_INTEREST &#xD;&#xA; ,NULL AS VESTED_ER_PERCENTAGE_REF_ID&#xD;&#xA; ,NULL AS EMPLOYER_RHIC_INTEREST&#xD;&#xA; ,7006 AS TRANSFER_FLAG_ID&#xD;&#xA; ,'C' AS TRANSFER_FLAG_VALUE&#xD;&#xA;FROM #TEMPCONTRIB &#xD;&#xA;&#xD;&#xA;drop table #TEMPPAPIT&#xD;&#xA;drop table #TEMPCONTRIB">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadVendorPaymentHistoryHeader" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select a.provider_org_id&#xD;&#xA;from sgt_provider_report_payment a WITH(NOLOCK) &#xD;&#xA; inner join sgt_organization org WITH(NOLOCK) &#xD;&#xA;  on a.provider_org_id=org.org_id&#xD;&#xA;where a.batch_request_id is null and &#xD;&#xA;org.org_code &lt;&gt; (select data1 from sgs_code_value WITH(NOLOCK) where code_id=52 and code_value='STCM')&#xD;&#xA;and a.effective_date &lt;= @PAYMENTDATE&#xD;&#xA;group by a.provider_org_id">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LookupSubquery" sfwQueryType="SubSelectQuery" sfwSql="SELECT * FROM sgt_payment_history_distribution PHC WITH(NOLOCK) &#xD;&#xA;LEFT JOIN SGS_CODE_VALUE K WITH(NOLOCK) ON K.CODE_ID=PHC.DISTRIBUTION_STATUS_ID &#xD;&#xA;AND K.CODE_VALUE=PHC.DISTRIBUTION_STATUS_VALUE&#xD;&#xA;WHERE PHC.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID">
      <parameters />
    </query>
    <query ID="CreateReissuePaymentsHeader" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @EFFECTIVE_DATE DATETIME&#xD;&#xA;SELECT @EFFECTIVE_DATE = EFFECTIVE_DATE FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_HEADER(PLAN_ID,PAYEE_ACCOUNT_ID,PERSON_ID,ORG_ID,PAYMENT_DATE,STATUS_ID,STATUS_VALUE,&#xD;&#xA; PAYMENT_SCHEDULE_ID,FED_TAX_OPTION_ID,FED_TAX_OPTION_VALUE,FED_TAX_ALLOWANCE,FED_MARITAL_STATUS_ID,FED_MARITAL_STATUS_VALUE,&#xD;&#xA; FED_ADDITIONAL_TAX_AMOUNT,STATE_TAX_OPTION_ID,STATE_TAX_OPTION_VALUE,STATE_TAX_ALLOWANCE,STATE_MARITAL_STATUS_ID,STATE_MARITAL_STATUS_VALUE,&#xD;&#xA; STATE_ADDITIONAL_TAX_AMOUNT,OLD_PAYMENT_HISTORY_HEADER_ID,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ,ROLLOVER_TYPE_ID,ROLLOVER_TYPE_VALUE, STATE_TAX_FLAT_AMOUNT, FED_FILING_STATUS_ID, FED_FILING_STATUS_VALUE)&#xD;&#xA;&#xD;&#xA;SELECT TEMP.* FROM &#xD;&#xA;( &#xD;&#xA;-- Rollover Re-issued to Rollover Organization&#xD;&#xA;  SELECT &#xD;&#xA;  RISSUE.plan_id,&#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  Null  AS PERSON_ID, &#xD;&#xA;  PAPI.ROLLOVER_ORG_ID AS ORG_ID ,&#xD;&#xA;  @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;  2507 AS STATUS_ID ,&#xD;&#xA;  'OUST' AS STATUS_VALUE,&#xD;&#xA;  @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;  2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;  Null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;  0 AS FED_TAX_ALLOWANCE ,&#xD;&#xA;  306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;  Null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;  0.00 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;  Null STATE_TAX_OPTION_VALUE ,&#xD;&#xA;  0 AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;  306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;  Null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;  0.00 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  RISSUE.PAYMENT_HISTORY_HEADER_ID AS OLD_PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  CREATED_BY ,getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ,&#xD;&#xA;  2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;  PAPI.ROLLOVER_TYPE_VALUE as ROLLOVER_TYPE_VALUE,&#xD;&#xA;  0.00 AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  NULL AS FED_FILING_STATUS_VALUE &#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;  INNER JOIN &#xD;&#xA;  (&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PARD.ROLLOVER_ORG_ID,PARD.OLD_ROLLOVER_DTL_ID,PARD.ROLLOVER_TYPE_VALUE FROM &#xD;&#xA;    SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   WHERE&#xD;&#xA;    @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;    AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;    AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;    AND PARD.STATUS_VALUE = 'ACTV' AND PAPIT.REISSUE_ITEM_FLAG='Y'&#xD;&#xA;   GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID ,PARD.OLD_ROLLOVER_DTL_ID,PARD.ROLLOVER_TYPE_VALUE&#xD;&#xA;  ) AS PAPI&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN &#xD;&#xA;  (&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PARD.ROLLOVER_ORG_ID,PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID FROM &#xD;&#xA;    SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   --INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;   -- ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;   --    AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   WHERE&#xD;&#xA;    @PAYMENTDATE&gt;= PAPIT.START_DATE &#xD;&#xA;    AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;    AND PARD.STATUS_VALUE = 'CANC'&#xD;&#xA;   GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID ,PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID &#xD;&#xA;  ) AS PAPIC  -- there exists a cancelled rollover&#xD;&#xA;  ON PAPI.PAYEE_ACCOUNT_ID = PAPIC.PAYEE_ACCOUNT_ID &#xD;&#xA;  and PAPI.OLD_ROLLOVER_DTL_ID = PAPIC.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;  SELECT RIPHH.PAYEE_ACCOUNT_ID,PLAN_ID ,RIPHH.ORG_ID,RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION RIPHD &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER RIPHH&#xD;&#xA;    ON RIPHD.PAYMENT_HISTORY_HEADER_ID = RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   WHERE PAYMENT_METHOD_VALUE IN ('RCHK','RACH')&#xD;&#xA;    AND DISTRIBUTION_STATUS_VALUE IN('RRSA','RRAP')&#xD;&#xA;  ) AS RISSUE&#xD;&#xA;  ON PAPI.PAYEE_ACCOUNT_ID = RISSUE.PAYEE_ACCOUNT_ID  and RISSUE.Org_id = PAPIC.ROLLOVER_ORG_ID&#xD;&#xA;  &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID=PA.APPLICATION_ID&#xD;&#xA; WHERE  ((PA.BENEFIT_ACCOUNT_TYPE_VALUE='RFND' AND CV.DATA2 = 'RPCD')OR&#xD;&#xA;   (PA.BENEFIT_ACCOUNT_TYPE_VALUE='RETR' AND (isnull(BA.PLSO_REQUESTED_FLAG,'')='Y' OR&#xD;&#xA;    PA.BENEFIT_OPTION_VALUE='5YTL')) OR&#xD;&#xA;   (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')))&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (   &#xD;&#xA;    SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   ) &#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;=@PAYMENTDATE&#xD;&#xA;  --AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;--UNION ALL&#xD;&#xA;--COMMENTED AS WHEN ROLLOVER PAYMENT IS REISSUED TO SAME OR DIFFERENT ORGANIZATION, THE SYSTEM ALSO CREATES PAYMENT HISTORY HEADER FOR MEMBER,&#xD;&#xA;--FOR GL TO REVERSE THE REISSUE APPROVED GL ENTRIES, WANT TO CREATE HEADER FOR ROLLOVER ORGANIZATION ONLY&#xD;&#xA;--SELECT &#xD;&#xA;--  RISSUE.plan_id,&#xD;&#xA;--  PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;--  PA.PAYEE_PERSLINK_ID  AS PERSON_ID, &#xD;&#xA;--  NULL AS ORG_ID ,&#xD;&#xA;--  @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;--  2507 AS STATUS_ID ,&#xD;&#xA;--  'OUST' AS STATUS_VALUE,&#xD;&#xA;--  @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;--  2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;--  Null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;--  0 AS FED_TAX_ALLOWANCE ,&#xD;&#xA;--  306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;--  Null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;--  0.00 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;--  2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;--  Null STATE_TAX_OPTION_VALUE ,&#xD;&#xA;--  0 AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;--  306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;--  Null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;--  0.00 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;--  RISSUE.PAYMENT_HISTORY_HEADER_ID AS OLD_PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;--  'PERSLink Batch' as  CREATED_BY ,getdate() as CREATED_DATE,&#xD;&#xA;--  'PERSLink Batch' as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ,&#xD;&#xA;--  2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;--  Null as ROLLOVER_TYPE_VALUE&#xD;&#xA;-- FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;--  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;--   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;--  INNER JOIN &#xD;&#xA;--  (&#xD;&#xA;--   SELECT PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;--    PARD.ROLLOVER_ORG_ID,PARD.OLD_ROLLOVER_DTL_ID FROM &#xD;&#xA;--    SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;--   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;--    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;--   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;--    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;--   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;--    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;--       AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;--   WHERE&#xD;&#xA;--    @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;--    AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;--    AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;--    AND PARD.STATUS_VALUE = 'ACTV' AND PAPIT.REISSUE_ITEM_FLAG='Y'&#xD;&#xA;--   GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID ,PARD.OLD_ROLLOVER_DTL_ID&#xD;&#xA;--  ) AS PAPI&#xD;&#xA;--  ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;--  INNER JOIN &#xD;&#xA;--  (&#xD;&#xA;--   SELECT PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;--    PARD.ROLLOVER_ORG_ID,PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID FROM &#xD;&#xA;--    SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;--   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;--    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;--   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;--    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;--   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;--    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;--       AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;--   WHERE&#xD;&#xA;--    @PAYMENTDATE&gt;= PAPIT.START_DATE &#xD;&#xA;--    AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;--    AND PARD.STATUS_VALUE = 'CANC'&#xD;&#xA;--   GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID ,PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID &#xD;&#xA;--  ) AS PAPIC  -- there exists a cancelled rollover&#xD;&#xA;--  ON PAPI.PAYEE_ACCOUNT_ID = PAPIC.PAYEE_ACCOUNT_ID &#xD;&#xA;--  and PAPI.OLD_ROLLOVER_DTL_ID = PAPIC.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;--  INNER JOIN&#xD;&#xA;--  (&#xD;&#xA;--  SELECT RIPHH.PAYEE_ACCOUNT_ID,PLAN_ID ,RIPHH.ORG_ID,RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;--   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION RIPHD &#xD;&#xA;--   INNER JOIN SGT_PAYMENT_HISTORY_HEADER RIPHH&#xD;&#xA;--    ON RIPHD.PAYMENT_HISTORY_HEADER_ID = RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;--   WHERE PAYMENT_METHOD_VALUE IN ('RCHK','RACH')&#xD;&#xA;--    AND DISTRIBUTION_STATUS_VALUE IN('RRSA','RRAP')&#xD;&#xA;--  ) AS RISSUE&#xD;&#xA;--  ON PAPI.PAYEE_ACCOUNT_ID = RISSUE.PAYEE_ACCOUNT_ID  and RISSUE.Org_id = PAPIC.ROLLOVER_ORG_ID&#xD;&#xA;  &#xD;&#xA;--  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;--   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;--  LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;--   ON BA.BENEFIT_APPLICATION_ID=PA.APPLICATION_ID&#xD;&#xA;-- WHERE  ((pa.benefit_account_type_value='RFND' and CV.DATA2 = 'RPCD')or&#xD;&#xA;--   (pa.benefit_account_type_value='RETR' and (isnull(ba.plso_requested_flag,'')='Y' or&#xD;&#xA;--    pa.benefit_option_value='5YTL')) OR&#xD;&#xA;--   (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')))&#xD;&#xA;--  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;--   (   &#xD;&#xA;--    SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;--    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;--    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;--    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;--    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;--   ) &#xD;&#xA;--  AND PA.BENEFIT_BEGIN_DATE &lt;=@PAYMENTDATE&#xD;&#xA;---- Member Payment Reissue to Rollover Organization-Member &#xD;&#xA; &#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT &#xD;&#xA;  RISSUE.plan_id,&#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PA.PAYEE_PERSLINK_ID  AS PERSON_ID, &#xD;&#xA;  null AS ORG_ID ,&#xD;&#xA;  @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;  2507 AS STATUS_ID ,&#xD;&#xA;  'OUST' AS STATUS_VALUE,&#xD;&#xA;  @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;  2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;  Null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;  0 AS FED_TAX_ALLOWANCE ,&#xD;&#xA;  306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;  Null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;  0.00 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;  Null STATE_TAX_OPTION_VALUE ,&#xD;&#xA;  0 AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;  306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;  Null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;  0.00 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  RISSUE.PAYMENT_HISTORY_HEADER_ID AS OLD_PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  CREATED_BY ,getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ,&#xD;&#xA;  2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;  Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;  0.00 AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  NULL AS FED_FILING_STATUS_VALUE &#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;  INNER JOIN &#xD;&#xA;  (&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PARD.ROLLOVER_ORG_ID FROM &#xD;&#xA;    SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   WHERE&#xD;&#xA;    @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;    AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;    AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;    AND PARD.STATUS_VALUE = 'ACTV' AND PAPIT.REISSUE_ITEM_FLAG='Y'&#xD;&#xA;   GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID &#xD;&#xA;  ) AS PAPI&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;  SELECT RIPHH.PAYEE_ACCOUNT_ID,PLAN_ID,RIPHH.PAYMENT_HISTORY_HEADER_ID  &#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION RIPHD &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER RIPHH&#xD;&#xA;    ON RIPHD.PAYMENT_HISTORY_HEADER_ID = RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   WHERE PAYMENT_METHOD_VALUE IN ('CHK','ACH')&#xD;&#xA;    AND DISTRIBUTION_STATUS_VALUE IN('CRSA','RAP')&#xD;&#xA;    AND ISNULL(REISSUE_TO_ROLLOVER_ORG_FLAG,'N') = 'Y'&#xD;&#xA;  ) AS RISSUE&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = RISSUE.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID=PA.APPLICATION_ID&#xD;&#xA; WHERE  ((pa.benefit_account_type_value='RFND' and CV.DATA2 = 'RPCD')or&#xD;&#xA;   (pa.benefit_account_type_value='RETR' and (isnull(ba.plso_requested_flag,'')='Y' or&#xD;&#xA;    pa.benefit_option_value='5YTL')) OR&#xD;&#xA;   (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')))&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (&#xD;&#xA;                SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   ) &#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;=@PAYMENTDATE&#xD;&#xA;  --AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;&#xD;&#xA;-- Member Payment Reissue to Rollover Organization-Rollover org&#xD;&#xA; &#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT &#xD;&#xA;  RISSUE.plan_id,&#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  Null  AS PERSON_ID, &#xD;&#xA;  PAPI.ROLLOVER_ORG_ID AS ORG_ID ,&#xD;&#xA;  @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;  2507 AS STATUS_ID ,&#xD;&#xA;  'OUST' AS STATUS_VALUE,&#xD;&#xA;  @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;  2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;  Null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;  0 AS FED_TAX_ALLOWANCE ,&#xD;&#xA;  306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;  Null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;  0.00 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;  Null STATE_TAX_OPTION_VALUE ,&#xD;&#xA;  0 AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;  306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;  Null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;  0.00 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  RISSUE.PAYMENT_HISTORY_HEADER_ID AS OLD_PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  CREATED_BY ,getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ,&#xD;&#xA;  2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;  PAPI.ROLLOVER_TYPE_VALUE as ROLLOVER_TYPE_VALUE,&#xD;&#xA;  0.00 AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  NULL AS FED_FILING_STATUS_VALUE &#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;  INNER JOIN &#xD;&#xA;  (&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PARD.ROLLOVER_ORG_ID, PARD.ROLLOVER_TYPE_VALUE FROM &#xD;&#xA;    SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   WHERE&#xD;&#xA;    @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;    AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;    AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;    AND PARD.STATUS_VALUE = 'ACTV' AND PAPIT.REISSUE_ITEM_FLAG='Y'&#xD;&#xA;   GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID , PARD.ROLLOVER_TYPE_VALUE&#xD;&#xA;  ) AS PAPI&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;  SELECT RIPHH.PAYEE_ACCOUNT_ID,PLAN_ID,RIPHH.PAYMENT_HISTORY_HEADER_ID  &#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION RIPHD &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER RIPHH&#xD;&#xA;    ON RIPHD.PAYMENT_HISTORY_HEADER_ID = RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   WHERE PAYMENT_METHOD_VALUE IN ('CHK','ACH')&#xD;&#xA;    AND DISTRIBUTION_STATUS_VALUE IN('CRSA','RAP')&#xD;&#xA;    AND ISNULL(REISSUE_TO_ROLLOVER_ORG_FLAG,'N') = 'Y'&#xD;&#xA;  ) AS RISSUE&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = RISSUE.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID=PA.APPLICATION_ID&#xD;&#xA; WHERE  ((pa.benefit_account_type_value='RFND' and CV.DATA2 = 'RPCD')or&#xD;&#xA;   (pa.benefit_account_type_value='RETR' and (isnull(ba.plso_requested_flag,'')='Y' or&#xD;&#xA;    pa.benefit_option_value='5YTL')) OR&#xD;&#xA;   (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')))&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (&#xD;&#xA;                SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   ) &#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;=@PAYMENTDATE&#xD;&#xA;  --AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;&#xD;&#xA;--Rollover Reissue to Member&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;  RISSUE.plan_id,&#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PA.PAYEE_PERSLINK_ID  AS PERSON_ID,  &#xD;&#xA;  Null AS ORG_ID ,&#xD;&#xA;  @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;  2507 AS STATUS_ID ,&#xD;&#xA;  'OUST' AS STATUS_VALUE,&#xD;&#xA;  @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;  Case When TF.TAX_OPTION_ID is not null then TF.TAX_OPTION_ID else 2218 end AS FED_TAX_OPTION_ID ,&#xD;&#xA;  TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;  TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;  case when TF.MARITAL_STATUS_ID is not null then TF.MARITAL_STATUS_ID else 306 end AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;  TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;  CASE WHEN ISNULL(TF.ADDITIONAL_TAX_AMOUNT,0) != 0 THEN TF.ADDITIONAL_TAX_AMOUNT ELSE TF.FOUR_c END AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  Case When TS.TAX_OPTION_ID is not null then TS.TAX_OPTION_ID else 2218 end AS STATE_TAX_OPTION_ID ,&#xD;&#xA;  TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;  TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;  case when TS.MARITAL_STATUS_ID is not null then TS.MARITAL_STATUS_ID else 306 end AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;  TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;  RISSUE.PAYMENT_HISTORY_HEADER_ID AS OLD_PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  CREATED_BY ,getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ,&#xD;&#xA;  2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;  Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;  CASE WHEN TS.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' THEN TS.STATE_FLAT_AMOUNT ELSE TS.REFUND_STATE_AMT END AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  CASE&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NOT NULL THEN TF.FILING_STATUS_VALUE &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE IN ('SNGL', 'MRDW') THEN 'SGMF' &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE = 'MRID' THEN 'MFJQ' ELSE NULL END AS FED_FILING_STATUS_VALUE &#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;  INNER JOIN &#xD;&#xA;  (&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID,PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID,&#xD;&#xA;    PARD.ROLLOVER_ORG_ID FROM &#xD;&#xA;    SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   --INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;   -- ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;   --    AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   WHERE&#xD;&#xA;    @PAYMENTDATE &gt;= PAPIT.START_DATE &#xD;&#xA;    AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;    AND PARD.STATUS_VALUE = 'CANC'&#xD;&#xA;   GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID ,PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;  ) AS PAPIC  -- there exists a cancelled rollover&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = PAPIC.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;  SELECT RIPHH.PAYEE_ACCOUNT_ID,PLAN_ID ,RIPHH.ORG_ID,RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION RIPHD &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER RIPHH&#xD;&#xA;    ON RIPHD.PAYMENT_HISTORY_HEADER_ID = RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   WHERE PAYMENT_METHOD_VALUE IN ('RCHK','RACH')&#xD;&#xA;    AND DISTRIBUTION_STATUS_VALUE IN('RRSA','RRAP')&#xD;&#xA;  ) AS RISSUE&#xD;&#xA;  ON PAPIC.PAYEE_ACCOUNT_ID = RISSUE.PAYEE_ACCOUNT_ID  and RISSUE.Org_id = PAPIC.ROLLOVER_ORG_ID&#xD;&#xA;&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT outer join SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF &#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;    AND @PAYMENTDATE BETWEEN TF.START_DATE AND (CASE WHEN TF.END_DATE IS NULL THEN '99991231' ELSE TF.END_DATE end)&#xD;&#xA;    and TF.BENEFIT_DISTRIBUTION_TYPE_VALUE NOT IN ('PSLO', 'RMD')&#xD;&#xA;  LEFT outer join SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS &#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;    AND @PAYMENTDATE BETWEEN TS.START_DATE AND (CASE WHEN TS.END_DATE IS NULL THEN '99991231' ELSE TS.END_DATE end)&#xD;&#xA;    and TS.BENEFIT_DISTRIBUTION_TYPE_VALUE NOT IN ('PSLO', 'RMD')&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;  (&#xD;&#xA;   SELECT PAPIT.PAYEE_ACCOUNT_ID,PARD.OLD_ROLLOVER_DTL_ID ,&#xD;&#xA;    PARD.ROLLOVER_ORG_ID FROM &#xD;&#xA;    SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   WHERE&#xD;&#xA;    @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;    AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;    AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;    AND PARD.STATUS_VALUE = 'ACTV' AND PAPIT.REISSUE_ITEM_FLAG='Y'&#xD;&#xA;   GROUP BY PAPIT.PAYEE_ACCOUNT_ID,PARD.ROLLOVER_ORG_ID ,PARD.OLD_ROLLOVER_DTL_ID &#xD;&#xA;  )  PAPIA  -- to check whether there exists an active rollover&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = PAPIA.PAYEE_ACCOUNT_ID&#xD;&#xA;  and PAPIA.OLD_ROLLOVER_DTL_ID = PAPIC.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID=PA.APPLICATION_ID&#xD;&#xA; WHERE  ((pa.benefit_account_type_value='RFND' and CV.DATA2 = 'RPCD')or&#xD;&#xA;   (pa.benefit_account_type_value='RETR' and (isnull(ba.plso_requested_flag,'')='Y' or&#xD;&#xA;    pa.benefit_option_value='5YTL')) OR&#xD;&#xA;   (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')))&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (&#xD;&#xA;                SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   ) &#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;=@PAYMENTDATE&#xD;&#xA;  --AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  and PAPIA.PAYEE_ACCOUNT_ID IS NULL -- it means ,There is no active rollover   &#xD;&#xA;  &#xD;&#xA;union all  &#xD;&#xA;-- reissue of non refund payments&#xD;&#xA;SELECT &#xD;&#xA;  RISSUE.plan_id,&#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PA.PAYEE_PERSLINK_ID  AS PERSON_ID,  &#xD;&#xA;  CASE WHEN PA.PAYEE_PERSLINK_ID IS NULL THEN PA.PAYEE_ORG_ID ELSE NULL END AS ORG_ID ,&#xD;&#xA;  @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;  2507 AS STATUS_ID ,&#xD;&#xA;  'OUST' AS STATUS_VALUE,&#xD;&#xA;  @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;  Case When TF.TAX_OPTION_ID is not null then TF.TAX_OPTION_ID else 2218 end AS FED_TAX_OPTION_ID ,&#xD;&#xA;  TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;  TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;  case when TF.MARITAL_STATUS_ID is not null then TF.MARITAL_STATUS_ID else 306 end AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;  TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;  CASE WHEN ISNULL(TF.ADDITIONAL_TAX_AMOUNT,0) != 0 THEN TF.ADDITIONAL_TAX_AMOUNT ELSE TF.FOUR_c END AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  Case When TS.TAX_OPTION_ID is not null then TS.TAX_OPTION_ID else 2218 end AS STATE_TAX_OPTION_ID ,&#xD;&#xA;  TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;  TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;  case when TS.MARITAL_STATUS_ID is not null then TS.MARITAL_STATUS_ID else 306 end AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;  TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;  TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  RISSUE.PAYMENT_HISTORY_HEADER_ID AS OLD_PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  CREATED_BY ,getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  MODIFIED_BY ,getdate() as MODIFIED_DATE,0 UPDATE_SEQ,&#xD;&#xA;  2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;  Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;  CASE WHEN TS.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' THEN TS.STATE_FLAT_AMOUNT ELSE TS.REFUND_STATE_AMT END AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  CASE&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NOT NULL THEN TF.FILING_STATUS_VALUE &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE IN ('SNGL', 'MRDW') THEN 'SGMF' &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE = 'MRID' THEN 'MFJQ' ELSE NULL END AS FED_FILING_STATUS_VALUE &#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID    &#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;     SELECT RIPHH.PAYEE_ACCOUNT_ID,PLAN_ID,RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION RIPHD &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER RIPHH&#xD;&#xA;    ON RIPHD.PAYMENT_HISTORY_HEADER_ID = RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   WHERE DISTRIBUTION_STATUS_VALUE IN('CRSA','RAP') and riphh.payment_date&lt;=@paymentdate&#xD;&#xA;  ) AS RISSUE&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = RISSUE.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT outer join SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF &#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;    AND @PAYMENTDATE BETWEEN TF.START_DATE AND (CASE WHEN TF.END_DATE IS NULL THEN '99991231' ELSE TF.END_DATE end)&#xD;&#xA;    and TF.BENEFIT_DISTRIBUTION_TYPE_VALUE NOT IN ('PSLO', 'RMD')&#xD;&#xA;  LEFT outer join SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS &#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;    AND @PAYMENTDATE BETWEEN TS.START_DATE AND (CASE WHEN TS.END_DATE IS NULL THEN '99991231' ELSE TS.END_DATE end)&#xD;&#xA;    and TS.BENEFIT_DISTRIBUTION_TYPE_VALUE NOT IN ('PSLO', 'RMD')   &#xD;&#xA;  LEFT JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE  pa.benefit_account_type_value&lt;&gt;'RFND' and CV.DATA2 &lt;&gt; 'CNLD'&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (&#xD;&#xA;                SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )    &#xD;&#xA;  AND PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID IS NULL&#xD;&#xA;---- Member refund check re-issued to member--&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT &#xD;&#xA;  RISSUE.plan_id,&#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  RISSUE.PERSON_ID  AS PERSON_ID, &#xD;&#xA;  RISSUE.ORG_ID AS ORG_ID ,&#xD;&#xA;  @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;  2507 AS STATUS_ID ,&#xD;&#xA;  'OUST' AS STATUS_VALUE,&#xD;&#xA;  @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;  2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;  Null AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;  0 AS FED_TAX_ALLOWANCE ,&#xD;&#xA;  306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;  Null AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;  0.00 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;  Null STATE_TAX_OPTION_VALUE ,&#xD;&#xA;  0 AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;  306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;  Null AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;  0.00 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  RISSUE.PAYMENT_HISTORY_HEADER_ID AS OLD_PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  CREATED_BY ,&#xD;&#xA;  getdate() as CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as  MODIFIED_BY ,&#xD;&#xA;  getdate() as MODIFIED_DATE,&#xD;&#xA;  0 UPDATE_SEQ,&#xD;&#xA;  2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;  Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;  0.00 AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  NULL AS FED_FILING_STATUS_VALUE &#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;  SELECT RIPHH.PAYEE_ACCOUNT_ID,PLAN_ID,RIPHH.PAYMENT_HISTORY_HEADER_ID,RIPHH.PERSON_ID,RIPHH.ORG_ID  &#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION RIPHD &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER RIPHH&#xD;&#xA;    ON RIPHD.PAYMENT_HISTORY_HEADER_ID = RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   WHERE PAYMENT_METHOD_VALUE IN ('CHK','ACH')&#xD;&#xA;    AND DISTRIBUTION_STATUS_VALUE IN('CRSA','RAP')&#xD;&#xA;    AND ISNULL(REISSUE_TO_ROLLOVER_ORG_FLAG,'N') = 'N'&#xD;&#xA;  ) AS RISSUE&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = RISSUE.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID=PA.APPLICATION_ID&#xD;&#xA; WHERE  (pa.benefit_account_type_value='RFND' and CV.DATA2 = 'RPCD')&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (&#xD;&#xA;                SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   ) &#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;=@PAYMENTDATE&#xD;&#xA;  --AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;-----&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;     distinct PLAN_ID AS PLAN_ID,&#xD;&#xA;     NULL AS PAYEE_ACCOUNT_ID,&#xD;&#xA;     PERSON_ID, &#xD;&#xA;     ORG_ID ,&#xD;&#xA;     @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;     2507 AS STATUS_ID ,&#xD;&#xA;     'OUST' AS STATUS_VALUE,&#xD;&#xA;     @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;     2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;     NULL AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;     NULL AS FED_TAX_ALLOWANCE ,&#xD;&#xA;     306  AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;     NULL AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;     0.0 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;     NULL AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;     NULL AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;     306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;     NULL AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;     0.0 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;     EXREF.PAYMENT_HISTORY_HEADER_ID AS OLD_PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 UPDATE_SEQ,&#xD;&#xA;     2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;     Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;&#x9; 0.00 AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  NULL AS FED_FILING_STATUS_VALUE &#xD;&#xA;FROM &#xD;&#xA;     (SELECT  CASE WHEN REFUND_TO_VALUE = 'SMME' OR REFUND_TO_VALUE = 'ESME' OR REFUND_TO_VALUE ='DFME' THEN REFUND_TO_PERSON_ID ELSE NULL END AS PERSON_ID,&#xD;&#xA;        CASE WHEN REFUND_TO_VALUE = 'SMOR' OR REFUND_TO_VALUE = 'DFOR' THEN REFUND_TO_ORG_ID ELSE NULL END AS ORG_ID,&#xD;&#xA;        CASE WHEN OVERRIDDEN_REFUND_AMOUNT &gt; 0 THEN OVERRIDDEN_REFUND_AMOUNT &#xD;&#xA;          ELSE COMPUTED_REFUND_AMOUNT END AS AMOUNT,PAYMENT_HISTORY_HEADER_ID, PLAN_ID&#xD;&#xA;      FROM SGT_REMITTANCE WHERE REFUND_STATUS_VALUE = 'RIA'&#xD;&#xA;     ) AS EXREF&#xD;&#xA;----&#xD;&#xA;) AS TEMP &#xD;&#xA;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA; ON PA.PAYEE_ACCOUNT_ID=TEMP.PAYEE_ACCOUNT_ID&#xD;&#xA;ORDER BY &#xD;&#xA;CASE &#xD;&#xA;    WHEN Isnull(PA.BENEFIT_ACCOUNT_TYPE_VALUE,'') = 'RFND' THEN 'B'&#xD;&#xA;    WHEN isnull(PA.PULL_CHECK_FLAG,'N') = 'Y' THEN 'C'&#xD;&#xA;    WHEN ISNULL(PA.PULL_CHECK_FLAG,'N') = 'S' THEN 'D'&#xD;&#xA;    ELSE 'A'&#xD;&#xA;END, &#xD;&#xA;PA.PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadProcessedPaymentHeaders" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;Select phh.* from SGT_PAYMENT_HISTORY_HEADER phh&#xD;&#xA;   INNER JOIN&#xD;&#xA;   (&#xD;&#xA;    SELECT OLDPHH.PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER OLDPHH&#xD;&#xA;     INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION OLDCHECK&#xD;&#xA;      ON OLDPHH.PAYMENT_HISTORY_HEADER_ID=OLDCHECK.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;    WHERE OLDCHECK.DISTRIBUTION_STATUS_VALUE IN('RRSA','RRAP') &#xD;&#xA;        AND OLDPHH.PAYMENT_DATE &gt;= dateadd(MM,-1,@PAYMENTDATE)      &#xD;&#xA;    )OLDCHK ON OLDCHK.PAYEE_ACCOUNT_ID=phh.PAYEE_ACCOUNT_ID&#xD;&#xA;where phh.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptBenefitExpStatistics" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="---------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;--  entPaymentHistoryHeader.rptBenefitExpStatistics&#xD;&#xA;&#xD;&#xA;--(3) Benefit Expenses Statistics: by Type (Dollar amount of benefits paid out in the defined benefit pension plans in the TWELVE months &#xD;&#xA;--  prior to the â€˜Effective Dateâ€™, broken out by plan)&#xD;&#xA;-- a. Description: Sum of all â€˜Payment Historyâ€™ of all payee account with 'Payment Status' in â€˜Payment History Headerâ€™ not equal to &#xD;&#xA;--  'Cancelled' sub grouped by below section.&#xD;&#xA;--  i. Annuities â€“ retirement: Sum of all Payment History for the payee account with â€˜Benefit Account Typeâ€™ equal to â€˜Retirementâ€™&#xD;&#xA;--  ii. Annuities â€“ disability: Sum of all Payment History for the payee account with â€˜Benefit Account Typeâ€™ equal to â€˜Disabilityâ€™&#xD;&#xA;--  iii.Annuities - survivor benefits: Sum of all Payment History for the payee account with â€˜Benefit Account Typeâ€™ equal to &#xD;&#xA;--   â€˜Pre-Retirement Deathâ€™ or â€˜Post-Retirement Deathâ€™ and â€˜Benefit Optionâ€™ not equal to â€˜Refundâ€™&#xD;&#xA;--  iv. Refunds â€“ death: Sum of all Payment History for the payee account with â€˜Benefit Account Typeâ€™ equal to &#xD;&#xA;--   â€˜Pre-Retirement Deathâ€™ or â€˜Post-Retirement Deathâ€™ and â€˜Benefit Optionâ€™ equal to â€˜Refundâ€™&#xD;&#xA;--  v. Refunds - separation from service: Sum of all Payment History for the payee account with â€˜Benefit Account Typeâ€™ equal to &#xD;&#xA;--   â€˜Refunds and Transferâ€™ â€˜Benefit Optionâ€™ equal to â€˜Regular Refundsâ€™ or â€˜Auto Refundsâ€™&#xD;&#xA;--  vi. Transfers to DC Plan: Sum of all Payment History for the payee account with â€˜Benefit Account Typeâ€™ equal to &#xD;&#xA;--   â€˜Refunds and Transferâ€™ â€˜Benefit Optionâ€™ equal to â€˜DB to DC Transferâ€™&#xD;&#xA;--  vii.Transfers to TIAA-CREF: Sum of all Payment History for the payee account with â€˜Benefit Account Typeâ€™ equal to &#xD;&#xA;--   â€˜Refunds and Transferâ€™ â€˜Benefit Optionâ€™ equal to â€˜DB to TIAA-CREF Transferâ€™&#xD;&#xA;--  viii.Transfers to TFFR: Sum of all Payment History for the payee account with â€˜Benefit Account Typeâ€™ equal to &#xD;&#xA;--   â€˜Refunds and Transferâ€™ â€˜Benefit Optionâ€™ equal to â€˜DB to TFFR Transferâ€™&#xD;&#xA;&#xD;&#xA;--- Conditions Modified As Per PIR 8903 - Refer PIR attachment for Details of Changes&#xD;&#xA;&#xD;&#xA;---------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;SELECT *,&#xD;&#xA; (ANN_RETR+ANN_DISA+ANN_SURBEN+REF_DETH+REF_SEPSER+TRANS_DC+TRANS_TIAA+TRANS_TFFR) &#xD;&#xA;  AS TOTAL_PER_PLAN&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA; SELECT PL.PLAN_NAME ,&#xD;&#xA;  SUM(CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR' &#xD;&#xA;    AND PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE &lt;&gt; 'DISN'&#xD;&#xA;   THEN PIT.ITEM_TYPE_DIRECTION*PHD.AMOUNT ELSE 0 END) AS ANN_RETR,&#xD;&#xA;  SUM(CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'&#xD;&#xA;    OR (&#xD;&#xA;      PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR' &#xD;&#xA;      AND PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE = 'DISN'&#xD;&#xA;       ) &#xD;&#xA;   THEN PIT.ITEM_TYPE_DIRECTION*PHD.AMOUNT ELSE 0 END) AS ANN_DISA,&#xD;&#xA;  SUM(CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND &#xD;&#xA;     PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE IN ('DEBN','PSRD')&#xD;&#xA;   THEN PIT.ITEM_TYPE_DIRECTION*PHD.AMOUNT ELSE 0 END) AS ANN_SURBEN,&#xD;&#xA;  SUM(CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DETH' AND &#xD;&#xA;     PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE ='LSDF'&#xD;&#xA;   THEN PIT.ITEM_TYPE_DIRECTION*PHD.AMOUNT ELSE 0 END) AS REF_DETH,&#xD;&#xA;  SUM(CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;    AND PA.BENEFIT_OPTION_VALUE IN ('AURD','RGRD')&#xD;&#xA;   THEN PIT.ITEM_TYPE_DIRECTION*PHD.AMOUNT ELSE 0 END) AS REF_SEPSER,&#xD;&#xA;  SUM(CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;    AND (PA.BENEFIT_OPTION_VALUE = 'DBCT' OR PA.BENEFIT_OPTION_VALUE = 'SPEL')&#xD;&#xA;   THEN PIT.ITEM_TYPE_DIRECTION*PHD.AMOUNT ELSE 0 END) AS TRANS_DC,&#xD;&#xA;  SUM(CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;    AND PA.BENEFIT_OPTION_VALUE = 'DTCT'&#xD;&#xA;   THEN PIT.ITEM_TYPE_DIRECTION*PHD.AMOUNT ELSE 0 END) AS TRANS_TIAA,&#xD;&#xA;  SUM(CASE WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;    AND PA.BENEFIT_OPTION_VALUE IN ('DBDC','DBTT')&#xD;&#xA;   THEN PIT.ITEM_TYPE_DIRECTION*PHD.AMOUNT ELSE 0 END) AS TRANS_TFFR&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK)&#xD;&#xA;   ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK)&#xD;&#xA;   ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK)&#xD;&#xA;   ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DRO WITH(NOLOCK)&#xD;&#xA;   ON PA.DRO_APPLICATION_ID = DRO.DRO_APPLICATION_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;   ON ISNULL(BA.PLAN_ID,DRO.PLAN_ID) = PL.PLAN_ID&#xD;&#xA; WHERE PHH.PAYMENT_DATE &gt;= DATEADD(M,-12,@EFFECTIVEDATE)&#xD;&#xA;  AND PHH.PAYMENT_DATE &lt;= @EFFECTIVEDATE&#xD;&#xA;  AND PHH.STATUS_VALUE not in ('CNLD','CPYP','RCCD')&#xD;&#xA;  AND PIT.CHECK_GROUP_CODE_VALUE ='GRSS' &#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE NOT IN ('RRED','CRET')&#xD;&#xA;  AND ISNULL(PIT.REISSUE_ITEMS_FLAG,'N') = 'N'&#xD;&#xA; GROUP BY PL.PLAN_NAME&#xD;&#xA;) TEMP">
      <parameters>
        <parameter ID="@EFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPayments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgt_payment_history_header a&#xD;&#xA; inner join sgt_payment_history_distribution b on a.payment_history_header_id=b.payment_history_header_id&#xD;&#xA; inner join sgs_Code_value cv on b.payment_method_id = cv.code_id and b.payment_method_Value = cv.code_Value&#xD;&#xA; inner join sgt_payee_Account c on a.payee_Account_id=c.payee_Account_id&#xD;&#xA; left join sgt_benefit_calculation bc on bc.benefit_calculation_id=c.calculation_id&#xD;&#xA; left join sgt_benefit_application ba on ba.benefit_application_id=c.application_id&#xD;&#xA; inner join sgt_benefit_account d on c.benefit_Account_id=d.benefit_Account_id&#xD;&#xA; left join sgt_benefit_dro_application e on c.DRO_APPLICATION_ID=e.DRO_APPLICATION_ID&#xD;&#xA; left join sgt_benefit_dro_calculation f on c.dro_calculation_id=f.dro_calculation_id&#xD;&#xA; left join sgt_person p on p.person_id=a.person_id&#xD;&#xA;where payment_schedule_id=@paymentsheduleid">
      <parameters>
        <parameter ID="@paymentsheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadExcessContributionPayments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select a.*,b.*,c.*,p.* from sgt_payment_history_distribution a&#xD;&#xA; inner join sgt_payment_history_header b on a.payment_history_header_id=b.payment_history_header_id&#xD;&#xA; inner join sgt_remittance c on b.payment_history_header_id=c.payment_history_header_id&#xD;&#xA; inner join sgs_code_value d on d.code_id=a.distribution_status_id and d.code_value=a.distribution_status_value &#xD;&#xA; inner join sgt_plan p on b.plan_id=p.plan_id &#xD;&#xA;where d.data2='OUTS' and b.payee_Account_id is null and b.payment_schedule_id=@paymentsheduleid">
      <parameters>
        <parameter ID="@paymentsheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreateEscheatReissuePaymentsHeader" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @EFFECTIVE_DATE DATETIME&#xD;&#xA;SELECT @EFFECTIVE_DATE = EFFECTIVE_DATE FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_HEADER(PLAN_ID,PAYEE_ACCOUNT_ID,PERSON_ID,ORG_ID,PAYMENT_DATE,STATUS_ID,STATUS_VALUE,&#xD;&#xA; PAYMENT_SCHEDULE_ID,FED_TAX_OPTION_ID,FED_TAX_OPTION_VALUE,FED_TAX_ALLOWANCE,FED_MARITAL_STATUS_ID,FED_MARITAL_STATUS_VALUE,&#xD;&#xA; FED_ADDITIONAL_TAX_AMOUNT,STATE_TAX_OPTION_ID,STATE_TAX_OPTION_VALUE,STATE_TAX_ALLOWANCE,STATE_MARITAL_STATUS_ID,STATE_MARITAL_STATUS_VALUE,&#xD;&#xA; STATE_ADDITIONAL_TAX_AMOUNT,OLD_PAYMENT_HISTORY_HEADER_ID,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ,ROLLOVER_TYPE_ID,ROLLOVER_TYPE_VALUE, STATE_TAX_FLAT_AMOUNT, FED_FILING_STATUS_ID, FED_FILING_STATUS_VALUE)&#xD;&#xA;&#xD;&#xA;SELECT TEMP.* FROM &#xD;&#xA;( &#xD;&#xA;SELECT &#xD;&#xA;  RISSUE.PLAN_ID,&#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;  RISSUE.PERSON_ID  AS PERSON_ID,  &#xD;&#xA;  RISSUE.ORG_ID AS ORG_ID ,&#xD;&#xA;  @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;  2507 AS STATUS_ID ,&#xD;&#xA;  'OUST' AS STATUS_VALUE,&#xD;&#xA;  @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;  CASE WHEN TF.TAX_OPTION_ID IS NOT NULL THEN TF.TAX_OPTION_ID ELSE 2218 END AS FED_TAX_OPTION_ID ,&#xD;&#xA;  TF.TAX_OPTION_VALUE AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;  TF.TAX_ALLOWANCE  AS FED_TAX_ALLOWANCE ,&#xD;&#xA;  CASE WHEN TF.MARITAL_STATUS_ID IS NOT NULL THEN TF.MARITAL_STATUS_ID ELSE 306 END AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;  TF.MARITAL_STATUS_VALUE AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;  CASE WHEN ISNULL(TF.ADDITIONAL_TAX_AMOUNT,0) != 0 THEN TF.ADDITIONAL_TAX_AMOUNT ELSE TF.FOUR_c END AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  CASE WHEN TS.TAX_OPTION_ID IS NOT NULL THEN TS.TAX_OPTION_ID ELSE 2218 END AS STATE_TAX_OPTION_ID ,&#xD;&#xA;  TS.TAX_OPTION_VALUE AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;  TS.TAX_ALLOWANCE  AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;  CASE WHEN TS.MARITAL_STATUS_ID IS NOT NULL THEN TS.MARITAL_STATUS_ID ELSE 306 END AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;  TS.MARITAL_STATUS_VALUE AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;  TS.ADDITIONAL_TAX_AMOUNT AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  RISSUE.PAYMENT_HISTORY_HEADER_ID AS OLD_PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  CREATED_BY ,GETDATE() AS CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS  MODIFIED_BY ,GETDATE() AS MODIFIED_DATE,0 UPDATE_SEQ,&#xD;&#xA;  2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;  Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;  CASE WHEN TS.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' THEN TS.STATE_FLAT_AMOUNT ELSE TS.REFUND_STATE_AMT END AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  CASE&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NOT NULL THEN TF.FILING_STATUS_VALUE &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE IN ('SNGL', 'MRDW') THEN 'SGMF' &#xD;&#xA;&#x9;&#x9;WHEN TF.BENEFIT_DISTRIBUTION_TYPE_VALUE = 'MNBF' AND TF.FILING_STATUS_VALUE IS NULL AND TF.MARITAL_STATUS_VALUE IS NOT NULL AND TF.MARITAL_STATUS_VALUE = 'MRID' THEN 'MFJQ' ELSE NULL END AS FED_FILING_STATUS_VALUE &#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID    &#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;     SELECT RIPHH.PAYEE_ACCOUNT_ID,PLAN_ID,RIPHH.PAYMENT_HISTORY_HEADER_ID ,RIPHH.PERSON_ID,RIPHH.ORG_ID&#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION RIPHD &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER RIPHH&#xD;&#xA;    ON RIPHD.PAYMENT_HISTORY_HEADER_ID = RIPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   WHERE DISTRIBUTION_STATUS_VALUE IN('CERA','RERA') AND RIPHH.PAYMENT_DATE&lt;=@PAYMENTDATE&#xD;&#xA;  ) AS RISSUE&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID = RISSUE.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;&#xD;&#xA;  INNER JOIN &#xD;&#xA;    (SELECT PAYEE_ACCOUNT_ID, PAYMENT_ITEM_TYPE_ID &#xD;&#xA;&#x9;&#x9;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE &#xD;&#xA;&#x9;&#x9;GROUP BY PAYEE_ACCOUNT_ID, PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9;) AS PAPIT &#xD;&#xA;   ON PAPIT.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;   ON PIT.PAYMENT_ITEM_TYPE_ID=PAPIT.PAYMENT_ITEM_TYPE_ID AND PIT.ITEM_TYPE_CODE='ITEM458'&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TF &#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = TF.PAYEE_ACCOUNT_ID  AND TF.TAX_IDENTIFIER_VALUE = 'FDRL'&#xD;&#xA;    AND @PAYMENTDATE BETWEEN TF.START_DATE AND (CASE WHEN TF.END_DATE IS NULL THEN '99991231' ELSE TF.END_DATE END)&#xD;&#xA;    AND TF.BENEFIT_DISTRIBUTION_TYPE_VALUE NOT IN('PSLO','RMD')&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TS &#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = TS.PAYEE_ACCOUNT_ID AND TS.TAX_IDENTIFIER_VALUE = 'STAT'&#xD;&#xA;    AND @PAYMENTDATE BETWEEN TS.START_DATE AND (CASE WHEN TS.END_DATE IS NULL THEN '99991231' ELSE TS.END_DATE END)&#xD;&#xA;    AND TS.BENEFIT_DISTRIBUTION_TYPE_VALUE NOT IN('PSLO','RMD')&#xD;&#xA; WHERE  (CV.DATA2 &lt;&gt; 'CNLD')&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (&#xD;&#xA;                SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (NOLOCK)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   ) &#xD;&#xA;  &#xD;&#xA;) AS TEMP &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA; ON PA.PAYEE_ACCOUNT_ID=TEMP.PAYEE_ACCOUNT_ID&#xD;&#xA;ORDER BY &#xD;&#xA;CASE &#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' THEN 'B'&#xD;&#xA;    WHEN PA.PULL_CHECK_FLAG = 'Y' THEN 'C'&#xD;&#xA;    WHEN PA.PULL_CHECK_FLAG = 'S' THEN 'D'&#xD;&#xA;    ELSE 'A'&#xD;&#xA;END,&#xD;&#xA;PA.PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadWIRETransferDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  PHH.PAYMENT_DATE,PHD.NET_AMOUNT,ORG.ORG_NAME,ORG.WIRE_TRANSFER_REPEAT_CODE&#xD;&#xA;FROM  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD &#xD;&#xA; ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID AND PHD.PAYMENT_METHOD_VALUE = 'WIRE'&#xD;&#xA;INNER JOIN SGT_ORGANIZATION ORG&#xD;&#xA; ON PHH.ORG_ID = ORG.ORG_ID&#xD;&#xA;WHERE  PHH.PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="SummaryreportofalladhocpaymentsforaMonth" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT CV.DESCRIPTION AS SCHEDULE_TYPE,&#xD;&#xA;    PHH.PAYMENT_DATE as PAYMENT_DATE,&#xD;&#xA;    PHD.PAYMENT_ITEM_TYPE_ID as PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PIT.ITEM_TYPE_DESCRIPTION as ITEM_TYPE_DESCRIPTION,&#xD;&#xA;    CASE WHEN ISNULL(PIT.ITEM_TYPE_DIRECTION,1) &lt; 0 THEN 1 ELSE 0 END AS ITEM_DIR_ORD,&#xD;&#xA;    PIT.ITEM_PRIORITY as ITEM_PRIORITY,&#xD;&#xA;    SUM(PIT.ITEM_TYPE_DIRECTION*PHD.AMOUNT) AS AMOUNT&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD&#xD;&#xA;  ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_SCHEDULE SCH&#xD;&#xA;  ON PHH.PAYMENT_SCHEDULE_ID = SCH.PAYMENT_SCHEDULE_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;  ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;  ON SCH.SCHEDULE_TYPE_ID = CV.CODE_ID AND SCH.SCHEDULE_TYPE_VALUE = CV.CODE_VALUE&#xD;&#xA;WHERE PHH.PAYMENT_DATE BETWEEN @STARTDATE AND ISNULL(@ENDDATE,GETDATE())&#xD;&#xA;AND SCH.SCHEDULE_TYPE_VALUE = @SCHEDULETYPE&#xD;&#xA;GROUP BY &#xD;&#xA; CV.DESCRIPTION ,&#xD;&#xA; PHH.PAYMENT_DATE,&#xD;&#xA; PHD.PAYMENT_ITEM_TYPE_ID,&#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION,&#xD;&#xA; CASE WHEN ISNULL(PIT.ITEM_TYPE_DIRECTION,1) &lt; 0 THEN 1 ELSE 0 END,&#xD;&#xA; PIT.ITEM_PRIORITY&#xD;&#xA;ORDER BY PHH.PAYMENT_DATE,&#xD;&#xA; CASE WHEN ISNULL(PIT.ITEM_TYPE_DIRECTION,1) &lt; 0 THEN 1 ELSE 0 END,&#xD;&#xA; PIT.ITEM_PRIORITY&#xD;&#xA; ">
      <parameters>
        <parameter ID="@STARTDATE" sfwDataType="DateTime" />
        <parameter ID="@ENDDATE" sfwDataType="DateTime" />
        <parameter ID="@SCHEDULETYPE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="rptPaymentListingReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT   Distinct&#xD;&#xA;  A.PAYEE_ACCOUNT_ID,&#xD;&#xA;  D.TRANSACTION_DATE AS STATUS_EFFECTIVE_DATE,&#xD;&#xA;  A.PAYMENT_DATE,&#xD;&#xA;  A.PERSON_ID,&#xD;&#xA;  ORG_CODE,&#xD;&#xA;  B.RECIPIENT_NAME,&#xD;&#xA;  F.DESCRIPTION AS PAYMENT_METHOD,&#xD;&#xA;  CHECK_NUMBER,&#xD;&#xA;  B.PAYMENT_HISTORY_HEADER_ID AS PAYMENT_HISTORY_ID,&#xD;&#xA;  B.PAYMENT_HISTORY_DISTRIBUTION_ID AS DISTRIBUTION_ID,&#xD;&#xA;  B.NET_AMOUNT&#xD;&#xA;  FROM SGT_PAYMENT_HISTORY_HEADER A WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION B WITH(NOLOCK)&#xD;&#xA;  ON A.PAYMENT_HISTORY_HEADER_ID =  B.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN SGS_CODE_VALUE C WITH(NOLOCK)&#xD;&#xA;  ON B.DISTRIBUTION_STATUS_ID = C.CODE_ID &#xD;&#xA;   AND B.DISTRIBUTION_STATUS_VALUE = C.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY D WITH(NOLOCK)&#xD;&#xA;  ON B.PAYMENT_HISTORY_DISTRIBUTION_ID = D.PAYMENT_HISTORY_DISTRIBUTION_ID&#xD;&#xA;   AND D.DISTRIBUTION_STATUS_ID = B.DISTRIBUTION_STATUS_ID&#xD;&#xA;   AND D.DISTRIBUTION_STATUS_VALUE = B.DISTRIBUTION_STATUS_VALUE&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION E WITH(NOLOCK)&#xD;&#xA;  ON A.ORG_ID = E.ORG_ID&#xD;&#xA; INNER JOIN SGS_CODE_VALUE F WITH(NOLOCK)&#xD;&#xA;  ON B.PAYMENT_METHOD_ID = F.CODE_ID&#xD;&#xA;   AND B.PAYMENT_METHOD_VALUE = F.CODE_VALUE&#xD;&#xA; WHERE C.DATA2 = @Status&#xD;&#xA; AND D.TRANSACTION_DATE BETWEEN @STARTDATE AND ISNULL(@ENDDATE,GETDATE())&#xD;&#xA; AND COALESCE(A.PAYEE_ACCOUNT_ID,A.ORG_ID,A.PERSON_ID) IS NOT NULL&#xD;&#xA;ORDER BY D.TRANSACTION_DATE,PAYMENT_DATE">
      <parameters>
        <parameter ID="@Status" sfwDataType="string" />
        <parameter ID="@STARTDATE" sfwDataType="DateTime" />
        <parameter ID="@ENDDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPaymentDetailsThatYear" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT   PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    PAYMENT_DATE,&#xD;&#xA;    STATUS_VALUE&#xD;&#xA;         ,ISNULL([TXBL],0)+ISNULL([NTXB],0) AS GROSS_AMOUNT&#xD;&#xA;         ,ISNULL([TXBL],0) AS TAXABLE_AMOUNT&#xD;&#xA;         ,ISNULL([NTXB],0) AS NONTAXABLE_AMOUNT&#xD;&#xA;         ,ISNULL([FDTX],0) AS FED_ADDITIONAL_TAX_AMOUNT&#xD;&#xA;         ,ISNULL([STTX],0) AS STATE_ADDITIONAL_TAX_AMOUNT&#xD;&#xA;         ,ISNULL([OTHR],0) AS DEDUCTION_AMOUNT&#xD;&#xA;         ,ISNULL([TXBL],0)+&#xD;&#xA;             ISNULL([NTXB],0)+&#xD;&#xA;             ISNULL([FDTX],0)+&#xD;&#xA;             ISNULL([STTX],0)+&#xD;&#xA;             ISNULL([OTHR],0) AS NET_AMOUNT&#xD;&#xA;&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;    SELECT PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;         PHH.PAYMENT_DATE,STAT.CODE_VALUE AS STATUS_VALUE, &#xD;&#xA;         MSSGRP.CODE_VALUE  as MSSGRPVAL, &#xD;&#xA;         SUM(PHD.AMOUNT * ITEM_TYPE_DIRECTION) AS AMOUNT&#xD;&#xA;    FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD&#xD;&#xA;         ON PHH.PAYMENT_HISTORY_HEADER_ID  = PHD.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;    INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;         ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;    INNER JOIN SGS_CODE_VALUE  MPGRP &#xD;&#xA;         ON PIT.MASTER_PAYMENT_GROUP_ID = MPGRP.CODE_ID&#xD;&#xA;            AND PIT.MASTER_PAYMENT_GROUP_VALUE = MPGRP.CODE_VALUE &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE  MSSGRP &#xD;&#xA;         ON  MSSGRP.CODE_ID = 2521 &#xD;&#xA;            AND MPGRP.DATA2 = MSSGRP.CODE_VALUE &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE STAT &#xD;&#xA;         ON PHH.STATUS_ID = STAT.CODE_ID &#xD;&#xA;            AND PHH.STATUS_VALUE = STAT.CODE_VALUE&#xD;&#xA;    WHERE YEAR(PAYMENT_DATE) = @PASSEDYEAR&#xD;&#xA;    AND PAYEE_ACCOUNT_ID = @PAYEEACCOUNTID&#xD;&#xA;    GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;        PHH.PAYMENT_DATE,STAT.CODE_VALUE,MSSGRP.CODE_VALUE&#xD;&#xA;) MA&#xD;&#xA;PIVOT (SUM(AMOUNT) FOR MSSGRPVAL IN &#xD;&#xA;    (&#xD;&#xA;         [TXBL]&#xD;&#xA;         ,[NTXB]&#xD;&#xA;         ,[FDTX]&#xD;&#xA;         ,[STTX]&#xD;&#xA;         ,[OTHR]&#xD;&#xA;    )) AS PVT&#xD;&#xA;ORDER BY   PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    PAYMENT_DATE ">
      <parameters>
        <parameter ID="@PASSEDYEAR" sfwDataType="int" />
        <parameter ID="@PAYEEACCOUNTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreateEscheatToStatePaymentsHeaders" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @EFFECTIVE_DATE DATETIME&#xD;&#xA;DECLARE @ESCHEATSTATEORGID INT&#xD;&#xA;SELECT @EFFECTIVE_DATE = EFFECTIVE_DATE FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;SELECT @ESCHEATSTATEORGID = DATA1 FROM SGS_CODE_VALUE WHERE CODE_ID = 52 AND CODE_VALUE = 'ETSO'&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PAYMENT_HISTORY_HEADER(PLAN_ID,PAYEE_ACCOUNT_ID,PERSON_ID,ORG_ID,PAYMENT_DATE,STATUS_ID,STATUS_VALUE,&#xD;&#xA; PAYMENT_SCHEDULE_ID,FED_TAX_OPTION_ID,FED_TAX_OPTION_VALUE,FED_TAX_ALLOWANCE,FED_MARITAL_STATUS_ID,FED_MARITAL_STATUS_VALUE,&#xD;&#xA; FED_ADDITIONAL_TAX_AMOUNT,STATE_TAX_OPTION_ID,STATE_TAX_OPTION_VALUE,STATE_TAX_ALLOWANCE,STATE_MARITAL_STATUS_ID,STATE_MARITAL_STATUS_VALUE,&#xD;&#xA; STATE_ADDITIONAL_TAX_AMOUNT,OLD_PAYMENT_HISTORY_HEADER_ID,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ,ROLLOVER_TYPE_ID,ROLLOVER_TYPE_VALUE, STATE_TAX_FLAT_AMOUNT, FED_FILING_STATUS_ID, FED_FILING_STATUS_VALUE)&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA;  ESCHEATSTATE.PLAN_ID,&#xD;&#xA;  --ESCHEATSTATE.PAYEE_ACCOUNT_ID, Commented as not paying state out of this payee account&#xD;&#xA;  NULL as PAYEE_ACCOUNT_ID,&#xD;&#xA;  NULL AS PERSON_ID,  &#xD;&#xA;  @ESCHEATSTATEORGID AS ORG_ID,&#xD;&#xA;  @EFFECTIVE_DATE AS PAYMENT_DATE,&#xD;&#xA;  2507 AS STATUS_ID ,&#xD;&#xA;  'OUST' AS STATUS_VALUE,&#xD;&#xA;  @PAYMENTSCHEDULEID AS PAYMENT_SCHEDULE_ID,&#xD;&#xA;  2218 AS FED_TAX_OPTION_ID ,&#xD;&#xA;  NULL AS FED_TAX_OPTION_VALUE ,&#xD;&#xA;  0 AS FED_TAX_ALLOWANCE ,&#xD;&#xA;  306 AS FED_MARITAL_STATUS_ID ,&#xD;&#xA;  NULL AS FED_MARITAL_STATUS_VALUE ,&#xD;&#xA;  0 AS FED_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  2218 AS STATE_TAX_OPTION_ID ,&#xD;&#xA;  NULL AS STATE_TAX_OPTION_VALUE ,&#xD;&#xA;  0 AS STATE_TAX_ALLOWANCE ,&#xD;&#xA;  306 AS STATE_MARITAL_STATUS_ID ,&#xD;&#xA;  NULL AS STATE_MARITAL_STATUS_VALUE ,&#xD;&#xA;  0 AS STATE_ADDITIONAL_TAX_AMOUNT,&#xD;&#xA;  ESCHEATSTATE.PAYMENT_HISTORY_HEADER_ID AS OLD_PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY ,GETDATE() AS CREATED_DATE,&#xD;&#xA;  'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY ,GETDATE() AS MODIFIED_DATE,0 UPDATE_SEQ,&#xD;&#xA;  2219 as ROLLOVER_TYPE_ID,&#xD;&#xA;  Null as ROLLOVER_TYPE_VALUE,&#xD;&#xA;  0.00 AS STATE_TAX_FLAT_AMOUNT,&#xD;&#xA;  7033 AS FED_FILING_STATUS_ID,&#xD;&#xA;  NULL AS FED_FILING_STATUS_VALUE &#xD;&#xA; FROM &#xD;&#xA; ( SELECT STATEPHH.PAYEE_ACCOUNT_ID,PLAN_ID,STATEPHH.PAYMENT_HISTORY_HEADER_ID ,STATEPHH.PERSON_ID,STATEPHH.ORG_ID&#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DISTRIBUTION STATEPHD WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER STATEPHH WITH(NOLOCK)&#xD;&#xA;    ON STATEPHD.PAYMENT_HISTORY_HEADER_ID = STATEPHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   WHERE STATEPHD.DISTRIBUTION_STATUS_VALUE IN('CEST','RSST') AND STATEPHH.PAYMENT_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  ) AS ESCHEATSTATE">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllExcessContributionPaymentHistoryHeader" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @EXCESSCONTRIBUTIONTAXABLEID INT&#xA;SELECT @EXCESSCONTRIBUTIONTAXABLEID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM501'&#xA;&#xA;SELECT DISTINCT PHH.* FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID &#xA;AND PHD.PAYMENT_ITEM_TYPE_ID = @EXCESSCONTRIBUTIONTAXABLEID&#xA;WHERE PAYEE_ACCOUNT_ID IS NULL AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="PaymentHistoryHeaderId" sfwType="Column" sfwValue="payment_history_header_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="True" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PlanId" sfwType="Column" sfwValue="plan_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PayeeAccountId" sfwType="Column" sfwValue="payee_account_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PersonId" sfwType="Column" sfwValue="person_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="OrgId" sfwType="Column" sfwValue="org_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PaymentDate" sfwType="Column" sfwValue="payment_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="StatusDescription" sfwType="Description" sfwValue="status_description" />
    <attribute ID="StatusId" sfwType="Column" sfwValue="status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="2507" sfwDataType="int" sfwRequired="False" />
    <attribute ID="StatusValue" sfwType="Column" sfwValue="status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="PaymentScheduleId" sfwType="Column" sfwValue="payment_schedule_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="FedTaxOptionDescription" sfwType="Description" sfwValue="fed_tax_option_description" />
    <attribute ID="FedTaxOptionId" sfwType="Column" sfwValue="fed_tax_option_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="2218" sfwDataType="int" sfwRequired="False" />
    <attribute ID="FedTaxOptionValue" sfwType="Column" sfwValue="fed_tax_option_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="FedTaxAllowance" sfwType="Column" sfwValue="fed_tax_allowance" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="FedMaritalStatusDescription" sfwType="Description" sfwValue="fed_marital_status_description" />
    <attribute ID="FedMaritalStatusId" sfwType="Column" sfwValue="fed_marital_status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="306" sfwDataType="int" sfwRequired="False" />
    <attribute ID="FedMaritalStatusValue" sfwType="Column" sfwValue="fed_marital_status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="FedAdditionalTaxAmount" sfwType="Column" sfwValue="fed_additional_tax_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="StateTaxOptionDescription" sfwType="Description" sfwValue="state_tax_option_description" />
    <attribute ID="StateTaxOptionId" sfwType="Column" sfwValue="state_tax_option_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="2218" sfwDataType="int" sfwRequired="False" />
    <attribute ID="StateTaxOptionValue" sfwType="Column" sfwValue="state_tax_option_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="StateTaxAllowance" sfwType="Column" sfwValue="state_tax_allowance" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="StateMaritalStatusDescription" sfwType="Description" sfwValue="state_marital_status_description" />
    <attribute ID="StateMaritalStatusId" sfwType="Column" sfwValue="state_marital_status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="306" sfwDataType="int" sfwRequired="False" />
    <attribute ID="StateMaritalStatusValue" sfwType="Column" sfwValue="state_marital_status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="StateAdditionalTaxAmount" sfwType="Column" sfwValue="state_additional_tax_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="OldPaymentHistoryHeaderId" sfwType="Column" sfwValue="old_payment_history_header_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="RolloverTypeDescription" sfwType="Description" sfwValue="rollover_type_description" />
    <attribute ID="RolloverTypeId" sfwType="Column" sfwValue="rollover_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="2219" sfwDataType="int" sfwRequired="False" />
    <attribute ID="RolloverTypeValue" sfwType="Column" sfwValue="rollover_type_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="PaymentYearStartDate" sfwValue="icdoPaymentHistoryHeader.PaymentYearStartDate" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="PaymentYearEndDate" sfwValue="icdoPaymentHistoryHeader.PaymentYearEndDate" />
    <attribute sfwDataType="int" sfwType="Property" ID="PaymentYear" sfwValue="icdoPaymentHistoryHeader.payment_year" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="GrossAmount" sfwValue="icdoPaymentHistoryHeader.gross_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="TaxableAmount" sfwValue="icdoPaymentHistoryHeader.taxable_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="NonTaxableAmount" sfwValue="icdoPaymentHistoryHeader.NonTaxable_Amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="DeductionAmount" sfwValue="icdoPaymentHistoryHeader.deduction_amount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="NetAmount" sfwValue="icdoPaymentHistoryHeader.net_amount" />
    <attribute ID="objOrganization" sfwType="Object" sfwEntity="entOrganization" sfwValue="ibusOrganization" />
    <attribute ID="objPlan" sfwType="Object" sfwEntity="entPlan" sfwValue="ibusPlan" />
    <attribute ID="objPaymentSchedule" sfwType="Object" sfwEntity="entPaymentSchedule" sfwValue="ibusPaymentSchedule" />
    <attribute ID="objPayeeAccount" sfwType="Object" sfwEntity="entPayeeAccount" sfwValue="ibusPayeeAccount" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="TransactionDate" sfwValue="icdoPaymentHistoryHeader.transaction_date" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrFedTaxExemtion" sfwValue="icdoPaymentHistoryHeader.istrFedTaxExemtion" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecFedTaxAmount" sfwValue="idecFedTaxAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrStateTaxTaxExemption" sfwValue="icdoPaymentHistoryHeader.istrStateTaxTaxExemption" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecStateTaxAmount" sfwValue="idecStateTaxAmount" />
    <attribute sfwType="Collection" sfwEntity="entPaymentHistoryDetail" ID="lstPaymentHistoryDetail" sfwValue="iclbPaymentHistoryDetail" />
    <attribute sfwType="Collection" sfwEntity="entPaymentHistoryDistribution" ID="lstPaymentHistoryDistribution" sfwValue="iclbPaymentHistoryDistribution" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsRolloverincludeNontaxableAmount" sfwValue="istrIsRolloverincludeNontaxableAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecRolledOverNonTaxableAmount" sfwValue="idecRolledOverNonTaxableAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecRolledoverTaxableAmount" sfwValue="idecRolledoverTaxableAmount" />
    <attribute ID="objPerson" sfwType="Object" sfwEntity="entPerson" sfwValue="ibusPerson" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPaymentDate" sfwValue="icdoPaymentHistoryHeader.istrPaymentDate" />
    <attribute sfwDataType="boolean" sfwType="Property" ID="IsRothRollverPayment" sfwValue="IsRothRollverPayment" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecRolledOverFederalTaxAmount" sfwValue="idecRolledOverFederalTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecRolledOverStateTaxAmount" sfwValue="idecRolledOverStateTaxAmount" />
    <attribute sfwValue="state_tax_flat_amount" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="decimal" sfwDBDataType="decimal" sfwLength="13,2" sfwIsNull="True" ID="StateTaxFlatAmount" sfwCaption="State Tax Flat Amount" />
    <attribute sfwValue="fed_filing_status_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="FedFilingStatusId" sfwCaption="Fed Filing Status" sfwCodeID="7033" />
    <attribute sfwValue="fed_filing_status_value" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="varchar" sfwLength="4" sfwIsNull="True" ID="FedFilingStatusValue" sfwCaption="Fed Filing Status" />
    <attribute sfwType="Description" ID="FedFilingStatusDescription" sfwCaption="Fed Filing Status" sfwValue="fed_filing_status_description" />
    <attribute sfwValue="employer_payroll_header_id" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwDBDataType="int" sfwIsNull="True" ID="EmployerPayrollHeaderId" sfwCaption="Employer Payroll Header Id" />
  </attributes>
  <objectmethods>
    <method ID="btnReceivablesPending_Click" sfwReturnType="ArrayList" />
    <method ID="btnCancelPending_Click" sfwReturnType="ArrayList" />
    <method ID="btnCancel_Click" sfwReturnType="ArrayList" />
    <method ID="btnReceivablesCreated_Click" sfwReturnType="ArrayList" />
    <method ID="btnCancelPriorPayment_Click" sfwReturnType="ArrayList" />
  </objectmethods>
</entity>