<entity ID="entSolution" sfwView="False" sfwActive="True" sfwType="EntityRule" sfwStatus="Review" Text="Override entFramework.xml">
  <ExtraFields />
  <queries>
    <query ID="LoadActivityInstanceByProcessEventAndPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  SAI.*&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI WITH(NOLOCK)&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE  SPI WITH(NOLOCK) ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xA;INNER JOIN SGW_BPM_CASE_INSTANCE  SCI WITH(NOLOCK) ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xA;INNER JOIN SGW_BPM_PROCESS SP WITH(NOLOCK) ON SPI.PROCESS_ID = SP.PROCESS_ID &#xA;LEFT JOIN SGT_PERSON P WITH(NOLOCK) ON P.PERSON_ID = SCI.PERSON_ID&#xA;INNER JOIN SGW_BPM_EVENT SE WITH(NOLOCK) ON SE.DOC_TYPE = @DOC_TYPE&#xA;INNER JOIN SGW_BPM_ACTIVITY SA WITH(NOLOCK) ON SA.ACTIVITY_ID = SAI.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE in ('IMCE','USTK') &#xA;--AND ISNULL(SE.DOC_CLASS,'') = ISNULL(@DOC_CLASS,'')&#xA;AND SCI.PERSON_ID = @PERSON_ID&#xA;AND SPI.STATUS_VALUE = 'INPC'&#xA;AND SP.PROCESS_ID = @PROCESS_ID &#xA;--AND SAI.ACTIVITY_ID = @ACTIVITY_ID &#xA;WHERE SAI.STATUS_VALUE IN ('SUSP') and (Sai.ACTIVITY_ID &lt; @ACTIVITY_ID or @ACTIVITY_ID = 0)" sfwOracle="SELECT  SAI.*&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE  SPI ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xA;INNER JOIN SGW_BPM_CASE_INSTANCE  SCI  ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xA;INNER JOIN SGW_BPM_PROCESS SP  ON SPI.PROCESS_ID = SP.PROCESS_ID &#xA;LEFT JOIN SGT_PERSON P ON P.PERSON_ID = SCI.PERSON_ID&#xA;INNER JOIN SGW_BPM_EVENT SE ON SE.DOC_TYPE = @DOC_TYPE&#xA;JOIN SGW_BPM_ACTIVITY SA&#xA;ON SA.ACTIVITY_ID           = SAI.ACTIVITY_ID&#xA;AND SA.ACTIVITY_TYPE_VALUE IN ( 'IMCE','USTK' ) &#xA;AND NVL(SE.DOC_CLASS,'') = NVL(@DOC_CLASS,'')&#xA;AND SCI.PERSON_ID = @PERSON_ID&#xA;AND SPI.STATUS_VALUE = 'INPC'&#xA;AND SP.PROCESS_ID = @PROCESS_ID&#xA;AND SAI.ACTIVITY_ID = @ACTIVITY_ID &#xA;WHERE SAI.STATUS_VALUE NOT IN ('CANC','PROC','FAIL','RWRK','RCHK', 'INPC', 'APPR', 'REJT')&#xA;AND ( Sai.ACTIVITY_ID       = @ACTIVITY_ID&#xA;OR @ACTIVITY_ID            = 0 )">
      <parameters>
        <parameter ID="@DOC_TYPE" sfwDataType="string" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PROCESS_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_ID" sfwDataType="int" />
        <parameter ID="@DOC_CLASS" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadActivityInstanceByProcessEventAndOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  SAI.*&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI WITH(NOLOCK)&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE  SPI WITH(NOLOCK)  ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xA;INNER JOIN SGW_BPM_CASE_INSTANCE  SCI WITH(NOLOCK)  ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xA;INNER JOIN SGW_BPM_PROCESS  SP WITH(NOLOCK) ON SPI.PROCESS_ID = SP.PROCESS_ID &#xA;LEFT JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON O.ORG_ID = SCI.ORG_ID&#xA;INNER JOIN SGW_BPM_EVENT SE WITH(NOLOCK) ON SE.DOC_TYPE = @DOC_TYPE&#xA;INNER JOIN SGW_BPM_ACTIVITY SA WITH(NOLOCK) ON SA.ACTIVITY_ID = SAI.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE in ('IMCE','USTK')&#xA;--AND ISNULL(SE.DOC_CLASS,'') = ISNULL(@DOC_CLASS,'')&#xA;AND SCI.ORG_ID = @ORG_ID&#xA;AND SPI.STATUS_VALUE = 'INPC'&#xA;AND SP.PROCESS_ID = @PROCESS_ID&#xA;--AND SAI.ACTIVITY_ID = @ACTIVITY_ID&#xA;WHERE SAI.STATUS_VALUE IN ('SUSP') and (Sai.ACTIVITY_ID &lt; @ACTIVITY_ID or @ACTIVITY_ID = 0)" sfwOracle="SELECT  SAI.*&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE  SPI  ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xA;INNER JOIN SGW_BPM_CASE_INSTANCE  SCI  ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xA;INNER JOIN SGW_BPM_PROCESS  SP  ON SPI.PROCESS_ID = SP.PROCESS_ID &#xA;LEFT JOIN SGT_ORGANIZATION O  ON O.ORG_ID = SCI.ORG_ID&#xA;INNER JOIN SGW_BPM_EVENT SE  ON SE.DOC_TYPE = @DOC_TYPE&#xA;JOIN SGW_BPM_ACTIVITY SA&#xA;ON SA.ACTIVITY_ID           = SAI.ACTIVITY_ID&#xA;AND SA.ACTIVITY_TYPE_VALUE IN ( 'IMCE','USTK' )&#xA;AND NVL(SE.DOC_CLASS,'') = NVL(@DOC_CLASS,'')&#xA;AND SCI.ORG_ID = @ORG_ID&#xA;AND SPI.STATUS_VALUE = 'INPC'&#xA;AND SP.PROCESS_ID = @PROCESS_ID&#xA;AND SAI.ACTIVITY_ID = @ACTIVITY_ID&#xA;WHERE SAI.STATUS_VALUE NOT IN ('CANC','PROC','FAIL','RWRK','RCHK', 'INPC', 'APPR', 'REJT')&#xA;AND ( Sai.ACTIVITY_ID       = @ACTIVITY_ID&#xA;OR @ACTIVITY_ID            = 0 )">
      <parameters>
        <parameter ID="@DOC_TYPE" sfwDataType="string" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@PROCESS_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_ID" sfwDataType="int" />
        <parameter ID="@DOC_CLASS" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadActivityInstanceByProcessEventAndReferenceId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  SAI.*&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI WITH(NOLOCK)&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE  SPI WITH(NOLOCK) ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xA;INNER JOIN SGW_BPM_CASE_INSTANCE  SCI WITH(NOLOCK) ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xA;INNER JOIN SGW_BPM_PROCESS  SP WITH(NOLOCK) ON SPI.PROCESS_ID = SP.PROCESS_ID &#xA;LEFT JOIN SGT_PERSON P WITH(NOLOCK) ON P.PERSON_ID = SCI.PERSON_ID&#xA;INNER JOIN SGW_BPM_EVENT SE WITH(NOLOCK) ON SE.DOC_TYPE = @DOC_TYPE&#xA;INNER JOIN SGW_BPM_ACTIVITY SA WITH(NOLOCK) ON SA.ACTIVITY_ID = SAI.ACTIVITY_ID AND SA.ACTIVITY_TYPE_VALUE in ('IMCE','USTK')&#xA;--AND ISNULL(SE.DOC_CLASS,'') = ISNULL(@DOC_CLASS,'')&#xA;AND SCI.REFERENCE_ID = @REFERENCE_ID&#xA;AND SPI.STATUS_VALUE = 'INPC'&#xA;AND SP.PROCESS_ID = @PROCESS_ID&#xA;--AND SAI.ACTIVITY_ID = @ACTIVITY_ID&#xA;WHERE SAI.STATUS_VALUE IN ('SUSP') and (Sai.ACTIVITY_ID &lt; @ACTIVITY_ID or @ACTIVITY_ID = 0)" sfwOracle="SELECT  SAI.*&#xA;FROM SGW_BPM_ACTIVITY_INSTANCE SAI &#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE  SPI  ON SAI.PROCESS_INSTANCE_ID = SPI.PROCESS_INSTANCE_ID &#xA;INNER JOIN SGW_BPM_CASE_INSTANCE  SCI  ON SCI.CASE_INSTANCE_ID = SPI.CASE_INSTANCE_ID &#xA;INNER JOIN SGW_BPM_PROCESS  SP  ON SPI.PROCESS_ID = SP.PROCESS_ID &#xA;LEFT JOIN SGT_PERSON P  ON P.PERSON_ID = SCI.PERSON_ID&#xA;INNER JOIN SGW_BPM_EVENT SE  ON SE.DOC_TYPE = @DOC_TYPE&#xA;JOIN SGW_BPM_ACTIVITY SA&#xA;ON SA.ACTIVITY_ID           = SAI.ACTIVITY_ID&#xA;AND SA.ACTIVITY_TYPE_VALUE IN ( 'IMCE','USTK' ) &#xA;AND NVL(SE.DOC_CLASS,'') = NVL(@DOC_CLASS,'')&#xA;AND SCI.REFERENCE_ID = @REFERENCE_ID&#xA;AND SPI.STATUS_VALUE = 'INPC'&#xA;AND SP.PROCESS_ID = @PROCESS_ID&#xA;AND SAI.ACTIVITY_ID = @ACTIVITY_ID&#xA;WHERE SAI.STATUS_VALUE NOT IN ('CANC','PROC','FAIL','RWRK','RCHK', 'INPC', 'APPR', 'REJT')&#xA;AND ( Sai.ACTIVITY_ID       = @ACTIVITY_ID&#xA;OR @ACTIVITY_ID            = 0 )">
      <parameters>
        <parameter ID="@DOC_TYPE" sfwDataType="string" />
        <parameter ID="@REFERENCE_ID" sfwDataType="int" />
        <parameter ID="@PROCESS_ID" sfwDataType="int" />
        <parameter ID="@ACTIVITY_ID" sfwDataType="int" />
        <parameter ID="@DOC_CLASS" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadSolBpmProcessEventXrs" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xD;&#xA;&#x9;X.*&#xD;&#xA;FROM&#xD;&#xA;&#x9;SGW_BPM_PROCESS_EVENT_XR X WITH(NOLOCK)&#xD;&#xA;WHERE&#xD;&#xA;&#x9;X.EVENT_ID = @BPMEVENTID&#xD;&#xA;ORDER BY&#xD;&#xA;&#x9;CASE WHEN X.ACTION_VALUE = 'RENE' AND ISNULL(X.ACTIVITY_ID,0) &gt; 0 THEN 1 &#xD;&#xA;&#x9;     WHEN X.ACTION_VALUE = 'RENE' AND ISNULL(X.ACTIVITY_ID,0) = 0 THEN 2&#xD;&#xA;&#x9;&#x9; WHEN X.ACTION_VALUE = 'INRE' AND ISNULL(X.ACTIVITY_ID,0) &gt; 0 THEN 3&#xD;&#xA;&#x9;&#x9; WHEN X.ACTION_VALUE = 'INRE' AND ISNULL(X.ACTIVITY_ID,0) = 0 THEN 4&#xD;&#xA;&#x9;&#x9; WHEN X.ACTION_VALUE = 'ALIN' AND ISNULL(X.ACTIVITY_ID,0) &gt; 0 THEN 5&#xD;&#xA;&#x9;&#x9; WHEN X.ACTION_VALUE = 'ALIN' AND ISNULL(X.ACTIVITY_ID,0) = 0 THEN 6&#xD;&#xA;&#x9;&#x9; ELSE 7 END">
      <parameters>
        <parameter ID="@BPMEVENTID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <constraint />
  <rules />
  <attributes />
  <initialload />
  <softerror />
  <harderror />
  <validatedelete />
  <delete />
  <groupslist />
  <checklist />
  <methods />
  <lifecycle />
  <objectmethods />
</entity>