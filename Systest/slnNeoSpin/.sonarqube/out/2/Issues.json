{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.13.0.0",
        "fileVersion": "4.13.0-3.25167.3 (73eff2b5)",
        "semanticVersion": "4.13.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0108",
          "level": "warning",
          "message": "'ApplicationSettings.MapSettingsObject()' hides inherited member 'NeoBaseApplicationSettings.MapSettingsObject()'. Use the new keyword if hiding was intended.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/ApplicationSettings.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 28,
                  "endLine": 31,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0109",
          "level": "warning",
          "message": "The member 'NeoBaseApplicationSettings.MapSettingsObject()' does not hide an accessible member. The new keyword is not required.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/NeoBaseApplicationSettings.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 32,
                  "endLine": 35,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 4
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/ActivityInstanceEventArgs.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 17,
                  "endLine": 17,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'cdoActivityInstance' to match pascal case naming rules, consider using 'CdoActivityInstance'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 18,
                  "endLine": 18,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'cdoActivityInstanceHistory' to match pascal case naming rules, consider using 'CdoActivityInstanceHistory'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstanceHistory.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 15,
                  "endLine": 15,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/doActivityInstance.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 17,
                  "endLine": 45,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'busNeoBase' to match pascal case naming rules, consider using 'BusNeoBase'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 26,
                  "endLine": 13,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'doActivityInstance' to match pascal case naming rules, consider using 'DoActivityInstance'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/doActivityInstance.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 18,
                  "endLine": 20,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'doActivityInstanceHistory' to match pascal case naming rules, consider using 'DoActivityInstanceHistory'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/doActivityInstanceHistory.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 18,
                  "endLine": 20,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/doActivityInstanceHistory.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 17,
                  "endLine": 37,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'busNeoBaseConstants' to match pascal case naming rules, consider using 'BusNeoBaseConstants'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBaseConstant.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 25,
                  "endLine": 8,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'IsDevelopmentRegion' a static property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 21,
                  "endLine": 173,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'IsNonProductionRegion' a static property.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 21,
                  "endLine": 181,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'BPM' to match pascal case naming rules, consider using 'Bpm'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBaseConstant.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 29,
                  "endLine": 35,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'busNeoBaseGlobalFunctions' to match pascal case naming rules, consider using 'BusNeoBaseGlobalFunctions'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBaseGlobalFunctions.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 25,
                  "endLine": 26,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern. Make the serialization constructor 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/ApplicationSettings.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 18,
                  "endLine": 13,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/ApplicationSettings.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 8,
                  "endLine": 41,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Make the serialization constructor 'protected'."
            }
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/WorkflowConstants.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/ReportConstants.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern. Make the serialization constructor 'protected'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/NeoBaseApplicationSettings.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 18,
                  "endLine": 10,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/NeoBaseApplicationSettings.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 16,
                  "endLine": 30,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Make the serialization constructor 'protected'."
            }
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'doNeoBase' to match pascal case naming rules, consider using 'DoNeoBase'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/doNeoBase.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 18,
                  "endLine": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'FIRST_NAME' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/doNeoBase.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 46,
                  "endLine": 44,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/doNeoBase.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 117,
                  "endLine": 46,
                  "endColumn": 129
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/doNeoBase.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 46,
                  "endLine": 70,
                  "endColumn": 58
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/doNeoBase.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 118,
                  "endLine": 72,
                  "endColumn": 130
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null
            }
          }
        },
        {
          "ruleId": "S1185",
          "level": "warning",
          "message": "Remove this method 'GetObjectData' to simply inherit its behavior.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/ApplicationSettings.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 1,
                  "endLine": 48,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3247",
          "level": "warning",
          "message": "Replace this type-check-and-cast sequence to use pattern matching.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 25,
                  "endLine": 43,
                  "endColumn": 63
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 71,
                  "endLine": 45,
                  "endColumn": 107
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 29,
                  "endLine": 34,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 13,
                  "endLine": 37,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 41,
                  "endLine": 37,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 17,
                  "endLine": 41,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 21,
                  "endLine": 43,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 25,
                  "endLine": 46,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 29,
                  "endLine": 48,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 17,
                  "endLine": 56,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 13,
                  "endLine": 62,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 17,
                  "endLine": 64,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 45,
                  "endLine": 64,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 13,
                  "endLine": 69,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+5 (incl 4 for nesting)",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 29,
                  "endLine": 48,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 25,
                  "endLine": 46,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Merge this if statement with its nested one."
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 17,
                  "endLine": 64,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 13,
                  "endLine": 62,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Merge this if statement with its nested one."
            }
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified using the \"Where\" LINQ method",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 38,
                  "endLine": 41,
                  "endColumn": 60
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/cdoActivityInstance.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 25,
                  "endLine": 43,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'lstrceUsername'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBaseGlobalFunctions.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 20,
                  "endLine": 38,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'lstrcePassword'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBaseGlobalFunctions.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 20,
                  "endLine": 39,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1185",
          "level": "warning",
          "message": "Remove this method 'LoadLookupChild' to simply inherit its behavior.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 9,
                  "endLine": 171,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/doNeoBase.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 13,
                  "endLine": 171,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'InitializeExtendedObjects' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 21,
                  "endLine": 189,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'llstTemplateStdBookmarks'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/CorBookmarkHelper.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 26,
                  "endLine": 80,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2696",
          "level": "warning",
          "message": "Make the enclosing instance method 'static' or remove this set on the 'static' field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 13,
                  "endLine": 192,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'llstAllCorBookmarks'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/CorBookmarkHelper.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 36,
                  "endLine": 53,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'iblnTemp'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 18,
                  "endLine": 191,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'lbusBpmCaseInstance'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 36,
                  "endLine": 195,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'lbusBpmProcessInstance'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 196,
                  "startColumn": 39,
                  "endLine": 196,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'lbusBpmActivityInstance'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 197,
                  "startColumn": 40,
                  "endLine": 197,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'ExtendedEmptyObject'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 31,
                  "endLine": 198,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'lbusBpmTimerActivityInstanceDetails'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 52,
                  "endLine": 199,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'lbusBpmProcessEscalationInstance'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 49,
                  "endLine": 200,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'lbusBpmEscalationInstance'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/busNeoBase.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 42,
                  "endLine": 201,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(CurrCorTemplate => CurrCorTemplate.Key))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Sonarqube%20Codebase/Systest/Systest/slnNeoSpin/NeoSpinCommon/CorBookmarkHelper.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 77,
                  "endLine": 30,
                  "endColumn": 93
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS0108": {
          "id": "CS0108",
          "shortDescription": "Member hides inherited member; missing new keyword",
          "fullDescription": "A variable was declared with the same name as a variable in a base type. However, the new keyword was not used. This warning informs you that you should use new; the variable is declared as if new had been used in the declaration.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0108)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS0109": {
          "id": "CS0109",
          "shortDescription": "Member does not hide an inherited member; new keyword is not required",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0109)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Mergeable \"if\" statements should be combined",
          "fullDescription": "Nested code - blocks of code inside blocks of code - is eventually necessary, but increases complexity. This is why keeping the code as flat as possible, by avoiding unnecessary nesting, is considered a good practice.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Whenever there are portions of code that are duplicated and do not depend on the state of their container class, they can be centralized inside a \"utility class\". A utility class is a class that only has static members, hence it should not be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1185": {
          "id": "S1185",
          "shortDescription": "Overriding members should do more than simply call the same member in the base class",
          "fullDescription": "Overriding a method just to call the same method from the base class without performing any other actions is useless and misleading. The only time this is justified is in sealed overriding methods, where the effect is to lock in the parent class behavior. This rule ignores overrides of Equals and GetHashCode.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1185",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1192": {
          "id": "S1192",
          "shortDescription": "String literals should not be duplicated",
          "fullDescription": "Duplicated string literals make the process of refactoring complex and error-prone, as any change would need to be propagated on all occurrences.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1192",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1199": {
          "id": "S1199",
          "shortDescription": "Nested code blocks should not be used",
          "fullDescription": "Nested code blocks create new scopes where variables declared within are inaccessible from the outside, and their lifespan ends with the block.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1199",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "An unused local variable is a variable that has been declared but is not used anywhere in the block of code where it is defined. It is dead code, contributing to unnecessary complexity and leading to confusion when reading the code. Therefore, it should be removed from your code to maintain clarity and efficiency.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1854": {
          "id": "S1854",
          "shortDescription": "Unused assignments should be removed",
          "fullDescription": "Dead stores refer to assignments made to local variables that are subsequently never used or immediately overwritten. Such assignments are unnecessary and don’t contribute to the functionality or clarity of the code. They may even negatively impact performance. Removing them enhances code cleanliness and readability. Even if the unnecessary operations do not do any harm in terms of the program’s correctness, they are - at best - a waste of computing resources.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1854",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2325": {
          "id": "S2325",
          "shortDescription": "Methods and properties that don't access instance data should be static",
          "fullDescription": "Methods and properties that don’t access instance data should be marked as static for the following reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2325",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2342": {
          "id": "S2342",
          "shortDescription": "Enumeration types should comply with a naming convention",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks that all enum names match a provided regular expression.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2342",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2696": {
          "id": "S2696",
          "shortDescription": "Instance members should not write to \"static\" fields",
          "fullDescription": "This rule raises an issue each time a static field is updated from a non-static method or property.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2696",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3247": {
          "id": "S3247",
          "shortDescription": "Duplicate casts should not be made",
          "fullDescription": "In C#, the is type testing operator can be used to check if the run-time type of an object is compatible with a given type. If the object is not null, then the is operator performs a cast, and so performing another cast following the check result is redundant.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3247",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "This rule raises an issue when the code cognitive complexity of a function is above a certain threshold.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard-to-detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}