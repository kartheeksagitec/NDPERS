<?xml version="1.0" encoding="utf-8"?>
<entity ID="entEmployerRemittanceAllocation" sfwActive="True" sfwStatus="Valid" sfwRemoteObject="srvEmployerReport" sfwType="BusinessRule" sfwMainCDO="icdoEmployerRemittanceAllocation" sfwObjectID="busEmployerRemittanceAllocation" sfwTableName="sgt_employer_remittance_allocation" sfwView="False">
  <rules>
    <rule ID="CHECK BENEFIT TYPE IS DEFF COMP" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusEmployerPayrollHeader.icdoEmployerPayrollHeader.header_type_value&quot;) == &quot;DEFF&quot;)" sfwObjectBased="True" />
    <rule ID="CHECK BENEFIT TYPE IS INSURANCE" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusEmployerPayrollHeader.icdoEmployerPayrollHeader.header_type_value&quot;) == &quot;INSR&quot;)" sfwObjectBased="True" />
    <rule ID="CHECK BENEFIT TYPE IS RETIREMENT" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusEmployerPayrollHeader.icdoEmployerPayrollHeader.header_type_value&quot;) == &quot;RETR&quot;)" sfwObjectBased="True" />
    <rule ID="CheckAllocatedAmountExceedAvailableAmount" sfwMessageId="4501" sfwExpression="(this.IsAllocatedAmountExceedAvailableAmount() == True)" sfwObjectBased="True" />
    <rule ID="CheckAllocatedAmountLessthanZero" sfwMessageId="4503" sfwExpression="(this.icdoEmployerRemittanceAllocation.allocated_amount &lt;= 0)" sfwObjectBased="True" />
    <rule ID="CheckStatus" sfwExpression="(this.icdoEmployerRemittanceAllocation.payroll_allocation_status_value != &quot;ALOC&quot;)" sfwObjectBased="True" />
    <rule ID="CheckStatusForInfoLabel" sfwExpression="(this.icdoEmployerRemittanceAllocation.payroll_allocation_status_value == &quot;ALOC&quot;)" sfwObjectBased="True" />
    <rule ID="DoesRemittanceIdExists" sfwMessageId="4502" sfwExpression="!(this.icdoEmployerRemittanceAllocation.remittance_id == 0) &amp;&amp; &#xA;(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entEmployerRemittanceAllocation.CheckRemittanceExists&quot;, this.icdoEmployerRemittanceAllocation.remittance_id) &lt; 1)" sfwObjectBased="True" />
    <rule ID="IsAllocatedAmountByPlanExceedTotalReportedAmount" sfwMessageId="4511" sfwExpression="!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusEmployerPayrollHeader.icdoEmployerPayrollHeader.header_type_value&quot;) == &quot;PRCH&quot;) &amp;&amp; &#xA;(this.IsAllocatedAmountExceedTotalAmountByPlan() == True)" sfwObjectBased="True" />
    <rule ID="IsHeaderTypePurchase" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusEmployerPayrollHeader.icdoEmployerPayrollHeader.header_type_value&quot;) == &quot;PRCH&quot;)" sfwObjectBased="True" />
    <rule ID="IsRemittanceSelectedIsValid" sfwMessageId="4714" sfwExpression="!(this.icdoEmployerRemittanceAllocation.remittance_id == 0) &amp;&amp; &#xA;(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entEmployerRemittanceAllocation.GetRemittanceForOrgIDWithAppliedStatus&quot;, this.ibusEmployerPayrollHeader.PlanBenefitTypeForHeaderType, this.ibusEmployerPayrollHeader.icdoEmployerPayrollHeader.org_id, this.icdoEmployerRemittanceAllocation.remittance_id) == 0)" sfwObjectBased="True" />
    <rule ID="Rule Check Account exists for Remittance Type and Plan" sfwMessageId="4504" sfwExpression="!(this.icdoEmployerRemittanceAllocation.remittance_id == 0) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusEmployerPayrollHeader.icdoEmployerPayrollHeader.header_type_value&quot;) == &quot;PRCH&quot;) &amp;&amp; &#xA;!(this.CheckForValidRemittance() == True)" sfwObjectBased="True" />
    <rule ID="Rule check Remittance id is null" sfwMessageId="4580" sfwExpression="(this.icdoEmployerRemittanceAllocation.remittance_id == 0)" sfwObjectBased="True" />
  </rules>
  <delete />
  <checklist />
  <initialload>
    <item ID="CheckStatus" sfwMode="All" sfwStatus="Active" />
    <item ID="CheckStatusForInfoLabel" sfwMode="All" sfwStatus="Active" />
    <item ID="CHECK BENEFIT TYPE IS DEFF COMP" sfwMode="All" sfwStatus="Active" />
    <item ID="CHECK BENEFIT TYPE IS INSURANCE" sfwMode="All" sfwStatus="Active" />
    <item ID="CHECK BENEFIT TYPE IS RETIREMENT" sfwMode="All" sfwStatus="Active" />
    <item ID="IsHeaderTypePurchase" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror />
  <harderror>
    <item ID="Rule check Remittance id is null" sfwMode="All" sfwStatus="Active" />
    <item ID="CheckAllocatedAmountExceedAvailableAmount" sfwMode="All" sfwStatus="Active" />
    <item ID="DoesRemittanceIdExists" sfwMode="All" sfwStatus="Active" />
    <item ID="CheckAllocatedAmountLessthanZero" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check Account exists for Remittance Type and Plan" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRemittanceSelectedIsValid" sfwMode="All" sfwStatus="Active" />
    <item ID="IsAllocatedAmountByPlanExceedTotalReportedAmount" sfwMode="All" sfwStatus="Active" />
  </harderror>
  <validatedelete />
  <groupslist />
  <updateablecdo />
  <commonproperties />
  <queries>
    <query ID="Lookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgt_employer_remittance_allocation">
      <parameters />
    </query>
    <query ID="GetSumofAllocatedAmount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select sum(allocated_amount) from sgt_employer_remittance_allocation where&#xD;&#xA;employer_payroll_header_id = @employer_payroll_header_id&#xD;&#xA;and payroll_allocation_status_value = 'ALOC'&#xD;&#xA;and employer_remittance_allocation_id not in (@employer_remittance_allocation_id)">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
        <parameter ID="@employer_remittance_allocation_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetRemitanceType" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT R.REMITTANCE_TYPE_VALUE  FROM sgt_remittance R WHERE remittance_id = @remittance_id">
      <parameters>
        <parameter ID="@remittance_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckAccountExistsforPlanAndRemitType" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from sgt_account_reference where from_item_type_value=@from_item_type_value and plan_id=@plan_id">
      <parameters>
        <parameter ID="@plan_id" sfwDataType="int" />
        <parameter ID="@from_item_type_value" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="CheckRemittanceExists" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from sgt_remittance where remittance_id=@remittance_id">
      <parameters>
        <parameter ID="@remittance_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRemittanceDetailsByStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select rema.* from sgt_employer_remittance_allocation rema&#xD;&#xA;left outer join sgt_remittance rem on rem.remittance_id = rema.remittance_id&#xD;&#xA;left outer join sgt_deposit dep on dep.deposit_id = rem.deposit_id&#xD;&#xA;where dep.status_value = 'APLD' &#xD;&#xA;and rema.employer_payroll_header_id =@employer_payroll_header_id">
      <parameters>
        <parameter ID="@employer_payroll_header_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadHeaderByRemittanceID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select * from sgt_employer_payroll_header&#xD;&#xA;where employer_payroll_header_id in&#xD;&#xA;(select distinct employer_payroll_header_id from sgt_employer_remittance_allocation where remittance_id = @remittance_id and &#xD;&#xA;PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC' )">
      <parameters>
        <parameter ID="@remittance_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="DeleteRemittanceAllocationWithDepositStatusNSFOrInValid" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="delete from dbo.SGT_EMPLOYER_REMITTANCE_ALLOCATION&#xD;&#xA;where remittance_id =@remittance_id and&#xD;&#xA; EMPLOYER_PAYROLL_HEADER_ID =@EMPLOYER_PAYROLL_HEADER_ID">
      <parameters>
        <parameter ID="@EMPLOYER_PAYROLL_HEADER_ID" sfwDataType="int" />
        <parameter ID="@remittance_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetCountOfRemittanceWithAlocSatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from dbo.SGT_EMPLOYER_REMITTANCE_ALLOCATION&#xD;&#xA;where EMPLOYER_PAYROLL_HEADER_ID = @EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;">
      <parameters>
        <parameter ID="@EMPLOYER_PAYROLL_HEADER_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetRemittanceForOrgIDWithAppliedStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from sgt_remittance rem &#xD;&#xA;inner join sgt_deposit dep on dep.deposit_id = rem.deposit_id&#xD;&#xA;inner join sgt_plan p on p.plan_id=rem.plan_id and p.benefit_type_value=@benefit_type and @benefit_type &lt;&gt; ''&#xD;&#xA;where dep.status_value = 'APLD' and rem.org_id=@org_id&#xD;&#xA;and rem.remittance_id = @remittance_id">
      <parameters>
        <parameter ID="@benefit_type" sfwDataType="string" />
        <parameter ID="@org_id" sfwDataType="int" />
        <parameter ID="@remittance_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetInvalidAllocationsForRetirement" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMPLOYER_PAYROLL_HEADER_ID,PLAN_ID,REMITTANCE_TYPE,SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) AS DIFFAMT&#xD;&#xA;INTO #TEMP&#xD;&#xA;FROM ( &#xD;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'CNTR' AS REMITTANCE_TYPE,&#xD;&#xA; SUM(ISNULL(EE_CONTRIBUTION_REPORTED, 0.00) +&#xD;&#xA; ISNULL(EE_PRE_TAX_REPORTED, 0.00) +&#xD;&#xA; ISNULL(EE_EMPLOYER_PICKUP_REPORTED, 0.00) +&#xD;&#xA; ISNULL(ER_CONTRIBUTION_REPORTED, 0.00) +&#xD;&#xA; ISNULL(MEMBER_INTEREST_CALCULATED, 0.00) +&#xD;&#xA; ISNULL(EMPLOYER_INTEREST_CALCULATED, 0.00)&#xD;&#xA; + ISNULL(EE_PRETAX_ADDL_REPORTED, 0.00) &#xD;&#xA; + ISNULL(ER_PRETAX_MATCH_REPORTED, 0.00) &#xD;&#xA; + ISNULL(EE_POST_TAX_ADDL_REPORTED, 0.00)) AS REPORTEDAMT,&#xD;&#xA; 0.00 AS ALLOCATEDAMT&#xD;&#xA; -- SELECT D.*&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xD;&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'RHCO' AS REMITTANCE_TYPE,&#xD;&#xA; SUM(ISNULL(RHIC_ER_CONTRIBUTION_REPORTED, 0.00) +&#xD;&#xA; ISNULL(RHIC_EE_CONTRIBUTION_REPORTED, 0.00) +&#xD;&#xA; ISNULL(EMPLOYER_RHIC_INTEREST_CALCULATED, 0.00)) AS REPORTEDAMT, &#xD;&#xA; 0.00 AS ALLOCATEDAMT&#xD;&#xA; -- SELECT D.*&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xD;&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'ADEC' AS REMITTANCE_TYPE,&#xD;&#xA; SUM(ISNULL(ADEC_REPORTED, 0.00)) AS REPORTEDAMT, &#xD;&#xA; 0.00 AS ALLOCATEDAMT&#xD;&#xA; -- SELECT D.*&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xD;&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xD;&#xA; &#xD;&#xA; UNION ALL&#xD;&#xA; &#xD;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE AS REMITTANCE_TYPE, 0.00,&#xD;&#xA; SUM(ALLOCATED_AMOUNT)&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA; INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xD;&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA; AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xD;&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xD;&#xA;&#xD;&#xA; -- PIR 14938 - removed below block &#xD;&#xA; --UNION ALL&#xD;&#xA; &#xD;&#xA; --SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID, &#xD;&#xA; --CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','UCRP') THEN 'CNTR'&#xD;&#xA; -- WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('ORRP', 'URRP') THEN 'RHCO' END AS REMITTANCE_TYPE, 0.00,&#xD;&#xA; --SUM( CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','ORRP') THEN DIFFERENCE_AMOUNT ELSE 0.00 END) AS ALLOCATED_AMOUNT&#xD;&#xA; --FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xD;&#xA; --WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; --AND A.HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xD;&#xA; --AND DIFFERENCE_TYPE_VALUE IS NOT NULL&#xD;&#xA; --GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,&#xD;&#xA; --CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','UCRP') THEN 'CNTR'&#xD;&#xA; -- WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('ORRP', 'URRP') THEN 'RHCO' END&#xD;&#xA;) MYQU&#xD;&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID, PLAN_ID,REMITTANCE_TYPE&#xD;&#xA;HAVING SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) &lt; 0&#xD;&#xA;ORDER BY EMPLOYER_PAYROLL_HEADER_ID, PLAN_ID&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT ALLOC.*,HED.*,HED.CREATED_BY AS HED_CREATED_BY,HED.CREATED_DATE AS HED_CREATED_DATE,&#xD;&#xA;HED.MODIFIED_BY AS HED_MODIFIED_BY,HED.MODIFIED_DATE AS HED_MODIFIED_DATE,HED.UPDATE_SEQ AS HED_UPDATE_SEQ, REM.PLAN_ID AS iintPlanID&#xD;&#xA;FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION ALLOC&#xD;&#xA;INNER JOIN SGT_REMITTANCE REM ON ALLOC.REMITTANCE_ID = REM.REMITTANCE_ID&#xD;&#xA;INNER JOIN #TEMP TMP ON TMP.EMPLOYER_PAYROLL_HEADER_ID = ALLOC.EMPLOYER_PAYROLL_HEADER_ID AND TMP.REMITTANCE_TYPE = REM.REMITTANCE_TYPE_VALUE&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_HEADER HED ON TMP.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HED.REPORT_TYPE_VALUE &lt;&gt; 'PEN'&#xD;&#xA;ORDER BY HED.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;&#xD;&#xA;DROP TABLE #TEMP">
      <parameters />
    </query>
    <query ID="GetInvalidAllocationsForInsurance" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMPLOYER_PAYROLL_HEADER_ID,PLAN_ID,SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) AS DIFFAMT&#xD;&#xA;INTO #TEMP&#xD;&#xA;FROM ( &#xD;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID,&#xD;&#xA; SUM(ISNULL(PREMIUM_AMOUNT, 0.00)) AS REPORTEDAMT,0.00 AS ALLOCATEDAMT&#xD;&#xA; -- SELECT B.*&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xD;&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xD;&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID, 0.00, SUM(ALLOCATED_AMOUNT)&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA; INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xD;&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xD;&#xA; AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xD;&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xD;&#xA;) MYQU&#xD;&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID, PLAN_ID&#xD;&#xA;HAVING SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) &lt; 0&#xD;&#xA;ORDER BY EMPLOYER_PAYROLL_HEADER_ID, PLAN_ID&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT ALLOC.*,HED.*,HED.CREATED_BY AS HED_CREATED_BY,HED.CREATED_DATE AS HED_CREATED_DATE,&#xD;&#xA;HED.MODIFIED_BY AS HED_MODIFIED_BY,HED.MODIFIED_DATE AS HED_MODIFIED_DATE,HED.UPDATE_SEQ AS HED_UPDATE_SEQ, REM.PLAN_ID AS iintPlanID&#xD;&#xA;FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION ALLOC&#xD;&#xA;INNER JOIN SGT_REMITTANCE REM ON ALLOC.REMITTANCE_ID = REM.REMITTANCE_ID&#xD;&#xA;INNER JOIN #TEMP TMP ON TMP.EMPLOYER_PAYROLL_HEADER_ID = ALLOC.EMPLOYER_PAYROLL_HEADER_ID AND TMP.PLAN_ID = REM.PLAN_ID&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_HEADER HED ON TMP.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HED.REPORT_TYPE_VALUE &lt;&gt; 'PEN'&#xD;&#xA;ORDER BY HED.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;&#xD;&#xA;DROP TABLE #TEMP">
      <parameters />
    </query>
    <query ID="GetInvalidAllocationsForRetirementByOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMPLOYER_PAYROLL_HEADER_ID,PLAN_ID,REMITTANCE_TYPE,SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) AS DIFFAMT&#xD;&#xA;INTO #TEMP&#xD;&#xA;FROM ( &#xD;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'CNTR' AS REMITTANCE_TYPE,&#xD;&#xA; SUM(ISNULL(EE_CONTRIBUTION_REPORTED, 0.00) +&#xD;&#xA; ISNULL(EE_PRE_TAX_REPORTED, 0.00) +&#xD;&#xA; ISNULL(EE_EMPLOYER_PICKUP_REPORTED, 0.00) +&#xD;&#xA; ISNULL(ER_CONTRIBUTION_REPORTED, 0.00) +&#xD;&#xA; ISNULL(MEMBER_INTEREST_CALCULATED, 0.00) +&#xD;&#xA; ISNULL(EMPLOYER_INTEREST_CALCULATED, 0.00) &#xD;&#xA; + ISNULL(EE_PRETAX_ADDL_REPORTED, 0.00) &#xD;&#xA; + ISNULL(ER_PRETAX_MATCH_REPORTED, 0.00) &#xD;&#xA; + ISNULL(EE_POST_TAX_ADDL_REPORTED, 0.00)) AS REPORTEDAMT,&#xD;&#xA; 0.00 AS ALLOCATEDAMT&#xD;&#xA; -- SELECT D.*&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xD;&#xA; AND A.ORG_ID = @ORG_ID&#xD;&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'RHCO' AS REMITTANCE_TYPE,&#xD;&#xA; SUM(ISNULL(RHIC_ER_CONTRIBUTION_REPORTED, 0.00) +&#xD;&#xA; ISNULL(RHIC_EE_CONTRIBUTION_REPORTED, 0.00) +&#xD;&#xA; ISNULL(EMPLOYER_RHIC_INTEREST_CALCULATED, 0.00)) AS REPORTEDAMT, &#xD;&#xA; 0.00 AS ALLOCATEDAMT&#xD;&#xA; -- SELECT D.*&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xD;&#xA; And A.ORG_ID = @ORG_ID&#xD;&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID, 'ADEC' AS REMITTANCE_TYPE,&#xD;&#xA; SUM(ISNULL(ADEC_REPORTED, 0.00)) AS REPORTEDAMT, &#xD;&#xA; 0.00 AS ALLOCATEDAMT&#xD;&#xA; -- SELECT D.*&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xD;&#xA; And A.ORG_ID = @ORG_ID&#xD;&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xD;&#xA; &#xD;&#xA; UNION ALL&#xD;&#xA; &#xD;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE AS REMITTANCE_TYPE, 0.00,&#xD;&#xA; SUM(ALLOCATED_AMOUNT)&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA; INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xD;&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; AND A.HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA; AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xD;&#xA; AND A.ORG_ID = @ORG_ID&#xD;&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xD;&#xA;&#xD;&#xA; -- PIR 14938 - removed below block &#xD;&#xA; --UNION ALL&#xD;&#xA; &#xD;&#xA; --SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID, &#xD;&#xA; --CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','UCRP') THEN 'CNTR'&#xD;&#xA; -- WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('ORRP', 'URRP') THEN 'RHCO' END AS REMITTANCE_TYPE, 0.00,&#xD;&#xA; --SUM( CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','ORRP') THEN DIFFERENCE_AMOUNT ELSE 0.00 END) AS ALLOCATED_AMOUNT&#xD;&#xA; --FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; --INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA; --INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xD;&#xA; --WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; --AND A.HEADER_TYPE_VALUE = 'RETR'&#xD;&#xA; --AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xD;&#xA; --AND DIFFERENCE_TYPE_VALUE IS NOT NULL&#xD;&#xA; --GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,&#xD;&#xA; --CASE WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('OCRP','UCRP') THEN 'CNTR'&#xD;&#xA; -- WHEN ISNULL(DIFFERENCE_TYPE_VALUE,'') IN ('ORRP', 'URRP') THEN 'RHCO' END&#xD;&#xA;) MYQU&#xD;&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID, PLAN_ID,REMITTANCE_TYPE&#xD;&#xA;HAVING SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) &lt; 0&#xD;&#xA;ORDER BY EMPLOYER_PAYROLL_HEADER_ID, PLAN_ID&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT ALLOC.*,HED.*,HED.CREATED_BY AS HED_CREATED_BY,HED.CREATED_DATE AS HED_CREATED_DATE,&#xD;&#xA;HED.MODIFIED_BY AS HED_MODIFIED_BY,HED.MODIFIED_DATE AS HED_MODIFIED_DATE,HED.UPDATE_SEQ AS HED_UPDATE_SEQ, REM.PLAN_ID AS iintPlanID&#xD;&#xA;FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION ALLOC&#xD;&#xA;INNER JOIN SGT_REMITTANCE REM ON ALLOC.REMITTANCE_ID = REM.REMITTANCE_ID&#xD;&#xA;INNER JOIN #TEMP TMP ON TMP.EMPLOYER_PAYROLL_HEADER_ID = ALLOC.EMPLOYER_PAYROLL_HEADER_ID AND TMP.REMITTANCE_TYPE = REM.REMITTANCE_TYPE_VALUE&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_HEADER HED ON TMP.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HED.REPORT_TYPE_VALUE &lt;&gt; 'PEN'&#xD;&#xA;ORDER BY HED.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;&#xD;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetInvalidAllocationsorInsuranceByOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT EMPLOYER_PAYROLL_HEADER_ID,PLAN_ID,SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) AS DIFFAMT&#xD;&#xA;INTO #TEMP&#xD;&#xA;FROM ( &#xD;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID,&#xD;&#xA; SUM(ISNULL(PREMIUM_AMOUNT, 0.00)) AS REPORTEDAMT,0.00 AS ALLOCATEDAMT&#xD;&#xA; -- SELECT B.*&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; INNER JOIN SGT_EMPLOYER_PAYROLL_DETAIL B ON B.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID AND B.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xD;&#xA; AND B.RECORD_TYPE_VALUE &lt;&gt; '-ADJ'&#xD;&#xA; AND A.ORG_ID =@ORG_ID&#xD;&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, B.PLAN_ID&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID, 0.00, SUM(ALLOCATED_AMOUNT)&#xD;&#xA; FROM SGT_EMPLOYER_PAYROLL_HEADER A&#xD;&#xA; INNER JOIN SGT_EMPLOYER_REMITTANCE_ALLOCATION C ON C.EMPLOYER_PAYROLL_HEADER_ID = A.EMPLOYER_PAYROLL_HEADER_ID &#xD;&#xA; INNER JOIN SGT_REMITTANCE D ON D.REMITTANCE_ID = C.REMITTANCE_ID &#xD;&#xA; WHERE A.STATUS_VALUE &lt;&gt; 'IGNR'&#xD;&#xA; AND A.HEADER_TYPE_VALUE = 'INSR'&#xD;&#xA; AND C.PAYROLL_ALLOCATION_STATUS_VALUE = 'ALOC'&#xD;&#xA; AND A.ORG_ID =@ORG_ID&#xD;&#xA; GROUP BY A.EMPLOYER_PAYROLL_HEADER_ID, A.STATUS_VALUE, A.BALANCING_STATUS_VALUE, D.PLAN_ID,REMITTANCE_TYPE_VALUE&#xD;&#xA;) MYQU&#xD;&#xA;GROUP BY EMPLOYER_PAYROLL_HEADER_ID, PLAN_ID&#xD;&#xA;HAVING SUM(REPORTEDAMT) - SUM(ALLOCATEDAMT) &lt; 0&#xD;&#xA;ORDER BY EMPLOYER_PAYROLL_HEADER_ID, PLAN_ID&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT ALLOC.*,HED.*,HED.CREATED_BY AS HED_CREATED_BY,HED.CREATED_DATE AS HED_CREATED_DATE,&#xD;&#xA;HED.MODIFIED_BY AS HED_MODIFIED_BY,HED.MODIFIED_DATE AS HED_MODIFIED_DATE,HED.UPDATE_SEQ AS HED_UPDATE_SEQ, REM.PLAN_ID AS iintPlanID&#xD;&#xA;FROM SGT_EMPLOYER_REMITTANCE_ALLOCATION ALLOC&#xD;&#xA;INNER JOIN SGT_REMITTANCE REM ON ALLOC.REMITTANCE_ID = REM.REMITTANCE_ID&#xD;&#xA;INNER JOIN #TEMP TMP ON TMP.EMPLOYER_PAYROLL_HEADER_ID = ALLOC.EMPLOYER_PAYROLL_HEADER_ID AND TMP.PLAN_ID = REM.PLAN_ID&#xD;&#xA;INNER JOIN SGT_EMPLOYER_PAYROLL_HEADER HED ON TMP.EMPLOYER_PAYROLL_HEADER_ID = HED.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;WHERE HED.REPORT_TYPE_VALUE &lt;&gt; 'PEN'&#xD;&#xA;ORDER BY HED.EMPLOYER_PAYROLL_HEADER_ID&#xD;&#xA;&#xD;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="EmployerRemittanceAllocationId" sfwType="Column" sfwValue="employer_remittance_allocation_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="True" sfwDataType="int" sfwRequired="False" />
    <attribute ID="RemittanceId" sfwType="Column" sfwValue="remittance_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="EmployerPayrollHeaderId" sfwType="Column" sfwValue="employer_payroll_header_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="AllocatedAmount" sfwType="Column" sfwValue="allocated_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="11,2" />
    <attribute ID="AllocatedDate" sfwType="Column" sfwValue="allocated_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="PayrollAllocationStatusDescription" sfwType="Description" sfwValue="payroll_allocation_status_description" />
    <attribute ID="PayrollAllocationStatusId" sfwType="Column" sfwValue="payroll_allocation_status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="1503" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PayrollAllocationStatusValue" sfwType="Column" sfwValue="payroll_allocation_status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="DifferenceAmount" sfwType="Column" sfwValue="difference_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="DifferenceTypeDescription" sfwType="Description" sfwValue="difference_type_description" />
    <attribute ID="DifferenceTypeId" sfwType="Column" sfwValue="difference_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="1302" sfwDataType="int" sfwRequired="False" />
    <attribute ID="DifferenceTypeValue" sfwType="Column" sfwValue="difference_type_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="objRemittance" sfwType="Object" sfwEntity="entRemittance" sfwValue="ibusRemittance" />
    <attribute ID="objEmployerPayrollHeader" sfwType="Object" sfwEntity="entEmployerPayrollHeader" sfwValue="ibusEmployerPayrollHeader" />
    <attribute ID="objDeposit" sfwType="Object" sfwEntity="entDeposit" sfwValue="ibusDeposit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecRemittanceAvailableAmount" sfwValue="idecRemittanceAvailableAmount" />
  </attributes>
  <objectmethods>
    <method ID="btnAllocate_Click" sfwReturnType="ArrayList" />
  </objectmethods>
</entity>