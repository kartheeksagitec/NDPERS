<entity ID="entPayeeAccount" sfwActive="True" sfwStatus="Review" sfwType="BusinessRule" sfwErrorTable="sgt_payee_account_error" sfwParentKey="payee_account_id" sfwParentKeyValue="icdoPayeeAccount.payee_account_id" sfwMainCDO="icdoPayeeAccount" sfwStatusColumn="status_value" sfwObjectID="busPayeeAccount" sfwTableName="sgt_payee_account" sfwView="False" sfwParentEntity="entExtendBase">
  <rules>
    <rule ID="IsACHDetailsInvalid" sfwMessageId="6421" sfwExpression="(this.iblnInvalidACHIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsACHInfoDeleted" sfwMessageId="5594" sfwExpression="(this.iblnACHInfoDeleteIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsACHInformationModified" sfwMessageId="5593" sfwExpression="(this.iblnACHInfoChangeIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsAddionalInterestPosted" sfwMessageId="5578" sfwExpression="(this.iblnAdditionalInterestIndicatorFlag == True)" sfwObjectBased="True" />
    <rule ID="IsAdditionalcontributionsReported" sfwMessageId="7545" sfwExpression="(this.iblnAddionalContributionsIndicatorFlag == True)" sfwObjectBased="True" />
    <rule ID="IsAdjustmentInfoChanged" sfwMessageId="5625" sfwExpression="(this.iblnAdjustmentChangeIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsAdjustmentInfodeleted" sfwMessageId="5626" sfwExpression="(this.iblnAdjustmentInfoDeleteIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsApplicationInReviewStatus" sfwMessageId="5579" sfwExpression="(this.iblnApplicationStatusIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsDeathNotifiedForMember" sfwMessageId="5573" sfwExpression="(this.iblnIsMembersDeathNotified == True)" sfwObjectBased="True" />
    <rule ID="IsDeathNotifiedForPayee" sfwMessageId="5574" sfwExpression="(this.iblnIsPayeesDeathNotified == True)" sfwObjectBased="True" />
    <rule ID="IsDeductionInfoadded" sfwMessageId="6467" sfwExpression="(this.iblnDedudtionInfoChangeIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsDisaNormalEffectiveDateBlank" sfwMessageId="7567" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;!((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 6) || &#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 7) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 28) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 30)) &amp;&amp; &#xA;((this.icdoPayeeAccount.workflow_age_conversion_flag == &quot;Y&quot;) || &#xA;(this.icdoPayeeAccount.workflow_rule_conversion_flag == &quot;Y&quot;)) &amp;&amp; &#xA;!(this.ibusPayeeAccountActiveStatus.icdoPayeeAccountStatus.status_value == &quot;TRDS&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id != 0) &amp;&amp; &#xA;(this.icdoPayeeAccount.disa_normal_effective_date == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="IsDisaNormalEffectiveDateNOTFirstofMonth" sfwMessageId="7569" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;!((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 6) || &#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 7) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 28) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 30)) &amp;&amp; &#xA;((this.icdoPayeeAccount.workflow_age_conversion_flag == &quot;Y&quot;) || &#xA;(this.icdoPayeeAccount.workflow_rule_conversion_flag == &quot;Y&quot;)) &amp;&amp; &#xA;!(this.ibusPayeeAccountActiveStatus.icdoPayeeAccountStatus.status_value == &quot;TRDS&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id != 0) &amp;&amp; &#xA;(this.IsDisabilityNormalEffectiveDateFirstofMonth() == False)" sfwObjectBased="True" />
    <rule ID="IsDisaNormalEffectiveDateValid" sfwMessageId="7568" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;!((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 6) || &#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 7) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 28) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 30)) &amp;&amp; &#xA;((this.icdoPayeeAccount.workflow_age_conversion_flag == &quot;Y&quot;) || &#xA;(this.icdoPayeeAccount.workflow_rule_conversion_flag == &quot;Y&quot;)) &amp;&amp; &#xA;!(this.ibusPayeeAccountActiveStatus.icdoPayeeAccountStatus.status_value == &quot;TRDS&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id != 0) &amp;&amp; &#xA;(this.IsDisabilityNormalEffectiveDateValid() == False)" sfwObjectBased="True" />
    <rule ID="IsDROApplicationNullified" sfwMessageId="5590" sfwExpression="(this.iblnNullifyIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsInValidRecertificationDate" sfwMessageId="5588" sfwExpression="(this.IsValidRecertificationDate() == False)" sfwObjectBased="True" />
    <rule ID="IsNetAmountInvalid" sfwMessageId="5591" sfwExpression="(this.idecBenefitAmount &lt; 0) || &#xA;(this.iblnInvalidNetAmountIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsNewAdjustmentRecordCreated" sfwMessageId="5641" sfwExpression="(this.iblnNewUnderPaymentIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsNewEmployementRecorded" sfwMessageId="5589" sfwExpression="(this.iblnNewEmploymentIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsNewPayeeAccountcreated" sfwMessageId="5648" sfwExpression="(this.iblnNewPayeeAccountIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsPayeeAccountInfoChanged" sfwMessageId="5592" sfwExpression="(this.iblnPayeeAccountInfoChangeIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsPayeeAddressNotExists" sfwMessageId="5647" sfwExpression="(this.iblnPayeeAddressNotExistsIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsPayeeDeceased" sfwMessageId="5580" sfwExpression="(this.iblnDeathNotificationIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsPayeeRestricted" sfwMessageId="5645" sfwExpression="(this.iblnPayeeRestrictedIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsRecertificationDateGreaterThanCaseRecertification" sfwMessageId="5586" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.recertification_date != DateTime.MinValue) &amp;&amp; &#xA;(this.icdoPayeeAccount.case_recertification_date != DateTime.MinValue) &amp;&amp; &#xA;(this.icdoPayeeAccount.recertification_date &gt; this.icdoPayeeAccount.case_recertification_date)" sfwObjectBased="True" />
    <rule ID="IsRecertificationDateNotFirstofMonth" sfwMessageId="5587" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.recertification_date != DateTime.MinValue) &amp;&amp; &#xA;(this.IsRecertificationDayNotFirstofMonth() == True)" sfwObjectBased="True" />
    <rule ID="IsRhicGreaterThan3rdParty" sfwMessageId="5527" sfwExpression="(this.iblnIsRHICGreaterThan3rdParty == True)" sfwObjectBased="True" />
    <rule ID="IsRolloverDetailInvlaid" sfwMessageId="6422" sfwExpression="(this.iblnInvalidRolloverIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsRolloverInformationChanged" sfwMessageId="5598" sfwExpression="(this.iblnRolloverInfoChangeIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsRolloverInformationdeleted" sfwMessageId="5599" sfwExpression="(this.iblnRolloverInfoDeleteIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsTaxWithHoldingInfoDeleted" sfwMessageId="5597" sfwExpression="(this.iblnTaxWithholdingInfoDeleteIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsTaxWithHoldingInfoModified" sfwMessageId="5596" sfwExpression="(this.iblnTaxwithholdingInfoChangeIndicator == True)" sfwObjectBased="True" />
    <rule ID="IsThereNoTaxWithholdingRecord" sfwMessageId="5595" sfwExpression="(this.iblnNoTaxWithholdingRecordIndicator == True)" sfwObjectBased="True" />
    <rule ID="VisibleIsRolloverEligible" sfwExpression="(this.IsRolloverEligible() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleAdjustmentsTab" sfwExpression="!(this.icdoPayeeAccount.benefit_account_type_value == &quot;RFND&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleConvertToNormalFind" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;!((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 6) || &#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 7) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 28) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 30)) &amp;&amp; &#xA;((this.icdoPayeeAccount.workflow_age_conversion_flag == &quot;Y&quot;) || &#xA;(this.icdoPayeeAccount.workflow_rule_conversion_flag == &quot;Y&quot;)) &amp;&amp; &#xA;!(this.ibusPayeeAccountActiveStatus.icdoPayeeAccountStatus.status_value == &quot;TRDS&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id != 0) &amp;&amp; &#xA;!(this.iblnNewCalculationNeeded == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleConvertToNormalNew" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;!((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 6) || &#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 7) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 28) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 30)) &amp;&amp; &#xA;((this.icdoPayeeAccount.workflow_age_conversion_flag == &quot;Y&quot;) || &#xA;(this.icdoPayeeAccount.workflow_rule_conversion_flag == &quot;Y&quot;)) &amp;&amp; &#xA;!(this.ibusPayeeAccountActiveStatus.icdoPayeeAccountStatus.status_value == &quot;TRDS&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id != 0) &amp;&amp; &#xA;(this.iblnNewCalculationNeeded == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleDisability" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id &gt; 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleDisabilityPre1991" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id &gt; 0) &amp;&amp; &#xA;(this.icdoPayeeAccount.is_pre_1991_disability_flag == &quot;Y&quot;) &amp;&amp; &#xA;!(this.ibusPayeeAccountActiveStatus.icdoPayeeAccountStatus.status_value == &quot;TRDS&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleDisabilityPre1991NotEditable" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id &gt; 0) &amp;&amp; &#xA;(this.icdoPayeeAccount.is_pre_1991_disability_flag == &quot;Y&quot;) &amp;&amp; &#xA;(this.ibusPayeeAccountActiveStatus.icdoPayeeAccountStatus.status_value == &quot;TRDS&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleDisaNormalEffectiveDate" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;!((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 6) || &#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 7) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 28) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 30)) &amp;&amp; &#xA;((this.icdoPayeeAccount.workflow_age_conversion_flag == &quot;Y&quot;) || &#xA;(this.icdoPayeeAccount.workflow_rule_conversion_flag == &quot;Y&quot;)) &amp;&amp; &#xA;!(this.ibusPayeeAccountActiveStatus.icdoPayeeAccountStatus.status_value == &quot;TRDS&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id != 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleDROApplicationID" sfwExpression="(this.icdoPayeeAccount.dro_application_id &gt; 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleEditableRecertificationDate" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id &gt; 0) &amp;&amp; &#xA;!(this.ibusPayeeAccountActiveStatus.icdoPayeeAccountStatus.status_value == &quot;TRDS&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForAcctBalanceDisability" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForAcctBalanceNonDisability" sfwExpression="!(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForDC" sfwExpression="(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 7 ||&#xA;RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 28 ||&#xA;RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 30) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccountActiveStatus.istrPayeeAccountStatusData2&quot;) == &quot;DCRC&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForJobService3rdPartyPayor" sfwExpression="(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 23) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccountActiveStatus.istrPayeeAccountStatusData2&quot;) == &quot;3RDP&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForNotDC" sfwExpression="!(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 7) || &#xA;((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 28 ||&#xA;RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 30) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccountActiveStatus.istrPayeeAccountStatusData2&quot;) == &quot;DCRC&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleRuleForOtherThanDCAndJobService3rdPartyPayor" sfwExpression="!(((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 7) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 28) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 30)) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccountActiveStatus.istrPayeeAccountStatusData2&quot;) == &quot;DCRC&quot;)) &amp;&amp; &#xA;!((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 23) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccountActiveStatus.istrPayeeAccountStatusData2&quot;) == &quot;3RDP&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleRuleForRecalculateBenefits" sfwExpression="((this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) || &#xA;(this.icdoPayeeAccount.benefit_account_type_value == &quot;RETR&quot;)) &amp;&amp; &#xA;(!(this.icdoPayeeAccount.benefit_option_value == &quot;AURD&quot;) &amp;&amp; &#xA;!(this.icdoPayeeAccount.benefit_option_value == &quot;LSRF&quot;) &amp;&amp; &#xA;!(this.icdoPayeeAccount.benefit_option_value == &quot;REFD&quot;) &amp;&amp; &#xA;!(this.icdoPayeeAccount.benefit_option_value == &quot;RGRD&quot;)) &amp;&amp; &#xA;(this.IsRecalculateButtonVisible() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForRecalculateBenefitsPreRetire" sfwExpression="(!(this.icdoPayeeAccount.benefit_option_value == &quot;AURD&quot;) &amp;&amp; &#xA;!(this.icdoPayeeAccount.benefit_option_value == &quot;LSRF&quot;) &amp;&amp; &#xA;!(this.icdoPayeeAccount.benefit_option_value == &quot;RGRD&quot;)) &amp;&amp; &#xA;(this.IsRecalculateButtonVisible() == True) &amp;&amp; &#xA;(this.icdoPayeeAccount.benefit_account_type_value == &quot;DETH&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIncludeInAdhocCheckBox" sfwExpression="((this.icdoPayeeAccount.benefit_account_type_value == &quot;PSTD&quot;) || &#xA;(this.icdoPayeeAccount.benefit_account_type_value == &quot;DETH&quot;)) &amp;&amp; &#xA;((this.icdoPayeeAccount.benefit_option_value == &quot;AURD&quot;) || &#xA;(this.icdoPayeeAccount.benefit_option_value == &quot;REFD&quot;) || &#xA;(this.icdoPayeeAccount.benefit_option_value == &quot;RGRD&quot;))" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsAchApplicable" sfwExpression="(this.IsAchApplicable() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsBenefitTypeRefundNewFedTax" sfwExpression="(this.IsTaxWithholdingExistForFedTaxRefund() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsBenefitTypeRefundNewStateTax" sfwExpression="(this.IsTaxWithholdingExistForStateTaxRefund() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsBenfitTypeRetirementApplicationID" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;RETR&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id &gt; 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsChangePayeeStatusAllowed" sfwExpression="(this.IsStatusUpdateAllowed() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsPLSOCheckedForNewFedTax" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusApplication.icdoBenefitApplication.plso_requested_flag&quot;) == &quot;Y&quot;) &amp;&amp; &#xA;!(this.IsTaxWithholdingExistForFedTaxPLSO() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsPLSOCheckedForNewStateTax" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusApplication.icdoBenefitApplication.plso_requested_flag&quot;) == &quot;Y&quot;) &amp;&amp; &#xA;!(this.IsTaxWithholdingExistForStateTaxPLSO() == True)" sfwObjectBased="True" />
    <rule ID="VisibleruleIsPopUpBenefitsAllowed" sfwExpression="(this.IsPopupBenefitsNotAllowed() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleIsRolloverApplicable" sfwExpression="(this.IsRolloverApplicable() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleMinimumGuaranteeAmount" sfwExpression="!(this.icdoPayeeAccount.account_relation_value == &quot;ALTP&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleMonthlyBenefitTax" sfwExpression="(this.IsMonthTaxButtonVisible() == True)" sfwObjectBased="True" />
    <rule ID="VisibleRuleNotEditableRecertificationDate" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DISA&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id &gt; 0) &amp;&amp; &#xA;(this.ibusPayeeAccountActiveStatus.icdoPayeeAccountStatus.status_value == &quot;TRDS&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRulePostRetirementID" sfwExpression="(this.icdoPayeeAccount.application_id &gt; 0) &amp;&amp; &#xA;(this.icdoPayeeAccount.benefit_account_type_value == &quot;PSTD&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRulePreRetirementDeathApplicationID" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;DETH&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id &gt; 0)" sfwObjectBased="True" />
    <rule ID="VisibleRuleRefundApplicationID" sfwExpression="(this.icdoPayeeAccount.benefit_account_type_value == &quot;RFND&quot;) &amp;&amp; &#xA;(this.icdoPayeeAccount.application_id &gt; 0)" sfwObjectBased="True" />
    <rule ID="VisiblwRuleTaxaabilityOfBenefitTabl" sfwExpression="(this.ibusApplication.IsBenefitOptionTransfers() == False)" sfwObjectBased="True" />
    <rule ID="IsJobServiceThirdParty" sfwExpression="(this.IsJobServiceThirdParty() == False)" sfwObjectBased="True" />
    <rule ID="VisibleRuleForRecalculateRefund" sfwRuleType="Validation" sfwExpression="(this.IsRecalculateButtonVisibleForRefund() == True) &amp;&amp; &#xD;&#xA;(this.icdoPayeeAccount.benefit_account_type_value == &quot;RFND&quot;)" sfwObjectBased="True" />
    <rule ID="IsRetroPaymentPaymentOptionSpecialCheckAndIncludeInAdHocChecked" sfwRuleType="Validation" sfwExpression="this.IsRetroPaymentWithSpecialCheckSetUpAndIncludeInAdhocChecked()==True" sfwMessageId="10314" sfwObjectBased="True" />
    <rule ID="VisibleRuleDoesMemberEnteredRolloverDetailExist" sfwRuleType="Validation" sfwExpression="DoesMemberEnteredRolloverDetailExist()" />
    <rule ID="IsApprovedAutoRefundAndGrossAmountCheck" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.iblnIsApprovedAutoRefundAndGrossAmountCheck == True" sfwMessageId="10458" />
    <rule ID="IsFedTaxRMDVisible" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.IsTaxWithholdingExistForFedTaxRMD()" />
    <rule ID="IsStateTaxRMDVisible" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.IsTaxWithholdingExistForStateTaxRMD()" />
    <rule ID="VisibleRuleChangeTaxRefund" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.IsTaxWithholdingRefundVisible()" />
    <rule ID="VisibleRuleChangeTaxRMD" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.IsTaxWithholdingRMDVisible()" />
    <rule ID="IsRefundPercentGreaterThanZero" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.icdoPayeeAccount.benefit_account_type_value == &quot;RFND&quot; || this.icdoPayeeAccount.benefit_option_value == &quot;REFD&quot; || &#xA;this.icdoPayeeAccount.benefit_option_value == &quot;RGRD&quot;" />
    <rule ID="VisibleRuleOldMonthlyBenefitTax" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.IsMonthTaxButtonVisible()) &amp;&amp; &#xA;this.IsDateLessThanFebOneTwentyTwo()" />
    <rule ID="VisibleRuleOldIsBenefitTypeRefundNewFedTax" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.IsTaxWithholdingExistForFedTaxRefund()) &amp;&amp; &#xA;this.IsDateLessThanFebOneTwentyTwo()" />
    <rule ID="VisibleRuleOldIsBenefitTypeRefundNewStateTax" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.IsTaxWithholdingExistForStateTaxRefund() == True) &amp;&amp;&#xA;this.IsDateLessThanFebOneTwentyTwo()" />
    <rule ID="IsMSSRefundPayeeAccount" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="!this.IsRefundPayeeAccount()" />
    <rule ID="IsRefundPayeeAccount" sfwRuleType="Validation" sfwObjectBased="False" sfwExpression="this.IsRefundPayeeAccount()" />
    <rule ID="VisibleRuleBasedOnPayeeAccountStatus" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.ibusPayeeAccountActiveStatus != null) &amp;&amp;&#xA;(this.ibusPayeeAccountActiveStatus.icdoPayeeAccountStatus != null) &amp;&amp;&#xA;!((this.ibusPayeeAccountActiveStatus.istrPayeeAccountStatusData2 == &quot;SPND&quot;) ||&#xA;(this.ibusPayeeAccountActiveStatus.istrPayeeAccountStatusData2 == &quot;RPCD&quot;) ||&#xA;(this.ibusPayeeAccountActiveStatus.istrPayeeAccountStatusData2 == &quot;TRMD&quot;) ||&#xA;(this.ibusPayeeAccountActiveStatus.istrPayeeAccountStatusData2 == &quot;CNLD&quot;))" />
    <rule ID="VisibleRuleForPSTDRecalculateBenefits" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(!(this.icdoPayeeAccount.benefit_option_value == &quot;AURD&quot;) &amp;&amp; &#xA;!(this.icdoPayeeAccount.benefit_option_value == &quot;LSRF&quot;) &amp;&amp; &#xA;!(this.icdoPayeeAccount.benefit_option_value == &quot;RGRD&quot;)) &amp;&amp; &#xA;(this.IsRecalculateButtonVisible() == True) &amp;&amp; &#xA;(this.icdoPayeeAccount.benefit_account_type_value == &quot;PSTD&quot;)" />
    <rule ID="VisibleRuleShowMSSTaxWithholdingPanel" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(!(((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 7) ||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 28)||&#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 30)) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccountActiveStatus.istrPayeeAccountStatusData2&quot;) == &quot;DCRC&quot;)) &amp;&amp; &#xA;!((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusPlan.icdoPlan.plan_id&quot;) == 23) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPayeeAccountActiveStatus.istrPayeeAccountStatusData2&quot;) == &quot;3RDP&quot;))) &#xA;&amp;&amp; (this.IsTaxWithholdingRefundVisible() || this.IsMonthTaxButtonVisible())" />
    <rule ID="VisibleRuleIsbenefitOptionSPEL" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.icdoPayeeAccount.benefit_option_value == &quot;SPEL&quot;)" />
    <rule ID="VisibleRuleDROApplication" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.CheckDroApplicationStatus() == true)" />
  </rules>
  <delete />
  <checklist />
  <initialload>
    <item ID="VisibleIsRolloverEligible" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsRolloverApplicable" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsAchApplicable" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsBenefitTypeRefundNewFedTax" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsPLSOCheckedForNewStateTax" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsBenfitTypeRetirementApplicationID" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsPLSOCheckedForNewFedTax" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsBenefitTypeRefundNewStateTax" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRulePreRetirementDeathApplicationID" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleRefundApplicationID" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleDisability" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleDROApplicationID" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleMonthlyBenefitTax" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleMinimumGuaranteeAmount" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleConvertToNormalNew" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleConvertToNormalFind" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleEditableRecertificationDate" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleNotEditableRecertificationDate" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleDisabilityPre1991" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleDisabilityPre1991NotEditable" sfwMode="All" sfwStatus="Active" />
    <item ID="IsACHDetailsInvalid" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRolloverDetailInvlaid" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsChangePayeeStatusAllowed" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleAdjustmentsTab" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRulePostRetirementID" sfwMode="All" sfwStatus="Active" />
    <item ID="VisiblwRuleTaxaabilityOfBenefitTabl" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForRecalculateBenefits" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForRecalculateBenefitsPreRetire" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleruleIsPopUpBenefitsAllowed" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForAcctBalanceDisability" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForAcctBalanceNonDisability" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleDisaNormalEffectiveDate" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIncludeInAdhocCheckBox" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForOtherThanDCAndJobService3rdPartyPayor" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForDC" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForJobService3rdPartyPayor" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForNotDC" sfwMode="All" sfwStatus="Active" />
    <item ID="IsJobServiceThirdParty" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForRecalculateRefund" sfwStatus="Active" sfwMode="All" />
    <item ID="VisibleRuleDoesMemberEnteredRolloverDetailExist" sfwStatus="Active" sfwMode="All" />
    <item ID="IsFedTaxRMDVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="IsStateTaxRMDVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleChangeTaxRefund" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleChangeTaxRMD" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRefundPercentGreaterThanZero" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleOldMonthlyBenefitTax" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleOldIsBenefitTypeRefundNewFedTax" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleOldIsBenefitTypeRefundNewStateTax" sfwMode="All" sfwStatus="Active" />
    <item ID="IsMSSRefundPayeeAccount" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRefundPayeeAccount" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleBasedOnPayeeAccountStatus" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleForPSTDRecalculateBenefits" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleShowMSSTaxWithholdingPanel" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleIsbenefitOptionSPEL" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibleRuleDROApplication" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror>
    <item ID="IsAdditionalcontributionsReported" sfwMode="All" sfwStatus="Active" />
    <item ID="IsApplicationInReviewStatus" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPayeeDeceased" sfwMode="All" sfwStatus="Active" />
    <item ID="IsNewEmployementRecorded" sfwMode="All" sfwStatus="Active" />
    <item ID="IsDROApplicationNullified" sfwMode="All" sfwStatus="Active" />
    <item ID="IsNetAmountInvalid" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPayeeAccountInfoChanged" sfwMode="All" sfwStatus="Active" />
    <item ID="IsACHInformationModified" sfwMode="All" sfwStatus="Active" />
    <item ID="IsACHInfoDeleted" sfwMode="All" sfwStatus="Active" />
    <item ID="IsTaxWithHoldingInfoModified" sfwMode="All" sfwStatus="Active" />
    <item ID="IsTaxWithHoldingInfoDeleted" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRolloverInformationChanged" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRolloverInformationdeleted" sfwMode="All" sfwStatus="Active" />
    <item ID="IsAdjustmentInfoChanged" sfwMode="All" sfwStatus="Active" />
    <item ID="IsAdjustmentInfodeleted" sfwMode="All" sfwStatus="Active" />
    <item ID="IsThereNoTaxWithholdingRecord" sfwMode="All" sfwStatus="Active" />
    <item ID="IsDeathNotifiedForMember" sfwMode="All" sfwStatus="Active" />
    <item ID="IsDeathNotifiedForPayee" sfwMode="All" sfwStatus="Active" />
    <item ID="IsNewAdjustmentRecordCreated" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPayeeRestricted" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPayeeAddressNotExists" sfwMode="All" sfwStatus="InActive" />
    <item ID="IsNewPayeeAccountcreated" sfwMode="All" sfwStatus="Active" />
    <item ID="IsAddionalInterestPosted" sfwMode="All" sfwStatus="Active" />
    <item ID="IsDeductionInfoadded" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRhicGreaterThan3rdParty" sfwMode="All" sfwStatus="Active" />
    <item ID="IsApprovedAutoRefundAndGrossAmountCheck" sfwMode="All" sfwStatus="Active" />
  </softerror>
  <harderror>
    <item ID="IsRecertificationDateGreaterThanCaseRecertification" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRecertificationDateNotFirstofMonth" sfwMode="All" sfwStatus="Active" />
    <item ID="IsInValidRecertificationDate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsDisaNormalEffectiveDateBlank" sfwMode="All" sfwStatus="Active" />
    <item ID="IsDisaNormalEffectiveDateValid" sfwMode="All" sfwStatus="Active" />
    <item ID="IsDisaNormalEffectiveDateNOTFirstofMonth" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRetroPaymentPaymentOptionSpecialCheckAndIncludeInAdHocChecked" sfwStatus="Active" sfwMode="All" />
  </harderror>
  <validatedelete />
  <groupslist />
  <updateablecdo />
  <commonproperties>
    <item ID="person_id" sfwObjectField="icdoPayeeAccount.payee_perslink_id" />
  </commonproperties>
  <expressionfields />
  <queries>
    <query ID="Lookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM  &#xD;&#xA;( &#xD;&#xA;SELECT A.*, B.BENEFIT_OPTION_ID AS B_BENEFIT_OPTION_ID,B.BENEFIT_OPTION_VALUE AS B_BENEFIT_OPTION_VALUE, B.RETIREMENT_DATE, &#xD;&#xA;     D.SUSPENSION_STATUS_REASON_VALUE AS SUSPENSION_STATUS_REASON_VALUE,D.TERMINATED_STATUS_REASON_VALUE TERMINATED_STATUS_REASON_VALUE, &#xD;&#xA;     D.STATUS_ID PAYEESTATUSID,D.STATUS_VALUE PAYEESTATUS, H.PERSON_ID AS PAYEEPERSLINKID,H.FIRST_NAME AS PAYEEFIRSTNAME,H.LAST_NAME AS PAYEELASTNAME,&#xD;&#xA;     B.MEMBER_PERSON_ID AS MEMBERPERSLINKID, &#xD;&#xA;     J.FIRST_NAME AS MEMBERFIRSTNAME, &#xD;&#xA;     J.LAST_NAME  AS  MEMBERLASTNAME, &#xD;&#xA;     B.PLAN_ID AS PLAN_ID ,&#xD;&#xA;     I.PLAN_NAME AS PLANNAME,&#xD;&#xA;     G.ORG_CODE PAYEEORGCODE, K.DATA2 AS KDATA2 ,L.DATA2 AS LDATA2, N.ORG_CODE RETIREMENTORGCODE &#xD;&#xA;FROM SGT_PAYEE_ACCOUNT A (NOLOCK) &#xD;&#xA;LEFT JOIN SGT_PERSON H (NOLOCK) ON A.PAYEE_PERSLINK_ID=H.PERSON_ID &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS D (NOLOCK) ON A.PAYEE_ACCOUNT_ID=D.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGS_CODE_VALUE K (NOLOCK) ON K.CODE_VALUE=D.STATUS_VALUE AND K.CODE_ID=2203 &#xD;&#xA;INNER JOIN SGT_BENEFIT_ACCOUNT BA (NOLOCK) ON A.BENEFIT_ACCOUNT_ID = BA.BENEFIT_ACCOUNT_ID &#xD;&#xA;LEFT JOIN SGS_CODE_VALUE L (NOLOCK) ON L.CODE_VALUE=A.BENEFIT_OPTION_VALUE AND L.CODE_ID=2216 &#xD;&#xA;LEFT JOIN SGT_ORGANIZATION G (NOLOCK) ON A.PAYEE_ORG_ID=G.ORG_ID &#xD;&#xA;LEFT JOIN SGT_ORGANIZATION N (NOLOCK) ON BA.RETIREMENT_ORG_ID=N.ORG_ID &#xD;&#xA;LEFT JOIN SGT_BENEFIT_APPLICATION B (NOLOCK) ON A.APPLICATION_ID  = B.BENEFIT_APPLICATION_ID &#xD;&#xA;LEFT JOIN SGT_PERSON J (NOLOCK) ON B.MEMBER_PERSON_ID=J.PERSON_ID &#xD;&#xA;LEFT JOIN SGT_PLAN I (NOLOCK) ON B.PLAN_ID=I.PLAN_ID &#xD;&#xA;WHERE PAYEE_ACCOUNT_STATUS_ID = &#xD;&#xA;    (&#xD;&#xA;    SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (NOLOCK)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = A.PAYEE_ACCOUNT_ID&#xD;&#xA;    --AND PAS1.STATUS_EFFECTIVE_DATE &lt;= &#xD;&#xA;    -- (SELECT DATEADD(M,1,MAX(EFFECTIVE_DATE))&#xD;&#xA;    --  FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA;    --  WHERE SCHEDULE_TYPE_VALUE ='MTLY'  &#xD;&#xA;    --  AND STATUS_VALUE = 'PRCD')&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,&#xD;&#xA;      PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;AND A.APPLICATION_ID IS NOT NULL&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT A.*, B.BENEFIT_OPTION_ID AS B_BENEFIT_OPTION_ID,B.BENEFIT_OPTION_VALUE AS B_BENEFIT_OPTION_VALUE, B.RETIREMENT_DATE, &#xD;&#xA;     D.SUSPENSION_STATUS_REASON_VALUE AS SUSPENSION_STATUS_REASON_VALUE,D.TERMINATED_STATUS_REASON_VALUE TERMINATED_STATUS_REASON_VALUE, &#xD;&#xA;     D.STATUS_ID PAYEESTATUSID,D.STATUS_VALUE PAYEESTATUS, H.PERSON_ID AS PAYEEPERSLINKID,H.FIRST_NAME AS PAYEEFIRSTNAME,H.LAST_NAME AS PAYEELASTNAME,&#xD;&#xA;     DROA.MEMBER_PERSLINK_ID AS MEMBERPERSLINKID, &#xD;&#xA;     DROJ.FIRST_NAME AS MEMBERFIRSTNAME, &#xD;&#xA;     DROJ.LAST_NAME AS  MEMBERLASTNAME, &#xD;&#xA;     DROA.PLAN_ID AS PLAN_ID ,&#xD;&#xA;     DROI.PLAN_NAME AS PLANNAME,&#xD;&#xA;     G.ORG_CODE PAYEEORGCODE, K.DATA2 AS KDATA2 ,L.DATA2 AS LDATA2, N.ORG_CODE RETIREMENTORGCODE &#xD;&#xA;FROM SGT_PAYEE_ACCOUNT A (NOLOCK) &#xD;&#xA;LEFT JOIN SGT_PERSON H (NOLOCK) ON A.PAYEE_PERSLINK_ID=H.PERSON_ID &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS D (NOLOCK) ON A.PAYEE_ACCOUNT_ID=D.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGS_CODE_VALUE K (NOLOCK) ON K.CODE_VALUE=D.STATUS_VALUE AND K.CODE_ID=2203 &#xD;&#xA;INNER JOIN SGT_BENEFIT_ACCOUNT BA (NOLOCK) ON A.BENEFIT_ACCOUNT_ID = BA.BENEFIT_ACCOUNT_ID &#xD;&#xA;LEFT JOIN SGS_CODE_VALUE L (NOLOCK) ON L.CODE_VALUE=A.BENEFIT_OPTION_VALUE AND L.CODE_ID=2216 &#xD;&#xA;LEFT JOIN SGT_ORGANIZATION G (NOLOCK) ON A.PAYEE_ORG_ID=G.ORG_ID &#xD;&#xA;LEFT JOIN SGT_ORGANIZATION N (NOLOCK) ON BA.RETIREMENT_ORG_ID=N.ORG_ID &#xD;&#xA;LEFT JOIN SGT_BENEFIT_APPLICATION B (NOLOCK) ON A.APPLICATION_ID  = B.BENEFIT_APPLICATION_ID &#xD;&#xA;LEFT JOIN DBO.SGT_BENEFIT_DRO_APPLICATION DROA (NOLOCK) ON A.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA;LEFT JOIN SGT_PERSON DROJ (NOLOCK) ON DROJ.PERSON_ID = DROA.MEMBER_PERSLINK_ID&#xD;&#xA;LEFT JOIN SGT_PLAN DROI (NOLOCK) ON DROA.PLAN_ID=DROI.PLAN_ID &#xD;&#xA;WHERE PAYEE_ACCOUNT_STATUS_ID =  &#xD;&#xA;   (&#xD;&#xA;    SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (NOLOCK)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = A.PAYEE_ACCOUNT_ID&#xD;&#xA;    --AND PAS1.STATUS_EFFECTIVE_DATE &lt;= &#xD;&#xA;    -- (SELECT DATEADD(M,1,MAX(EFFECTIVE_DATE))&#xD;&#xA;    --  FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA;    --  WHERE SCHEDULE_TYPE_VALUE ='MTLY'  &#xD;&#xA;    --  AND STATUS_VALUE = 'PRCD')&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,&#xD;&#xA;      PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;AND A.DRO_APPLICATION_ID IS NOT NULL&#xD;&#xA;) AS TEMP ">
      <parameters />
    </query>
    <query ID="LookupSubQueryAchDetail" sfwQueryType="SubSelectQuery" sfwSql="select *&#xD;&#xA;from SGT_PAYEE_ACCOUNT_ACH_DETAIL E &#xD;&#xA;inner join SGT_ORGANIZATION F on E.BANK_ORG_ID=F.ORG_ID&#xD;&#xA;where PAYEE_ACCOUNT_ID=E.PAYEE_ACCOUNT_ID ">
      <parameters />
    </query>
    <query ID="LookupSubQueryTaxWithHolding" sfwQueryType="SubSelectQuery" sfwSql="select *&#xD;&#xA;from  SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING M &#xD;&#xA;where  PAYEE_ACCOUNT_ID=M.PAYEE_ACCOUNT_ID ">
      <parameters />
    </query>
    <query ID="LoadPayeeAccountPaymentItemType" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select * from sgt_payee_account_payment_item_type a inner join sgt_payment_item_type b&#xD;&#xA;on a.payment_item_type_id=b.payment_item_type_id where payee_account_id=@payeeaccount_id">
      <parameters>
        <parameter ID="@payeeaccount_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountTaxWithHolding" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select * from SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING a inner join SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING_DETAIL b&#xD;&#xA;on a.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID=b.PAYEE_ACCOUNT_TAX_WITHHOLDING_ID where a.PAYEE_ACCOUNT_ID=@payeeaccountid">
      <parameters>
        <parameter ID="@payeeaccountid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountUpdateTaxRateBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA; *&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV (nolock)&#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; LEFT JOIN SGT_PERSON P&#xD;&#xA;  ON P.PERSON_ID=PA.PAYEE_PERSLINK_ID&#xD;&#xA; LEFT JOIN SGT_ORGANIZATION O&#xD;&#xA;  ON O.ORG_ID=PA.PAYEE_ORG_ID&#xD;&#xA;WHERE CV.DATA2 NOT IN ('CNLD','TRMD')  &#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA; AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA; AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND')&#xD;&#xA; ">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="PayeeAttains18BatchLetters" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PAYEE_ACCOUNT PE&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PES &#xD;&#xA; ON PES.PAYEE_ACCOUNT_ID=PE.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON PER &#xD;&#xA; ON PER.PERSON_ID=PE.PAYEE_PERSLINK_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA; ON PES.STATUS_ID = CV.CODE_ID AND PES.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;WHERE CV.DATA2 in ('APVD', 'RECV') AND&#xD;&#xA; YEAR(DATEADD(yy,18,PER.DATE_OF_BIRTH))=YEAR(DATEADD(mm,02,GETDATE())) AND&#xD;&#xA; MONTH(DATEADD(yy,18,PER.DATE_OF_BIRTH))=MONTH(DATEADD(mm,02,GETDATE())) AND&#xD;&#xA; PES.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PE.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @STATUSEFFECTIVEDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;">
      <parameters>
        <parameter ID="@STATUSEFFECTIVEDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetPayeeAccountForDisability" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select payst.status_value as Payment_status_value,  sp.plan_id as iintPlanId, * from sgt_payee_account (nolock) pay&#xD;&#xA;inner join sgt_benefit_application (nolock) app on app.benefit_application_id = pay.application_id &#xD;&#xA;inner join sgt_plan sp on sp.plan_id = app.plan_id&#xD;&#xA;left outer join sgt_payee_account_status (nolock) payst on payst.payee_account_id = pay.payee_account_id &#xD;&#xA;where  app.member_person_id = pay.payee_perslink_id and&#xD;&#xA;app.benefit_account_type_value = 'DISA' &#xD;&#xA;and pay.payee_perslink_id = @perosnId&#xD;&#xA;order by Payst.payee_account_status_id desc">
      <parameters>
        <parameter ID="@perosnId" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="MedicalConsultantLetterBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PAY.*,PER1.* FROM SGT_PAYEE_ACCOUNT PAY WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_BENEFIT_CALCULATION CAL WITH(NOLOCK) ON PAY.CALCULATION_ID=CAL.BENEFIT_CALCULATION_ID&#xD;&#xA;INNER JOIN SGT_PERSON PER1 WITH(NOLOCK) ON PER1.PERSON_ID=PAY.PAYEE_PERSLINK_ID&#xD;&#xA;INNER JOIN SGT_BENEFIT_APPLICATION APP WITH(NOLOCK) ON CAL.BENEFIT_APPLICATION_ID=APP.BENEFIT_APPLICATION_ID AND PAY.APPLICATION_ID= CAL.BENEFIT_APPLICATION_ID &#xD;&#xA;INNER JOIN SGT_BENEFIT_CALCULATION_PERSON_ACCOUNT CALACC WITH(NOLOCK) ON CALACC.BENEFIT_CALCULATION_ID=CAL.BENEFIT_CALCULATION_ID &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PERACC WITH(NOLOCK) ON PERACC.PERSON_ACCOUNT_ID=CALACC.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=PERACC.PERSON_ID &#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON PERACC.PLAN_ID= PLN.PLAN_ID &#xD;&#xA;INNER JOIN&#xD;&#xA; (SELECT PAYEE_ACCOUNT_ID FROM&#xD;&#xA;  (SELECT PAY.PAYEE_ACCOUNT_ID,&#xD;&#xA;   (SELECT TOP 1 STATUS_VALUE FROM SGT_PAYEE_ACCOUNT_STATUS PAYSTAT WITH(NOLOCK) &#xD;&#xA;    WHERE PAYSTAT.PAYEE_ACCOUNT_ID=PAY.PAYEE_ACCOUNT_ID ORDER BY 1 DESC) AS STATUS_VALUE,&#xD;&#xA;   (SELECT TOP 1 STATUS_EFFECTIVE_DATE FROM SGT_PAYEE_ACCOUNT_STATUS PAYSTAT WITH(NOLOCK)&#xD;&#xA;    WHERE PAYSTAT.PAYEE_ACCOUNT_ID=PAY.PAYEE_ACCOUNT_ID ORDER BY 1 DESC) AS STATUS_EFFECTIVE_DATE&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT PAY WHERE BENEFIT_ACCOUNT_TYPE_VALUE='DISA' AND ISNULL(PAY.IS_PRE_1991_DISABILITY_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  ) AS INNERTAB&#xD;&#xA; WHERE INNERTAB.STATUS_VALUE='TRDS' AND DATEDIFF(&quot;M&quot;,STATUS_EFFECTIVE_DATE,@FROMDATE) &gt;= @MONT&#xD;&#xA; ) AS OUTERTAB&#xD;&#xA;ON OUTERTAB.PAYEE_ACCOUNT_ID=CAL.DISABILITY_PAYEE_ACCOUNT_ID AND PAY.BENEFIT_ACCOUNT_TYPE_VALUE='RETR'&#xD;&#xA;WHERE ISNULL(IS_MEDICAL_BATCH_LETTER_SENT_FLAG,'N') &lt;&gt; 'Y' AND PLN.PLAN_ID &lt;&gt;(6)&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PAY.*,PER1.* FROM SGT_PAYEE_ACCOUNT PAY WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON PER1 WITH(NOLOCK) ON PER1.PERSON_ID=PAY.PAYEE_PERSLINK_ID&#xD;&#xA;INNER JOIN &#xD;&#xA; (SELECT PAYEE_ACCOUNT_ID,APPLICATION_ID,CALCULATION_ID FROM&#xD;&#xA;  (SELECT PAY.PAYEE_ACCOUNT_ID,(SELECT TOP 1 STATUS_VALUE FROM SGT_PAYEE_ACCOUNT_STATUS PAYSTAT WITH(NOLOCK)&#xD;&#xA;   WHERE PAYSTAT.PAYEE_ACCOUNT_ID=PAY.PAYEE_ACCOUNT_ID ORDER BY 1 DESC) AS STATUS_VALUE,&#xD;&#xA;  (SELECT TOP 1 STATUS_EFFECTIVE_DATE FROM SGT_PAYEE_ACCOUNT_STATUS PAYSTAT WITH(NOLOCK)&#xD;&#xA;   WHERE PAYSTAT.PAYEE_ACCOUNT_ID=PAY.PAYEE_ACCOUNT_ID ORDER BY 1 DESC) AS STATUS_EFFECTIVE_DATE,&#xD;&#xA;  CALCULATION_ID,APPLICATION_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PAY WHERE BENEFIT_ACCOUNT_TYPE_VALUE='DISA' AND ISNULL(PAY.IS_PRE_1991_DISABILITY_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  ) AS INNERTAB&#xD;&#xA; WHERE INNERTAB.STATUS_VALUE='TRDS' AND DATEDIFF(&quot;M&quot;,STATUS_EFFECTIVE_DATE,@FROMDATE) &gt;= @MONT&#xD;&#xA; ) AS OUTERTAB&#xD;&#xA;ON OUTERTAB.PAYEE_ACCOUNT_ID &lt;&gt; PAY.PAYEE_ACCOUNT_ID AND ISNULL(PAY.CALCULATION_ID,0)=ISNULL(OUTERTAB.CALCULATION_ID,0) AND &#xD;&#xA;PAY.APPLICATION_ID=OUTERTAB.APPLICATION_ID AND PAY.BENEFIT_ACCOUNT_TYPE_VALUE='RETR'&#xD;&#xA;WHERE ISNULL(IS_MEDICAL_BATCH_LETTER_SENT_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PAY.*,PER1.* FROM&#xD;&#xA;SGT_PAYEE_ACCOUNT PAY WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON PER1 WITH(NOLOCK) ON PER1.PERSON_ID=PAY.PAYEE_PERSLINK_ID&#xD;&#xA;INNER JOIN&#xD;&#xA; (SELECT PAYEE_ACCOUNT_ID,PAYEE_PERSLINK_ID FROM&#xD;&#xA;  (SELECT PAY.PAYEE_ACCOUNT_ID,(SELECT TOP 1 STATUS_VALUE FROM SGT_PAYEE_ACCOUNT_STATUS PAYSTAT WITH(NOLOCK)&#xD;&#xA;   WHERE PAYSTAT.PAYEE_ACCOUNT_ID=PAY.PAYEE_ACCOUNT_ID ORDER BY 1 DESC) AS STATUS_VALUE,&#xD;&#xA;  (SELECT TOP 1 STATUS_EFFECTIVE_DATE FROM SGT_PAYEE_ACCOUNT_STATUS PAYSTAT WITH(NOLOCK)&#xD;&#xA;   WHERE PAYSTAT.PAYEE_ACCOUNT_ID=PAY.PAYEE_ACCOUNT_ID ORDER BY 1 DESC) AS STATUS_EFFECTIVE_DATE, PAYEE_PERSLINK_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PAY WHERE BENEFIT_ACCOUNT_TYPE_VALUE='DISA' AND ISNULL(PAY.IS_PRE_1991_DISABILITY_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  ) AS INNERTAB&#xD;&#xA; WHERE INNERTAB.STATUS_VALUE='TRDS'&#xD;&#xA; ) AS OUTERTAB&#xD;&#xA;ON OUTERTAB.PAYEE_ACCOUNT_ID = PAY.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_DEATH_NOTIFICATION DEAT WITH(NOLOCK) ON DEAT.PERSON_ID=OUTERTAB.PAYEE_PERSLINK_ID AND ACTION_STATUS_VALUE='COMP'&#xD;&#xA;WHERE ISNULL(IS_MEDICAL_BATCH_LETTER_SENT_FLAG,'N')&lt;&gt; 'Y'">
      <parameters>
        <parameter ID="@FROMDATE" sfwDataType="DateTime" />
        <parameter ID="@MONT" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPaymentDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT YEAR(PAYMENT_DATE ) AS PAYMENT_YEAR,PHH.PAYEE_ACCOUNT_ID,&#xA;CAST(CAST(YEAR(PAYMENT_DATE) AS VARCHAR(4)) + '/' + '01' + '/01' AS DATETIME) AS PAYMENTYEARSTARTDATE,&#xA;DATEADD(DD,-1,DATEADD(YY,1,CAST(CAST(YEAR(PAYMENT_DATE) AS VARCHAR(4)) + '/' + '01' + '/01' AS DATETIME))) AS PAYMENTYEARENDDATE,&#xA;-- SUM(CASE WHEN CHECK_GROUP_CODE_VALUE = 'GRSS' &#xA;--   THEN AMOUNT ELSE 0 END) AS GROSS_AMOUNT,&#xA;SUM(CASE WHEN &#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xA;    AND VENDOR_FLAG= 'N'  &#xA;    AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xA;    AND REISSUE_ITEMS_FLAG = 'N'&#xA;    AND PHH.STATUS_VALUE &lt;&gt; 'CNLD' --Added 10268&#xA;    AND PHD.PAYMENT_ITEM_TYPE_ID NOT IN (46,106,202,210,211,212,213)  --PIR 17401&#xA;   THEN &#xA;    PHD.AMOUNT &#xA;   ELSE 0 END&#xA;   )  AS GROSS_AMOUNT,&#xA; SUM(CASE WHEN CHECK_GROUP_CODE_VALUE = 'DEDT'  &#xA; AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'RRED'&#xA; AND PHH.STATUS_VALUE &lt;&gt; 'CNLD' --Added 10268 &#xA;   THEN AMOUNT ELSE 0 END) AS DEDUCTION_AMOUNT,&#xA;-- SUM(CASE WHEN TAXABLE_ITEM_FLAG = 'Y' &#xA;--   THEN AMOUNT ELSE 0 END) AS TAXABLE_AMOUNT,&#xA; SUM(CASE WHEN &#xA;     PIT.ITEM_TYPE_DIRECTION = 1 &#xA;     AND PAYMENT_1099R_FLAG = 'Y' &#xA;     AND VENDOR_FLAG= 'N'  &#xA;     AND TAXABLE_ITEM_FLAG = 'Y'&#xA;     AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xA;     AND REISSUE_ITEMS_FLAG = 'N'&#xA;     AND PHH.STATUS_VALUE &lt;&gt; 'CNLD' --Added 10268&#xA;    THEN &#xA;     PHD.AMOUNT &#xA;    ELSE 0 END&#xA;    )  AS TAXABLE_AMOUNT,&#xA;    SUM(CASE WHEN (ITEM_TYPE_DIRECTION = 1 &#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xA;    AND VENDOR_FLAG= 'N'  &#xA;     AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xA;    AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xA;    AND REISSUE_ITEMS_FLAG = 'N'&#xA;    AND PHH.STATUS_VALUE &lt;&gt; 'CNLD' --Added 10268&#xA;    )&#xA;   THEN AMOUNT ELSE 0 END) AS NONTAXABLE_AMOUNT,&#xA; SUM(CASE WHEN ( PHH.STATUS_VALUE&lt;&gt;'CNLD' AND PIT.REISSUE_ITEMS_FLAG &lt;&gt; 'Y') -- added condition for reissue -- Backlog PIR 10976&#xA;     THEN  ITEM_TYPE_DIRECTION * AMOUNT ELSE 0 END )  AS NET_AMOUNT, --Added 10268&#xA; SUM(CASE WHEN &#xA;     PIT.ITEM_TYPE_DIRECTION = 1 &#xA;     AND PAYMENT_1099R_FLAG = 'Y' &#xA;     AND VENDOR_FLAG= 'N'  &#xA;     AND TAXABLE_ITEM_FLAG = 'Y'&#xA;     AND ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xA;     AND REISSUE_ITEMS_FLAG = 'N'&#xA;     AND DIST.PAYMENT_HISTORY_HEADER_ID IS NULL&#xA;     AND PHH.STATUS_VALUE &lt;&gt; 'CNLD' --Added 10268&#xA;    THEN &#xA;     PHD.AMOUNT &#xA;    ELSE 0 END&#xA;    )  AS TAXABLE_ROLLOVER_AMOUNT,&#xA;    SUM(CASE WHEN (ITEM_TYPE_DIRECTION = 1 &#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xA;    AND VENDOR_FLAG= 'N'  &#xA;     AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xA;    AND ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xA;    AND REISSUE_ITEMS_FLAG = 'N'&#xA;    AND DIST.PAYMENT_HISTORY_HEADER_ID IS NULL&#xA;    AND PHH.STATUS_VALUE &lt;&gt; 'CNLD') --Added 10268&#xA;   THEN AMOUNT ELSE 0 END) AS NONTAXABLE_ROLLOVER_AMOUNT,&#xA;&#xA;   --PIR 25699 start&#xA;   SUM(CASE WHEN &#xA;    VENDOR_ORG_ID= 2984 &#xA;    AND PHH.STATUS_VALUE &lt;&gt; 'CNLD'&#xA;    AND PHD.PAYMENT_ITEM_TYPE_ID IN (11,22,30,41,47,53,62,93,100,102,104,118,122,128,132,138,142,187,215,219,227)&#xA;   THEN &#xA;    PHD.AMOUNT &#xA;   ELSE 0 END&#xA;   )  AS idecFedTaxAmount,&#xA;    SUM(CASE WHEN &#xA;    VENDOR_ORG_ID= 2985 &#xA;&#x9;AND PHH.STATUS_VALUE &lt;&gt; 'CNLD'&#xA;    AND PHD.PAYMENT_ITEM_TYPE_ID IN (12,23,31,42,48,54,63,94,101,103,105,119,123,129,133,139,143,189,216,220,228)&#xA;&#x9;THEN &#xA;    PHD.AMOUNT &#xA;   ELSE 0 END&#xA;   )  AS idecNDStateTaxAmount&#xA;   --end&#xA;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH(NOLOCK)&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD(NOLOCK) &#xA;   ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT(NOLOCK) &#xA;   ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xA;  LEFT JOIN (SELECT * FROM SGT_PAYMENT_HISTORY_DISTRIBUTION DIST &#xA;     WHERE DIST.DISTRIBUTION_STATUS_VALUE IN ('ARSD','RRSD','CVAC','RRRS')) DIST&#xA;   ON DIST.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xA; WHERE PHH.PAYEE_ACCOUNT_ID = @PAYEEACCOUNTID &#xA;  AND PHH.PAYMENT_DATE &lt;= @LASTPAYMENTDATE&#xA;  --AND PHH.STATUS_VALUE &lt;&gt; 'CNLD' --PROD PIR 4433&#xA; GROUP BY YEAR(PAYMENT_DATE ),PHH.PAYEE_ACCOUNT_ID&#xA; ORDER BY YEAR(PAYMENT_DATE ) DESC">
      <parameters>
        <parameter ID="@PAYEEACCOUNTID" sfwDataType="int" />
        <parameter ID="@LASTPAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadErrorReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LASTPAYMENTDATE DATETIME&#xD;&#xA;SELECT @LASTPAYMENTDATE  = MAX(PAYMENT_DATE) &#xD;&#xA; FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK)  &#xD;&#xA;  WHERE SCHEDULE_TYPE_VALUE = 'MTLY' AND STATUS_VALUE = 'PRCD'&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; PA.payee_account_id,per.first_name,per.last_name,payee_perslink_id,&#xD;&#xA; CV3.DESCRIPTION AS payeesatus,PAS.status_effective_date, CV3.DATA2 as Payee_status_value,&#xD;&#xA; case when CV3.DATA2 = 'CNLD' then CV5.DESCRIPTION else CV4.DESCRIPTION end as messages&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK) &#xD;&#xA;  ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV1.CODE_ID &#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV1.CODE_VALUE&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK) &#xD;&#xA;  ON PA.BENEFIT_ACCOUNT_SUB_TYPE_ID = CV2.CODE_ID &#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV3 WITH(NOLOCK)&#xD;&#xA;  ON PAS.STATUS_ID= CV3.CODE_ID AND PAS.STATUS_VALUE = CV3.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;  ON PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV31 WITH(NOLOCK)&#xD;&#xA;  ON PAS1.STATUS_ID= CV31.CODE_ID AND PAS1.STATUS_VALUE = CV31.CODE_VALUE&#xD;&#xA; lEFT JOIN SGS_CODE_VALUE CV4 WITH(NOLOCK)&#xD;&#xA;  ON PAS.SUSPENSION_STATUS_REASON_ID= CV4.CODE_ID AND PAS.SUSPENSION_STATUS_REASON_VALUE = CV4.CODE_VALUE&#xD;&#xA; LEFT JOIN SGS_CODE_VALUE CV5 WITH(NOLOCK)&#xD;&#xA;  ON PAS.TERMINATED_STATUS_REASON_ID= CV5.CODE_ID AND PAS.TERMINATED_STATUS_REASON_VALUE = CV5.CODE_VALUE&#xD;&#xA; LEFT JOIN SGT_PERSON PER WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID=PER.PERSON_ID&#xD;&#xA;WHERE (CV3.DATA2 = 'CNLD' or CV3.DATA2 = 'SPND')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT_STATUS PAS11 (NOLOCK)&#xD;&#xA;  WHERE PAS11.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  AND PAS11.STATUS_EFFECTIVE_DATE &lt;= @LASTPAYMENTDATE&#xD;&#xA;  ORDER BY PAS11.STATUS_EFFECTIVE_DATE DESC,PAS11.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA; )&#xD;&#xA; AND (CV31.DATA2 = 'CNLD' or CV31.DATA2 = 'SPND')&#xD;&#xA; AND PAS1.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT_STATUS PAS11 (NOLOCK)&#xD;&#xA;  WHERE PAS11.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  AND PAS11.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  ORDER BY PAS11.STATUS_EFFECTIVE_DATE DESC,PAS11.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA; )&#xD;&#xA;&#xD;&#xA;union all&#xD;&#xA;&#xD;&#xA;SELECT &#xD;&#xA; PA.payee_account_id,per.first_name,per.last_name,payee_perslink_id,&#xD;&#xA; CV3.DESCRIPTION AS payeesatus,PAS.status_effective_date, CV3.DATA2 as Payee_status_value,&#xD;&#xA; isnull(MSG.DISPLAY_MESSAGE,'') as messages&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)    &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK) &#xD;&#xA;  ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV1.CODE_ID &#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV1.CODE_VALUE&#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK) &#xD;&#xA;  ON PA.BENEFIT_ACCOUNT_SUB_TYPE_ID = CV2.CODE_ID &#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV3 WITH(NOLOCK)&#xD;&#xA;  ON PAS.STATUS_ID= CV3.CODE_ID AND PAS.STATUS_VALUE = CV3.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_ERROR PAE WITH(NOLOCK)  &#xD;&#xA;  ON PAE.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; LEFT JOIN SGS_MESSAGES MSG WITH(NOLOCK) ON PAE.MESSAGE_ID=MSG.MESSAGE_ID&#xD;&#xA; LEFT JOIN SGT_PERSON PER WITH(NOLOCK) ON PA.PAYEE_PERSLINK_ID=PER.PERSON_ID&#xD;&#xA;WHERE CV3.DATA2 = 'REVW'&#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA; (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (NOLOCK)&#xD;&#xA;  WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA; )&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountsForRecalculatingTax" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @PAYMENT_ITEM_TYPE_ID INT&#xD;&#xA;SELECT @PAYMENT_ITEM_TYPE_ID = PAYMENT_ITEM_TYPE_ID FROM &#xD;&#xA;SGT_PAYMENT_ITEM_TYPE  WHERE ITEM_TYPE_CODE = 'ITEM37'&#xD;&#xA;&#xD;&#xA;DECLARE @PAYMENT_ITEM_TYPE_ID_NON_TAXABLE INT&#xD;&#xA;SELECT @PAYMENT_ITEM_TYPE_ID_NON_TAXABLE = PAYMENT_ITEM_TYPE_ID FROM &#xD;&#xA;SGT_PAYMENT_ITEM_TYPE  WHERE ITEM_TYPE_CODE = 'ITEM38'&#xD;&#xA;&#xD;&#xA;DECLARE @EFFECTIVE_DATE DATETIME&#xD;&#xA;DECLARE @SCHEDULE_ID INT&#xD;&#xA;SELECT @EFFECTIVE_DATE = EFFECTIVE_DATE,@SCHEDULE_ID = PAYMENT_SCHEDULE_ID FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_DATE = @PAYMENTDATE &#xD;&#xA;&#xD;&#xA;DECLARE @NEXTPAYMENTDATE DATETIME&#xD;&#xA;SET @NEXTPAYMENTDATE = DATEADD(M,1,@PAYMENTDATE)&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID('TEMP_GRADUATED_BENEFIT_PAYEE_ACCOUNT') IS NULL&#xD;&#xA; CREATE TABLE TEMP_GRADUATED_BENEFIT_PAYEE_ACCOUNT (PAYEE_ACCOUNT_ID INT,PAYMENT_ITEM_TYPE_ID INT,INDICATOR VARCHAR(1))&#xD;&#xA;   &#xD;&#xA;SELECT * FROM (&#xD;&#xA;SELECT distinct papit.payee_Account_id,INDICATOR&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT  &#xD;&#xA;INNER JOIN  &#xD;&#xA;(&#xD;&#xA; SELECT PHH.PAYEE_ACCOUNT_ID, &#xD;&#xA;  PHD.PAYMENT_ITEM_TYPE_ID,(CASE WHEN PAYEE.NONTAXABLE_BEGINNING_BALANCE - SUM(PHD.AMOUNT) = 0 THEN 'Y' ELSE 'N' END) AS INDICATOR &#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD  &#xD;&#xA;    ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT  &#xD;&#xA;    ON PHD.PAYMENT_ITEM_TYPE_ID =  PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN  &#xD;&#xA;  (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID , PA.NONTAXABLE_BEGINNING_BALANCE&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS  &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  WHERE (CV.DATA2 &lt;&gt; 'CNLD' AND CV.DATA2 &lt;&gt; 'TRMD' )  &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND ISNULL(EXCLUSION_METHOD_VALUE,'') &lt;&gt; 'SHMT' -- EXCLUDE MEMBERS WITH SAFE HARBOR METHOD ,  &#xD;&#xA;  ) AS PAYEE&#xD;&#xA;  ON PAYEE.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID &#xD;&#xA; WHERE PHH.PAYMENT_DATE &lt;= @EFFECTIVE_DATE&#xD;&#xA;  AND PIT.ITEM_TYPE_CODE = 'ITEM38' -- NON  TAXABLE AMOUNT &#xD;&#xA;  AND PHH.STATUS_VALUE &lt;&gt; 'CNLD'  &#xD;&#xA; GROUP BY PHH.PAYEE_ACCOUNT_ID,PHD.PAYMENT_ITEM_TYPE_ID,PAYEE.NONTAXABLE_BEGINNING_BALANCE&#xD;&#xA; HAVING (PAYEE.NONTAXABLE_BEGINNING_BALANCE - SUM(PHD.AMOUNT))  &lt; &#xD;&#xA;   SUM(CASE WHEN PHH.PAYMENT_DATE = @EFFECTIVE_DATE THEN PHD.AMOUNT ELSE 0 END)  &#xD;&#xA;   &#xD;&#xA; UNION&#xD;&#xA; &#xD;&#xA; SELECT   PAPIT.PAYEE_ACCOUNT_ID,PAPIT.PAYMENT_ITEM_TYPE_ID,'N' AS INDICATOR &#xD;&#xA; FROM   SGT_BENEFIT_ACCOUNT BENACCT&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;    ON PA.BENEFIT_ACCOUNT_ID = BENACCT.BENEFIT_ACCOUNT_ID AND BENACCT.SSLI_CHANGE_DATE = @NEXTPAYMENTDATE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID = CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT&#xD;&#xA;    ON PAPIT.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PAPIT.PAYMENT_ITEM_TYPE_ID = @PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE   (CV.DATA2 &lt;&gt; 'CNLD' AND CV.DATA2 &lt;&gt; 'TRMD' )  &#xD;&#xA;    AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @NEXTPAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;    AND PAS.STATUS_EFFECTIVE_DATE &lt;= @NEXTPAYMENTDATE&#xD;&#xA;    AND PA.BENEFIT_BEGIN_DATE &lt;= @NEXTPAYMENTDATE&#xD;&#xA;    AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt; @NEXTPAYMENTDATE)&#xD;&#xA;    AND PAPIT.START_DATE &lt;= @NEXTPAYMENTDATE&#xD;&#xA;    AND (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt; @NEXTPAYMENTDATE)&#xD;&#xA;    AND ISNULL(BENACCT.ESTIMATED_SS_BENEFIT_AMOUNT,0) &gt; 0 &#xD;&#xA; UNION&#xD;&#xA; &#xD;&#xA; SELECT PAYEE_ACCOUNT_ID,PAYMENT_ITEM_TYPE_ID,INDICATOR FROM TEMP_GRADUATED_BENEFIT_PAYEE_ACCOUNT&#xD;&#xA;) PAYMENTS&#xD;&#xA;ON PAPIT.PAYEE_ACCOUNT_ID = PAYMENTS.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAPIT.PAYMENT_ITEM_TYPE_ID = PAYMENTS.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   AND (PAPIT.END_DATE IS NULL OR PAPIT.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;) PA&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT SPA ON PA.PAYEE_ACCOUNT_ID=SPA.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT JOIN SGT_PERSON PER  ON PER.PERSON_ID=SPA.PAYEE_PERSLINK_ID&#xD;&#xA;LEFT JOIN SGT_ORGANIZATION ORG ON ORG.ORG_ID=SPA.PAYEE_ORG_ID&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID('TEMP_GRADUATED_BENEFIT_PAYEE_ACCOUNT') IS NOT NULL&#xD;&#xA; DROP TABLE TEMP_GRADUATED_BENEFIT_PAYEE_ACCOUNT">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="BackupBeforePayroll" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Declare @SQLSTR Varchar(2000)&#xD;&#xA;Declare @Table_Prefix as Varchar(50)&#xD;&#xA;set @Table_Prefix  = 'Bkp_Pay_'+Replace(replace(cast(getdate() as varchar(20)),' ',''),':','')+'_'&#xD;&#xA;exec ('Select DEPOSIT_ID ,PAYMENT_HISTORY_HEADER_ID ,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_DEPOSIT from SGT_DEPOSIT ')&#xD;&#xA;exec ('Select DEPOSIT_TAPE_ID into ' + @Table_Prefix+'SGT_DEPOSIT_TAPE from SGT_DEPOSIT_TAPE')&#xD;&#xA;exec ('Select GL_TRANSACTION_ID into ' + @Table_Prefix+'SGT_GL_TRANSACTION from SGT_GL_TRANSACTION')&#xD;&#xA;exec ('Select PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID,STATUS_VALUE,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL from SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL')&#xD;&#xA;exec ('Select PAYEE_ACCOUNT_STATUS_ID into ' + @Table_Prefix+'SGT_PAYEE_ACCOUNT_STATUS from SGT_PAYEE_ACCOUNT_STATUS')&#xD;&#xA;exec ('Select CHECK_BOOK_ID,LAST_CHECK_NUMBER,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_PAYMENT_CHECK_BOOK from SGT_PAYMENT_CHECK_BOOK')&#xD;&#xA;exec ('Select PAYMENT_HISTORY_DETAIL_ID into ' + @Table_Prefix+'SGT_PAYMENT_HISTORY_DETAIL from SGT_PAYMENT_HISTORY_DETAIL')&#xD;&#xA;exec ('Select PAYMENT_HISTORY_DISTRIBUTION_ID,DISTRIBUTION_STATUS_VALUE,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_PAYMENT_HISTORY_DISTRIBUTION from SGT_PAYMENT_HISTORY_DISTRIBUTION')&#xD;&#xA;exec ('Select PAYMENT_HISTORY_HEADER_ID  into ' + @Table_Prefix+'SGT_PAYMENT_HISTORY_HEADER from SGT_PAYMENT_HISTORY_HEADER')&#xD;&#xA;exec ('Select RECOVERY_HISTORY_ID into ' + @Table_Prefix+'SGT_PAYMENT_RECOVERY_HISTORY from SGT_PAYMENT_RECOVERY_HISTORY')&#xD;&#xA;set @SQLSTR = 'Select * into ' + @Table_Prefix+'SGT_PAYMENT_SCHEDULE from SGT_PAYMENT_SCHEDULE where Payment_schedule_id = '+ cast(@PaymentScheduleId as varchar(10))&#xD;&#xA;Exec (@SQLSTR)&#xD;&#xA;set @SQLSTR = 'Select * into ' + @Table_Prefix+'SGT_PAYMENT_SCHEDULE_STEP from SGT_PAYMENT_SCHEDULE_STEP where Payment_schedule_id = '+ cast(@PaymentScheduleId as varchar(10))&#xD;&#xA;Exec (@SQLSTR)&#xD;&#xA;exec ('Select PERSON_ID,BENEFICIARY_REQUIRED_FLAG,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_PERSON from SGT_PERSON')&#xD;&#xA;exec ('Select PROVIDER_REPORT_PAYMENT_ID into ' + @Table_Prefix+'SGT_PROVIDER_REPORT_PAYMENT from SGT_PROVIDER_REPORT_PAYMENT')&#xD;&#xA;exec ('Select PERSON_ACCOUNT_ID,PLAN_PARTICIPATION_STATUS_VALUE, HISTORY_CHANGE_DATE,END_DATE,Modified_date,Modified_by  into ' + @Table_Prefix+'SGT_PERSON_ACCOUNT from SGT_PERSON_ACCOUNT')&#xD;&#xA;exec ('Select PERSON_ACCOUNT_RETIREMENT_HISTORY_ID,End_Date,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY from SGT_PERSON_ACCOUNT_RETIREMENT_HISTORY')&#xD;&#xA;exec ('Select RETIREMENT_CONTRIBUTION_ID  into ' + @Table_Prefix+'SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION')&#xD;&#xA;exec ('Select  BENEFIT_APPLICATION_ID,STATUS_VALUE,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_BENEFIT_APPLICATION from SGT_BENEFIT_APPLICATION')&#xD;&#xA;exec ('Select  BENEFIT_CALCULATION_ID, STATUS_VALUE,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_BENEFIT_CALCULATION from SGT_BENEFIT_CALCULATION')&#xD;&#xA;exec ('Select  DRO_APPLICATION_ID,DRO_STATUS_VALUE,STATUS_VALUE,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_BENEFIT_DRO_APPLICATION from SGT_BENEFIT_DRO_APPLICATION')&#xD;&#xA;exec ('Select  DRO_CALCULATION_ID,PAYMENT_STATUS_VALUE,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_BENEFIT_DRO_CALCULATION from SGT_BENEFIT_DRO_CALCULATION')&#xD;&#xA;exec ('Select REMITTANCE_ID ,REFUND_STATUS_VALUE , PAYMENT_HISTORY_HEADER_ID ,Modified_date,Modified_by  into ' + @Table_Prefix+'SGT_REMITTANCE from SGT_REMITTANCE')&#xD;&#xA;exec ('Select * into ' + @Table_Prefix+'SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE from SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE')&#xD;&#xA;exec ('Select PAYEE_ACCOUNT_TAX_WITHHOLDING_ITEM_DTL_ID into ' + @Table_Prefix+'SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING_ITEM_DETAIL from SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING_ITEM_DETAIL')&#xD;&#xA;exec ('Select MININUM_GUARANTEE_HISTORY_ID,PROCESS_STATUS_FLAG,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_PAYEE_ACCOUNT_MINIMUM_GUARANTEE_HISTORY from SGT_PAYEE_ACCOUNT_MINIMUM_GUARANTEE_HISTORY')&#xD;&#xA;exec ('Select PAYMENT_RECOVERY_ID,STATUS_VALUE,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_PAYMENT_RECOVERY from SGT_PAYMENT_RECOVERY')&#xD;&#xA;exec ('Select PERSON_ACCOUNT_ID,CAPITAL_GAIN,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_PERSON_ACCOUNT_RETIREMENT from SGT_PERSON_ACCOUNT_RETIREMENT')&#xD;&#xA;exec ('Select ACTIVITY_INSTANCE_ID into ' + @Table_Prefix+'SGW_BPM_ACTIVITY_INSTANCE &#xD;&#xA;  from SGW_BPM_ACTIVITY_INSTANCE A&#xD;&#xA;  INNER JOIN SGW_BPM_ACTIVITY APR ON A.ACTIVITY_ID = APR.ACTIVITY_ID&#xD;&#xA;  Where APR.PROCESS_ID = 276')&#xD;&#xA;exec ('Select ACTIVITY_INSTANCE_HISTORY_ID into ' &#xD;&#xA;  + @Table_Prefix+'SGW_BPM_ACTIVITY_INST_HISTORY &#xD;&#xA;  from SGW_BPM_ACTIVITY_INST_HISTORY A&#xD;&#xA;  INNER JOIN SGW_BPM_ACTIVITY_INSTANCE AI &#xD;&#xA;   ON A.ACTIVITY_INSTANCE_ID = AI.ACTIVITY_INSTANCE_ID&#xD;&#xA;  INNER JOIN SGW_BPM_ACTIVITY APR ON AI.ACTIVITY_ID = APR.ACTIVITY_ID &#xD;&#xA;  Where APR.PROCESS_ID = 276')&#xD;&#xA;exec ('Select PAYEE_ACCOUNT_RETRO_PAYMENT_ID,PAYMENT_HISTORY_HEADER_ID,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_PAYEE_ACCOUNT_RETRO_PAYMENT from SGT_PAYEE_ACCOUNT_RETRO_PAYMENT')&#xD;&#xA;exec ('Select PAYEE_ACCOUNT_DEDUCTION_REFUND_ID,END_DATE,PAYMENT_HISTORY_HEADER_ID,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND from SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND')&#xD;&#xA;exec ('Select BENEFIT_CALCULATION_PAYEE_ID,MEMBER_ACCOUNT_NEGATED_FLAG,MODIFIED_DATE,MODIFIED_BY INTO ' + @Table_Prefix+'SGT_BENEFIT_CALCULATION_PAYEE from SGT_BENEFIT_CALCULATION_PAYEE')&#xD;&#xA;exec ('Select DISTRIBUTION_STATUS_HISTORY_ID INTO ' + @Table_Prefix+'SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY from SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY')&#xD;&#xA;exec ('Select PAYEE_ACCOUNT_ID,BENEFIT_END_DATE,Modified_date,Modified_by into ' + @Table_Prefix+'SGT_PAYEE_ACCOUNT from SGT_PAYEE_ACCOUNT')&#xD;&#xA;select @Table_Prefix">
      <parameters>
        <parameter ID="@PaymentScheduleId" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="TrialMonthlyBenefitPaymentbyItemReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @EXCESSCONTRIBUTIONTAXABLEID INT&#xD;&#xA;SELECT @EXCESSCONTRIBUTIONTAXABLEID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM501'&#xD;&#xA;&#xD;&#xA;DECLARE @EXCESSCONTRBUTIONNONTAXABLEID INT&#xD;&#xA;SELECT @EXCESSCONTRBUTIONNONTAXABLEID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM502'&#xD;&#xA;&#xD;&#xA;SELECT * FROM (&#xD;&#xA; SELECT '' AS PLAN_NAME, PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, SUM(PAPI.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV &#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI &#xD;&#xA;    ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;    ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND PADR&#xD;&#xA;    ON PADR.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID  &#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;   (SELECT PARP.PAYEE_ACCOUNT_ID,PARP.PAYMENT_OPTION_VALUE,PARPD.* FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT PARP &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL PARPD ON &#xD;&#xA;   PARPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = PARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID &#xD;&#xA;   WHERE PAYMENT_HISTORY_HEADER_ID IS NULL) AS RETRO&#xD;&#xA;  ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND RETRO.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND (PADR.PAYMENT_OPTION_VALUE IS NULL OR PADR.PAYMENT_OPTION_VALUE = 'RGLR')&#xD;&#xA;  AND (RETRO.PAYMENT_OPTION_VALUE IS NULL OR RETRO.PAYMENT_OPTION_VALUE = 'REGL')&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; GROUP BY PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; UNION&#xD;&#xA; --ROLLOVER ITEMS&#xD;&#xA; SELECT '' AS PLAN_NAME, PIT1.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, SUM(PAPIT.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA; FROM &#xD;&#xA;  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA;  (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID,PA.BENEFIT_OPTION_VALUE&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )  &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  ) AS PAYEE&#xD;&#xA;  ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE&#xD;&#xA;  @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;  AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;  AND PAYEE.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; GROUP BY PIT1.ITEM_TYPE_DESCRIPTION,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA; UNION&#xD;&#xA;&#xD;&#xA; --26652&#xD;&#xA; SELECT '' AS PLAN_NAME, &#xD;&#xA; ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(AMOUNT*ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; ITEM_TYPE_DIRECTION&#xD;&#xA;From &#xD;&#xA;( &#xD;&#xA;SELECT CASE WHEN PAPI.REMITTANCE_TYPE_VALUE IN ('P501') THEN @EXCESSCONTRIBUTIONTAXABLEID ELSE &#xD;&#xA;&#x9;&#x9;&#x9;@EXCESSCONTRBUTIONNONTAXABLEID END as PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;  PIT.ITEM_TYPE_DESCRIPTION , &#xD;&#xA;  PIT.ITEM_TYPE_DIRECTION,&#xD;&#xA;  CASE WHEN OVERRIDDEN_REFUND_AMOUNT &gt; 0 THEN OVERRIDDEN_REFUND_AMOUNT &#xD;&#xA;  ELSE COMPUTED_REFUND_AMOUNT END AS AMOUNT &#xD;&#xA;  FROM SGT_REMITTANCE PAPI&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;   ON (PIT.PAYMENT_ITEM_TYPE_ID = CASE WHEN PAPI.REMITTANCE_TYPE_VALUE IN ('P501') THEN @EXCESSCONTRIBUTIONTAXABLEID ELSE &#xD;&#xA;&#x9;&#x9;&#x9;@EXCESSCONTRBUTIONNONTAXABLEID END) &#xD;&#xA;  WHERE REFUND_STATUS_VALUE IN ('APRD','RIA') AND PAPI.REMITTANCE_TYPE_VALUE IN ('P501', 'P502', 'P503','P504','P505')&#xD;&#xA;) as Temp&#xD;&#xA;GROUP BY ITEM_TYPE_DESCRIPTION,ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA; UNION&#xD;&#xA; --&lt;&lt;&lt;&lt; PLAN WISE &gt;&gt;&gt;&gt;&#xD;&#xA; SELECT PL.PLAN_NAME , PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, SUM(PAPI.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI &#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;   ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;   ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA;   ON DROC.DRO_CALCULATION_ID = PA.DRO_CALCULATION_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA;   ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PLAN(NOLOCK) PL &#xD;&#xA;   ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND PADR&#xD;&#xA;    ON PADR.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;   (SELECT PARP.PAYEE_ACCOUNT_ID,PARP.PAYMENT_OPTION_VALUE,PARPD.* FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT PARP &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL PARPD ON &#xD;&#xA;   PARPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = PARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID &#xD;&#xA;   WHERE PAYMENT_HISTORY_HEADER_ID IS NULL) AS RETRO&#xD;&#xA;  ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND RETRO.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD')  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND (PADR.PAYMENT_OPTION_VALUE IS NULL OR PADR.PAYMENT_OPTION_VALUE = 'RGLR')&#xD;&#xA;  AND (RETRO.PAYMENT_OPTION_VALUE IS NULL OR RETRO.PAYMENT_OPTION_VALUE = 'REGL')&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; GROUP BY PL.PLAN_NAME,PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;  UNION&#xD;&#xA; --&lt;&lt;&lt;&lt; PLAN WISE &gt;&gt;&gt;&gt; PIR 26652&#xD;&#xA; &#xD;&#xA; SELECT PLAN_NAME, &#xD;&#xA;  ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA;  SUM(AMOUNT*ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA;  ITEM_TYPE_DIRECTION&#xD;&#xA; From &#xD;&#xA; ( &#xD;&#xA;  SELECT CASE WHEN PAPI.REMITTANCE_TYPE_VALUE IN ('P501') THEN @EXCESSCONTRIBUTIONTAXABLEID ELSE &#xD;&#xA;&#x9;&#x9;&#x9;@EXCESSCONTRBUTIONNONTAXABLEID END as PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PLAN_NAME,&#xD;&#xA;    PIT.ITEM_TYPE_DESCRIPTION , &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION,&#xD;&#xA;    CASE WHEN OVERRIDDEN_REFUND_AMOUNT &gt; 0 THEN OVERRIDDEN_REFUND_AMOUNT &#xD;&#xA;    ELSE COMPUTED_REFUND_AMOUNT END AS AMOUNT &#xD;&#xA;    FROM SGT_REMITTANCE PAPI&#xD;&#xA;    INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;     ON (PIT.PAYMENT_ITEM_TYPE_ID = CASE WHEN PAPI.REMITTANCE_TYPE_VALUE IN ('P501') THEN @EXCESSCONTRIBUTIONTAXABLEID ELSE &#xD;&#xA;&#x9;&#x9;&#x9;@EXCESSCONTRBUTIONNONTAXABLEID END) &#xD;&#xA;    LEFT OUTER JOIN DBO.SGT_PLAN(NOLOCK) PL &#xD;&#xA;     ON PAPI.PLAN_ID = PL.PLAN_ID &#xD;&#xA;    WHERE REFUND_STATUS_VALUE IN ('APRD','RIA') AND PAPI.REMITTANCE_TYPE_VALUE IN ('P501', 'P502', 'P503','P504','P505')&#xD;&#xA;  ) as Temp&#xD;&#xA; GROUP BY PLAN_NAME,ITEM_TYPE_DESCRIPTION,ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA; UNION&#xD;&#xA; --ROLLOVER ITEMS&#xD;&#xA; SELECT PL.PLAN_NAME AS PLAN_NAME, PIT1.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, SUM(PAPIT.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA; FROM &#xD;&#xA;  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA;  (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID,PA.APPLICATION_ID,PA.DRO_CALCULATION_ID,PA.BENEFIT_OPTION_VALUE,PA.DRO_APPLICATION_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )  &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  ) AS PAYEE&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  ON PAYEE.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA;  ON DROC.DRO_CALCULATION_ID = PAYEE.DRO_CALCULATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA;  ON PAYEE.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PLAN(NOLOCK) PL &#xD;&#xA;  ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA; WHERE&#xD;&#xA;  @PAYMENTDATE BETWEEN PAPIT.START_DATE &#xD;&#xA;  AND (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;  AND PAYEE.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; GROUP BY PL.PLAN_NAME, PIT1.ITEM_TYPE_DESCRIPTION,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;) TBL ORDER BY PLAN_NAME,ITEM_TYPE_DIRECTION desc,abs(amount) Desc">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPayeeAcountAndStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PA.*,BA.*,P.*,PAS.*,BC.*,BENACCT.*,DRO.DRO_MODEL_VALUE FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID &#xD;&#xA;LEFT JOIN SGT_PERSON P &#xD;&#xA;    ON PA.PAYEE_PERSLINK_ID=P.PERSON_ID&#xD;&#xA;LEFT JOIN SGT_BENEFIT_APPLICATION BA&#xD;&#xA;    ON PA.APPLICATION_ID=BA.BENEFIT_APPLICATION_ID&#xD;&#xA;LEFT JOIN SGT_BENEFIT_CALCULATION BC&#xD;&#xA;    ON PA.CALCULATION_ID = BC.BENEFIT_CALCULATION_ID&#xD;&#xA;LEFT JOIN SGT_BENEFIT_ACCOUNT BENACCT&#xD;&#xA;    ON PA.BENEFIT_ACCOUNT_ID = BENACCT.BENEFIT_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DRO&#xD;&#xA;  ON PA.DRO_APPLICATION_ID = DRO.DRO_APPLICATION_ID&#xD;&#xA;--LEFT OUTER JOIN SGT_BENEFIT_DRO_CALCULATION DROCAL&#xD;&#xA;--  ON DROCAL.DRO_APPLICATION_ID = DRO.DRO_APPLICATION_ID&#xD;&#xA;WHERE PA.BENEFIT_BEGIN_DATE&lt;=@PAYMENTDATE&#xD;&#xA;AND (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (NOLOCK)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC)">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="TrialNewRetireeDetailReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LASTPAYMENTDATE DATETIME&#xD;&#xA;&#xD;&#xA;SELECT TOP 1 @LASTPAYMENTDATE = EFFECTIVE_DATE   &#xD;&#xA; FROM SGT_PAYMENT_SCHEDULE WITH(NOLOCK) &#xD;&#xA; WHERE SCHEDULE_TYPE_VALUE  = 'MTLY' &#xD;&#xA;  AND STATUS_VALUE = 'PRCD' &#xD;&#xA;  AND PAYMENT_DATE &lt; @PAYMENTDATE&#xD;&#xA; ORDER BY PAYMENT_DATE DESC&#xD;&#xA; &#xD;&#xA;SELECT  FPL.PLAN_NAME, BST.DESCRIPTION AS BENEFIT_SUB_TYPE, BAP.BENEFIT_SUB_TYPE_VALUE ,&#xD;&#xA;  BTP.DESCRIPTION AS BENEFIT_ACCOUNT_TYPE,&#xD;&#xA;  BOP.DESCRIPTION AS BENEFIT_OPTION,&#xD;&#xA;  BTPP.DESCRIPTION AS BENEFIT_TYPE,&#xD;&#xA;  REP.* ,ORG_RET_ORG_ID.ORG_CODE AS ORG_CODE&#xD;&#xA;from &#xD;&#xA;(&#xD;&#xA; SELECT PAYEE_ACCOUNT_ID,ISNULL(PERSON_ID,ORG.ORG_CODE) AS PERSLINK_ID , LEFT(SSN,3)+'-'+SUBSTRING(SSN,4,2)+'-'+RIGHT(SSN,4) AS SSN, FIRST_NAME, &#xD;&#xA;  CASE WHEN PERSON_ID IS NULL THEN ORG.ORG_NAME&#xD;&#xA;   ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME, RETIREMENT_DATE&#xD;&#xA;  , MONTHLY_GROSS_AMOUNT, MONTHLY_NET_AMOUNT, GROSS_AMOUNT AS CURRENT_MONTH_GROSS_AMOUNT, NET_CHECK_AMOUNT, QDRO_AMOUNT&#xD;&#xA;  , ACCOUNT_BALANCE, MINIMUM_GUARANTEE_AMOUNT,ISNULL(RHIC,0) AS RHIC,ISNULL(FEDX,0) AS FEDX, ISNULL(STTX,0) AS STTX,&#xD;&#xA;  ISNULL(INSR,0) AS INSR,ISNULL(OTHR,0) AS OTHR,INDICATOR&#xD;&#xA;  FROM &#xD;&#xA; (&#xD;&#xA; SELECT PAYEE_ACCOUNT_ID,PAYEE_PERSLINK_ID,RETIREMENT_DATE,PAYEE_ORG_ID,SUM(MONTHLY_GROSS_AMOUNT) AS MONTHLY_GROSS_AMOUNT,&#xD;&#xA;   SUM(MONTHLY_NET_AMOUNT) AS MONTHLY_NET_AMOUNT,SUM(GROSS_AMOUNT) AS GROSS_AMOUNT,SUM(NET_CHECK_AMOUNT) AS NET_CHECK_AMOUNT,&#xD;&#xA;   SUM(QDRO_AMOUNT) AS QDRO_AMOUNT,MINIMUM_GUARANTEE_AMOUNT,ACCOUNT_BALANCE,SUM(RHIC) AS RHIC,SUM(STTX) AS STTX,&#xD;&#xA;   SUM(FEDX) AS FEDX,SUM(INSR) AS INSR,SUM(OTHR) AS OTHR,INDICATOR&#xD;&#xA; FROM (&#xD;&#xA;  SELECT PA.PAYEE_ACCOUNT_ID,PA.PAYEE_PERSLINK_ID, BA.RETIREMENT_DATE, PA.PAYEE_ORG_ID&#xD;&#xA;   , SUM(CASE WHEN ITEM_TYPE_DIRECTION = 1 AND BASE_AMOUNT_FLAG = 'Y' THEN AMOUNT ELSE 0 END) AS MONTHLY_GROSS_AMOUNT&#xD;&#xA;   , SUM(CASE WHEN BASE_AMOUNT_FLAG = 'Y' THEN AMOUNT * ITEM_TYPE_DIRECTION ELSE 0 END) AS MONTHLY_NET_AMOUNT&#xD;&#xA;   , SUM(CASE WHEN ITEM_TYPE_DIRECTION = 1 THEN AMOUNT ELSE 0 END) AS GROSS_AMOUNT&#xD;&#xA;   , SUM(ITEM_TYPE_DIRECTION * AMOUNT) AS NET_CHECK_AMOUNT&#xD;&#xA;   , (SELECT SUM(ISNULL(MONTHLY_BENEFIT_AMOUNT,0)) FROM SGT_BENEFIT_DRO_APPLICATION DROA WITH(NOLOCK) &#xD;&#xA;     WHERE DROA.MEMBER_PERSLINK_ID = PA.PAYEE_PERSLINK_ID AND DRO_STATUS_VALUE  = 'QLFD'&#xD;&#xA;    ) AS QDRO_AMOUNT&#xD;&#xA;   , CASE WHEN PA.ACCOUNT_RELATION_VALUE = 'ALTP' THEN 0&#xD;&#xA;     ELSE MINIMUM_GUARANTEE_AMOUNT END &#xD;&#xA;     AS MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;   , CASE WHEN PA.ACCOUNT_RELATION_VALUE = 'ALTP' THEN 0&#xD;&#xA;     ELSE (BAC.STARTING_NONTAXABLE_AMOUNT+BAC.STARTING_TAXABLE_AMOUNT) END&#xD;&#xA;     AS ACCOUNT_BALANCE&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'RHIC' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS RHIC&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'STTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS STTX&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'FEDX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS FEDX&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'INSR' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS INSR&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'OTHR' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS OTHR&#xD;&#xA;   , 'Y' AS INDICATOR&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPI WITH(NOLOCK) ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_ACCOUNT BAC WITH(NOLOCK) ON PA.BENEFIT_ACCOUNT_ID = BAC.BENEFIT_ACCOUNT_ID&#xD;&#xA;   LEFT OUTER JOIN &#xD;&#xA;    (&#xD;&#xA;     SELECT DISTINCT A.PAYEE_ACCOUNT_ID from SGT_PAYMENT_HISTORY_HEADER  A WITH(NOLOCK)&#xD;&#xA;      LEFT OUTER JOIN SGT_PAYMENT_SCHEDULE B WITH(NOLOCK) ON A.PAYMENT_SCHEDULE_ID = B.PAYMENT_SCHEDULE_ID&#xD;&#xA;      WHERE A.PAYMENT_DATE &lt;= @LASTPAYMENTDATE &#xD;&#xA;      AND isnull(B.SCHEDULE_TYPE_VALUE,'MTLY') =  'MTLY'&#xD;&#xA;      -- take all old payments before the last payment date and make sure no payments are made earlier&#xD;&#xA;    ) PREVPHH&#xD;&#xA;   ON PREVPHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  WHERE CV.DATA2 = 'APRD' AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;   AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;   AND PREVPHH.PAYEE_ACCOUNT_ID IS NULL  -- he should not have got any payment previously&#xD;&#xA;  --COND: 1,2,3,4&#xD;&#xA;   AND ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR')&#xD;&#xA;    OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' &#xD;&#xA;    OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD'))&#xD;&#xA;    )&#xD;&#xA;   AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;   AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  GROUP BY PA.PAYEE_ACCOUNT_ID,PA.PAYEE_PERSLINK_ID, RETIREMENT_DATE, (BAC.STARTING_NONTAXABLE_AMOUNT+BAC.STARTING_TAXABLE_AMOUNT), MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;    ,PA.ACCOUNT_RELATION_VALUE, PA.PAYEE_ORG_ID&#xD;&#xA;    &#xD;&#xA;  UNION ALL&#xD;&#xA;&#xD;&#xA;  SELECT PA.PAYEE_ACCOUNT_ID,PA.PAYEE_PERSLINK_ID, BA.RETIREMENT_DATE, PA.PAYEE_ORG_ID&#xD;&#xA;   , SUM(CASE WHEN PIT1.ITEM_TYPE_DIRECTION = 1 AND PIT1.BASE_AMOUNT_FLAG = 'Y' THEN AMOUNT ELSE 0 END) AS MONTHLY_GROSS_AMOUNT&#xD;&#xA;   , SUM(CASE WHEN PIT1.BASE_AMOUNT_FLAG = 'Y' THEN AMOUNT * PIT1.ITEM_TYPE_DIRECTION ELSE 0 END) AS MONTHLY_NET_AMOUNT&#xD;&#xA;   , SUM(CASE WHEN (PIT1.ITEM_TYPE_DIRECTION = 1 and isnull(PIT.PAYEE_DETAIL_GROUP_VALUE,'') &lt;&gt; 'OTHR') THEN AMOUNT ELSE 0 END) AS GROSS_AMOUNT&#xD;&#xA;   , SUM(PIT1.ITEM_TYPE_DIRECTION * AMOUNT) AS NET_CHECK_AMOUNT&#xD;&#xA;   , (SELECT SUM(ISNULL(MONTHLY_BENEFIT_AMOUNT,0)) FROM SGT_BENEFIT_DRO_APPLICATION DROA WITH(NOLOCK) &#xD;&#xA;     WHERE DROA.MEMBER_PERSLINK_ID = PA.PAYEE_PERSLINK_ID AND DRO_STATUS_VALUE  = 'QLFD'&#xD;&#xA;    ) AS QDRO_AMOUNT&#xD;&#xA;   , CASE WHEN PA.ACCOUNT_RELATION_VALUE = 'ALTP' THEN 0&#xD;&#xA;     ELSE MINIMUM_GUARANTEE_AMOUNT END &#xD;&#xA;     AS MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;   , CASE WHEN PA.ACCOUNT_RELATION_VALUE = 'ALTP' THEN 0&#xD;&#xA;     ELSE (BAC.STARTING_NONTAXABLE_AMOUNT+BAC.STARTING_TAXABLE_AMOUNT) END&#xD;&#xA;     AS ACCOUNT_BALANCE&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'RHIC' THEN (PIT1.ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS RHIC&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'STTX' THEN (PIT1.ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS STTX&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'FEDX' THEN (PIT1.ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS FEDX&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'INSR' THEN (PIT1.ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS INSR&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'OTHR' THEN (PIT1.ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS OTHR&#xD;&#xA;   , 'Y' AS INDICATOR&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPI WITH(NOLOCK) ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 WITH(NOLOCK)&#xD;&#xA;    ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_ACCOUNT BAC WITH(NOLOCK) ON PA.BENEFIT_ACCOUNT_ID = BAC.BENEFIT_ACCOUNT_ID&#xD;&#xA;   LEFT OUTER JOIN &#xD;&#xA;    (&#xD;&#xA;     SELECT DISTINCT A.PAYEE_ACCOUNT_ID from SGT_PAYMENT_HISTORY_HEADER  A WITH(NOLOCK)&#xD;&#xA;      LEFT OUTER JOIN SGT_PAYMENT_SCHEDULE B WITH(NOLOCK) ON A.PAYMENT_SCHEDULE_ID = B.PAYMENT_SCHEDULE_ID&#xD;&#xA;      WHERE A.PAYMENT_DATE &lt;= @LASTPAYMENTDATE &#xD;&#xA;      AND isnull(B.SCHEDULE_TYPE_VALUE,'MTLY') =  'MTLY'&#xD;&#xA;      -- take all old payments before the last payment date and make sure no payments are made earlier&#xD;&#xA;    ) PREVPHH&#xD;&#xA;   ON PREVPHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  WHERE CV.DATA2 = 'APRD' AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;   AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;   AND PREVPHH.PAYEE_ACCOUNT_ID IS NULL  -- he should not have got any payment previously&#xD;&#xA;  --COND: 1,2,3,4&#xD;&#xA;   AND ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR')&#xD;&#xA;    OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' &#xD;&#xA;    OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD'))&#xD;&#xA;    )&#xD;&#xA;   AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;   AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  GROUP BY PA.PAYEE_ACCOUNT_ID,PA.PAYEE_PERSLINK_ID, RETIREMENT_DATE, (BAC.STARTING_NONTAXABLE_AMOUNT+BAC.STARTING_TAXABLE_AMOUNT), MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;    ,PA.ACCOUNT_RELATION_VALUE, PA.PAYEE_ORG_ID&#xD;&#xA;  )TEMP&#xD;&#xA; GROUP BY PAYEE_ACCOUNT_ID,PAYEE_PERSLINK_ID,RETIREMENT_DATE,PAYEE_ORG_ID,MINIMUM_GUARANTEE_AMOUNT,ACCOUNT_BALANCE,INDICATOR&#xD;&#xA;  &#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT PA.PAYEE_ACCOUNT_ID,PA.PAYEE_PERSLINK_ID, BA.RETIREMENT_DATE, PA.PAYEE_ORG_ID&#xD;&#xA;  , 0.0 MONTHLY_GROSS_AMOUNT&#xD;&#xA;  , 0.0 MONTHLY_NET_AMOUNT&#xD;&#xA;  , 0.0 AS GROSS_AMOUNT&#xD;&#xA;  , 0.0 NET_CHECK_AMOUNT&#xD;&#xA;  , 0.0 AS QDRO_AMOUNT&#xD;&#xA;  , CASE WHEN PA.ACCOUNT_RELATION_VALUE = 'ALTP' THEN 0&#xD;&#xA;    ELSE MINIMUM_GUARANTEE_AMOUNT END &#xD;&#xA;    AS MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;  , CASE WHEN PA.ACCOUNT_RELATION_VALUE = 'ALTP' THEN 0&#xD;&#xA;    ELSE (BAC.STARTING_NONTAXABLE_AMOUNT+BAC.STARTING_TAXABLE_AMOUNT) END&#xD;&#xA;    AS ACCOUNT_BALANCE&#xD;&#xA;  , 0.0 AS RHIC&#xD;&#xA;  , 0.0 AS STTX&#xD;&#xA;  , 0.0 AS FEDX&#xD;&#xA;  , 0.0 AS INSR&#xD;&#xA;  , 0.0 AS OTHR&#xD;&#xA;  , 'Y' AS INDICATOR&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID  &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DROA WITH(NOLOCK)&#xD;&#xA;   ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_ACCOUNT BAC WITH(NOLOCK) ON PA.BENEFIT_ACCOUNT_ID = BAC.BENEFIT_ACCOUNT_ID&#xD;&#xA; WHERE (CV.DATA2 = 'APRD')  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    ( &#xD;&#xA;     SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;  AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt; @PAYMENTDATE) &#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL') &#xD;&#xA;  AND (BA.PLAN_ID IN (7,28,30) OR DROA.PLAN_ID IN (7,28,30))&#xD;&#xA; ) MA &#xD;&#xA; LEFT OUTER JOIN SGT_PERSON PER WITH(NOLOCK) ON MA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON MA.PAYEE_ORG_ID = ORG.ORG_ID&#xD;&#xA; --ORDER BY LAST_NAME, FIRST_NAME, SSN&#xD;&#xA;) REP&#xD;&#xA;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT FPA WITH(NOLOCK) &#xD;&#xA; ON REP.PAYEE_ACCOUNT_ID = FPA.PAYEE_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BAP WITH(NOLOCK)&#xD;&#xA; ON FPA.APPLICATION_ID = BAP.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION ORG_RET_ORG_ID WITH(NOLOCK) ON BAP.RETIREMENT_ORG_ID = ORG_RET_ORG_ID.ORG_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DROAP WITH(NOLOCK)&#xD;&#xA; ON FPA.DRO_APPLICATION_ID = DROAP.DRO_APPLICATION_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE BTP WITH(NOLOCK) &#xD;&#xA; ON FPA.BENEFIT_ACCOUNT_TYPE_ID = BTP.CODE_ID&#xD;&#xA; AND FPA.BENEFIT_ACCOUNT_TYPE_VALUE = BTP.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE BOP WITH(NOLOCK) &#xD;&#xA; ON FPA.BENEFIT_OPTION_ID= BOP.CODE_ID&#xD;&#xA; AND FPA.BENEFIT_OPTION_VALUE = BOP.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN FPL WITH(NOLOCK)&#xD;&#xA; ON FPL.PLAN_ID = CASE WHEN BAP.PLAN_ID IS NOT NULL &#xD;&#xA;        THEN BAP.PLAN_ID &#xD;&#xA;        ELSE DROAP.PLAN_ID &#xD;&#xA;      END  &#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE BTPP WITH(NOLOCK) &#xD;&#xA; ON FPL.BENEFIT_TYPE_ID= BTPP.CODE_ID&#xD;&#xA; AND FPL.BENEFIT_TYPE_VALUE = BTPP.CODE_VALUE&#xD;&#xA; Left outer join SGS_CODE_VALUE BST on FPA.BENEFIT_ACCOUNT_SUB_TYPE_ID=BST.CODE_ID and FPA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE=BST.CODE_VALUE&#xD;&#xA;&#xD;&#xA;ORDER BY FPL.PLAN_NAME&#xD;&#xA;,BENEFIT_OPTION&#xD;&#xA;,REP.PERSLINK_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="TrialReinstatedRetireeDetailReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;DECLARE @LAST_PAYMENTDATE DATETIME&#xD;&#xA;DECLARE @LAST_SCHEDULE_ID INT&#xD;&#xA;SET @LAST_PAYMENTDATE = DATEADD(M,-1,@PAYMENTDATE)&#xD;&#xA;DECLARE @CREATED_BY VARCHAR(50)&#xD;&#xA;SELECT @CREATED_BY=CREATED_BY,@LAST_SCHEDULE_ID=ISNULL(PAYMENT_SCHEDULE_ID,0) FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA;WHERE PAYMENT_DATE = @LAST_PAYMENTDATE AND SCHEDULE_TYPE_VALUE = 'MTLY' AND STATUS_VALUE = 'PRCD'&#xD;&#xA;&#xD;&#xA;IF(@CREATED_BY = 'CONVERSION')&#xD;&#xA;BEGIN&#xD;&#xA; SELECT ISNULL(CAST(PERSON_ID AS VARCHAR(10)),ORG.ORG_CODE) AS PERSLINK_ID, LEFT(SSN,3)+'-'+SUBSTRING(SSN,4,2)+'-'+RIGHT(SSN,4) AS SSN, FIRST_NAME, &#xD;&#xA; CASE WHEN PERSON_ID IS NULL THEN ORG.ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME, &#xD;&#xA; STATUS_EFFECTIVE_DATE AS REACTIVATION_DATE&#xD;&#xA;  , MONTHLY_GROSS_AMOUNT, MONTHLY_NET_AMOUNT, GROSS_AMOUNT AS CURRENT_MONTH_GROSS_AMOUNT, NET_CHECK_AMOUNT&#xD;&#xA;  ,ACCOUNT_BALANCE, MINIMUM_GUARANTEE_AMOUNT,RHIC,STTX,FEDX,INSR,OTHR&#xD;&#xA;  FROM &#xD;&#xA; (&#xD;&#xA;  SELECT PA.PAYEE_PERSLINK_ID, PAS2.STATUS_EFFECTIVE_DATE,PA.PAYEE_ORG_ID&#xD;&#xA;   , SUM(CASE WHEN ITEM_TYPE_DIRECTION = 1 AND BASE_AMOUNT_FLAG = 'Y' THEN AMOUNT ELSE 0 END) AS MONTHLY_GROSS_AMOUNT&#xD;&#xA;   , SUM(CASE WHEN BASE_AMOUNT_FLAG = 'Y' THEN AMOUNT * ITEM_TYPE_DIRECTION ELSE 0 END) AS MONTHLY_NET_AMOUNT&#xD;&#xA;   , SUM(CASE WHEN ITEM_TYPE_DIRECTION = 1 THEN AMOUNT ELSE 0 END) AS GROSS_AMOUNT&#xD;&#xA;   , SUM(ITEM_TYPE_DIRECTION * AMOUNT) AS NET_CHECK_AMOUNT,MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;   , (ISNULL(BAC.STARTING_NONTAXABLE_AMOUNT,0)+ISNULL(BAC.STARTING_TAXABLE_AMOUNT,0)) AS ACCOUNT_BALANCE&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'RHIC' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS RHIC&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'STTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS STTX&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'FEDX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS FEDX&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'INSR' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS INSR&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'OTHR' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS OTHR&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS2 WITH(NOLOCK) ON PAS2.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK) ON PAS2.STATUS_ID= CV2.CODE_ID AND PAS2.STATUS_VALUE = CV2.CODE_VALUE&#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPI WITH(NOLOCK) ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   INNER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;    ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @LAST_SCHEDULE_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_ACCOUNT BAC ON PA.BENEFIT_ACCOUNT_ID = BAC.BENEFIT_ACCOUNT_ID&#xD;&#xA; --COND: REPORT WILL DISPLAY ALL THE PAYEES WHOSE ‘PAYEE STATUS’ WAS ‘SUSPENDED’ &#xD;&#xA;  WHERE CV.DATA2 IN ('SPND','REVW') AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @LAST_PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   ) &#xD;&#xA;  AND (CV2.DATA2 = 'APRD'  AND PAS2.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS3 WITH(NOLOCK) &#xD;&#xA;     WHERE PAS3.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS3.STATUS_EFFECTIVE_DATE &gt; @LAST_PAYMENTDATE &#xD;&#xA;     ORDER BY PAS3.STATUS_EFFECTIVE_DATE DESC,PAS3.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; --COND: 5A   DID NOT RECEIVE ANY PAYMENTS LAST MONTH&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA; --COND: 1,2,3,4&#xD;&#xA;  AND ( PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;   OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE  NOT IN  ('REFD','AURD','RGRD'))&#xD;&#xA;   )&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  GROUP BY PA.PAYEE_PERSLINK_ID, PAS2.STATUS_EFFECTIVE_DATE&#xD;&#xA;  , (ISNULL(BAC.STARTING_NONTAXABLE_AMOUNT,0)+ISNULL(BAC.STARTING_TAXABLE_AMOUNT,0)), MINIMUM_GUARANTEE_AMOUNT,PA.PAYEE_ORG_ID&#xD;&#xA; ) MA JOIN SGT_PERSON PER WITH(NOLOCK) ON MA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION ORG ON MA.PAYEE_PERSLINK_ID = ORG.ORG_ID&#xD;&#xA; ORDER BY LAST_NAME,FIRST_NAME, SSN&#xD;&#xA;END&#xD;&#xA;ELSE&#xD;&#xA;BEGIN&#xD;&#xA; SELECT ISNULL(CAST(PERSON_ID AS VARCHAR(10)),ORG.ORG_CODE) AS PERSLINK_ID, LEFT(SSN,3)+'-'+SUBSTRING(SSN,4,2)+'-'+RIGHT(SSN,4) AS SSN, FIRST_NAME, &#xD;&#xA; CASE WHEN PERSON_ID IS NULL THEN ORG.ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME, &#xD;&#xA; STATUS_EFFECTIVE_DATE AS REACTIVATION_DATE&#xD;&#xA;  , MONTHLY_GROSS_AMOUNT, MONTHLY_NET_AMOUNT, GROSS_AMOUNT AS CURRENT_MONTH_GROSS_AMOUNT, NET_CHECK_AMOUNT&#xD;&#xA;  ,ACCOUNT_BALANCE, MINIMUM_GUARANTEE_AMOUNT,RHIC,STTX,FEDX,INSR,OTHR&#xD;&#xA;  FROM &#xD;&#xA; (&#xD;&#xA;  SELECT PA.PAYEE_PERSLINK_ID, PAS2.STATUS_EFFECTIVE_DATE, PA.PAYEE_ORG_ID&#xD;&#xA;   , SUM(CASE WHEN ITEM_TYPE_DIRECTION = 1 AND BASE_AMOUNT_FLAG = 'Y' THEN AMOUNT ELSE 0 END) AS MONTHLY_GROSS_AMOUNT&#xD;&#xA;   , SUM(CASE WHEN BASE_AMOUNT_FLAG = 'Y' THEN AMOUNT * ITEM_TYPE_DIRECTION ELSE 0 END) AS MONTHLY_NET_AMOUNT&#xD;&#xA;   , SUM(CASE WHEN ITEM_TYPE_DIRECTION = 1 THEN AMOUNT ELSE 0 END) AS GROSS_AMOUNT&#xD;&#xA;   , SUM(ITEM_TYPE_DIRECTION * AMOUNT) AS NET_CHECK_AMOUNT,MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;   , (ISNULL(BAC.STARTING_NONTAXABLE_AMOUNT,0)+ISNULL(BAC.STARTING_TAXABLE_AMOUNT,0)) AS ACCOUNT_BALANCE&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'RHIC' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS RHIC&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'STTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS STTX&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'FEDX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS FEDX&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'INSR' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS INSR&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'OTHR' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS OTHR&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;   --INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS2 WITH(NOLOCK) ON PAS2.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK) ON PAS2.STATUS_ID= CV2.CODE_ID AND PAS2.STATUS_VALUE = CV2.CODE_VALUE&#xD;&#xA;   --INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPI WITH(NOLOCK) ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   --INNER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;    ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @LAST_SCHEDULE_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_ACCOUNT BAC ON PA.BENEFIT_ACCOUNT_ID = BAC.BENEFIT_ACCOUNT_ID&#xD;&#xA; --COND: REPORT WILL DISPLAY ALL THE PAYEES WHOSE ‘PAYEE STATUS’ WAS ‘SUSPENDED’ &#xD;&#xA;  WHERE&#xD;&#xA;   -- CV.DATA2 IN ('SPND','REVW') AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   --(SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   -- FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;   -- WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   -- AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @LAST_PAYMENTDATE&#xD;&#xA;   -- ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   --) &#xD;&#xA;   --AND &#xD;&#xA;   (CV2.DATA2 = 'APRD'  AND PAS2.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS3 WITH(NOLOCK) &#xD;&#xA;     WHERE PAS3.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS3.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS3.STATUS_EFFECTIVE_DATE DESC,PAS3.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   )&#xD;&#xA;  AND PAS2.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; --COND: 5A   DID NOT RECEIVE ANY PAYMENTS LAST MONTH&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA; --COND: 1,2,3,4&#xD;&#xA;  AND ( PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;   OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE  NOT IN  ('REFD','AURD','RGRD'))&#xD;&#xA;   )&#xD;&#xA; --COND: 6&#xD;&#xA;  AND PA.PAYEE_ACCOUNT_ID IN &#xD;&#xA;  (SELECT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER PHH   &#xD;&#xA;    LEFT OUTER JOIN SGT_PAYMENT_SCHEDULE B &#xD;&#xA;     ON PHH.PAYMENT_SCHEDULE_ID = B.PAYMENT_SCHEDULE_ID&#xD;&#xA;    WHERE B.PAYMENT_DATE &lt; @LAST_PAYMENTDATE &#xD;&#xA;    AND isnull(B.SCHEDULE_TYPE_VALUE,'MTLY') =  'MTLY' &#xD;&#xA;  )&#xD;&#xA;  AND ISNULL(PA.PAYEE_ACCOUNT_ID,0) NOT IN &#xD;&#xA;  (&#xD;&#xA;   SELECT ISNULL(PAYEE_ACCOUNT_ID,0) FROM SGT_PAYMENT_HISTORY_HEADER PHH   &#xD;&#xA;   INNER JOIN SGT_PAYMENT_SCHEDULE B &#xD;&#xA;    ON PHH.PAYMENT_SCHEDULE_ID = B.PAYMENT_SCHEDULE_ID&#xD;&#xA;   WHERE B.PAYMENT_SCHEDULE_ID = @LAST_SCHEDULE_ID&#xD;&#xA;  )&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  GROUP BY PA.PAYEE_PERSLINK_ID, PAS2.STATUS_EFFECTIVE_DATE&#xD;&#xA;  , (ISNULL(BAC.STARTING_NONTAXABLE_AMOUNT,0)+ISNULL(BAC.STARTING_TAXABLE_AMOUNT,0)), MINIMUM_GUARANTEE_AMOUNT,PA.PAYEE_ORG_ID&#xD;&#xA; ) MA JOIN SGT_PERSON PER WITH(NOLOCK) ON MA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION ORG ON MA.PAYEE_ORG_ID = ORG.ORG_ID&#xD;&#xA; ORDER BY LAST_NAME,FIRST_NAME, SSN &#xD;&#xA;END">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="TrialClosedorSuspendedPayeeAccountReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LAST_PAYMENTDATE DATETIME&#xD;&#xA;DECLARE @LAST_SCHEDULE_ID INT&#xD;&#xA;SET @LAST_PAYMENTDATE = DATEADD(M,-1,@PAYMENTDATE)&#xD;&#xA;DECLARE @CREATED_BY VARCHAR(50)&#xD;&#xA;SELECT @CREATED_BY=CREATED_BY,@LAST_SCHEDULE_ID=ISNULL(PAYMENT_SCHEDULE_ID,0) FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA;WHERE PAYMENT_DATE = @LAST_PAYMENTDATE AND SCHEDULE_TYPE_VALUE = 'MTLY' AND STATUS_VALUE = 'PRCD'&#xD;&#xA;&#xD;&#xA;SELECT PHH.PAYEE_ACCOUNT_ID,SUM(ISNULL(PHD.AMOUNT,0)) AS PAID_AMOUNT&#xD;&#xA; INTO #TEMP&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE CV.DATA2 NOT IN ('RECV', 'APRD') AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &gt; @LAST_PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;AND ( PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR') &#xD;&#xA;OR  ( PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD')))&#xD;&#xA;AND PIT.ITEM_TYPE_DIRECTION=1 &#xD;&#xA;AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;GROUP BY PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;   &#xD;&#xA;IF(@CREATED_BY = 'CONVERSION')&#xD;&#xA;BEGIN&#xD;&#xA; SELECT ISNULL(CAST(PERSON_ID AS VARCHAR(10)),ORG.ORG_CODE) AS PERSLINK_ID, LEFT(SSN,3)+'-'+SUBSTRING(SSN,4,2)+'-'+RIGHT(SSN,4) AS SSN, FIRST_NAME, &#xD;&#xA;   CASE WHEN PERSON_ID IS NULL THEN ORG.ORG_NAME&#xD;&#xA;   ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME,&#xD;&#xA;   STATUS_EFFECTIVE_DATE AS REACTIVATION_DATE, PAYEE_STATUS&#xD;&#xA;  , MONTHLY_GROSS_AMOUNT, MONTHLY_NET_AMOUNT&#xD;&#xA;  ,ACCOUNT_BALANCE, MINIMUM_GUARANTEE_AMOUNT,RHIC,STTX,FEDX,INSR,OTHR&#xD;&#xA;  ,DATA2&#xD;&#xA; FROM &#xD;&#xA; (&#xD;&#xA;  SELECT PA.PAYEE_PERSLINK_ID, PAS.STATUS_EFFECTIVE_DATE, CV.DESCRIPTION AS PAYEE_STATUS,PA.PAYEE_ORG_ID&#xD;&#xA;   , SUM(CASE WHEN ITEM_TYPE_DIRECTION = 1 AND ISNULL(PIT.PAYEE_DETAIL_GROUP_VALUE,'') &lt;&gt; 'RHIC' THEN AMOUNT ELSE 0 END) AS MONTHLY_GROSS_AMOUNT&#xD;&#xA;   , SUM(ITEM_TYPE_DIRECTION * AMOUNT) AS MONTHLY_NET_AMOUNT&#xD;&#xA;   , CASE WHEN MINIMUM_GUARANTEE_AMOUNT &gt; A.PAID_AMOUNT THEN (MINIMUM_GUARANTEE_AMOUNT - A.PAID_AMOUNT) &#xD;&#xA;     ELSE 0 END AS MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;   , (BAC.STARTING_NONTAXABLE_AMOUNT+BAC.STARTING_TAXABLE_AMOUNT) AS ACCOUNT_BALANCE&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'RHIC' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS RHIC&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'STTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS STTX&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'FEDX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS FEDX&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'INSR' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS INSR&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'OTHR' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS OTHR&#xD;&#xA;   , CV.DATA2&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPI WITH(NOLOCK) ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_ACCOUNT BAC ON PA.BENEFIT_ACCOUNT_ID = BAC.BENEFIT_ACCOUNT_ID&#xD;&#xA;   LEFT OUTER JOIN #TEMP A ON A.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  --COND:7&#xD;&#xA;  WHERE CV.DATA2 NOT IN ('RECV', 'APRD') AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &gt; @LAST_PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   --AND PA.BENEFIT_BEGIN_DATE &lt;= @LAST_PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;   AND PAPI.START_DATE &lt;= @LAST_PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;  --COND: 1,2,3,4&#xD;&#xA;   AND ( PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;     OR &#xD;&#xA;     ( PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD'))&#xD;&#xA;    )&#xD;&#xA;   AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;   AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  GROUP BY PA.PAYEE_PERSLINK_ID, PAS.STATUS_EFFECTIVE_DATE, CV.DESCRIPTION,PA.PAYEE_ORG_ID&#xD;&#xA;  , (BAC.STARTING_NONTAXABLE_AMOUNT+BAC.STARTING_TAXABLE_AMOUNT), MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;  , CV.DATA2,A.PAID_AMOUNT&#xD;&#xA; ) MA LEFT OUTER JOIN SGT_PERSON PER WITH(NOLOCK) ON MA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON MA.PAYEE_ORG_ID = ORG.ORG_ID&#xD;&#xA; ORDER BY LAST_NAME, FIRST_NAME, SSN&#xD;&#xA;END&#xD;&#xA;ELSE&#xD;&#xA;BEGIN&#xD;&#xA;  SELECT ISNULL(CAST(PERSON_ID AS VARCHAR(10)),ORG.ORG_CODE) AS PERSLINK_ID, LEFT(SSN,3)+'-'+SUBSTRING(SSN,4,2)+'-'+RIGHT(SSN,4) AS SSN, FIRST_NAME, &#xD;&#xA;   CASE WHEN PERSON_ID IS NULL THEN ORG.ORG_NAME&#xD;&#xA;   ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME,&#xD;&#xA;   STATUS_EFFECTIVE_DATE AS REACTIVATION_DATE, PAYEE_STATUS&#xD;&#xA;  , MONTHLY_GROSS_AMOUNT, MONTHLY_NET_AMOUNT&#xD;&#xA;  ,ACCOUNT_BALANCE, MINIMUM_GUARANTEE_AMOUNT,RHIC,STTX,FEDX,INSR,OTHR&#xD;&#xA;  ,DATA2&#xD;&#xA; FROM &#xD;&#xA; (&#xD;&#xA;  SELECT PA.PAYEE_PERSLINK_ID, PAS.STATUS_EFFECTIVE_DATE, CV.DESCRIPTION AS PAYEE_STATUS, PA.PAYEE_ORG_ID&#xD;&#xA;   , SUM(CASE WHEN ITEM_TYPE_DIRECTION = 1 AND ISNULL(PIT.PAYEE_DETAIL_GROUP_VALUE,'') &lt;&gt; 'RHIC' THEN AMOUNT ELSE 0 END) AS MONTHLY_GROSS_AMOUNT&#xD;&#xA;   , SUM(ITEM_TYPE_DIRECTION * AMOUNT) AS MONTHLY_NET_AMOUNT&#xD;&#xA;   , CASE WHEN MINIMUM_GUARANTEE_AMOUNT &gt; A.PAID_AMOUNT THEN (MINIMUM_GUARANTEE_AMOUNT - A.PAID_AMOUNT) &#xD;&#xA;     ELSE 0 END AS MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;   , (BAC.STARTING_NONTAXABLE_AMOUNT+BAC.STARTING_TAXABLE_AMOUNT) AS ACCOUNT_BALANCE&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'RHIC' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS RHIC&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'STTX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS STTX&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'FEDX' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS FEDX&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'INSR' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS INSR&#xD;&#xA;   , SUM(CASE WHEN PIT.PAYEE_DETAIL_GROUP_VALUE = 'OTHR' THEN (ITEM_TYPE_DIRECTION * AMOUNT) ELSE 0 END) AS OTHR&#xD;&#xA;   , CV.DATA2&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPI WITH(NOLOCK) ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;  --COND:5&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;    ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID AND PHH.PAYMENT_SCHEDULE_ID = @LAST_SCHEDULE_ID&#xD;&#xA;   LEFT OUTER JOIN &#xD;&#xA;    ( SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION WHERE PAYMENT_METHOD_VALUE IN ('CHK','ACH')) AS PHDIS&#xD;&#xA;    ON PHDIS.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_ACCOUNT BAC ON PA.BENEFIT_ACCOUNT_ID = BAC.BENEFIT_ACCOUNT_ID&#xD;&#xA;   LEFT OUTER JOIN #TEMP A ON A.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID   &#xD;&#xA;  --COND:7&#xD;&#xA;  WHERE CV.DATA2 NOT IN ('RECV', 'APRD') AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     --AND PAS1.STATUS_EFFECTIVE_DATE &gt; @LAST_PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   --AND PA.BENEFIT_BEGIN_DATE &lt;= @LAST_PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;   AND PAPI.START_DATE &lt;= @LAST_PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;  --COND: 1,2,3,4&#xD;&#xA;   AND ( PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;     OR &#xD;&#xA;     ( PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD'))&#xD;&#xA;    )&#xD;&#xA;  --COND:6&#xD;&#xA;   --AND PA.PAYEE_ACCOUNT_ID IN &#xD;&#xA;   --(SELECT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;   -- LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   --  WHERE (PHD.DISTRIBUTION_STATUS_VALUE IN ('ACRD','AOTS','CLRD','COTS','RCRD','ROTS','RRCL','RROT')&#xD;&#xA;   --  AND PAYMENT_METHOD_VALUE IN ('CHK','ACH')) OR PHD.PAYMENT_HISTORY_HEADER_ID IS NULL&#xD;&#xA;   --)&#xD;&#xA;   AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;   AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  GROUP BY PA.PAYEE_PERSLINK_ID, PAS.STATUS_EFFECTIVE_DATE, CV.DESCRIPTION, PA.PAYEE_ORG_ID&#xD;&#xA;  , (BAC.STARTING_NONTAXABLE_AMOUNT+BAC.STARTING_TAXABLE_AMOUNT), MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;  , CV.DATA2,A.PAID_AMOUNT&#xD;&#xA; ) MA LEFT OUTER JOIN SGT_PERSON PER WITH(NOLOCK) ON MA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON MA.PAYEE_ORG_ID = ORG.ORG_ID&#xD;&#xA; ORDER BY LAST_NAME, FIRST_NAME, SSN&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="TrialRetirementOptionSummaryReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PLAN_NAME,ACCT_RELATIONSHIP,BENEFIT_TYPE,BENEFIT_OPTION,SUM(NUBER_OF_OPTION) AS NUBER_OF_OPTION,SUM(AMOUNT) AS AMOUNT&#xD;&#xA;FROM&#xD;&#xA; (SELECT PL.PLAN_NAME,CV2.DESCRIPTION AS ACCT_RELATIONSHIP, CV1.DESCRIPTION AS BENEFIT_TYPE, &#xD;&#xA;  BOPT.DESCRIPTION AS BENEFIT_OPTION, COUNT(DISTINCT PA.PAYEE_ACCOUNT_ID) AS NUBER_OF_OPTION, SUM(PAPI.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT(NOLOCK) PA &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE BOPT ON PA.BENEFIT_OPTION_ID= BOPT.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BOPT.CODE_VALUE&#xD;&#xA;&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV1 ON PA.BENEFIT_ACCOUNT_TYPE_ID= CV1.CODE_ID AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV2 ON PA.ACCOUNT_RELATION_ID= CV2.CODE_ID AND PA.ACCOUNT_RELATION_VALUE = CV2.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND PADR&#xD;&#xA;   ON PADR.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;   (SELECT PARP.PAYEE_ACCOUNT_ID,PARP.PAYMENT_OPTION_VALUE,PARPD.* FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT PARP &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL PARPD ON &#xD;&#xA;   PARPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = PARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;   WHERE PAYMENT_HISTORY_HEADER_ID IS NULL ) AS RETRO&#xD;&#xA;  ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND RETRO.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION(NOLOCK) BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC ON DROC.DRO_CALCULATION_ID = PA.DRO_CALCULATION_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN(NOLOCK) PL ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND (PADR.PAYMENT_OPTION_VALUE IS NULL OR PADR.PAYMENT_OPTION_VALUE = 'RGLR')&#xD;&#xA;  AND (RETRO.PAYMENT_OPTION_VALUE IS NULL OR RETRO.PAYMENT_OPTION_VALUE = 'REGL')&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; GROUP BY BOPT.DESCRIPTION, PL.PLAN_NAME, CV2.DESCRIPTION, CV1.DESCRIPTION&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT PL.PLAN_NAME,CV2.DESCRIPTION AS ACCT_RELATIONSHIP, CV1.DESCRIPTION AS BENEFIT_TYPE, &#xD;&#xA;  BOPT.DESCRIPTION AS BENEFIT_OPTION, 0 AS NUBER_OF_OPTION, SUM(PAPI.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT(NOLOCK) PA &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE BOPT ON PA.BENEFIT_OPTION_ID= BOPT.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BOPT.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV1 ON PA.BENEFIT_ACCOUNT_TYPE_ID= CV1.CODE_ID AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV2 ON PA.ACCOUNT_RELATION_ID= CV2.CODE_ID AND PA.ACCOUNT_RELATION_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;      AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION(NOLOCK) BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC ON DROC.DRO_CALCULATION_ID = PA.DRO_CALCULATION_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN(NOLOCK) PL ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; GROUP BY BOPT.DESCRIPTION, PL.PLAN_NAME, CV2.DESCRIPTION, CV1.DESCRIPTION&#xD;&#xA;) AS FINAL&#xD;&#xA;GROUP BY PLAN_NAME,ACCT_RELATIONSHIP,BENEFIT_TYPE,BENEFIT_OPTION&#xD;&#xA;ORDER BY PLAN_NAME,ACCT_RELATIONSHIP,BENEFIT_TYPE,BENEFIT_OPTION">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="TrialBenefitPaymentChangeMainReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @SCHEDULE_ID INT&#xD;&#xA;&#xD;&#xA;DECLARE @LAST_PAYMENTDATE DATETIME&#xD;&#xA;DECLARE @CREATED_BY VARCHAR(50)&#xD;&#xA;&#xD;&#xA;SET @LAST_PAYMENTDATE  = DATEADD(M,-1,@PAYMENTDATE)&#xD;&#xA;&#xD;&#xA;SELECT @SCHEDULE_ID = PAYMENT_SCHEDULE_ID,@CREATED_BY = ISNULL(CREATED_BY,'') FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA; WHERE STATUS_VALUE = 'PRCD' AND SCHEDULE_TYPE_VALUE = 'MTLY' AND PAYMENT_DATE = @LAST_PAYMENTDATE&#xD;&#xA;&#xD;&#xA;SELECT @SCHEDULE_ID = ISNULL(@SCHEDULE_ID,0)&#xD;&#xA;&#xD;&#xA;----- taken ID in temp table from payment history header table&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INTO #DIST&#xD;&#xA; FROM DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH &#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_DISTRIBUTION(NOLOCK) PHDN ON PHH.PAYMENT_HISTORY_HEADER_ID = PHDN.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;WHERE ISNULL(PAYMENT_SCHEDULE_ID,0) = @SCHEDULE_ID&#xD;&#xA; AND PHDN.DISTRIBUTION_STATUS_VALUE IN ('ACRD','AOTS','CLRD','COTS','RCRD','ROTS','RRCL','RROT','AVPD','RAVP','RVPD','CVPD','CSPP','RRSP')&#xD;&#xA; AND PHH.STATUS_VALUE IN ('OUST','PRCD','RPND')&#xD;&#xA; AND PAYMENT_METHOD_VALUE IN ('CHK','ACH')&#xD;&#xA;-----------------------------------&#xD;&#xA;CREATE TABLE #PREV&#xD;&#xA; (BATCH_SCHEDULE_ID INT,&#xD;&#xA; PAYEE_ACCOUNT_ID INT,&#xD;&#xA; PAYEE_PERSLINK_ID INT,&#xD;&#xA; PAYEE_ORG_ID INT,&#xD;&#xA; PAYMENT_ITEM_TYPE_ID INT,&#xD;&#xA; AMOUNT DECIMAL(13,2),&#xD;&#xA; PERSON_ACCOUNT_ID INT)&#xD;&#xA; --COND: 2  -- taken payee account data which are in receiving and approved status for current month and created by user or batch&#xD;&#xA; INSERT INTO #PREV&#xD;&#xA; SELECT  PAPIT.BATCH_SCHEDULE_ID AS BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PHD.PAYMENT_ITEM_TYPE_ID, SUM(PHD.AMOUNT) AS AMOUNT, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN #DIST(NOLOCK) PHDN ON PHH.PAYMENT_HISTORY_HEADER_ID = PHDN.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;   (&#xD;&#xA;    SELECT DISTINCT BATCH_SCHEDULE_ID, &#xD;&#xA;     PAYEE_ACCOUNT_ID,&#xD;&#xA;     PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;&#x9; PERSON_ACCOUNT_ID&#xD;&#xA;     FROM DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI&#xD;&#xA;     WHERE PAPI.START_DATE &lt;= @LAST_PAYMENTDATE AND &#xD;&#xA;     (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;   ) PAPIT ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;    AND PHD.PAYMENT_ITEM_TYPE_ID = PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE ISNULL(PAYMENT_SCHEDULE_ID,0) = @SCHEDULE_ID&#xD;&#xA;  AND (PHD.CREATED_BY &lt;&gt; 'CONVERSION' OR PHD.MODIFIED_BY &lt;&gt; 'CONVERSION')&#xD;&#xA;  AND CV.DATA2 IN ('RECV','APRD')&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAS1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)  &#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA;  AND ISNULL(PAPIT.PAYMENT_ITEM_TYPE_ID, 0) NOT IN (110,112)&#xD;&#xA; GROUP BY PAPIT.BATCH_SCHEDULE_ID,PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PHD.PAYMENT_ITEM_TYPE_ID, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT  PAPIT.BATCH_SCHEDULE_ID AS BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PHD.PAYMENT_ITEM_TYPE_ID, PHD.AMOUNT AS AMOUNT, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN #DIST(NOLOCK) PHDN ON PHH.PAYMENT_HISTORY_HEADER_ID = PHDN.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;   (&#xD;&#xA;    SELECT DISTINCT BATCH_SCHEDULE_ID, &#xD;&#xA;     PAYEE_ACCOUNT_ID,&#xD;&#xA;     PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;&#x9; PERSON_ACCOUNT_ID,&#xD;&#xA;&#x9; AMOUNT&#xD;&#xA;     FROM DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI&#xD;&#xA;     WHERE PAPI.START_DATE &lt;= @LAST_PAYMENTDATE AND &#xD;&#xA;     (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;   ) PAPIT ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;    AND PHD.PAYMENT_ITEM_TYPE_ID = PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9;AND PAPIT.AMOUNT = PHD.AMOUNT&#xD;&#xA; WHERE ISNULL(PAYMENT_SCHEDULE_ID,0) = @SCHEDULE_ID&#xD;&#xA;  AND (PHD.CREATED_BY &lt;&gt; 'CONVERSION' OR PHD.MODIFIED_BY &lt;&gt; 'CONVERSION')&#xD;&#xA;  AND CV.DATA2 IN ('RECV','APRD')&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAS1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)  &#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA;  AND ISNULL(PAPIT.PAYMENT_ITEM_TYPE_ID, 0) IN (110,112)&#xD;&#xA; GROUP BY PAPIT.BATCH_SCHEDULE_ID,PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PHD.PAYMENT_ITEM_TYPE_ID, PHD.AMOUNT, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;-------------------------------------------------&#xD;&#xA;SELECT MA.BATCH_SCHEDULE_ID, MA.PAYEE_ACCOUNT_ID, MA.PERSON_ID&#xD;&#xA;, ORG_CODE &#xD;&#xA; , STEP_NAME&#xD;&#xA; , ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') AS LAST_NAME&#xD;&#xA; , FIRST_NAME&#xD;&#xA; , ORG_NAME&#xD;&#xA; , ITEM_TYPE_CODE&#xD;&#xA; , ITEM_TYPE_DESCRIPTION&#xD;&#xA; , CHECK_COMPONENT_DESCRIPTION &#xD;&#xA; , ISNULL(AFTERAMOUNT,0)* ITEM_TYPE_DIRECTION AS AFTER_AMOUNT&#xD;&#xA; , ISNULL(BEFOREAMOUNT,0)* ITEM_TYPE_DIRECTION AS BEFORE_AMOUNT&#xD;&#xA; , (ISNULL(AFTERAMOUNT,0)* ITEM_TYPE_DIRECTION) &#xD;&#xA;  - (ISNULL(BEFOREAMOUNT,0)* ITEM_TYPE_DIRECTION) AS DIFFERENCE_AMOUNT&#xD;&#xA;  ,cid,pid,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; ,PERSON_ACCOUNT_ID&#xD;&#xA; &#xD;&#xA; INTO #FINAL&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;&#xD;&#xA;--&lt;&lt;&lt;&lt; CUR MONTH PAYMENT ITEM WISE AMOUNT, OTHER THAN BATCH ITEM&#xD;&#xA;&#xD;&#xA;-- if current month payee acc id and batch schedule id is null then take prev else take current month batch schedule id&#xD;&#xA;SELECT &#xD;&#xA; CASE &#xD;&#xA;  WHEN PREV.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND PREV.BATCH_SCHEDULE_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.BATCH_SCHEDULE_ID IS NOT NULL &#xD;&#xA;  THEN CUR_PAY.BATCH_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;  WHEN PREV.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND PREV.BATCH_SCHEDULE_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.BATCH_SCHEDULE_ID IS NULL &#xD;&#xA;  THEN CUR_PAY.BATCH_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;  WHEN PREV.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND PREV.BATCH_SCHEDULE_ID IS NULL &#xD;&#xA;    AND CUR_PAY.BATCH_SCHEDULE_ID IS NOT NULL &#xD;&#xA;  THEN CUR_PAY.BATCH_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;  WHEN PREV.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.PAYEE_ACCOUNT_ID IS  NULL &#xD;&#xA;    AND PREV.BATCH_SCHEDULE_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.BATCH_SCHEDULE_ID IS NULL &#xD;&#xA;  THEN PREV.BATCH_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;  WHEN PREV.PAYEE_ACCOUNT_ID IS NULL &#xD;&#xA;    AND CUR_PAY.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND PREV.BATCH_SCHEDULE_ID IS NULL &#xD;&#xA;    AND CUR_PAY.BATCH_SCHEDULE_ID IS NOT NULL &#xD;&#xA;  THEN CUR_PAY.BATCH_SCHEDULE_ID&#xD;&#xA; END AS BATCH_SCHEDULE_ID&#xD;&#xA; , ISNULL(CUR_PAY.PAYEE_ACCOUNT_ID, PREV.PAYEE_ACCOUNT_ID) AS PAYEE_ACCOUNT_ID&#xD;&#xA; , ISNULL(CUR_PAY.PAYEE_PERSLINK_ID, PREV.PAYEE_PERSLINK_ID) AS PERSON_ID&#xD;&#xA; , ISNULL(CUR_PAY.PAYEE_ORG_ID, PREV.PAYEE_ORG_ID) AS ORG_ID&#xD;&#xA; , ISNULL(CUR_PAY.PAYMENT_ITEM_TYPE_ID, PREV.PAYMENT_ITEM_TYPE_ID) PAYMENT_ITEM_TYPE_ID&#xD;&#xA; , CUR_PAY.AMOUNT AS AFTERAMOUNT, PREV.AMOUNT AS BEFOREAMOUNT,&#xD;&#xA; PREV.BATCH_SCHEDULE_ID AS PID,&#xD;&#xA; CUR_PAY.BATCH_SCHEDULE_ID AS CID,&#xD;&#xA; PREV.PERSON_ACCOUNT_ID&#xD;&#xA; FROM &#xD;&#xA;&#xD;&#xA;(&#xD;&#xA;--COND: 1&#xD;&#xA;SELECT PAPI.BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID&#xD;&#xA; , PAPI.PAYMENT_ITEM_TYPE_ID, SUM(PAPI.AMOUNT) AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPI.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WHERE PAYMENT_SCHEDULE_ID = @SCHEDULE_ID) PHHLAST&#xD;&#xA;    ON PHHLAST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;WHERE CV.DATA2 IN ('RECV','APRD')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA; AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) NOT IN (110,112)&#xD;&#xA;GROUP BY BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PAPI.PAYMENT_ITEM_TYPE_ID, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT PAPI.BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID&#xD;&#xA; , PIT1.PAYMENT_ITEM_TYPE_ID, SUM(PAPI.AMOUNT) AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PASLAST ON PASLAST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CVLAST ON PASLAST.STATUS_ID= CVLAST.CODE_ID AND PASLAST.STATUS_VALUE = CVLAST.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PAPI.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE CV.DATA2 IN ('RECV','APRD')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND CVLAST.DATA2  = 'RECV'&#xD;&#xA; AND PASLAST.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT top 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CVX &#xD;&#xA;   ON CVX.CODE_ID = PAS1.STATUS_ID AND CVX.CODE_VALUE = PAS1.STATUS_VALUE &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @LAST_PAYMENTDATE&#xD;&#xA;   and CVX.DATA2  = 'RECV' &#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA; AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA; AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) NOT IN (110,112)&#xD;&#xA;GROUP BY BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PIT1.PAYMENT_ITEM_TYPE_ID, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PAPI.BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID&#xD;&#xA; , PAPI.PAYMENT_ITEM_TYPE_ID, PAPI.AMOUNT AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPI.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WHERE PAYMENT_SCHEDULE_ID = @SCHEDULE_ID) PHHLAST&#xD;&#xA;    ON PHHLAST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;WHERE CV.DATA2 IN ('RECV','APRD')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA; AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID, 0) IN (110,112)&#xD;&#xA; --AND PAPI.BATCH_SCHEDULE_ID IS NULL&#xD;&#xA;GROUP BY BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PAPI.PAYMENT_ITEM_TYPE_ID, PAPI.AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT PAPI.BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID&#xD;&#xA; , PIT1.PAYMENT_ITEM_TYPE_ID, PAPI.AMOUNT AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PASLAST ON PASLAST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CVLAST ON PASLAST.STATUS_ID= CVLAST.CODE_ID AND PASLAST.STATUS_VALUE = CVLAST.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PAPI.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE CV.DATA2 IN ('RECV','APRD')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND CVLAST.DATA2  = 'RECV'&#xD;&#xA; AND PASLAST.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT top 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CVX &#xD;&#xA;   ON CVX.CODE_ID = PAS1.STATUS_ID AND CVX.CODE_VALUE = PAS1.STATUS_VALUE &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @LAST_PAYMENTDATE&#xD;&#xA;   and CVX.DATA2  = 'RECV' &#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA; AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA; AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) IN (110,112)&#xD;&#xA; --AND PAPI.BATCH_SCHEDULE_ID IS NULL&#xD;&#xA;GROUP BY BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PIT1.PAYMENT_ITEM_TYPE_ID, PAPI.AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;) AS CUR_PAY&#xD;&#xA;-----&#xD;&#xA;FULL OUTER JOIN  &#xD;&#xA;--&lt;&lt;&lt;&lt; PREV MONTH PAYMENT ITEM WISE AMOUNT, OTHER THAN BATCH ITEM&#xD;&#xA;#PREV AS PREV &#xD;&#xA;--COND: 3&#xD;&#xA;   ON CUR_PAY.PAYEE_ACCOUNT_ID = PREV.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND CUR_PAY.PAYMENT_ITEM_TYPE_ID = PREV.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   AND (ISNULL(CUR_PAY.PERSON_ACCOUNT_ID,0)) = (ISNULL(PREV.PERSON_ACCOUNT_ID,0)) &#xD;&#xA;--COND: 4 &amp; 5&#xD;&#xA;WHERE &#xD;&#xA;(((CUR_PAY.PAYEE_ACCOUNT_ID IS NULL OR PREV.PAYEE_ACCOUNT_ID IS NULL OR CUR_PAY.AMOUNT &lt;&gt; PREV.AMOUNT)&#xD;&#xA;)&#xD;&#xA;)&#xD;&#xA;)MA &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON MA.PERSON_ID = PER.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) ORG ON MA.ORG_ID = ORG.ORG_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON MA.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGS_BATCH_SCHEDULE(NOLOCK)BT ON MA.BATCH_SCHEDULE_ID = BT.BATCH_SCHEDULE_ID&#xD;&#xA; ORDER BY ISNULL(MA.BATCH_SCHEDULE_ID,999999999), PERSON_ID, ORG_CODE, ITEM_TYPE_CODE&#xD;&#xA;----------------------------------------------------------------------------------------&#xD;&#xA;IF @CHOICE = 'Y'&#xD;&#xA;BEGIN&#xD;&#xA; SELECT '' AS PARENT_NAME, STEP_NAME AS BATCH_NAME,CHECK_COMPONENT_DESCRIPTION AS ITEM_TYPE,&#xD;&#xA; SUM(BEFORE_AMOUNT) AS BEFORE_AMOUNT, SUM(AFTER_AMOUNT) AS AFTER_AMOUNT,SUM(DIFFERENCE_AMOUNT) AS DIFFERENCE_AMOUNT &#xD;&#xA; FROM #FINAL &#xD;&#xA; WHERE BATCH_SCHEDULE_ID IS NOT NULL&#xD;&#xA; GROUP BY STEP_NAME,CHECK_COMPONENT_DESCRIPTION&#xD;&#xA;END&#xD;&#xA;ELSE IF @CHOICE = 'N'&#xD;&#xA;BEGIN&#xD;&#xA; SELECT  ISNULL(CAST(PERSON_ID AS VARCHAR(10)),ORG_CODE) AS PERSLINK_ID, CASE WHEN PERSON_ID IS NULL THEN ORG_NAME&#xD;&#xA; ELSE LAST_NAME END AS LAST_NAME, FIRST_NAME, ITEM_TYPE_DESCRIPTION AS ITEM_TYPE,&#xD;&#xA;  BEFORE_AMOUNT, AFTER_AMOUNT,DIFFERENCE_AMOUNT &#xD;&#xA; FROM #FINAL&#xD;&#xA; WHERE BATCH_SCHEDULE_ID IS NULL&#xD;&#xA; IF OBJECT_ID('TEMP_BEN_PAY_CHANGE_PAYEE') IS NOT NULL&#xD;&#xA;  DROP TABLE TEMP_BEN_PAY_CHANGE_PAYEE&#xD;&#xA;SELECT DISTINCT PAYEE_ACCOUNT_ID INTO TEMP_BEN_PAY_CHANGE_PAYEE FROM #FINAL &#xD;&#xA;WHERE BATCH_SCHEDULE_ID IS NULL&#xD;&#xA;END &#xD;&#xA;ELSE IF @CHOICE = 'G'&#xD;&#xA;BEGIN&#xD;&#xA; SELECT  ITEM_TYPE_DESCRIPTION AS ITEM_TYPE,SUM(BEFORE_AMOUNT) AS BEFORE_AMOUNT,SUM(AFTER_AMOUNT) AS AFTER_AMOUNT,&#xD;&#xA; SUM(DIFFERENCE_AMOUNT) AS DIFFERENCE_AMOUNT,ITEM_TYPE_DIRECTION&#xD;&#xA; FROM #FINAL&#xD;&#xA; GROUP BY ITEM_TYPE_DESCRIPTION,ITEM_TYPE_DIRECTION&#xD;&#xA; ORDER BY ITEM_TYPE_DESCRIPTION&#xD;&#xA;END&#xD;&#xA;----Drop temp table&#xD;&#xA;DROP TABLE #DIST&#xD;&#xA;DROP TABLE #PREV&#xD;&#xA;DROP TABLE #FINAL">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@CHOICE" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="TrialMonthlyBenefitPaymentSummaryReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LAST_PAYMENTDATE DATETIME&#xD;&#xA;SET @LAST_PAYMENTDATE = DATEADD(M,-1,@PAYMENTDATE)&#xD;&#xA;DECLARE @CREATED_BY VARCHAR(50)&#xD;&#xA;SELECT @CREATED_BY=CREATED_BY FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_DATE = @LAST_PAYMENTDATE AND SCHEDULE_TYPE_VALUE = 'MTLY' AND STATUS_VALUE = 'PRCD'&#xD;&#xA;&#xD;&#xA;DECLARE @LAST_SCHEDULE_ID INT&#xD;&#xA;DECLARE @PROCESS_DATE DATETIME&#xD;&#xA;DECLARE @LASTEFFECTIVEDATE DATETIME&#xD;&#xA;SELECT @PROCESS_DATE = ISNULL(PROCESS_START_TIME,PROCESS_DATE),@LAST_SCHEDULE_ID = PAYMENT_SCHEDULE_ID,@LASTEFFECTIVEDATE = EFFECTIVE_DATE &#xD;&#xA;FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_DATE = &#xD;&#xA;(&#xD;&#xA;SELECT DATEADD(M,-1,PAYMENT_DATE) FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_SCHEDULE_ID = @SCHEDULE_ID&#xD;&#xA;) AND SCHEDULE_TYPE_VALUE = 'MTLY' and status_value = 'PRCD'&#xD;&#xA;&#xD;&#xA;--------------------------------------------------------------------&#xD;&#xA;--Dont remove this line, @SCHEDULE_ID is used in below queries to bring&#xD;&#xA;--past history records.&#xD;&#xA;SET @SCHEDULE_ID = @LAST_SCHEDULE_ID&#xD;&#xA;-------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;CREATE TABLE #PREV&#xD;&#xA; (BATCH_SCHEDULE_ID INT,&#xD;&#xA; PAYEE_ACCOUNT_ID INT,&#xD;&#xA; PAYEE_PERSLINK_ID INT,&#xD;&#xA; PAYEE_ORG_ID INT,&#xD;&#xA; PAYMENT_ITEM_TYPE_ID INT,&#xD;&#xA; AMOUNT DECIMAL(13,2),&#xD;&#xA; PERSON_ACCOUNT_ID INT)-- PIR 15950&#xD;&#xA; -------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;SELECT DISTINCT PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INTO #DIST&#xD;&#xA; FROM DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH &#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_DISTRIBUTION(NOLOCK) PHDN ON PHH.PAYMENT_HISTORY_HEADER_ID = PHDN.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;WHERE ISNULL(PAYMENT_SCHEDULE_ID,0) = @SCHEDULE_ID&#xD;&#xA; AND PHDN.DISTRIBUTION_STATUS_VALUE IN ('ACRD','AOTS','CLRD','COTS','RCRD','ROTS','RRCL','RROT','AVPD','RAVP','RVPD','CVPD','CSPP','RRSP')&#xD;&#xA; AND PHH.STATUS_VALUE IN ('OUST','PRCD','RPND')&#xD;&#xA; AND PAYMENT_METHOD_VALUE IN ('CHK','ACH')&#xD;&#xA; -------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;BEGIN&#xD;&#xA; --COND: 2&#xD;&#xA; INSERT INTO #PREV&#xD;&#xA; SELECT  PAPIT.BATCH_SCHEDULE_ID AS BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PHD.PAYMENT_ITEM_TYPE_ID, SUM(PHD.AMOUNT) AS AMOUNT, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN #DIST(NOLOCK) PHDN ON PHH.PAYMENT_HISTORY_HEADER_ID = PHDN.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;   (&#xD;&#xA;    SELECT DISTINCT BATCH_SCHEDULE_ID, &#xD;&#xA;     PAYEE_ACCOUNT_ID,&#xD;&#xA;     PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;&#x9; PERSON_ACCOUNT_ID&#xD;&#xA;     FROM DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI&#xD;&#xA;     WHERE PAPI.START_DATE &lt;= @LAST_PAYMENTDATE AND &#xD;&#xA;     (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;   ) PAPIT ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;    AND PHD.PAYMENT_ITEM_TYPE_ID = PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE ISNULL(PAYMENT_SCHEDULE_ID,0) = @SCHEDULE_ID&#xD;&#xA;  AND (PHD.CREATED_BY &lt;&gt; 'CONVERSION' OR PHD.MODIFIED_BY &lt;&gt; 'CONVERSION')&#xD;&#xA;  AND CV.DATA2 IN ('RECV','APRD')&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAS1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)  &#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA;  AND ISNULL(PAPIT.PAYMENT_ITEM_TYPE_ID, 0) NOT IN (110,112)&#xD;&#xA; GROUP BY PAPIT.BATCH_SCHEDULE_ID,PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PHD.PAYMENT_ITEM_TYPE_ID, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT  PAPIT.BATCH_SCHEDULE_ID AS BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PHD.PAYMENT_ITEM_TYPE_ID, PHD.AMOUNT AS AMOUNT, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN #DIST(NOLOCK) PHDN ON PHH.PAYMENT_HISTORY_HEADER_ID = PHDN.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;   (&#xD;&#xA;    SELECT DISTINCT BATCH_SCHEDULE_ID, &#xD;&#xA;     PAYEE_ACCOUNT_ID,&#xD;&#xA;     PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;&#x9; PERSON_ACCOUNT_ID,&#xD;&#xA;&#x9; AMOUNT&#xD;&#xA;     FROM DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI&#xD;&#xA;     WHERE PAPI.START_DATE &lt;= @LAST_PAYMENTDATE AND &#xD;&#xA;     (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;   ) PAPIT ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;    AND PHD.PAYMENT_ITEM_TYPE_ID = PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9;AND PAPIT.AMOUNT = PHD.AMOUNT&#xD;&#xA; WHERE ISNULL(PAYMENT_SCHEDULE_ID,0) = @SCHEDULE_ID&#xD;&#xA;  AND (PHD.CREATED_BY &lt;&gt; 'CONVERSION' OR PHD.MODIFIED_BY &lt;&gt; 'CONVERSION')&#xD;&#xA;  AND CV.DATA2 IN ('RECV','APRD')&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAS1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)  &#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA;  AND ISNULL(PAPIT.PAYMENT_ITEM_TYPE_ID, 0) IN (110,112)&#xD;&#xA; GROUP BY PAPIT.BATCH_SCHEDULE_ID,PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PHD.PAYMENT_ITEM_TYPE_ID, PHD.AMOUNT, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;SELECT REPORDER,REPTYPE,ISNULL(GROS,0) AS GROS,ISNULL(RHIC,0) AS RHIC,ISNULL(FEDL,0) AS FEDL,ISNULL(STAT,0) AS STAT,ISNULL(INSR,0) AS INSR,&#xD;&#xA;  ISNULL(OTHR,0) AS OTHR,CASE WHEN REPORDER = 8 THEN (ISNULL(GROS,0)+ISNULL(RHIC,0)+ISNULL(FEDL,0)+ISNULL(STAT,0)+ISNULL(INSR,0)+ISNULL(OTHR,0)) &#xD;&#xA;         ELSE (ISNULL(GROS,0)+ISNULL(RHIC,0)-ISNULL(FEDL,0)-ISNULL(STAT,0)-ISNULL(INSR,0)-ISNULL(OTHR,0)) END AS NET_AMOUNT &#xD;&#xA;  INTO #FINALRPT&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;select TEMP.REPORDER, TEMP.REPTYPE,TEMP.MONTHLY_SUMMARY_GROUP_VALUE,TEMP.AMOUNT from (&#xD;&#xA;&#xD;&#xA;--------F. SUM OF ALL PAYMENTS TO THE PAYEE IN ‘FINAL ADHOC PROCESS’ OR VENDOR PAYMENTS AS NEGATIVE AMOUNT &#xD;&#xA;--2 start&#xD;&#xA;SELECT 2 AS REPORDER,'Final Adhoc Process / Vendor Payments-'+CONVERT(VARCHAR(10),PHH.PAYMENT_DATE,101) AS REPTYPE, MONTHLY_SUMMARY_GROUP_VALUE, &#xD;&#xA; ABS(SUM(PIT.ITEM_TYPE_DIRECTION*PHD.AMOUNT)) AS AMOUNT,PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_SCHEDULE PS ON PS.PAYMENT_SCHEDULE_ID = PHH.PAYMENT_SCHEDULE_ID AND PS.SCHEDULE_TYPE_VALUE &lt;&gt; 'VNPM'&#xD;&#xA; LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN &#xD;&#xA;   (&#xD;&#xA;    SELECT DISTINCT BATCH_SCHEDULE_ID, &#xD;&#xA;     PAYEE_ACCOUNT_ID,&#xD;&#xA;     PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;&#x9; PAPI.PERSON_ACCOUNT_ID, -- PIR 15950&#xD;&#xA;&#x9; PAPI.AMOUNT&#xD;&#xA;     FROM DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI&#xD;&#xA;     WHERE PAPI.START_DATE &lt;= @LAST_PAYMENTDATE AND &#xD;&#xA;     (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;   ) PAPIT ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;    AND PHD.PAYMENT_ITEM_TYPE_ID = PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9;AND PAPIT.AMOUNT = PHD.AMOUNT&#xD;&#xA;WHERE PS.PROCESS_DATE &gt;= @PROCESS_DATE AND PHH.PAYMENT_DATE &lt; GETDATE()&#xD;&#xA;AND PS.SCHEDULE_TYPE_VALUE IN ('ADHC','VNPM')&#xD;&#xA;GROUP BY MONTHLY_SUMMARY_GROUP_VALUE,PHH.PAYMENT_DATE,PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;--2 end&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;----A. NEW RETIREE DETAIL REPORT AS POSITIVE AMOUNT&#xD;&#xA;--4 start&#xD;&#xA;SELECT 4 AS REPORDER,'New Payee', MONTHLY_SUMMARY_GROUP_VALUE, ABS(SUM(AMOUNT)) AS AMOUNT , TEMP.PERSON_ACCOUNT_ID&#xD;&#xA;FROM (&#xD;&#xA; --COPIED FROM REP# 2&#xD;&#xA; SELECT PA.PAYEE_ACCOUNT_ID,MONTHLY_SUMMARY_GROUP_VALUE,SUM(PIT.ITEM_TYPE_DIRECTION*AMOUNT) AS AMOUNT ,PAPI.PERSON_ACCOUNT_ID-- PIR 15950&#xD;&#xA; FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;  LEFT OUTER JOIN (&#xD;&#xA;    SELECT DISTINCT A.PAYEE_ACCOUNT_ID from SGT_PAYMENT_HISTORY_HEADER (NOLOCK) A&#xD;&#xA;     LEFT OUTER JOIN SGT_PAYMENT_SCHEDULE B ON A.PAYMENT_SCHEDULE_ID = B.PAYMENT_SCHEDULE_ID&#xD;&#xA;     WHERE A.PAYMENT_DATE &lt;= @LASTEFFECTIVEDATE &#xD;&#xA;     AND isnull(B.SCHEDULE_TYPE_VALUE,'MTLY') = 'MTLY'&#xD;&#xA;     -- take all old payments before the last payment date and make sure no payments are made earlier&#xD;&#xA;   )PHH ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE CV.DATA2 = 'APRD' AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA; --COND: 1,2,3,4&#xD;&#xA;  AND ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR')&#xD;&#xA;   OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' &#xD;&#xA;   OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD'))&#xD;&#xA;   )&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) NOT IN (110,112) -- PIR 15950&#xD;&#xA; GROUP BY PA.PAYEE_ACCOUNT_ID,MONTHLY_SUMMARY_GROUP_VALUE,PAPI.PERSON_ACCOUNT_ID&#xD;&#xA; UNION ALL&#xD;&#xA; SELECT PA.PAYEE_ACCOUNT_ID,PIT1.MONTHLY_SUMMARY_GROUP_VALUE,SUM(PIT1.ITEM_TYPE_DIRECTION*AMOUNT) AS AMOUNT , PAPI.PERSON_ACCOUNT_ID&#xD;&#xA; FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;    ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;  LEFT OUTER JOIN (&#xD;&#xA;    SELECT DISTINCT A.PAYEE_ACCOUNT_ID from SGT_PAYMENT_HISTORY_HEADER (NOLOCK) A&#xD;&#xA;     LEFT OUTER JOIN SGT_PAYMENT_SCHEDULE B ON A.PAYMENT_SCHEDULE_ID = B.PAYMENT_SCHEDULE_ID&#xD;&#xA;     WHERE A.PAYMENT_DATE &lt;= @LASTEFFECTIVEDATE &#xD;&#xA;     AND isnull(B.SCHEDULE_TYPE_VALUE,'MTLY') = 'MTLY'&#xD;&#xA;     -- take all old payments before the last payment date and make sure no payments are made earlier&#xD;&#xA;   )PHH ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE CV.DATA2 = 'APRD' AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA; --COND: 1,2,3,4&#xD;&#xA;  AND ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR')&#xD;&#xA;   OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' &#xD;&#xA;   OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD'))&#xD;&#xA;   )&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) NOT IN (110,112) -- PIR 15950&#xD;&#xA; GROUP BY PA.PAYEE_ACCOUNT_ID,PIT1.MONTHLY_SUMMARY_GROUP_VALUE,PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA; -- PIR 15950&#xD;&#xA;  SELECT PA.PAYEE_ACCOUNT_ID,MONTHLY_SUMMARY_GROUP_VALUE,SUM(PIT.ITEM_TYPE_DIRECTION*AMOUNT) AS AMOUNT ,PAPI.PERSON_ACCOUNT_ID-- PIR 15950&#xD;&#xA; FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;  LEFT OUTER JOIN (&#xD;&#xA;    SELECT DISTINCT A.PAYEE_ACCOUNT_ID from SGT_PAYMENT_HISTORY_HEADER (NOLOCK) A&#xD;&#xA;     LEFT OUTER JOIN SGT_PAYMENT_SCHEDULE B ON A.PAYMENT_SCHEDULE_ID = B.PAYMENT_SCHEDULE_ID&#xD;&#xA;     WHERE A.PAYMENT_DATE &lt;= @LASTEFFECTIVEDATE &#xD;&#xA;     AND isnull(B.SCHEDULE_TYPE_VALUE,'MTLY') = 'MTLY'&#xD;&#xA;     -- take all old payments before the last payment date and make sure no payments are made earlier&#xD;&#xA;   )PHH ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE CV.DATA2 = 'APRD' AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA; --COND: 1,2,3,4&#xD;&#xA;  AND ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR')&#xD;&#xA;   OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' &#xD;&#xA;   OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD'))&#xD;&#xA;   )&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) IN (110,112)&#xD;&#xA;  AND PAPI.BATCH_SCHEDULE_ID IS NULL&#xD;&#xA; GROUP BY PA.PAYEE_ACCOUNT_ID,MONTHLY_SUMMARY_GROUP_VALUE,PAPI.PERSON_ACCOUNT_ID&#xD;&#xA; UNION ALL&#xD;&#xA; SELECT PA.PAYEE_ACCOUNT_ID,PIT1.MONTHLY_SUMMARY_GROUP_VALUE,SUM(PIT1.ITEM_TYPE_DIRECTION*AMOUNT) AS AMOUNT , PAPI.PERSON_ACCOUNT_ID&#xD;&#xA; FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;    ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;    ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;       AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;  LEFT OUTER JOIN (&#xD;&#xA;    SELECT DISTINCT A.PAYEE_ACCOUNT_ID from SGT_PAYMENT_HISTORY_HEADER (NOLOCK) A&#xD;&#xA;     LEFT OUTER JOIN SGT_PAYMENT_SCHEDULE B ON A.PAYMENT_SCHEDULE_ID = B.PAYMENT_SCHEDULE_ID&#xD;&#xA;     WHERE A.PAYMENT_DATE &lt;= @LASTEFFECTIVEDATE &#xD;&#xA;     AND isnull(B.SCHEDULE_TYPE_VALUE,'MTLY') = 'MTLY'&#xD;&#xA;     -- take all old payments before the last payment date and make sure no payments are made earlier&#xD;&#xA;   )PHH ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE CV.DATA2 = 'APRD' AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA; --COND: 1,2,3,4&#xD;&#xA;  AND ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR')&#xD;&#xA;   OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' &#xD;&#xA;   OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD'))&#xD;&#xA;   )&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) IN (110,112)&#xD;&#xA;  AND PAPI.BATCH_SCHEDULE_ID IS NULL&#xD;&#xA; GROUP BY PA.PAYEE_ACCOUNT_ID,PIT1.MONTHLY_SUMMARY_GROUP_VALUE,PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;) TEMP&#xD;&#xA;GROUP BY MONTHLY_SUMMARY_GROUP_VALUE, TEMP.PERSON_ACCOUNT_ID&#xD;&#xA;--4 end&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;------------D. LAST MONTH’S PAYEE WITH ‘BENEFIT OPTION’ AS ‘REFUNDS’&#xD;&#xA;-------------------, ‘REGULAR REFUND’, OR ‘AUTO REFUND’ AS NEGATIVE AMOUNT&#xD;&#xA;--7 start&#xD;&#xA;SELECT 7 AS REPORDER,'Previous Month Refunds', MONTHLY_SUMMARY_GROUP_VALUE,&#xD;&#xA;  -1*ABS(SUM(PIT.ITEM_TYPE_DIRECTION*AMOUNT)) AS AMOUNT, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA; FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA &#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; LEFT OUTER JOIN &#xD;&#xA;   (&#xD;&#xA;    SELECT DISTINCT BATCH_SCHEDULE_ID, &#xD;&#xA;     PAYEE_ACCOUNT_ID,&#xD;&#xA;     PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;&#x9; PAPI.PERSON_ACCOUNT_ID -- PIR 15950 &#xD;&#xA;     FROM DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI&#xD;&#xA;     WHERE PAPI.START_DATE &lt;= @LAST_PAYMENTDATE AND &#xD;&#xA;     (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;   ) PAPIT ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;    AND PHD.PAYMENT_ITEM_TYPE_ID = PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE ISNULL(PHH.PAYMENT_SCHEDULE_ID,0) = @LAST_SCHEDULE_ID AND PA.BENEFIT_OPTION_VALUE IN ('REFD', 'RGRD', 'AURD')&#xD;&#xA;GROUP BY MONTHLY_SUMMARY_GROUP_VALUE,PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;--7 end&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;-------------3 E. THIS MONTH’S PAYEE WITH ‘BENEFIT OPTION’ AS ‘REFUNDS’&#xD;&#xA;--------------------, ‘REGULAR REFUND’, OR ‘AUTO REFUND’ AS POSITIVE AMOUNT&#xD;&#xA;--8 start&#xD;&#xA;SELECT REPORDER,'Current Month Refunds', MONTHLY_SUMMARY_GROUP_VALUE, SUM(AMOUNT) AS AMOUNT ,REFUNDS.PERSON_ACCOUNT_ID&#xD;&#xA;FROM (&#xD;&#xA; SELECT 8 AS REPORDER,MONTHLY_SUMMARY_GROUP_VALUE, SUM(PIT.ITEM_TYPE_DIRECTION*AMOUNT) AS AMOUNT , PAPI.PERSON_ACCOUNT_ID&#xD;&#xA; --COPIED FROM REP: 8&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;  WHERE CV.DATA2 IN ('APRD') AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND BENEFIT_OPTION_VALUE IN ('REFD', 'RGRD', 'AURD') &#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;   AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) NOT IN (110,112)&#xD;&#xA; GROUP BY PIT.MONTHLY_SUMMARY_GROUP_VALUE, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;UNION ALL&#xD;&#xA; SELECT 8 AS REPORDER,PIT1.MONTHLY_SUMMARY_GROUP_VALUE, SUM(PIT1.ITEM_TYPE_DIRECTION*AMOUNT) AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA; --COPIED FROM REP: 8&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;      AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;  WHERE CV.DATA2 IN ('APRD') AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND BENEFIT_OPTION_VALUE IN ('REFD', 'RGRD', 'AURD') &#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;   AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) NOT IN (110,112)&#xD;&#xA; GROUP BY PIT1.MONTHLY_SUMMARY_GROUP_VALUE,PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT 8 AS REPORDER,MONTHLY_SUMMARY_GROUP_VALUE, SUM(PIT.ITEM_TYPE_DIRECTION*AMOUNT) AS AMOUNT , PAPI.PERSON_ACCOUNT_ID&#xD;&#xA; --COPIED FROM REP: 8&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;  WHERE CV.DATA2 IN ('APRD') AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND BENEFIT_OPTION_VALUE IN ('REFD', 'RGRD', 'AURD') &#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;   AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) IN (110,112)&#xD;&#xA;   AND PAPI.BATCH_SCHEDULE_ID IS NULL&#xD;&#xA; GROUP BY PIT.MONTHLY_SUMMARY_GROUP_VALUE, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA; UNION ALL&#xD;&#xA; SELECT 8 AS REPORDER,PIT1.MONTHLY_SUMMARY_GROUP_VALUE, SUM(PIT1.ITEM_TYPE_DIRECTION*AMOUNT) AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA; --COPIED FROM REP: 8&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;      AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;  WHERE CV.DATA2 IN ('APRD') AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND BENEFIT_OPTION_VALUE IN ('REFD', 'RGRD', 'AURD') &#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;   AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) IN (110,112)&#xD;&#xA;   AND PAPI.BATCH_SCHEDULE_ID IS NULL&#xD;&#xA; GROUP BY PIT1.MONTHLY_SUMMARY_GROUP_VALUE,PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;) REFUNDS&#xD;&#xA;GROUP BY REPORDER,MONTHLY_SUMMARY_GROUP_VALUE, REFUNDS.PERSON_ACCOUNT_ID&#xD;&#xA;--8 end&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;--------F. SUM OF ALL PAYMENTS TO THE PAYEE IN ‘FINAL ADHOC PROCESS’ OR VENDOR PAYMENTS AS NEGATIVE AMOUNT &#xD;&#xA;--9 start&#xD;&#xA;SELECT 9 AS REPORDER,'Final Adhoc Process / Vendor Payments', MONTHLY_SUMMARY_GROUP_VALUE, &#xD;&#xA;  -1*ABS(SUM(PIT.ITEM_TYPE_DIRECTION*PHD.AMOUNT)) AS AMOUNT, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_SCHEDULE PS ON PS.PAYMENT_SCHEDULE_ID = PHH.PAYMENT_SCHEDULE_ID AND PS.SCHEDULE_TYPE_VALUE &lt;&gt; 'VNPM'&#xD;&#xA; LEFT JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN &#xD;&#xA;   (&#xD;&#xA;    SELECT DISTINCT BATCH_SCHEDULE_ID, &#xD;&#xA;     PAYEE_ACCOUNT_ID,&#xD;&#xA;     PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;&#x9; PERSON_ACCOUNT_ID,&#xD;&#xA;&#x9; AMOUNT&#xD;&#xA;     FROM DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI&#xD;&#xA;     WHERE PAPI.START_DATE &lt;= @LAST_PAYMENTDATE AND &#xD;&#xA;     (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;   ) PAPIT ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;    AND PHD.PAYMENT_ITEM_TYPE_ID = PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9;AND PAPIT.AMOUNT = PHD.AMOUNT&#xD;&#xA;WHERE PS.PROCESS_DATE &gt;= @PROCESS_DATE AND PHH.PAYMENT_DATE &lt; GETDATE()&#xD;&#xA;AND PS.SCHEDULE_TYPE_VALUE IN ('ADHC','VNPM')&#xD;&#xA;GROUP BY MONTHLY_SUMMARY_GROUP_VALUE, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;--9 end&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;---------G. TOTAL DIFFERENCE BENEFIT PAYMENT CHANGE REPORT&#xD;&#xA;-- APPLY THE SAME LOGIC USED IN REPORT 6 &#xD;&#xA;--the below query won't handle 5 yrs term life beneficiary payee account who is rolling over the monthly benefit amount&#xD;&#xA;--10 start&#xD;&#xA;SELECT 10 AS REPORDER,'Benefit Payment Change', MONTHLY_SUMMARY_GROUP_VALUE, SUM(AMOUNT) AS AMOUNT, MA.PERSON_ACCOUNT_ID&#xD;&#xA;--COPIED FROM REP #6 AND CHANGED THE SELECT &amp; GROUP BY CLAUSE&#xD;&#xA;FROM &#xD;&#xA;--COND: 1&#xD;&#xA;(&#xD;&#xA;SELECT ISNULL(CUR_PAY.PAYMENT_ITEM_TYPE_ID, PREV.PAYMENT_ITEM_TYPE_ID) AS PAYMENT_ITEM_TYPE_ID&#xD;&#xA; , ISNULL(CUR_PAY.AMOUNT,0) - ISNULL(PREV.AMOUNT,0) AS AMOUNT, CUR_PAY.PERSON_ACCOUNT_ID&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;SELECT PAPI.BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID&#xD;&#xA; , PAPI.PAYMENT_ITEM_TYPE_ID, SUM(PAPI.AMOUNT) AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPI.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WHERE PAYMENT_SCHEDULE_ID = @SCHEDULE_ID) PHHLAST&#xD;&#xA;    ON PHHLAST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;WHERE CV.DATA2 IN ('RECV','APRD')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) NOT IN (110,112)&#xD;&#xA;GROUP BY BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PAPI.PAYMENT_ITEM_TYPE_ID, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT PAPI.BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID&#xD;&#xA; , PIT1.PAYMENT_ITEM_TYPE_ID, SUM(PAPI.AMOUNT) AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PASLAST ON PASLAST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CVLAST ON PASLAST.STATUS_ID= CVLAST.CODE_ID AND PASLAST.STATUS_VALUE = CVLAST.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PAPI.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE CV.DATA2 IN ('RECV','APRD')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND CVLAST.DATA2  = 'RECV'&#xD;&#xA; AND PASLAST.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAS1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (NOLOCK) &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CVX &#xD;&#xA;   ON CVX.CODE_ID = PAS1.STATUS_ID AND CVX.CODE_VALUE = PAS1.STATUS_VALUE &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @LAST_PAYMENTDATE&#xD;&#xA;   AND CVX.DATA2  = 'RECV' &#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA; AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA; AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) NOT IN (110,112)&#xD;&#xA;GROUP BY BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PIT1.PAYMENT_ITEM_TYPE_ID, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PAPI.BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID&#xD;&#xA; , PAPI.PAYMENT_ITEM_TYPE_ID, PAPI.AMOUNT AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPI.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WHERE PAYMENT_SCHEDULE_ID = @SCHEDULE_ID) PHHLAST&#xD;&#xA;    ON PHHLAST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;WHERE CV.DATA2 IN ('RECV','APRD')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID, 0) IN (110,112)&#xD;&#xA; --AND PAPI.BATCH_SCHEDULE_ID IS NULL&#xD;&#xA;GROUP BY BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PAPI.PAYMENT_ITEM_TYPE_ID, PAPI.AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT PAPI.BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID&#xD;&#xA; , PIT1.PAYMENT_ITEM_TYPE_ID, PAPI.AMOUNT AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PASLAST ON PASLAST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CVLAST ON PASLAST.STATUS_ID= CVLAST.CODE_ID AND PASLAST.STATUS_VALUE = CVLAST.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PAPI.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE CV.DATA2 IN ('RECV','APRD')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND CVLAST.DATA2  = 'RECV'&#xD;&#xA; AND PASLAST.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAS1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (NOLOCK) &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CVX &#xD;&#xA;   ON CVX.CODE_ID = PAS1.STATUS_ID AND CVX.CODE_VALUE = PAS1.STATUS_VALUE &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @LAST_PAYMENTDATE&#xD;&#xA;   AND CVX.DATA2  = 'RECV' &#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA; AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA; AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) IN (110,112)&#xD;&#xA; --AND PAPI.BATCH_SCHEDULE_ID IS NULL&#xD;&#xA;GROUP BY BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PIT1.PAYMENT_ITEM_TYPE_ID, PAPI.AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;) AS CUR_PAY&#xD;&#xA;---&#xD;&#xA;FULL OUTER JOIN  &#xD;&#xA;--&lt;&lt;&lt;&lt; PREV MONTH PAYMENT ITEM WISE AMOUNT, OTHER THAN BATCH ITEM&#xD;&#xA;#PREV AS PREV &#xD;&#xA;--COND: 3&#xD;&#xA;  ON CUR_PAY.PAYEE_ACCOUNT_ID = PREV.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND CUR_PAY.PAYMENT_ITEM_TYPE_ID = PREV.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   AND (ISNULL(CUR_PAY.PERSON_ACCOUNT_ID,0)) = (ISNULL(PREV.PERSON_ACCOUNT_ID,0)) &#xD;&#xA;--COND: 4 &amp; 5&#xD;&#xA;WHERE (((CUR_PAY.PAYEE_ACCOUNT_ID IS NULL OR PREV.PAYEE_ACCOUNT_ID IS NULL OR CUR_PAY.AMOUNT &lt;&gt; PREV.AMOUNT)&#xD;&#xA;)&#xD;&#xA;)&#xD;&#xA;)MA  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON MA.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;GROUP BY MONTHLY_SUMMARY_GROUP_VALUE, MA.PERSON_ACCOUNT_ID&#xD;&#xA;--10 end&#xD;&#xA;) AS TEMP &#xD;&#xA;) P  PIVOT (SUM(AMOUNT) FOR MONTHLY_SUMMARY_GROUP_VALUE IN ([GROS],[RHIC], [FEDL], [STAT], [INSR], [OTHR])) AS PVT&#xD;&#xA;ORDER BY REPORDER, REPTYPE&#xD;&#xA;---------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;--INSERTING THE BEGINNING BALANCE FROM PAYMENT SUMMARY TABLE FOR LAST MONTH ENDING BALANCE&#xD;&#xA;INSERT INTO #FINALRPT&#xD;&#xA;SELECT 1 AS REPORDER,'Beginning Balance' REPTYPE,ISNULL(GROSS_AMOUNT,0) AS GROS,ISNULL(RHIC_BENEFIT,0) AS RHIC,&#xD;&#xA;  ISNULL(FEDERAL_TAX,0) AS FEDL,ISNULL(STATE_TAX,0) AS STAT,ISNULL(INSURANCE,0) AS INSR,&#xD;&#xA;  ISNULL(OTHER_DEDUCTIONS,0) AS OTHR,ISNULL(NET_AMOUNT,0) AS NET_AMOUNT&#xD;&#xA;FROM SGT_PAYMENT_MONTHLY_BENEFIT_SUMMARY&#xD;&#xA;WHERE PAYMENT_DATE = @LAST_PAYMENTDATE&#xD;&#xA;---------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;--INSERTING THE ADJUSTED BEGINNING BALANCE AS LAST MONTH ENDING BALANCE + ADHOC PROCESS IF ANY&#xD;&#xA;INSERT INTO #FINALRPT&#xD;&#xA;SELECT 3 AS REPORDER,'Adjusted Beginning Balance',ISNULL(SUM(GROS),0) AS GROS,ISNULL(SUM(RHIC),0) AS RHIC,ISNULL(SUM(FEDL),0) AS FEDL,&#xD;&#xA; ISNULL(SUM(STAT),0) AS STAT,ISNULL(SUM(INSR),0) AS INSR,ISNULL(SUM(OTHR),0) AS OTHR,ISNULL(SUM(NET_AMOUNT),0) AS NET_AMOUNT&#xD;&#xA;FROM #FINALRPT&#xD;&#xA;WHERE REPORDER IN (1,2)&#xD;&#xA;&#xD;&#xA;---------------------------------------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;BEGIN&#xD;&#xA; INSERT INTO #FINALRPT &#xD;&#xA; SELECT REPORDER,REPTYPE,ISNULL(GROS,0) AS GROS,ISNULL(RHIC,0) AS RHIC,ISNULL(FEDL,0) AS FEDL,ISNULL(STAT,0) AS STAT,ISNULL(INSR,0) AS INSR,&#xD;&#xA;  ISNULL(OTHR,0) AS OTHR,(ISNULL(GROS,0)+ISNULL(RHIC,0)-ISNULL(FEDL,0)-ISNULL(STAT,0)-ISNULL(INSR,0)-ISNULL(OTHR,0)) AS NET_AMOUNT &#xD;&#xA; FROM &#xD;&#xA; (&#xD;&#xA;  ------B. REINSTATED RETIREE DETAIL REPORT AS POSITIVE AMOUNT&#xD;&#xA;  -- TO REFER LOGIC USED IN REPORT# 3 AND APPLY THE SAME LOGIC  BECAUSE THE AMOUNT SHOULD TALLY&#xD;&#xA;  SELECT 5 AS REPORDER,'Reinstated Payee' AS REPTYPE, MONTHLY_SUMMARY_GROUP_VALUE, &#xD;&#xA;  ABS(SUM(PIT.ITEM_TYPE_DIRECTION*AMOUNT)) AS AMOUNT &#xD;&#xA;  --COPIED FROM REP# 3&#xD;&#xA;   FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS2 WITH(NOLOCK) ON PAS2.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK) ON PAS2.STATUS_ID= CV2.CODE_ID AND PAS2.STATUS_VALUE = CV2.CODE_VALUE&#xD;&#xA;   INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   --INNER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;   LEFT OUTER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH &#xD;&#xA;    ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID AND ISNULL(PHH.PAYMENT_SCHEDULE_ID,0) = @LAST_SCHEDULE_ID&#xD;&#xA;  --COND: REPORT WILL DISPLAY ALL THE PAYEES WHOSE ‘PAYEE STATUS’ WAS ‘SUSPENDED’ &#xD;&#xA;  WHERE &#xD;&#xA;   (CV2.DATA2 = 'APRD'  AND PAS2.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS3 WITH(NOLOCK) &#xD;&#xA;      WHERE PAS3.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS3.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS3.STATUS_EFFECTIVE_DATE DESC,PAS3.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;    )&#xD;&#xA;   AND PAS2.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;   AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  --COND: 5A   DID NOT RECEIVE ANY PAYMENTS LAST MONTH&#xD;&#xA;   AND PHH.PAYEE_ACCOUNT_ID IS NULL&#xD;&#xA;  --COND: 1,2,3,4&#xD;&#xA;   AND ( PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;    OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE  NOT IN  ('REFD','AURD'))&#xD;&#xA;    )&#xD;&#xA;  --COND: 6&#xD;&#xA;   AND PA.PAYEE_ACCOUNT_ID IN &#xD;&#xA;   (SELECT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER PHH   &#xD;&#xA;     LEFT OUTER JOIN SGT_PAYMENT_SCHEDULE B &#xD;&#xA;      ON PHH.PAYMENT_SCHEDULE_ID = B.PAYMENT_SCHEDULE_ID&#xD;&#xA;     WHERE B.PAYMENT_DATE &lt; @LAST_PAYMENTDATE &#xD;&#xA;     AND isnull(B.SCHEDULE_TYPE_VALUE,'MTLY') =  'MTLY' &#xD;&#xA;   )&#xD;&#xA; AND ISNULL(PA.PAYEE_ACCOUNT_ID,0) NOT IN &#xD;&#xA;  (&#xD;&#xA;   SELECT ISNULL(PAYEE_ACCOUNT_ID,0) FROM SGT_PAYMENT_HISTORY_HEADER PHH   &#xD;&#xA;   INNER JOIN SGT_PAYMENT_SCHEDULE B &#xD;&#xA;    ON PHH.PAYMENT_SCHEDULE_ID = B.PAYMENT_SCHEDULE_ID&#xD;&#xA;   WHERE B.PAYMENT_SCHEDULE_ID = @LAST_SCHEDULE_ID&#xD;&#xA;  )&#xD;&#xA;   AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;   AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  GROUP BY MONTHLY_SUMMARY_GROUP_VALUE&#xD;&#xA;&#xD;&#xA;  UNION ALL&#xD;&#xA;  &#xD;&#xA;  ------C. CLOSED/SUSPENDED PAYEES REPORT AS NEGATIVE AMOUNT&#xD;&#xA;  SELECT 6 AS REPORDER,'Closed/Suspended', MONTHLY_SUMMARY_GROUP_VALUE, &#xD;&#xA;    -1*ABS(SUM(PIT.ITEM_TYPE_DIRECTION*AMOUNT)) AS AMOUNT&#xD;&#xA;  --COPIED FROM REP# 4&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;   INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;&#xD;&#xA;  --COND:5&#xD;&#xA;   INNER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH&#xD;&#xA;    ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID AND ISNULL(PHH.PAYMENT_SCHEDULE_ID,0) = @LAST_SCHEDULE_ID&#xD;&#xA;    LEFT OUTER JOIN &#xD;&#xA;     ( SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION WHERE PAYMENT_METHOD_VALUE IN ('CHK','ACH')) AS PHDIS&#xD;&#xA;     ON PHDIS.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#xD;&#xA;  --COND:7&#xD;&#xA;  WHERE CV.DATA2 NOT IN ('RECV', 'APRD') AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     --AND PAS1.STATUS_EFFECTIVE_DATE &gt; @LAST_PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   --AND PA.BENEFIT_BEGIN_DATE &lt;= @LAST_PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;   AND PAPI.START_DATE &lt;= @LAST_PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;  --COND: 1,2,3,4&#xD;&#xA;   AND ( PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;     OR &#xD;&#xA;     ( PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD'))&#xD;&#xA;    )&#xD;&#xA;   AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;   AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;  GROUP BY MONTHLY_SUMMARY_GROUP_VALUE&#xD;&#xA; ) P  PIVOT (SUM(AMOUNT) FOR MONTHLY_SUMMARY_GROUP_VALUE IN ([GROS],[RHIC], [FEDL], [STAT], [INSR], [OTHR])) AS PVT&#xD;&#xA; ORDER BY REPORDER&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT REPORDER,REPTYPE,GROS,RHIC,FEDL,STAT,INSR,OTHR,NET_AMOUNT&#xD;&#xA;FROM #FINALRPT&#xD;&#xA;ORDER BY REPORDER&#xD;&#xA;&#xD;&#xA;DROP TABLE #DIST&#xD;&#xA;DROP TABLE #PREV&#xD;&#xA;DROP TABLE #FINALRPT">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@SCHEDULE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="FinalMonthlyBenefitPaymentbyItemReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM &#xD;&#xA;(&#xD;&#xA; SELECT '' AS PLAN_NAME, PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; FROM  SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  inner JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE PHH.PAYMENT_SCHEDULE_ID = @SCHEDULE_ID&#xD;&#xA; GROUP BY PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; UNION All&#xD;&#xA; SELECT PL.PLAN_NAME, PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT ,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN PL WITH(NOLOCK) ON PHH.PLAN_ID = PL.PLAN_ID &#xD;&#xA; WHERE PHH.PAYMENT_SCHEDULE_ID = @SCHEDULE_ID&#xD;&#xA; GROUP BY PIT.ITEM_TYPE_DESCRIPTION, PL.PLAN_NAME,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;)TBL ORDER BY PLAN_NAME,ITEM_TYPE_DIRECTION DESC,ABS(AMOUNT) DESC">
      <parameters>
        <parameter ID="@SCHEDULE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="TrialVendorPaymentSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ORG_NAME AS ORGANIZATION_NAME, ISNULL([-1],0) AS GROSS_AMOUNT, ISNULL([1],0) AS RECEIVABLES,&#xD;&#xA;  (ISNULL([-1],0) - ISNULL([1],0)) AS NET_AMOUNT&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA; SELECT ORG_NAME, PIT.ITEM_TYPE_DIRECTION, SUM(PAPI.AMOUNT) AS AMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_ORGANIZATION(NOLOCK) ORG ON PAPI.VENDOR_ORG_ID = ORG.ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND PADR&#xD;&#xA;      ON PADR.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID  &#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;   (SELECT PARP.PAYEE_ACCOUNT_ID,PARP.PAYMENT_OPTION_VALUE,PARPD.* FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT PARP &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL PARPD ON &#xD;&#xA;   PARPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = PARP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;   where PAYMENT_HISTORY_HEADER_ID IS NULL ) AS RETRO&#xD;&#xA;  ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND RETRO.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND (PADR.PAYMENT_OPTION_VALUE IS NULL OR PADR.PAYMENT_OPTION_VALUE = 'RGLR')&#xD;&#xA;  AND (RETRO.PAYMENT_OPTION_VALUE IS NULL OR RETRO.PAYMENT_OPTION_VALUE = 'REGL')&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;  AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; GROUP BY ORG_NAME, PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;) MA &#xD;&#xA;PIVOT(SUM(AMOUNT) FOR ITEM_TYPE_DIRECTION IN ([1], [-1])) AS PVT&#xD;&#xA;ORDER BY ORG_NAME">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="FinalVendorPaymentSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;SELECT ORG_NAME AS ORGANIZATION_NAME,ISNULL([-1],0) AS GROSS_AMOUNT , ISNULL([1],0) AS RECEIVABLES, &#xD;&#xA;  (ISNULL([-1],0) - ISNULL([1],0)) AS NET_AMOUNT&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA; SELECT ORG_NAME, PIT.ITEM_TYPE_DIRECTION, SUM(PHD.AMOUNT) AS AMOUNT&#xD;&#xA;  FROM SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_ORGANIZATION(NOLOCK) ORG ON PHD.VENDOR_ORG_ID = ORG.ORG_ID&#xD;&#xA; WHERE PAYMENT_SCHEDULE_ID = @SCHEDULE_ID&#xD;&#xA; GROUP BY ORG_NAME, PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;) MA &#xD;&#xA;PIVOT(SUM(AMOUNT) FOR ITEM_TYPE_DIRECTION IN ([1], [-1])) AS PVT&#xD;&#xA;ORDER BY ORG_NAME&#xD;&#xA;">
      <parameters>
        <parameter ID="@SCHEDULE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="FinalDuesWithholdingReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @SCHEDULE_ID INT&#xD;&#xA;SELECT @SCHEDULE_ID = PAYMENT_SCHEDULE_ID FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_DATE = @PAYMENTDATE AND SCHEDULE_TYPE_VALUE = 'MTLY'&#xD;&#xA;&#xD;&#xA;SELECT ORG_NAME AS ORGANIZATION_NAME, ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') AS LAST_NAME, &#xD;&#xA; FIRST_NAME, RIGHT(SSN,4) SSN, SUM(PRP.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS DUES_AMOUNT, PER.PERSON_ID&#xD;&#xA; FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PROVIDER_REPORT_PAYMENT PRP ON SUBSYSTEM_REF_ID = PHD.PAYMENT_HISTORY_DETAIL_ID &#xD;&#xA;     AND SUBSYSTEM_ID = 349 AND SUBSYSTEM_VALUE IN ('PMNT', 'PRCB')&#xD;&#xA; INNER JOIN DBO.SGT_ORGANIZATION(NOLOCK) ORG ON PRP.PROVIDER_ORG_ID = ORG.ORG_ID &#xD;&#xA; INNER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;WHERE PAYMENT_SCHEDULE_ID = @SCHEDULE_ID&#xD;&#xA;  AND UPPER(CHECK_COMPONENT_DESCRIPTION) = 'DUES' &#xD;&#xA;GROUP BY ORG_NAME, LAST_NAME, FIRST_NAME, RIGHT(SSN,4), MIDDLE_NAME, PER.PERSON_ID&#xD;&#xA;ORDER BY ORG_NAME, LAST_NAME">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="TrialMinimumGuaranteeChangeSummaryReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT    3 AS REPORT_ID,&#xD;&#xA;     'Benefit Calculation Change' AS REPORT_NAME,&#xD;&#xA;     ISNULL(SUM(PA.MINIMUM_GUARANTEE_AMOUNT - PAHIST.OLD_MINUMUM_GUARANTEE_AMOUNT),0) AS MIN_GUARANTEE_AMOUNT&#xD;&#xA;FROM    SGT_PAYEE_ACCOUNT PA&#xD;&#xA; INNER JOIN  SGT_PAYEE_ACCOUNT_MINIMUM_GUARANTEE_HISTORY PAHIST WITH(NOLOCK) ON PAHIST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN  SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN  SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPI WITH(NOLOCK) ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN  SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_ACCOUNT BAC ON PA.BENEFIT_ACCOUNT_ID = BAC.BENEFIT_ACCOUNT_ID &#xD;&#xA;WHERE    CV.DATA2 IN ('RECV','APRD') AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;    AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;    AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)    &#xD;&#xA;    AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;    OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD')))&#xD;&#xA;    AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;    AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;    AND ISNULL(PAHIST.PROCESS_STATUS_FLAG,'N') &lt;&gt; 'Y'">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="FinalChildSupportReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ORG_NAME AS ORGANIZATION_NAME, ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') AS LAST_NAME, &#xD;&#xA; FIRST_NAME, PAPIT.ACCOUNT_NUMBER, SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PROVIDER_REPORT_PAYMENT(NOLOCK) PRP ON SUBSYSTEM_REF_ID = PHD.PAYMENT_HISTORY_DETAIL_ID &#xD;&#xA;     AND SUBSYSTEM_ID = 349 AND SUBSYSTEM_VALUE = 'PMNT'&#xD;&#xA; INNER JOIN DBO.SGT_ORGANIZATION(NOLOCK) ORG ON PRP.PROVIDER_ORG_ID = ORG.ORG_ID &#xD;&#xA; INNER JOIN SGT_PERSON(NOLOCK) PER ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;     AND  PHD.PAYMENT_ITEM_TYPE_ID = PAPIT.PAYMENT_ITEM_TYPE_ID    &#xD;&#xA;WHERE PAYMENT_SCHEDULE_ID = @SCHEDULE_ID&#xD;&#xA; AND UPPER(CHECK_COMPONENT_DESCRIPTION) = 'CHILD SUPPORT' &#xD;&#xA; AND PHH.PAYMENT_DATE BETWEEN PAPIT.START_DATE AND ISNULL(PAPIT.END_DATE ,PHH.PAYMENT_DATE)&#xD;&#xA;GROUP BY ORG_NAME, LAST_NAME, FIRST_NAME, PAPIT.ACCOUNT_NUMBER,MIDDLE_NAME&#xD;&#xA;ORDER BY ORG_NAME, LAST_NAME">
      <parameters>
        <parameter ID="@SCHEDULE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="FinalIRSLimitReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @IRSLIMIT AS DECIMAL(13,2)&#xD;&#xA;DECLARE @EFFECTIVE_DATE DATETIME&#xD;&#xA;&#xD;&#xA;SELECT @EFFECTIVE_DATE=EFFECTIVE_DATE FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_DATE = @PAYMENTDATE&#xD;&#xA;&#xD;&#xA;SELECT TOP 1 @IRSLIMIT  = DATA2 FROM SGS_CODE_VALUE (NOLOCK) &#xD;&#xA; WHERE CODE_ID = 2517 AND CAST(DATA1 AS DATETIME) &lt;= @PAYMENTDATE&#xD;&#xA; ORDER BY CAST(DATA1 AS DATETIME) DESC&#xD;&#xA;&#xD;&#xA;SELECT P.PERSON_ID AS PERSLINK_ID,&#xD;&#xA;  LEFT(SSN,3)+'-'+SUBSTRING(SSN,4,2)+'-'+RIGHT(SSN,4) AS SSN,&#xD;&#xA;  ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') AS LAST_NAME,&#xD;&#xA;  FIRST_NAME,&#xD;&#xA;  YTD_AMOUNT+PROJECTED_AMOUNT AS TOTAL_PAYMENTS,&#xD;&#xA;  CASE WHEN TTS.PERSON_ID IS NULL THEN NULL ELSE 'YES' END AS TFFR_DUAL&#xD;&#xA;FROM SGT_PERSON P (NOLOCK)&#xD;&#xA;INNER JOIN&#xD;&#xA;(&#xD;&#xA; SELECT PHH.PERSON_ID,&#xD;&#xA;  SUM(PHD.AMOUNT) AS YTD_AMOUNT, &#xD;&#xA;  SUM(CASE WHEN MONTH(PHH.PAYMENT_DATE) = MONTH(@PAYMENTDATE) THEN AMOUNT ELSE 0 END) * (12 - MONTH(CAST(@PAYMENTDATE AS DATETIME))) AS PROJECTED_AMOUNT&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD(NOLOCK) &#xD;&#xA;    ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT(NOLOCK) &#xD;&#xA;    ON PHD.PAYMENT_ITEM_TYPE_ID =  PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN  &#xD;&#xA;  (&#xD;&#xA;  SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' ) &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;  ) AS PAYEE&#xD;&#xA;  ON PAYEE.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID &#xD;&#xA; WHERE PHH.PAYMENT_DATE &lt;= @EFFECTIVE_DATE AND PHH.PERSON_ID IS NOT NULL&#xD;&#xA;  AND PIT.ITEM_TYPE_DIRECTION = 1   &#xD;&#xA;  AND BASE_AMOUNT_FLAG = 'Y'&#xD;&#xA;  AND YEAR(PHH.PAYMENT_DATE) = YEAR(@EFFECTIVE_DATE)&#xD;&#xA; GROUP BY PHH.PERSON_ID&#xD;&#xA;) AS PAYMENTS&#xD;&#xA;ON P.PERSON_ID = PAYMENTS.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_TFFR_TIAA_SERVICE TTS ON P.PERSON_ID = TTS.PERSON_ID&#xD;&#xA;WHERE  (@IRSLIMIT - (YTD_AMOUNT+PROJECTED_AMOUNT)) &lt;= 1000&#xD;&#xA;ORDER BY P.PERSON_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="FinalMasterPaymentReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="WITH MY_CTE AS &#xD;&#xA;&#xD;&#xA;( &#xD;&#xA;&#x9;SELECT CASE WHEN PHDN.PAYMENT_METHOD_VALUE = 'ACH' OR PHDN.PAYMENT_METHOD_VALUE = 'RACH' THEN 'ACH' &#xD;&#xA;    WHEN PHDN.PAYMENT_METHOD_VALUE = 'CHK' OR PHDN.PAYMENT_METHOD_VALUE = 'RCHK' THEN 'CHK' &#xD;&#xA;    WHEN PHDN.PAYMENT_METHOD_VALUE IS NULL THEN 'ZZZ' &#xD;&#xA;    ELSE '' END AS PAYMENT_METHOD&#xD;&#xA; , PHDN.PAYMENT_METHOD_VALUE&#xD;&#xA; , CASE WHEN PHDN.PAYMENT_METHOD_VALUE IS NULL THEN 'Items with no Distribution records'&#xD;&#xA;   ELSE PMET.DESCRIPTION &#xD;&#xA;   END AS PAYMENT_METHOD_DESC&#xD;&#xA; , PL.PLAN_NAME, PA.BENEFIT_ACCOUNT_TYPE_VALUE, BTYP.DESCRIPTION AS BENEFIT_ACCOUNT_TYPE_DESCR&#xD;&#xA; , PA.ACCOUNT_RELATION_VALUE, ACREL.DESCRIPTION AS ACCOUNT_RELATION_DESCR&#xD;&#xA; , ISNULL(MASTER_PAYMENT_GROUP_VALUE, 'BLNK') AS MASTER_PAYMENT_GROUP_VALUE&#xD;&#xA; , SUM(PHD.AMOUNT*ITEM_TYPE_DIRECTION) AS AMOUNT&#xD;&#xA;FROM &#xD;&#xA; DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH &#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; LEFT OUTER JOIN (&#xD;&#xA;  SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID,PAYMENT_METHOD_VALUE,PAYMENT_METHOD_ID FROM &#xD;&#xA;   SGT_PAYMENT_HISTORY_DISTRIBUTION WHERE PAYMENT_METHOD_VALUE IN ('ACH','CHK')&#xD;&#xA; ) AS PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN DBO.SGT_PLAN(NOLOCK) PL ON PHH.PLAN_ID = PL.PLAN_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGS_CODE_VALUE(NOLOCK) PMET ON PHDN.PAYMENT_METHOD_ID = PMET.CODE_ID &#xD;&#xA;   AND PHDN.PAYMENT_METHOD_VALUE = PMET.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BTYP ON PA.BENEFIT_ACCOUNT_TYPE_ID = BTYP.CODE_ID&#xD;&#xA;   AND  PA.BENEFIT_ACCOUNT_TYPE_VALUE = BTYP.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN DBO.SGS_CODE_VALUE(NOLOCK) ACREL ON PA.ACCOUNT_RELATION_ID = ACREL.CODE_ID&#xD;&#xA;   AND  PA.ACCOUNT_RELATION_VALUE = ACREL.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN DBO.SGS_CODE_VALUE(NOLOCK) PAYIT ON PIT.MASTER_PAYMENT_GROUP_ID = PAYIT.CODE_ID &#xD;&#xA;   AND PIT.MASTER_PAYMENT_GROUP_VALUE = PAYIT.CODE_VALUE&#xD;&#xA;WHERE PHH.PAYMENT_SCHEDULE_ID = @SCHEDULE_ID AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;GROUP BY PHDN.PAYMENT_METHOD_VALUE,PMET.DESCRIPTION&#xD;&#xA; , PL.PLAN_NAME, PA.BENEFIT_ACCOUNT_TYPE_VALUE, BTYP.DESCRIPTION&#xD;&#xA; , PA.ACCOUNT_RELATION_VALUE, ACREL.DESCRIPTION&#xD;&#xA; , MASTER_PAYMENT_GROUP_VALUE&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT CASE WHEN PHDN.PAYMENT_METHOD_VALUE = 'ACH' OR PHDN.PAYMENT_METHOD_VALUE = 'RACH' THEN 'ACH' &#xD;&#xA;    WHEN PHDN.PAYMENT_METHOD_VALUE = 'CHK' OR PHDN.PAYMENT_METHOD_VALUE = 'RCHK' THEN 'CHK' &#xD;&#xA;    WHEN PHDN.PAYMENT_METHOD_VALUE IS NULL THEN 'ZZZ' &#xD;&#xA;    ELSE '' END AS PAYMENT_METHOD&#xD;&#xA; , PHDN.PAYMENT_METHOD_VALUE&#xD;&#xA; , CASE WHEN PHDN.PAYMENT_METHOD_VALUE IS NULL THEN 'Items with no Distribution records'&#xD;&#xA;   ELSE PMET.DESCRIPTION &#xD;&#xA;   END AS PAYMENT_METHOD_DESC&#xD;&#xA; , PL.PLAN_NAME, PA.BENEFIT_ACCOUNT_TYPE_VALUE, BTYP.DESCRIPTION AS BENEFIT_ACCOUNT_TYPE_DESCR&#xD;&#xA; , PA.ACCOUNT_RELATION_VALUE, ACREL.DESCRIPTION AS ACCOUNT_RELATION_DESCR&#xD;&#xA; , ISNULL(MASTER_PAYMENT_GROUP_VALUE, 'BLNK') AS MASTER_PAYMENT_GROUP_VALUE&#xD;&#xA; , SUM(PHD.AMOUNT*ITEM_TYPE_DIRECTION) AS AMOUNT&#xD;&#xA;FROM &#xD;&#xA; DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH &#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; LEFT OUTER JOIN (&#xD;&#xA;  SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID,PAYMENT_METHOD_VALUE,PAYMENT_METHOD_ID,ORG_ID FROM &#xD;&#xA;   SGT_PAYMENT_HISTORY_DISTRIBUTION WHERE PAYMENT_METHOD_VALUE IN ('RACH','RCHK')&#xD;&#xA; ) AS PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID AND PHDN.ORG_ID = PHH.ORG_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN DBO.SGT_PLAN(NOLOCK) PL ON PHH.PLAN_ID = PL.PLAN_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGS_CODE_VALUE(NOLOCK) PMET ON PHDN.PAYMENT_METHOD_ID = PMET.CODE_ID&#xD;&#xA;   AND PHDN.PAYMENT_METHOD_VALUE = PMET.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BTYP ON PA.BENEFIT_ACCOUNT_TYPE_ID = BTYP.CODE_ID&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = BTYP.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN DBO.SGS_CODE_VALUE(NOLOCK) ACREL ON PA.ACCOUNT_RELATION_ID = ACREL.CODE_ID&#xD;&#xA;   AND PA.ACCOUNT_RELATION_VALUE = ACREL.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN DBO.SGS_CODE_VALUE(NOLOCK) PAYIT ON PIT.MASTER_PAYMENT_GROUP_ID = PAYIT.CODE_ID&#xD;&#xA;   AND PIT.MASTER_PAYMENT_GROUP_VALUE = PAYIT.CODE_VALUE&#xD;&#xA;WHERE PHH.PAYMENT_SCHEDULE_ID = @SCHEDULE_ID AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;GROUP BY PHDN.PAYMENT_METHOD_VALUE,PMET.DESCRIPTION&#xD;&#xA; , PL.PLAN_NAME, PA.BENEFIT_ACCOUNT_TYPE_VALUE, BTYP.DESCRIPTION&#xD;&#xA; , PA.ACCOUNT_RELATION_VALUE, ACREL.DESCRIPTION&#xD;&#xA; , MASTER_PAYMENT_GROUP_VALUE&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT PAYMENT_METHOD,PAYMENT_METHOD_VALUE,&#xD;&#xA;  PAYMENT_METHOD_DESC,PLAN_NAME,BENEFIT_ACCOUNT_TYPE_DESCR,ACCOUNT_RELATION_DESCR,&#xD;&#xA;  ISNULL(TXRF,0) AS TXRF,ISNULL(NXRF,0) AS NXRF,ISNULL(FDRF,0) AS FDRF,ISNULL(STRF,0) AS STRF,&#xD;&#xA;  ISNULL(TXRL,0) AS TXRL,ISNULL(NXRL,0) AS NXRL,&#xD;&#xA;  ISNULL(TXAN,0) AS TXAN,ISNULL(NXAN,0) AS NXAN,ISNULL(FDAN,0) AS FDAN,ISNULL(STAN,0) AS STAN,&#xD;&#xA;  ISNULL(THRD,0) AS THRD,ISNULL(CHLD,0) AS CHLD,ISNULL(LEVY,0) AS LEVY,ISNULL(DUES,0) AS DUES,&#xD;&#xA;  ISNULL(HLTH,0) AS HLTH,ISNULL(LIFE,0) AS LIFE,ISNULL(DNTL,0) AS DNTL,ISNULL(VISN,0) AS VISN,&#xD;&#xA;  ISNULL(LTCI,0) AS LTCI,ISNULL(MCPD,0) AS MCPD, ISNULL(BLNK,0) AS BLNK, ISNULL(RHIC,0) AS RHIC, ISNULL(EXCS,0) AS EXCS&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;&#x9; SELECT &#xD;&#xA;&#x9;&#x9;* &#xD;&#xA;&#x9;FROM &#xD;&#xA;&#x9;&#x9;MY_CTE&#xD;&#xA;&#x9; WHERE &#xD;&#xA;&#x9;&#x9;1 = (CASE WHEN BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' AND PAYMENT_METHOD_VALUE IS NULL THEN 0 ELSE 1 END)&#xD;&#xA;) A&#xD;&#xA; PIVOT (SUM(AMOUNT) FOR MASTER_PAYMENT_GROUP_VALUE IN ([TXRF],[NXRF],[FDRF],[STRF],[TXRL],[NXRL],[TXAN],[NXAN],[FDAN],[STAN],&#xD;&#xA; [THRD],[CHLD],[LEVY],[DUES],[HLTH],[LIFE],[DNTL],[VISN],[LTCI],[MCPD],[BLNK],[EXCS],[RHIC])) AS PVT">
      <parameters>
        <parameter ID="@SCHEDULE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="FinalACHRegisterReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PLAN_NAME,FIRST_NAME,LAST_ORG_NAME,ACCOUNT_TYPE_DESC,OPTION_DESCR,PERSON_ORG_ID,&#xD;&#xA;  ISNULL(CHLD,0) AS CHLD,ISNULL(DNTL,0) AS DNTL,ISNULL(DUES,0) AS DUES,ISNULL(FDTX,0) AS FDTX,&#xD;&#xA;  ISNULL(GROS,0) AS GROS,ISNULL(HLTH,0) AS HLTH,ISNULL(LAVY,0) AS LAVY,ISNULL(LIFE,0) AS LIFE,ISNULL(LTCI,0) AS LTCI,&#xD;&#xA;  ISNULL(MCPD,0) AS MCPD,ISNULL(RECV,0) AS RECV,ISNULL(RHIC,0) AS RHIC,ISNULL(STTX,0) AS STTX,&#xD;&#xA;  ISNULL(THRD,0) AS THRD,ISNULL(VISN,0) AS VISN,ISNULL(BLNK,0) AS BLNK,&#xD;&#xA;  CONTROL_NUMBER1, BANK_NAME1, ACCOUNT_TYPE_VALUE1, ROUTING_NO1,&#xD;&#xA;  ACCOUNT_NUMBER1, isnull(NET_AMOUNT1,0) as NET_AMOUNT1, CONTROL_NUMBER2, BANK_NAME2, ACCOUNT_TYPE_VALUE2, ROUTING_NO2,&#xD;&#xA;  ACCOUNT_NUMBER2, isnull(NET_AMOUNT2,0) as NET_AMOUNT2 , INDICATOR, NDPERS_BANK_ACCOUNT&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT ITEM.PAYMENT_HISTORY_HEADER_ID, PLAN_NAME, FIRST_NAME, LAST_ORG_NAME, BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA; , ACCOUNT_TYPE_DESC, BENEFIT_OPTION_VALUE, OPTION_DESCR, PERSON_ORG_ID, ACH_CHECK_GROUP_VALUE&#xD;&#xA; , AMOUNT, CONTROL_NUMBER1, BANK_NAME1, ACCOUNT_TYPE_VALUE1, ROUTING_NO1&#xD;&#xA; , ACCOUNT_NUMBER1, NET_AMOUNT1, CONTROL_NUMBER2, BANK_NAME2, ACCOUNT_TYPE_VALUE2, ROUTING_NO2&#xD;&#xA; , ACCOUNT_NUMBER2, NET_AMOUNT2 ,INDICATOR&#xD;&#xA; , NDPERS_BANK_ACCOUNT&#xD;&#xA;FROM&#xD;&#xA;--ITEM DETAIL&#xD;&#xA;( &#xD;&#xA;SELECT PHH.PAYMENT_HISTORY_HEADER_ID, PL.PLAN_NAME, CASE WHEN PHH.PERSON_ID IS NULL THEN NULL ELSE FIRST_NAME END AS FIRST_NAME, &#xD;&#xA;  CASE WHEN PHH.PERSON_ID IS NULL THEN PORG.ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END +&#xD;&#xA;  CASE WHEN PHDN.PAYMENT_METHOD_VALUE = 'RACH' AND PHDN.FBO_CO IS NOT NULL THEN ' '+PHDN.FBO_CO ELSE '' END AS LAST_ORG_NAME&#xD;&#xA; , BENEFIT_ACCOUNT_TYPE_VALUE, BTYP.DESCRIPTION AS ACCOUNT_TYPE_DESC , BENEFIT_OPTION_VALUE, &#xD;&#xA; BOPT.DESCRIPTION AS OPTION_DESCR, CASE WHEN PHH.PERSON_ID IS NULL THEN PORG.ORG_CODE ELSE CAST(PER.PERSON_ID AS VARCHAR(10)) END AS PERSON_ORG_ID, &#xD;&#xA; ISNULL(ACH_CHECK_GROUP_VALUE,'BLNK') AS ACH_CHECK_GROUP_VALUE, SUM(ISNULL(PHD.AMOUNT,0)*PIT.ITEM_TYPE_DIRECTION) AMOUNT,&#xD;&#xA; CASE WHEN BTYP.CODE_VALUE = 'RFND' OR BOPT.DATA2 = 'RFND' THEN 'B'&#xD;&#xA;   ELSE 'A' END AS INDICATOR&#xD;&#xA;   ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH &#xD;&#xA; INNER JOIN (&#xD;&#xA;  SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID,PAYMENT_METHOD_VALUE,PERSON_ID,ORG_ID,FBO_CO FROM &#xD;&#xA;   SGT_PAYMENT_HISTORY_DISTRIBUTION WHERE PAYMENT_METHOD_VALUE in ('ACH','RACH')&#xD;&#xA; ) AS PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN  SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; LEFT OUTER JOIN  SGT_PAYEE_ACCOUNT(NOLOCK) PA ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN  SGS_CODE_VALUE(NOLOCK) BTYP ON PA.BENEFIT_ACCOUNT_TYPE_ID = BTYP.CODE_ID &#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = BTYP.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN  SGS_CODE_VALUE(NOLOCK) BOPT ON PA.BENEFIT_OPTION_ID = BOPT.CODE_ID &#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE = BOPT.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN  SGT_PLAN(NOLOCK) PL ON PHH.PLAN_ID = PL.PLAN_ID &#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN PL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA; LEFT OUTER JOIN  SGT_PERSON PER ON PER.PERSON_ID = PHDN.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN  SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PHDN.ORG_ID&#xD;&#xA; WHERE PHH.PAYMENT_SCHEDULE_ID = @SCHEDULE_ID&#xD;&#xA; GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID, PL.PLAN_NAME, FIRST_NAME, LAST_NAME&#xD;&#xA;  , BENEFIT_ACCOUNT_TYPE_VALUE, BTYP.DESCRIPTION&#xD;&#xA;  , BENEFIT_OPTION_VALUE, BOPT.DESCRIPTION, PER.PERSON_ID&#xD;&#xA; --,ITEM_TYPE_CODE&#xD;&#xA;  , ACH_CHECK_GROUP_VALUE, PHH.PERSON_ID, PORG.ORG_CODE,PORG.ORG_NAME,MIDDLE_NAME,BTYP.CODE_VALUE,BOPT.DATA2,PHDN.PAYMENT_METHOD_VALUE,PHDN.FBO_CO&#xD;&#xA;  ,CVB.DATA2&#xD;&#xA;) AS ITEM&#xD;&#xA;-----ACH DETAIL ADD SEPARATELY&#xD;&#xA;,(&#xD;&#xA; SELECT ACH1.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  , ACH1.PAYMENT_HISTORY_DISTRIBUTION_ID AS CONTROL_NUMBER1, ACH1.BANK_NAME AS BANK_NAME1, CV1.DESCRIPTION AS ACCOUNT_TYPE_VALUE1, ACH1.ROUTING_NUMBER ROUTING_NO1, ACH1.ACCOUNT_NUMBER ACCOUNT_NUMBER1, ISNULL(ACH1.NET_AMOUNT,0) NET_AMOUNT1&#xD;&#xA;  , ACH2.PAYMENT_HISTORY_DISTRIBUTION_ID AS CONTROL_NUMBER2, ACH2.BANK_NAME AS BANK_NAME2, CV2.DESCRIPTION AS ACCOUNT_TYPE_VALUE2, ACH2.ROUTING_NUMBER ROUTING_NO2, ACH2.ACCOUNT_NUMBER ACCOUNT_NUMBER2, ISNULL(ACH2.NET_AMOUNT,0) NET_AMOUNT2&#xD;&#xA; FROM (&#xD;&#xA; SELECT A.PAYMENT_HISTORY_HEADER_ID,A.PAYMENT_METHOD_VALUE,  MIN(A.PAYMENT_HISTORY_DISTRIBUTION_ID) AS PAYMENT_HISTORY_DISTRIBUTION_ID_1, MAX(B.PAYMENT_HISTORY_DISTRIBUTION_ID) AS PAYMENT_HISTORY_DISTRIBUTION_ID_2&#xD;&#xA; FROM(&#xD;&#xA;   SELECT PAYMENT_HISTORY_HEADER_ID, PAYMENT_METHOD_VALUE, PAYMENT_HISTORY_DISTRIBUTION_ID FROM SGT_PAYMENT_HISTORY_DISTRIBUTION B &#xD;&#xA;  ) A&#xD;&#xA; LEFT OUTER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION B  ON A.PAYMENT_HISTORY_HEADER_ID = B.PAYMENT_HISTORY_HEADER_ID AND A.PAYMENT_HISTORY_DISTRIBUTION_ID &lt;&gt; B.PAYMENT_HISTORY_DISTRIBUTION_ID&#xD;&#xA; GROUP BY A.PAYMENT_HISTORY_HEADER_ID,A.PAYMENT_METHOD_VALUE&#xD;&#xA;) AS ACH&#xD;&#xA;LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION ACH1 ON ACH.PAYMENT_HISTORY_DISTRIBUTION_ID_1 = ACH1.PAYMENT_HISTORY_DISTRIBUTION_ID&#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE CV1 ON ACH1.ACCOUNT_TYPE_ID = CV1.CODE_ID AND ACH1.ACCOUNT_TYPE_VALUE = CV1.CODE_VALUE&#xD;&#xA;LEFT OUTER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION ACH2 ON ACH.PAYMENT_HISTORY_DISTRIBUTION_ID_2 = ACH2.PAYMENT_HISTORY_DISTRIBUTION_ID&#xD;&#xA;    AND ACH1.PAYMENT_METHOD_VALUE  =  ACH2.PAYMENT_METHOD_VALUE  &#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE CV2 ON ACH2.ACCOUNT_TYPE_ID = CV2.CODE_ID AND ACH2.ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;WHERE ACH.PAYMENT_METHOD_VALUE in ('ACH','RACH')&#xD;&#xA;) AS ACH_DET&#xD;&#xA;WHERE ITEM.PAYMENT_HISTORY_HEADER_ID = ACH_DET.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;) MA&#xD;&#xA;PIVOT (SUM(AMOUNT) FOR ACH_CHECK_GROUP_VALUE IN ([CHLD],[DNTL],[DUES],[FDTX],[GROS],[HLTH],[LAVY],[LIFE],[LTCI],[MCPD],[RECV],[RHIC],[STTX],[THRD],[VISN],[BLNK])) AS PVT&#xD;&#xA;ORDER BY NDPERS_BANK_ACCOUNT,PLAN_NAME,LAST_ORG_NAME,ACCOUNT_TYPE_DESC,OPTION_DESCR">
      <parameters>
        <parameter ID="@SCHEDULE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="FinalCheckRegisterReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PLAN_NAME,FIRST_NAME,LAST_ORG_NAME,ACCOUNT_TYPE_DESC,OPTION_DESCR,PERSON_ORG_ID,&#xD;&#xA;  ISNULL(CHLD,0) AS CHLD,ISNULL(DNTL,0) AS DNTL,ISNULL(DUES,0) AS DUES,ISNULL(FDTX,0) AS FDTX,&#xD;&#xA;  ISNULL(GROS,0) AS GROS,ISNULL(HLTH,0) AS HLTH,ISNULL(LAVY,0) AS LAVY,ISNULL(LIFE,0) AS LIFE,ISNULL(LTCI,0) AS LTCI,&#xD;&#xA;  ISNULL(MCPD,0) AS MCPD,ISNULL(RECV,0) AS RECV,ISNULL(RHIC,0) AS RHIC,ISNULL(STTX,0) AS STTX,&#xD;&#xA;  ISNULL(THRD,0) AS THRD,ISNULL(VISN,0) AS VISN,ISNULL(BLNK,0) AS BLNK,&#xD;&#xA;  NULL AS CONTROL_NUMBER1, NULL AS BANK_NAME1, NULL AS ACCOUNT_TYPE_VALUE1, NULL AS ROUTING_NO1,&#xD;&#xA;  NULL AS ACCOUNT_NUMBER1, NET_AMOUNT1, NULL AS CONTROL_NUMBER2, NULL AS BANK_NAME2, NULL AS ACCOUNT_TYPE_VALUE2,&#xD;&#xA;  NULL AS ROUTING_NO2,NULL AS ACCOUNT_NUMBER2, NULL AS NET_AMOUNT2,CHECK_NUMBER,CONTROL_NUMBER, INDICATOR&#xD;&#xA;  ,NDPERS_BANK_ACCOUNT&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA; SELECT PL.PLAN_NAME, CASE WHEN PHH.PERSON_ID IS NULL THEN NULL ELSE FIRST_NAME END AS FIRST_NAME, &#xD;&#xA;  CASE WHEN PHH.PERSON_ID IS NULL THEN PORG.ORG_NAME ELSE PHDN.RECIPIENT_NAME END +&#xD;&#xA;  CASE WHEN PHDN.PAYMENT_METHOD_VALUE = 'RCHK' AND PHDN.FBO_CO IS NOT NULL THEN ' ' + PHDN.FBO_CO ELSE '' END AS LAST_ORG_NAME&#xD;&#xA;  , BENEFIT_ACCOUNT_TYPE_VALUE, BTYP.DESCRIPTION AS ACCOUNT_TYPE_DESC&#xD;&#xA;  , BENEFIT_OPTION_VALUE, BOPT.DESCRIPTION AS OPTION_DESCR, CASE WHEN PHH.PERSON_ID IS NULL THEN PORG.ORG_CODE ELSE CAST(PER.PERSON_ID AS VARCHAR(10)) END AS PERSON_ORG_ID&#xD;&#xA;  , ISNULL(ACH_CHECK_GROUP_VALUE,'BLNK') AS ACH_CHECK_GROUP_VALUE&#xD;&#xA;  , SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AMOUNT&#xD;&#xA;  , PAYMENT_HISTORY_DISTRIBUTION_ID AS CONTROL_NUMBER, BANK_NAME, ACCOUNT_TYPE_VALUE, CHECK_NUMBER, NET_AMOUNT AS NET_AMOUNT1&#xD;&#xA;  , CASE WHEN BTYP.CODE_VALUE = 'RFND' OR BOPT.DATA2 = 'RFND' THEN 'B'&#xD;&#xA;   ELSE 'A' END AS INDICATOR&#xD;&#xA;   ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH &#xD;&#xA;  INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN  SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN  SGT_PLAN PLN ON PLN.PLAN_ID = PHH.PLAN_ID&#xD;&#xA;  INNER JOIN  SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN PLN.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT(NOLOCK) PA  ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN  SGS_CODE_VALUE(NOLOCK) BTYP ON PA.BENEFIT_ACCOUNT_TYPE_ID = BTYP.CODE_ID&#xD;&#xA;    AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = BTYP.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN  SGS_CODE_VALUE(NOLOCK) BOPT ON PA.BENEFIT_OPTION_ID = BOPT.CODE_ID&#xD;&#xA;    AND PA.BENEFIT_OPTION_VALUE = BOPT.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN  SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PHDN.ORG_ID&#xD;&#xA;  LEFT OUTER JOIN  SGT_PERSON PER ON PER.PERSON_ID = PHDN.PERSON_ID&#xD;&#xA;  LEFT OUTER JOIN  SGT_PLAN(NOLOCK) PL ON PHH.PLAN_ID = PL.PLAN_ID &#xD;&#xA; WHERE PHH.PAYMENT_SCHEDULE_ID = @SCHEDULE_ID&#xD;&#xA; AND PHDN.PAYMENT_METHOD_VALUE in ('CHK','RCHK')&#xD;&#xA; GROUP BY PL.PLAN_NAME, FIRST_NAME, PHDN.RECIPIENT_NAME&#xD;&#xA;  , BENEFIT_ACCOUNT_TYPE_VALUE, BTYP.DESCRIPTION&#xD;&#xA;  , BENEFIT_OPTION_VALUE, BOPT.DESCRIPTION, PER.PERSON_ID&#xD;&#xA;  , ACH_CHECK_GROUP_VALUE&#xD;&#xA;  , PAYMENT_HISTORY_DISTRIBUTION_ID, BANK_NAME, ACCOUNT_TYPE_VALUE,CHECK_NUMBER, NET_AMOUNT&#xD;&#xA;  , PHH.PERSON_ID, PORG.ORG_CODE,PORG.ORG_NAME&#xD;&#xA;  , BTYP.CODE_VALUE,BOPT.DATA2&#xD;&#xA;  , PHDN.PAYMENT_METHOD_VALUE, PHDN.FBO_CO&#xD;&#xA;  ,CVB.DATA2&#xD;&#xA;) MA&#xD;&#xA;PIVOT (SUM(AMOUNT) FOR ACH_CHECK_GROUP_VALUE IN ([CHLD],[DNTL],[DUES],[FDTX],[GROS],[HLTH],[LAVY],[LIFE],[LTCI],[MCPD],[RECV],[RHIC],[STTX],[THRD],[VISN],[BLNK])) AS PVT &#xD;&#xA;ORDER BY NDPERS_BANK_ACCOUNT,CHECK_NUMBER&#xD;&#xA;">
      <parameters>
        <parameter ID="@SCHEDULE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="TrialNonMonthlyPaymentDetailReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PERSON_ORG AS PERSLINK_ID,PAYEE_ACCOUNT_ID,PLAN_NAME,FIRST_ORG AS FIRST_NAME, LAST_NAME AS LAST_NAME&#xD;&#xA;  ,BENEFIT_TYPE&#xD;&#xA;  ,BENEFIT_OPTION&#xD;&#xA;  ,NDPERS_BANK_ACCOUNT&#xD;&#xA;  ,ISNULL([EXCS],0) AS EXCESS_CONTRIBUTION_REFUND&#xD;&#xA;  ,ISNULL([TEEA],0) AS TAXABLE_EE_AMOUNT&#xD;&#xA;  ,ISNULL([NEEA],0) AS NONTAXABLE_EE_AMOUNT&#xD;&#xA;  ,ISNULL([RENT],0) AS RHIC_EE_NON_TAXABLE_AMOUNT&#xD;&#xA;  ,ISNULL([CPGN],0) AS CAPITAL_GAIN&#xD;&#xA;  ,ISNULL([VERA],0) AS VESTED_ER_AMOUNT&#xD;&#xA;  ,ISNULL([EEIA],0) AS EE_INTEREST_AMOUNT&#xD;&#xA;  ,ISNULL([ERIA],0) AS ER_INTEREST_AMOUNT&#xD;&#xA;  ,ISNULL([FDTX],0) AS FEDERAL_TAX_AMOUNT&#xD;&#xA;  ,ISNULL([STTX],0) AS STATE_TAX_AMOUNT&#xD;&#xA;  ,0 AS EE_ADDITIONAL_INTEREST_AMOUNT&#xD;&#xA;  ,ISNULL([ERPT],0) AS ER_PRETAX_AMOUNT&#xD;&#xA;  ,ISNULL([AEEA],0) AS ADDITIONAL_EE_AMOUNT&#xD;&#xA;  ,ISNULL([AERA],0) AS ADDITIONAL_ER_AMOUNT&#xD;&#xA;  ,ISNULL([TXRA],0) AS TAXABLE_ROLLOVER_AMOUNT&#xD;&#xA;  ,ISNULL([NTRA],0) AS NONTAXABLE_ROLLOVER_AMOUNT&#xD;&#xA;  ,0 AS NET_AMOUNT&#xD;&#xA;  ,ISNULL([EEER],0) AS EE_ER_PICKUP_AMOUNT&#xD;&#xA;  ,0 AS STATE_TAX_AMOUNT1&#xD;&#xA;  ,ISNULL([TXAM],0) AS TAXABLE_AMOUNT&#xD;&#xA;  ,ISNULL([NTXA],0) AS NON_TAXABLE_AMOUNT&#xD;&#xA;  ,ISNULL([COLA],0) AS COLA&#xD;&#xA;  ,ISNULL([TAIA],0) AS TAXABLE_ADHOC_INCREASE_AMOUNT&#xD;&#xA;  ,ISNULL([INTR],0) AS INTEREST&#xD;&#xA;  ,0 AS FEDERAL_TAX_ON_INTEREST_AMOUNT&#xD;&#xA;  ,ISNULL([THRD],0) AS THRD_PARTY_HEALTH_INSURANCE_REFUND&#xD;&#xA;  ,ISNULL([CHSR],0) AS CHILD_SUPPORT_REFUND&#xD;&#xA;  ,ISNULL([DURF],0) AS DUES_REFUND&#xD;&#xA;  ,ISNULL([FXRF],0) AS FEDERAL_TAX_REFUND&#xD;&#xA;  ,ISNULL([RPNR],0) AS RETRO_PENSION_RECEIVABLE&#xD;&#xA;  ,ISNULL([RHBR],0) AS RHIC_BENEFIT_REIMBURSEMENT&#xD;&#xA;  ,0 AS STATE_TAX_ON_INTEREST_AMOUNT&#xD;&#xA;  ,ISNULL([SXRF],0) AS STATE_TAX_REFUND&#xD;&#xA;  ,ISNULL([TXLR],0) AS TAX_LEVY_REFUND&#xD;&#xA;  ,ISNULL([OTDT],0) AS OTHER_DEDUCTIONS&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG , PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA; CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA; , CV2.DESCRIPTION AS BENEFIT_TYPE&#xD;&#xA; , CV1.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA; , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM(PAPI.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA; ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA; FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;  PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PLAN SPL WITH(NOLOCK) ON SPL.PLAN_ID = BA.PLAN_ID&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;  ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA; WHERE CV.DATA2 IN ('APRD') AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE  &#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE IN ('REFD', 'RGRD', 'AURD') &#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA; , CV2.DESCRIPTION&#xD;&#xA; , CV1.DESCRIPTION&#xD;&#xA; , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2 &#xD;&#xA; &#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;-- 26652&#xD;&#xA;SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG, NULL as PAYEE_ACCOUNT_ID,ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA;  CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA;  , 'Excess Contribution Refund' AS BENEFIT_TYPE&#xD;&#xA;  , '' AS BENEFIT_OPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM((CASE WHEN OVERRIDDEN_REFUND_AMOUNT &gt; 0 THEN OVERRIDDEN_REFUND_AMOUNT ELSE COMPUTED_REFUND_AMOUNT END)*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM SGT_REMITTANCE PAPI&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = &#xD;&#xA;   CASE WHEN PAPI.REMITTANCE_TYPE_VALUE = 'P501' THEN (SELECT PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM501') &#xD;&#xA;   WHEN PAPI.REMITTANCE_TYPE_VALUE = 'P502'  THEN (SELECT PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM502')&#xD;&#xA;   WHEN PAPI.REMITTANCE_TYPE_VALUE = 'P503'  THEN (SELECT PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM503')&#xD;&#xA;   WHEN PAPI.REMITTANCE_TYPE_VALUE = 'P504'  THEN (SELECT PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM504')&#xD;&#xA;   WHEN PAPI.REMITTANCE_TYPE_VALUE = 'P505'  THEN (SELECT PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM505')&#xD;&#xA;   ELSE 0 END&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PAPI.REFUND_TO_PERSON_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PAPI.REFUND_TO_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID = PAPI.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA; WHERE REFUND_STATUS_VALUE in ('APRD','RIA') AND PAPI.REMITTANCE_TYPE_VALUE IN ('P501', 'P502', 'P503', 'P504', 'P505')&#xD;&#xA; GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2 &#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG, PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA; CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA; , CV2.DESCRIPTION AS BENEFIT_TYPE&#xD;&#xA; , CV1.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA; , PIT1.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM(PAPI.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA; ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA; FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;  PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;  ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID &#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_PLAN SPL WITH(NOLOCK) ON SPL.PLAN_ID = BA.PLAN_ID&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA; WHERE CV.DATA2 IN ('APRD') AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE  &#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE IN ('REFD', 'RGRD', 'AURD') &#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA; AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA; , CV2.DESCRIPTION&#xD;&#xA; , CV1.DESCRIPTION&#xD;&#xA; , PIT1.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2 &#xD;&#xA;) MA&#xD;&#xA; PIVOT (SUM(AMOUNT) FOR NON_MONTHLY_PAYMENT_GROUP_VALUE IN ([EXCS]&#xD;&#xA;    ,[TEEA]&#xD;&#xA;    ,[NEEA]&#xD;&#xA;    ,[RENT]&#xD;&#xA;    ,[CPGN]&#xD;&#xA;    ,[VERA]&#xD;&#xA;    ,[EEIA]&#xD;&#xA;    ,[ERIA]&#xD;&#xA;    ,[FDTX]&#xD;&#xA;    ,[STTX]&#xD;&#xA;    ,[ERPT]&#xD;&#xA;    ,[AEEA]&#xD;&#xA;    ,[AERA]&#xD;&#xA;    ,[TXRA]&#xD;&#xA;    ,[NTRA]&#xD;&#xA;    ,[EEER]&#xD;&#xA;    ,[TXAM]&#xD;&#xA;    ,[NTXA]&#xD;&#xA;    ,[COLA]&#xD;&#xA;    ,[TAIA]&#xD;&#xA;    ,[INTR]&#xD;&#xA;    ,[THRD]&#xD;&#xA;    ,[CHSR]&#xD;&#xA;    ,[DURF]&#xD;&#xA;    ,[FXRF]&#xD;&#xA;    ,[RPNR]&#xD;&#xA;    ,[RHBR]&#xD;&#xA;    ,[SXRF]&#xD;&#xA;    ,[TXLR]&#xD;&#xA;    ,[OTDT])) AS PVT&#xD;&#xA;ORDER BY NDPERS_BANK_ACCOUNT,BENEFIT_TYPE,BENEFIT_OPTION,PERSON_ORG,PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="TrialMonthlyBenefitPaymentbyItemReportAdhoc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @EXCESSREFUNDID INT&#xD;&#xA;SELECT @EXCESSREFUNDID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM1'&#xD;&#xA;DECLARE @ESCHEATPAYMENTDESCRIPTION VARCHAR(MAX)&#xD;&#xA;SELECT @ESCHEATPAYMENTDESCRIPTION = ITEM_TYPE_DESCRIPTION FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM457' &#xD;&#xA;&#xD;&#xA;DECLARE @LASTDATE DATETIME&#xD;&#xA;SELECT @LASTDATE = MAX(PAYMENT_DATE) FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA;WHERE PROCESS_DATE &lt;= @PAYMENTDATE&#xD;&#xA;AND SCHEDULE_TYPE_VALUE = 'MTLY'&#xD;&#xA;AND STATUS_VALUE = 'PRCD'&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Select PLAN_NAME,ITEM_DESCRIPTION,SUM(AMOUNT) AS AMOUNT,ITEM_TYPE_DIRECTION from &#xD;&#xA;(&#xD;&#xA;SELECT '' AS PLAN_NAME, &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; ( SELECT PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;        AND (PA.BENEFIT_OPTION_VALUE IN ('DBCT','DTCT','DBDC','DBTT','SPEL') &#xD;&#xA;      OR (PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;        AND ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') = CASE WHEN PA.APPLICATION_ID IS NOT NULL THEN 'Y' ELSE ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') END&#xD;&#xA;        AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE)) --PROD PIR 4919&#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA; GROUP BY PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA; --ROLLOVER ITEMS&#xD;&#xA; SELECT '' AS PLAN_NAME, PIT1.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, SUM(PAPIT.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA; FROM &#xD;&#xA;  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA;  (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;    ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )  &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND DATEADD(M,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;   AND ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') = CASE WHEN PA.APPLICATION_ID IS NOT NULL THEN 'Y' ELSE ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') END&#xD;&#xA;   AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE --PROD PIR 4919&#xD;&#xA;  ) AS PAYEE&#xD;&#xA;  ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE&#xD;&#xA;  @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; GROUP BY PIT1.ITEM_TYPE_DESCRIPTION,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;---we have the block to bring the reissue items for all types of payee account below, so commeted&#xD;&#xA;--UNION&#xD;&#xA;-- --ROLLOVER ITEMS - Reissue&#xD;&#xA;-- SELECT '' AS PLAN_NAME, PIT1.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, SUM(PAPIT.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;-- FROM &#xD;&#xA;--  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;-- INNER JOIN  &#xD;&#xA;--  (SELECT &#xD;&#xA;--   PA.PAYEE_ACCOUNT_ID&#xD;&#xA;--  FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;--   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;--    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;--   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;--    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;--   --INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;--   -- ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;--  WHERE (CV.DATA2 = 'RPCD')   &#xD;&#xA;--   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;--    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;--     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;--     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;--     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;--     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;--    )&#xD;&#xA;--   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;--   AND DATEADD(M,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;--   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;--   AND PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;--  ) AS PAYEE&#xD;&#xA;--  ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;-- INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;--  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;-- INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;--  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;-- INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;--  ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;-- INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;--  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;--     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;-- WHERE&#xD;&#xA;--  @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;--  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED' and REISSUE_ITEM_FLAG = 'Y'&#xD;&#xA;--  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;-- GROUP BY PIT1.ITEM_TYPE_DESCRIPTION,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;-----&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT '' AS PLAN_NAME, &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; ( SELECT PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;      AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND PADR&#xD;&#xA;  ON PADR.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID   &#xD;&#xA;    AND PADR.PAYMENT_OPTION_VALUE = 'SPCL' AND PADR.PAYMENT_HISTORY_HEADER_ID IS NULL&#xD;&#xA; WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA; GROUP BY PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UNION &#xD;&#xA;&#xD;&#xA;SELECT '' AS PLAN_NAME, &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID,RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN&#xD;&#xA;     (&#xD;&#xA;      SELECT  PAYEE_ACCOUNT_ID ,PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;      WHERE APPROVED_FLAG = 'Y' &#xD;&#xA;        AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;        AND (PAYMENT_HISTORY_HEADER_ID IS  NULL)        &#xD;&#xA;     ) AS RETRO&#xD;&#xA;    ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL RPD &#xD;&#xA;  ON PAYEE.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = RPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;  and RPD.PAYMENT_ITEM_TYPE_ID  = PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA; GROUP BY PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;--- PIR 2010&#xD;&#xA;&#xD;&#xA;UNION &#xD;&#xA;&#xD;&#xA;SELECT '' AS PLAN_NAME, &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID,RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN&#xD;&#xA;     (&#xD;&#xA;      SELECT  PAYEE_ACCOUNT_ID ,PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;      WHERE APPROVED_FLAG = 'Y' &#xD;&#xA;        AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;        AND (PAYMENT_HISTORY_HEADER_ID IS  NULL)&#xD;&#xA;        AND RETRO_PAYMENT_TYPE_VALUE IN ('IRPM','REAC')&#xD;&#xA;        &#xD;&#xA;     ) AS RETRO&#xD;&#xA;    ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; WHERE PAPIT.END_DATE IS NOT NULL&#xD;&#xA; AND @PAYMENTDATE &lt; PAPIT.END_DATE &#xD;&#xA; AND MONTH(PAPIT.START_DATE) = MONTH(PAPIT.END_DATE)&#xD;&#xA; AND YEAR(PAPIT.START_DATE) = YEAR(PAPIT.END_DATE)&#xD;&#xA; AND RECEIAVABLE_ITEM_FOR_RETRO_FLAG  = 'Y' &#xD;&#xA; GROUP BY PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;UNION &#xD;&#xA;&#xD;&#xA;SELECT '' AS PLAN_NAME, &#xD;&#xA; ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(AMOUNT*ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; ITEM_TYPE_DIRECTION&#xD;&#xA;From &#xD;&#xA;( &#xD;&#xA;SELECT @EXCESSREFUNDID as PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;  PIT.ITEM_TYPE_DESCRIPTION , &#xD;&#xA;  PIT.ITEM_TYPE_DIRECTION,&#xD;&#xA;  CASE WHEN OVERRIDDEN_REFUND_AMOUNT &gt; 0 THEN OVERRIDDEN_REFUND_AMOUNT &#xD;&#xA;  ELSE COMPUTED_REFUND_AMOUNT END AS AMOUNT &#xD;&#xA;  FROM SGT_REMITTANCE PAPI&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;   ON PIT.PAYMENT_ITEM_TYPE_ID = @EXCESSREFUNDID &#xD;&#xA;  WHERE REFUND_STATUS_VALUE IN ('APRD','RIA') AND PAPI.REMITTANCE_TYPE_VALUE NOT IN ('P501', 'P502', 'P503','P504','P505')&#xD;&#xA;) as Temp&#xD;&#xA;GROUP BY ITEM_TYPE_DESCRIPTION,ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;--SUPPLEMENTAL CHECKS&#xD;&#xA;SELECT '' AS PLAN_NAME, &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE   &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;   OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD')))&#xD;&#xA;  GROUP BY PA.PAYEE_ACCOUNT_ID&#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID  &#xD;&#xA; WHERE PAPIT.START_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND @PAYMENTDATE &lt;= (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE = 'SPCK'&#xD;&#xA; GROUP BY PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;--Reissue checks&#xD;&#xA;SELECT '' AS PLAN_NAME, &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE   &#xD;&#xA;  WHERE CV.DATA2 &lt;&gt; 'CNLD'&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;   --AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;  GROUP BY PA.PAYEE_ACCOUNT_ID&#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID  &#xD;&#xA; WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;  AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') = 'Y'&#xD;&#xA; GROUP BY PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; &#xD;&#xA;UNION&#xD;&#xA;--Reissue checks&#xD;&#xA;SELECT '' AS PLAN_NAME, &#xD;&#xA; PIT1.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE   &#xD;&#xA;  WHERE CV.DATA2 &lt;&gt; 'CNLD'&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;   --AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;  GROUP BY PA.PAYEE_ACCOUNT_ID&#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID &#xD;&#xA; WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;  AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') = 'Y'&#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; GROUP BY PIT1.ITEM_TYPE_DESCRIPTION,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA; &#xD;&#xA;UNION&#xD;&#xA;--PROD PIR 5695 : NEED TO INCLUDE PAYEES WITH FLAG CHECKED (POST AND PRE)&#xD;&#xA;SELECT '' AS PLAN_NAME, &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; ( SELECT PA.PAYEE_ACCOUNT_ID , PA.APPLICATION_ID, PA.DRO_CALCULATION_ID,PA.DRO_APPLICATION_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') &#xD;&#xA;        AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;        AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; WHERE @PAYMENTDATE &lt;= (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA; GROUP BY PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;Union &#xD;&#xA;&#xD;&#xA;-- PIR 8301&#xD;&#xA;&#xD;&#xA;SELECT '' AS PLAN_NAME, PIT1.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA; FROM &#xD;&#xA;  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA;  (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;    ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )  &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND DATEADD(M,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;      AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') &#xD;&#xA;      AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;      AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA;  ) AS PAYEE&#xD;&#xA;  ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = &#xD;&#xA;     PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE&#xD;&#xA;  @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' &#xD;&#xA;   ELSE PAPIT.END_DATE END)&#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; GROUP BY PIT1.ITEM_TYPE_DESCRIPTION,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;--&lt;&lt;&lt;&lt; PLAN WISE &gt;&gt;&gt;&gt;&#xD;&#xA;Union &#xD;&#xA;SELECT PL.PLAN_NAME, &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; ( SELECT PA.PAYEE_ACCOUNT_ID , PA.APPLICATION_ID, PA.DRO_CALCULATION_ID,PA.DRO_APPLICATION_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;        AND (PA.BENEFIT_OPTION_VALUE IN ('DBCT','DTCT','DBDC','DBTT','SPEL') &#xD;&#xA;      OR (PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;        AND ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') = CASE WHEN PA.APPLICATION_ID IS NOT NULL THEN 'Y' ELSE ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') END&#xD;&#xA;        AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE)) --PROD PIR 4919&#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  ON PAYEE.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA;  ON DROC.DRO_CALCULATION_ID = PAYEE.DRO_CALCULATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA;  ON PAYEE.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PLAN(NOLOCK) PL &#xD;&#xA;  ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA; WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)  &#xD;&#xA; GROUP BY PL.PLAN_NAME,PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA; --ROLLOVER ITEMS&#xD;&#xA; SELECT PL.PLAN_NAME, PIT1.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, SUM(PAPIT.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA; FROM &#xD;&#xA;  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA;  (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID,PA.APPLICATION_ID,PA.DRO_APPLICATION_ID,PA.DRO_CALCULATION_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;    ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )  &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND DATEADD(M,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;   AND ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') = CASE WHEN PA.APPLICATION_ID IS NOT NULL THEN 'Y' ELSE ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') END&#xD;&#xA;   AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE  --PROD PIR 4919&#xD;&#xA;  ) AS PAYEE&#xD;&#xA;  ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  ON PAYEE.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA;  ON DROC.DRO_CALCULATION_ID = PAYEE.DRO_CALCULATION_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA;  ON PAYEE.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; LEFT OUTER JOIN SGT_PLAN(NOLOCK) PL &#xD;&#xA;  ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA; WHERE&#xD;&#xA;  @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; GROUP BY PL.PLAN_NAME,PIT1.ITEM_TYPE_DESCRIPTION,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;-----we have the block to bring the reissue items for all types of payee account below, so commeted&#xD;&#xA;--UNION&#xD;&#xA;-- --ROLLOVER ITEMS - Re issue&#xD;&#xA;-- SELECT PL.PLAN_NAME, PIT1.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, SUM(PAPIT.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;-- FROM &#xD;&#xA;--  SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;-- INNER JOIN  &#xD;&#xA;--  (SELECT &#xD;&#xA;--   PA.PAYEE_ACCOUNT_ID,PA.APPLICATION_ID,PA.DRO_APPLICATION_ID,PA.DRO_CALCULATION_ID&#xD;&#xA;--  FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;--   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;--    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;--   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;--    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;--   --INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;--   -- ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;--   WHERE (CV.DATA2 = 'RPCD')   &#xD;&#xA;--   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;--    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;--     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;--     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;--     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;--     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;--    )&#xD;&#xA;--   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;--   AND DATEADD(M,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;--   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;--   AND PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;--  ) AS PAYEE&#xD;&#xA;--  ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;-- INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;--  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;-- INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;--  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;-- INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;--  ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;-- INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;--  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;--     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;-- LEFT OUTER JOIN SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;--  ON PAYEE.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;-- LEFT OUTER JOIN SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA;--  ON DROC.DRO_CALCULATION_ID = PAYEE.DRO_CALCULATION_ID&#xD;&#xA;-- LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA;--  ON PAYEE.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA;-- LEFT OUTER JOIN SGT_PLAN(NOLOCK) PL &#xD;&#xA;--  ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA;-- WHERE&#xD;&#xA;--  @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA;--  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED' and REISSUE_ITEM_FLAG = 'Y'&#xD;&#xA;--  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;-- GROUP BY PL.PLAN_NAME,PIT1.ITEM_TYPE_DESCRIPTION,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;--&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT PL.PLAN_NAME,  &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; ( SELECT PA.PAYEE_ACCOUNT_ID , PA.APPLICATION_ID, PA.DRO_CALCULATION_ID,PA.DRO_APPLICATION_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    --INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;    --  ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;      AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND PADR&#xD;&#xA;  ON PADR.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID   &#xD;&#xA;    AND PADR.PAYMENT_OPTION_VALUE = 'SPCL'  AND PADR.PAYMENT_HISTORY_HEADER_ID IS NULL&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  ON PAYEE.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA;  ON DROC.DRO_CALCULATION_ID = PAYEE.DRO_CALCULATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA;  ON PAYEE.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PLAN(NOLOCK) PL &#xD;&#xA;  ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA; WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA; GROUP BY PL.PLAN_NAME,PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;UNION &#xD;&#xA;&#xD;&#xA;SELECT PL.PLAN_NAME, &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; (SELECT &#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID , PA.APPLICATION_ID, PA.DRO_CALCULATION_ID,PA.DRO_APPLICATION_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN&#xD;&#xA;     (&#xD;&#xA;      SELECT  PAYEE_ACCOUNT_ID ,PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;      WHERE APPROVED_FLAG = 'Y' &#xD;&#xA;        AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;        AND (PAYMENT_HISTORY_HEADER_ID IS NULL)        &#xD;&#xA;     ) AS RETRO&#xD;&#xA;    ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL RPD &#xD;&#xA;  ON PAYEE.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = RPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;   and RPD.PAYMENT_ITEM_TYPE_ID  = PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  ON PAYEE.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA;  ON DROC.DRO_CALCULATION_ID = PAYEE.DRO_CALCULATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA;  ON PAYEE.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PLAN(NOLOCK) PL &#xD;&#xA;  ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA; WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END)&#xD;&#xA; GROUP BY PL.PLAN_NAME,PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;--- PIR 2010&#xD;&#xA;UNION &#xD;&#xA;&#xD;&#xA;SELECT PL.PLAN_NAME, &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; (SELECT &#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,RETRO.PAYEE_ACCOUNT_RETRO_PAYMENT_ID , PA.APPLICATION_ID, PA.DRO_CALCULATION_ID,PA.DRO_APPLICATION_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   INNER JOIN&#xD;&#xA;     (&#xD;&#xA;      SELECT  PAYEE_ACCOUNT_ID ,PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;      WHERE APPROVED_FLAG = 'Y' &#xD;&#xA;        AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;        AND (PAYMENT_HISTORY_HEADER_ID IS NULL) &#xD;&#xA;        AND RETRO_PAYMENT_TYPE_VALUE IN ('IRPM','REAC')&#xD;&#xA;       &#xD;&#xA;     ) AS RETRO&#xD;&#xA;    ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  ON PAYEE.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA;  ON DROC.DRO_CALCULATION_ID = PAYEE.DRO_CALCULATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA;  ON PAYEE.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PLAN(NOLOCK) PL &#xD;&#xA;  ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA; WHERE PAPIT.END_DATE IS NOT NULL  &#xD;&#xA;  AND @PAYMENTDATE &lt; PAPIT.END_DATE &#xD;&#xA;  AND MONTH(PAPIT.START_DATE) = MONTH(PAPIT.END_DATE)&#xD;&#xA;  AND YEAR(PAPIT.START_DATE) = YEAR(PAPIT.END_DATE)&#xD;&#xA;  AND RECEIAVABLE_ITEM_FOR_RETRO_FLAG  = 'Y' &#xD;&#xA; GROUP BY PL.PLAN_NAME,PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;---&#xD;&#xA;Union&#xD;&#xA;&#xD;&#xA; SELECT PLAN_NAME, &#xD;&#xA;  ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA;  SUM(AMOUNT*ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA;  ITEM_TYPE_DIRECTION&#xD;&#xA; From &#xD;&#xA; ( &#xD;&#xA;  SELECT @EXCESSREFUNDID as PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;    PLAN_NAME,&#xD;&#xA;    PIT.ITEM_TYPE_DESCRIPTION , &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION,&#xD;&#xA;    CASE WHEN OVERRIDDEN_REFUND_AMOUNT &gt; 0 THEN OVERRIDDEN_REFUND_AMOUNT &#xD;&#xA;    ELSE COMPUTED_REFUND_AMOUNT END AS AMOUNT &#xD;&#xA;    FROM SGT_REMITTANCE PAPI&#xD;&#xA;    INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;     ON PIT.PAYMENT_ITEM_TYPE_ID = @EXCESSREFUNDID &#xD;&#xA;    LEFT OUTER JOIN DBO.SGT_PLAN(NOLOCK) PL &#xD;&#xA;     ON PAPI.PLAN_ID = PL.PLAN_ID &#xD;&#xA;    WHERE REFUND_STATUS_VALUE IN ('APRD','RIA') AND PAPI.REMITTANCE_TYPE_VALUE NOT IN ('P501', 'P502', 'P503','P504','P50')&#xD;&#xA;  ) as Temp&#xD;&#xA; GROUP BY PLAN_NAME,ITEM_TYPE_DESCRIPTION,ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;--SUPPLEMENTAL CHECK&#xD;&#xA;SELECT PL.PLAN_NAME,  &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; ( SELECT PA.PAYEE_ACCOUNT_ID , PA.APPLICATION_ID, PA.DRO_CALCULATION_ID,PA.DRO_APPLICATION_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;      OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD')))&#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  ON PAYEE.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA;  ON DROC.DRO_CALCULATION_ID = PAYEE.DRO_CALCULATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA;  ON PAYEE.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PLAN(NOLOCK) PL &#xD;&#xA;  ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA; WHERE PAPIT.START_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND @PAYMENTDATE &lt;= (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA;  AND PIT.CHECK_TYPE_VALUE = 'SPCK'&#xD;&#xA; GROUP BY PL.PLAN_NAME,PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;--REISSUE CHECK&#xD;&#xA;SELECT PL.PLAN_NAME,  &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; ( SELECT PA.PAYEE_ACCOUNT_ID , PA.APPLICATION_ID, PA.DRO_CALCULATION_ID,PA.DRO_APPLICATION_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    --INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;    --  ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE CV.DATA2 &lt;&gt; 'CNLD'&#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        --AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)        &#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  ON PAYEE.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA;  ON DROC.DRO_CALCULATION_ID = PAYEE.DRO_CALCULATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA;  ON PAYEE.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PLAN(NOLOCK) PL &#xD;&#xA;  ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA; WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA;  AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') = 'Y'&#xD;&#xA; GROUP BY PL.PLAN_NAME,PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; &#xD;&#xA;UNION&#xD;&#xA;--REISSUE CHECK&#xD;&#xA;SELECT PL.PLAN_NAME,  &#xD;&#xA; PIT1.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; ( SELECT PA.PAYEE_ACCOUNT_ID , PA.APPLICATION_ID, PA.DRO_CALCULATION_ID,PA.DRO_APPLICATION_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    --INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;    --  ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE CV.DATA2 &lt;&gt; 'CNLD'&#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        --AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)        &#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  ON PAYEE.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA;  ON DROC.DRO_CALCULATION_ID = PAYEE.DRO_CALCULATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA;  ON PAYEE.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PLAN(NOLOCK) PL &#xD;&#xA;  ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA; WHERE @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA;  AND ISNULL(PAPIT.REISSUE_ITEM_FLAG,'N') = 'Y'&#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED' and REISSUE_ITEM_FLAG = 'Y'&#xD;&#xA;  AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; GROUP BY PL.PLAN_NAME,PIT1.ITEM_TYPE_DESCRIPTION,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;--PROD PIR 5695 : NEED TO INCLUDE PAYEES WITH FLAG CHECKED (POST AND PRE)&#xD;&#xA;SELECT PL.PLAN_NAME,  &#xD;&#xA; PIT.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT, &#xD;&#xA; PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA; INNER JOIN  &#xD;&#xA; ( SELECT PA.PAYEE_ACCOUNT_ID , PA.APPLICATION_ID, PA.DRO_CALCULATION_ID,PA.DRO_APPLICATION_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;      ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;      ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;      ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;      WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA;        AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;        (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;       FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;       WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;       AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;       ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;      )&#xD;&#xA;        AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;        AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;        AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;        AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') &#xD;&#xA;        AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;        AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON  PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT &#xD;&#xA;  ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  ON PAYEE.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA;  ON DROC.DRO_CALCULATION_ID = PAYEE.DRO_CALCULATION_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA;  ON PAYEE.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PLAN(NOLOCK) PL &#xD;&#xA;  ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA; WHERE @PAYMENTDATE &lt;= (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' ELSE PAPIT.END_DATE END) &#xD;&#xA; GROUP BY PL.PLAN_NAME,PIT.ITEM_TYPE_DESCRIPTION,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; &#xD;&#xA;Union&#xD;&#xA;&#xD;&#xA;-- PIR 8301&#xD;&#xA;&#xD;&#xA;SELECT PL.PLAN_NAME, PIT1.ITEM_TYPE_DESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PAPIT.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;FROM &#xD;&#xA; SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT &#xD;&#xA;INNER JOIN  &#xD;&#xA; (SELECT &#xD;&#xA;  PA.PAYEE_ACCOUNT_ID,PA.APPLICATION_ID,PA.DRO_APPLICATION_ID,PA.DRO_CALCULATION_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND DATEADD(M,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;  AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;     AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') &#xD;&#xA;     AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;     AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA; ) AS PAYEE&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA; ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA; ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA; ON PARD.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA; ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;    AND PAPIT.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA; ON PAYEE.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_DRO_CALCULATION(NOLOCK) DROC &#xD;&#xA; ON DROC.DRO_CALCULATION_ID = PAYEE.DRO_CALCULATION_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION(NOLOCK) DROA  &#xD;&#xA; ON PAYEE.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA;LEFT OUTER JOIN SGT_PLAN(NOLOCK) PL &#xD;&#xA; ON ISNULL(BA.PLAN_ID,DROA.PLAN_ID) = PL.PLAN_ID &#xD;&#xA;WHERE&#xD;&#xA; @PAYMENTDATE &lt; (CASE WHEN PAPIT.END_DATE IS NULL THEN '99991231' &#xD;&#xA;  ELSE PAPIT.END_DATE END)&#xD;&#xA; AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA; AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA;GROUP BY PL.PLAN_NAME,PIT1.ITEM_TYPE_DESCRIPTION,PIT1.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;Union&#xD;&#xA;&#xD;&#xA;-- PIR 16219 - - Escheat To state payments&#xD;&#xA;&#xD;&#xA;SELECT PL.PLAN_NAME, @ESCHEATPAYMENTDESCRIPTION AS ITEM_DESCRIPTION, &#xD;&#xA; SUM(PHD.NET_AMOUNT) AS AMOUNT, 1 AS ITEM_TYPE_DIRECTION&#xD;&#xA;FROM &#xD;&#xA; SGT_PAYMENT_HISTORY_DISTRIBUTION(NOLOCK) PHD &#xD;&#xA;INNER JOIN &#xD;&#xA; SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID AND PHD.DISTRIBUTION_STATUS_VALUE IN ('CEST', 'RSST') &#xD;&#xA; and phh.PAYMENT_DATE &lt;= @PAYMENTDATE&#xD;&#xA;INNER JOIN SGT_PLAN(NOLOCK) PL ON PL.PLAN_ID = PHH.PLAN_ID&#xD;&#xA;GROUP BY PL.PLAN_NAME &#xD;&#xA;  &#xD;&#xA;) As Tbl &#xD;&#xA;GROUP BY PLAN_NAME,ITEM_DESCRIPTION,ITEM_TYPE_DIRECTION&#xD;&#xA;ORDER BY PLAN_NAME,ITEM_TYPE_DIRECTION desc,abs(SUM(amount)) Desc">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetAmountToSubractedFromMinimumGuarantee" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ISNULL(SUM(ISNULL(AMOUNT,0.00)),0.00) FROM SGT_PAYMENT_HISTORY_DETAIL A&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE B ON A.PAYMENT_ITEM_TYPE_ID=B.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER C ON A.PAYMENT_HISTORY_HEADER_ID=C.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;WHERE &#xD;&#xA;C.PAYEE_ACCOUNT_ID=@PAYEEACCOUNTID AND &#xD;&#xA;B.ITEM_TYPE_DIRECTION=1 AND &#xD;&#xA;B.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;AND C.STATUS_VALUE &lt;&gt; 'CNLD'  &#xD;&#xA;AND A.PAYMENT_ITEM_TYPE_ID NOT IN (46,106,202,210,211,212,213)">
      <parameters>
        <parameter ID="@PAYEEACCOUNTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="TrialNonMonthlyPaymentDetailReportAdhoc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LASTDATE DATETIME&#xD;&#xA;SELECT @LASTDATE = MAX(PAYMENT_DATE) FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA;WHERE PROCESS_DATE &lt;= @PAYMENTDATE&#xD;&#xA;AND SCHEDULE_TYPE_VALUE = 'MTLY'&#xD;&#xA;AND STATUS_VALUE = 'PRCD'&#xD;&#xA;&#xD;&#xA;DECLARE @EXCESSREFUNDID INT&#xD;&#xA;SELECT @EXCESSREFUNDID = PAYMENT_ITEM_TYPE_ID FROM SGT_PAYMENT_ITEM_TYPE WHERE ITEM_TYPE_CODE = 'ITEM1' &#xD;&#xA;&#xD;&#xA;DECLARE @ESCHEATTOSTATEBENEFITTYPE VARCHAR(MAX)&#xD;&#xA;SELECT @ESCHEATTOSTATEBENEFITTYPE = ITEM_TYPE_DESCRIPTION FROM SGT_PAYMENT_ITEM_TYPE(NOLOCK) WHERE ITEM_TYPE_CODE = 'ITEM457'&#xD;&#xA;DECLARE @ESCHEATORGID INT&#xD;&#xA;SELECT @ESCHEATORGID = DATA1 FROM SGS_CODE_VALUE(NOLOCK) WHERE CODE_ID = 52 AND CODE_VALUE = 'ETSO'&#xD;&#xA;&#xD;&#xA;SELECT PERSON_ORG AS PERSLINK_ID,PLAN_NAME,PAYEE_ACCOUNT_ID,FIRST_ORG AS FIRST_NAME, LAST_NAME AS LAST_NAME&#xD;&#xA;  ,BENEFIT_TYPE&#xD;&#xA;  ,BENEFIT_OPTION&#xD;&#xA;  ,NDPERS_BANK_ACCOUNT&#xD;&#xA;  ,ISNULL([EXCS],0) AS EXCESS_CONTRIBUTION_REFUND&#xD;&#xA;  ,ISNULL([TEEA],0) AS TAXABLE_EE_AMOUNT&#xD;&#xA;  ,ISNULL([NEEA],0) AS NONTAXABLE_EE_AMOUNT&#xD;&#xA;  ,ISNULL([RENT],0) AS RHIC_EE_NON_TAXABLE_AMOUNT&#xD;&#xA;  ,ISNULL([CPGN],0) AS CAPITAL_GAIN&#xD;&#xA;  ,ISNULL([VERA],0) AS VESTED_ER_AMOUNT&#xD;&#xA;  ,ISNULL([EEIA],0) AS EE_INTEREST_AMOUNT&#xD;&#xA;  ,ISNULL([ERIA],0) AS ER_INTEREST_AMOUNT&#xD;&#xA;  ,ISNULL([FDTX],0) AS FEDERAL_TAX_AMOUNT&#xD;&#xA;  ,ISNULL([STTX],0) AS STATE_TAX_AMOUNT&#xD;&#xA;  ,0 AS EE_ADDITIONAL_INTEREST_AMOUNT&#xD;&#xA;  ,ISNULL([ERPT],0) AS ER_PRETAX_AMOUNT&#xD;&#xA;  ,ISNULL([AEEA],0) AS ADDITIONAL_EE_AMOUNT&#xD;&#xA;  ,ISNULL([AERA],0) AS ADDITIONAL_ER_AMOUNT&#xD;&#xA;  ,ISNULL([TXRA],0) AS TAXABLE_ROLLOVER_AMOUNT&#xD;&#xA;  ,ISNULL([NTRA],0) AS NONTAXABLE_ROLLOVER_AMOUNT&#xD;&#xA;  ,0 AS NET_AMOUNT&#xD;&#xA;  ,ISNULL([EEER],0) AS EE_ER_PICKUP_AMOUNT&#xD;&#xA;  ,0 AS STATE_TAX_AMOUNT1&#xD;&#xA;  ,ISNULL([TXAM],0) AS TAXABLE_AMOUNT&#xD;&#xA;  ,ISNULL([NTXA],0) AS NON_TAXABLE_AMOUNT&#xD;&#xA;  ,ISNULL([COLA],0) AS COLA&#xD;&#xA;  ,ISNULL([TAIA],0) AS TAXABLE_ADHOC_INCREASE_AMOUNT&#xD;&#xA;  ,ISNULL([INTR],0) AS INTEREST&#xD;&#xA;  ,0 AS FEDERAL_TAX_ON_INTEREST_AMOUNT&#xD;&#xA;  ,ISNULL([THRD],0) AS THRD_PARTY_HEALTH_INSURANCE_REFUND&#xD;&#xA;  ,ISNULL([CHSR],0) AS CHILD_SUPPORT_REFUND&#xD;&#xA;  ,ISNULL([DURF],0) AS DUES_REFUND&#xD;&#xA;  ,ISNULL([FXRF],0) AS FEDERAL_TAX_REFUND&#xD;&#xA;  ,ISNULL([RPNR],0) AS RETRO_PENSION_RECEIVABLE&#xD;&#xA;  ,ISNULL([RHBR],0) AS RHIC_BENEFIT_REIMBURSEMENT&#xD;&#xA;  ,0 AS STATE_TAX_ON_INTEREST_AMOUNT&#xD;&#xA;  ,ISNULL([SXRF],0) AS STATE_TAX_REFUND&#xD;&#xA;  ,ISNULL([TXLR],0) AS TAX_LEVY_REFUND&#xD;&#xA;  ,ISNULL([OTDT],0) AS OTHER_DEDUCTIONS&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA; SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG, PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA;  CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA;  , CV2.DESCRIPTION AS BENEFIT_TYPE&#xD;&#xA;  , CV1.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM(PAPI.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;   WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;     AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;     AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;     AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;     AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;     AND (PA.BENEFIT_OPTION_VALUE IN ('DBCT','DTCT','DBDC','DBTT','SPEL') &#xD;&#xA;   OR (PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;     AND ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') = CASE WHEN PA.APPLICATION_ID IS NOT NULL THEN 'Y' ELSE ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') END&#xD;&#xA;     AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE)) --PROD PIR 4919&#xD;&#xA;     and @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA; GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA;  , CV2.DESCRIPTION&#xD;&#xA;  , CV1.DESCRIPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG , PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA;  CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA;  , CV2.DESCRIPTION AS BENEFIT_TYPE&#xD;&#xA;  , CV1.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA;  , PIT1.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM(PAPI.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;   WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;     AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;     AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;     AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;     AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;     AND (PA.BENEFIT_OPTION_VALUE IN ('DBCT','DTCT','DBDC','DBTT','SPEL') &#xD;&#xA;   OR (PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;     AND ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') = CASE WHEN PA.APPLICATION_ID IS NOT NULL THEN 'Y' ELSE ISNULL(BA.HARDSHIP_APPROVED_FLAG,'N') END&#xD;&#xA;     AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE)) --PROD PIR 4919&#xD;&#xA;     and @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;   AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;   AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA;  , CV2.DESCRIPTION&#xD;&#xA;  , CV1.DESCRIPTION&#xD;&#xA;  , PIT1.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2&#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA; SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG, PA.PAYEE_ACCOUNT_ID,ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA;  CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA;  , CV2.DESCRIPTION AS BENEFIT_TYPE&#xD;&#xA;  , CV1.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM(PAPI.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND PADR ON PADR.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID &#xD;&#xA;    AND PADR.PAYMENT_OPTION_VALUE = 'SPCL' AND PADR.PAYMENT_HISTORY_HEADER_ID IS NULL&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID &#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;   WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA;      AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;      (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;      AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;      AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;      AND @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;      AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA; GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA;  , CV2.DESCRIPTION&#xD;&#xA;  , CV1.DESCRIPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2 &#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA; SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG, PA.PAYEE_ACCOUNT_ID,ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA;  CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA;  , CV2.DESCRIPTION AS BENEFIT_TYPE&#xD;&#xA;  , CV1.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM(PAPI.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT  PAYEE_ACCOUNT_ID ,PAYMENT_ITEM_TYPE_ID FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL RPD ON RP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = RPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;   WHERE APPROVED_FLAG = 'Y' AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;     AND (PAYMENT_HISTORY_HEADER_ID IS NULL)     &#xD;&#xA;  ) AS RETRO&#xD;&#xA;  ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID and RETRO.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA;       AND @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA; GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), PA.PAYEE_ACCOUNT_ID,ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA;  , CV2.DESCRIPTION&#xD;&#xA;  , CV1.DESCRIPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2 &#xD;&#xA;&#xD;&#xA;--- PIR 2010&#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA; SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG, PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA;  CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA;  , CV2.DESCRIPTION AS BENEFIT_TYPE&#xD;&#xA;  , CV1.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM(PAPI.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT  PAYEE_ACCOUNT_ID &#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;   WHERE APPROVED_FLAG = 'Y' AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;     AND (PAYMENT_HISTORY_HEADER_ID IS NULL) &#xD;&#xA;     AND RETRO_PAYMENT_TYPE_VALUE IN ('IRPM','REAC')    &#xD;&#xA;&#xD;&#xA;  ) AS RETRO&#xD;&#xA;  ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA;       AND PAPI.END_DATE IS NOT NULL&#xD;&#xA;   AND @PAYMENTDATE &lt; PAPI.END_DATE &#xD;&#xA;   AND MONTH(PAPI.START_DATE) = MONTH(PAPI.END_DATE)&#xD;&#xA;   AND YEAR(PAPI.START_DATE) = YEAR(PAPI.END_DATE)&#xD;&#xA;   AND RECEIAVABLE_ITEM_FOR_RETRO_FLAG  = 'Y' &#xD;&#xA; GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), PA.PAYEE_ACCOUNT_ID,ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA;  , CV2.DESCRIPTION&#xD;&#xA;  , CV1.DESCRIPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2 &#xD;&#xA;---&#xD;&#xA;Union all&#xD;&#xA;&#xD;&#xA;SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG, NULL as PAYEE_ACCOUNT_ID,ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA;  CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA;  , 'Excess Contribution Refund' AS BENEFIT_TYPE&#xD;&#xA;  , '' AS BENEFIT_OPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM((CASE WHEN OVERRIDDEN_REFUND_AMOUNT &gt; 0 THEN OVERRIDDEN_REFUND_AMOUNT ELSE COMPUTED_REFUND_AMOUNT END)*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM SGT_REMITTANCE PAPI&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = @EXCESSREFUNDID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PAPI.REFUND_TO_PERSON_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PAPI.REFUND_TO_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID = PAPI.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA; WHERE REFUND_STATUS_VALUE in ('APRD','RIA') AND PAPI.REMITTANCE_TYPE_VALUE NOT IN ('P501', 'P502', 'P503','P504','P505')&#xD;&#xA; GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2 &#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;--supplemental check&#xD;&#xA; SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG, PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA;  CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA;  , CV2.DESCRIPTION AS BENEFIT_TYPE&#xD;&#xA;  , CV1.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM(PAPI.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE  &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;   OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD')))&#xD;&#xA;       AND PAPI.START_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND @PAYMENTDATE &lt;= (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;   AND PIT.CHECK_TYPE_VALUE = 'SPCK'&#xD;&#xA; GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), PA.PAYEE_ACCOUNT_ID,ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA;  , CV2.DESCRIPTION&#xD;&#xA;  , CV1.DESCRIPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2 &#xD;&#xA;  &#xD;&#xA;Union&#xD;&#xA;--reissue check&#xD;&#xA; SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG, PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA;  CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA;  , CV2.DESCRIPTION AS BENEFIT_TYPE&#xD;&#xA;  , CV1.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM(PAPI.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE  &#xD;&#xA;  WHERE CV.DATA2 &lt;&gt; 'CNLD'&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;--   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)   &#xD;&#xA;       AND @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;   AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') = 'Y'&#xD;&#xA; GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), PA.PAYEE_ACCOUNT_ID,ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA;  , CV2.DESCRIPTION&#xD;&#xA;  , CV1.DESCRIPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2 &#xD;&#xA;UNION ALL&#xD;&#xA; SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG, PA.PAYEE_ACCOUNT_ID,ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA;  CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA;  , CV2.DESCRIPTION AS BENEFIT_TYPE&#xD;&#xA;  , CV1.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA;  , PIT1.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM(PAPI.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;      AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE  &#xD;&#xA;  WHERE CV.DATA2 &lt;&gt; 'CNLD'&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;--   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)   &#xD;&#xA;       AND @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;   AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') = 'Y'&#xD;&#xA;   AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;   AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), PA.PAYEE_ACCOUNT_ID,ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA;  , CV2.DESCRIPTION&#xD;&#xA;  , CV1.DESCRIPTION&#xD;&#xA;  , PIT1.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2 &#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;--prod PIR 5695&#xD;&#xA; SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG, PA.PAYEE_ACCOUNT_ID,ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA;  CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA;  , CV2.DESCRIPTION AS BENEFIT_TYPE&#xD;&#xA;  , CV1.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM(PAPI.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE  &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD')&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;       AND @PAYMENTDATE &lt;= (CASE WHEN PAPI.END_DATE IS NULL &#xD;&#xA;     THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;   AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA; GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), PA.PAYEE_ACCOUNT_ID,ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA;  , CV2.DESCRIPTION&#xD;&#xA;  , CV1.DESCRIPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2 &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA;--PIR 8301&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE) PERSON_ORG , PA.PAYEE_ACCOUNT_ID, ISNULL(SSN, ORG_CODE) SSN_ORG, ISNULL(FIRST_NAME, ORG_NAME) FIRST_ORG, &#xD;&#xA;  CASE WHEN LAST_NAME IS NULL THEN ORG_NAME ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME &#xD;&#xA;  , CV2.DESCRIPTION AS BENEFIT_TYPE&#xD;&#xA;  , CV1.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA;  , PIT1.NON_MONTHLY_PAYMENT_GROUP_VALUE, SUM(PAPI.AMOUNT*PIT1.ITEM_TYPE_DIRECTION) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV1 ON PA.BENEFIT_OPTION_ID = CV1.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV2 ON PA.BENEFIT_ACCOUNT_TYPE_ID = CV2.CODE_ID AND &#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;   ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;   ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID = PA.PAYEE_PERSLINK_ID&#xD;&#xA;  LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PA.PAYEE_ORG_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PLAN SPL ON SPL.PLAN_ID=BA.PLAN_ID&#xD;&#xA;  LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE(NOLOCK) BENOP &#xD;&#xA;   ON PA.BENEFIT_OPTION_ID = BENOP.CODE_ID AND PA.BENEFIT_OPTION_VALUE = BENOP.CODE_VALUE&#xD;&#xA;   WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA;     AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;     AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;     AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;     AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD')&#xD;&#xA;     AND PA.BENEFIT_OPTION_VALUE IN  ('REFD','AURD','RGRD')&#xD;&#xA;      AND @PAYMENTDATE &lt;= (CASE WHEN PAPI.END_DATE IS NULL &#xD;&#xA;     THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA;   AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA;   AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA;   AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; GROUP BY ISNULL(CAST(PER.PERSON_ID AS VARCHAR(10)), PORG.ORG_CODE), PA.PAYEE_ACCOUNT_ID, &#xD;&#xA; ISNULL(SSN, ORG_CODE), FIRST_NAME, LAST_NAME ,ORG_NAME,MIDDLE_NAME&#xD;&#xA;  , CV2.DESCRIPTION&#xD;&#xA;  , CV1.DESCRIPTION&#xD;&#xA;  , PIT1.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2&#xD;&#xA;  &#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA;--PIR 16219 - Escheat To state&#xD;&#xA;&#xD;&#xA;SELECT PORG.ORG_CODE as PERSON_ORG , NULL AS PAYEE_ACCOUNT_ID, ORG_CODE AS SSN_ORG,   &#xD;&#xA;ORG_NAME AS FIRST_ORG, &#xD;&#xA;  ORG_NAME AS LAST_NAME &#xD;&#xA;  , @ESCHEATTOSTATEBENEFITTYPE AS BENEFIT_TYPE&#xD;&#xA;  , '' AS BENEFIT_OPTION&#xD;&#xA;  , PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE, sum(PHD.NET_AMOUNT) AS AMOUNT,SPL.PLAN_NAME&#xD;&#xA;  ,CVB.DATA2 AS NDPERS_BANK_ACCOUNT&#xD;&#xA;  FROM DBO.SGT_PAYMENT_HISTORY_DISTRIBUTION(NOLOCK) PHD &#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID AND PHD.DISTRIBUTION_STATUS_VALUE&#xD;&#xA;  IN ('CEST', 'RSST') and phh.PAYMENT_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.ITEM_TYPE_CODE = 'ITEM457'&#xD;&#xA;  INNER JOIN DBO.SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = @ESCHEATORGID&#xD;&#xA;  INNER JOIN SGT_PLAN(NOLOCK) SPL ON SPL.PLAN_ID=PHH.PLAN_ID&#xD;&#xA;   LEFT OUTER JOIN SGS_CODE_VALUE CVB ON CVB.CODE_VALUE = CASE WHEN SPL.BENEFIT_TYPE_VALUE = 'INSR' THEN 'INSR' ELSE 'RETR' END AND CVB.CODE_ID = 7005&#xD;&#xA;  GROUP BY PORG.ORG_CODE,  &#xD;&#xA; ORG_NAME,PIT.NON_MONTHLY_PAYMENT_GROUP_VALUE,SPL.PLAN_NAME,CVB.DATA2&#xD;&#xA;&#xD;&#xA;) MA&#xD;&#xA; PIVOT (SUM(AMOUNT) FOR NON_MONTHLY_PAYMENT_GROUP_VALUE IN ([EXCS]&#xD;&#xA;    ,[TEEA]&#xD;&#xA;    ,[NEEA]&#xD;&#xA;    ,[RENT]&#xD;&#xA;    ,[CPGN]&#xD;&#xA;    ,[VERA]&#xD;&#xA;    ,[EEIA]&#xD;&#xA;    ,[ERIA]&#xD;&#xA;    ,[FDTX]&#xD;&#xA;    ,[STTX]&#xD;&#xA;    ,[ERPT]&#xD;&#xA;    ,[AEEA]&#xD;&#xA;    ,[AERA]&#xD;&#xA;    ,[TXRA]&#xD;&#xA;    ,[NTRA]&#xD;&#xA;    ,[EEER]&#xD;&#xA;    ,[TXAM]&#xD;&#xA;    ,[NTXA]&#xD;&#xA;    ,[COLA]&#xD;&#xA;    ,[TAIA]&#xD;&#xA;    ,[INTR]&#xD;&#xA;    ,[THRD]&#xD;&#xA;    ,[CHSR]&#xD;&#xA;    ,[DURF]&#xD;&#xA;    ,[FXRF]&#xD;&#xA;    ,[RPNR]&#xD;&#xA;    ,[RHBR]&#xD;&#xA;    ,[SXRF]&#xD;&#xA;    ,[TXLR]&#xD;&#xA;    ,[OTDT])) AS PVT&#xD;&#xA;ORDER BY BENEFIT_TYPE,BENEFIT_OPTION,PERSON_ORG,  PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="TrialVendorPaymentSummaryAdHoc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LASTDATE DATETIME&#xD;&#xA;SELECT @LASTDATE = MAX(PAYMENT_DATE) FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA;WHERE PROCESS_DATE &lt;= @PAYMENTDATE&#xD;&#xA;AND SCHEDULE_TYPE_VALUE = 'MTLY'&#xD;&#xA;AND STATUS_VALUE = 'PRCD'&#xD;&#xA;&#xD;&#xA;SELECT ORG_NAME AS ORGANIZATION_NAME, ISNULL([-1],0) AS GROSS_AMOUNT, ISNULL([1],0) AS RECEIVABLES,&#xD;&#xA;  (ISNULL([-1],0) - ISNULL([1],0)) AS NET_AMOUNT&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA; SELECT ORG_NAME, PIT.ITEM_TYPE_DIRECTION, SUM(PAPI.AMOUNT) AS AMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_ORGANIZATION(NOLOCK) ORG ON PAPI.VENDOR_ORG_ID = ORG.ORG_ID&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID &#xD;&#xA;  WHERE (CV.DATA2 = 'APRD' )  &#xD;&#xA;     AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;     AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;     AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;     AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;     AND (PA.BENEFIT_OPTION_VALUE IN ('DBCT','DTCT','DBDC','DBTT','SPEL') &#xD;&#xA;   OR (PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;     AND BA.HARDSHIP_APPROVED_FLAG = 'Y'&#xD;&#xA;     AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE))  --PROD PIR 4919&#xD;&#xA;     and @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END) &#xD;&#xA; GROUP BY ORG_NAME, PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA; SELECT ORG_NAME, PIT.ITEM_TYPE_DIRECTION, SUM(PAPI.AMOUNT) AS AMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_ORGANIZATION(NOLOCK) ORG ON PAPI.VENDOR_ORG_ID = ORG.ORG_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_DEDUCTION_REFUND PADR ON PADR.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID &#xD;&#xA;    AND PADR.PAYMENT_OPTION_VALUE = 'SPCL' AND PADR.PAYMENT_HISTORY_HEADER_ID IS NULL&#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA;      AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;      (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;      AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;      AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;      AND @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END)  &#xD;&#xA;      AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND'&#xD;&#xA; GROUP BY ORG_NAME, PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA; SELECT ORG_NAME, PIT.ITEM_TYPE_DIRECTION, SUM(PAPI.AMOUNT) AS AMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_ORGANIZATION(NOLOCK) ORG ON PAPI.VENDOR_ORG_ID = ORG.ORG_ID&#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT  PAYEE_ACCOUNT_ID ,PAYMENT_ITEM_TYPE_ID FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_RETRO_PAYMENT_DETAIL RPD ON RP.PAYEE_ACCOUNT_RETRO_PAYMENT_ID = RPD.PAYEE_ACCOUNT_RETRO_PAYMENT_ID&#xD;&#xA;   WHERE APPROVED_FLAG = 'Y' AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;     AND (PAYMENT_HISTORY_HEADER_ID IS NULL)     &#xD;&#xA;  ) AS RETRO&#xD;&#xA;  ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID and RETRO.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA;       AND @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END)  &#xD;&#xA; GROUP BY ORG_NAME, PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;--- PIR 2010&#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;&#xD;&#xA; SELECT ORG_NAME, PIT.ITEM_TYPE_DIRECTION, SUM(PAPI.AMOUNT) AS AMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_ORGANIZATION(NOLOCK) ORG ON PAPI.VENDOR_ORG_ID = ORG.ORG_ID&#xD;&#xA;  INNER JOIN&#xD;&#xA;  (&#xD;&#xA;   SELECT  PAYEE_ACCOUNT_ID  FROM SGT_PAYEE_ACCOUNT_RETRO_PAYMENT RP &#xD;&#xA;   WHERE APPROVED_FLAG = 'Y' AND PAYMENT_OPTION_VALUE = 'SPCK' &#xD;&#xA;     AND (PAYMENT_HISTORY_HEADER_ID IS NULL)  &#xD;&#xA;     AND RETRO_PAYMENT_TYPE_VALUE IN ('IRPM','REAC')&#xD;&#xA;   &#xD;&#xA;  ) AS RETRO&#xD;&#xA;  ON RETRO.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND' &#xD;&#xA;   AND PAPI.END_DATE IS NOT NULL&#xD;&#xA;   AND @PAYMENTDATE &lt; PAPI.END_DATE &#xD;&#xA;   AND MONTH(PAPI.START_DATE) = MONTH(PAPI.END_DATE)&#xD;&#xA;   AND YEAR(PAPI.START_DATE) = YEAR(PAPI.END_DATE)&#xD;&#xA;   AND RECEIAVABLE_ITEM_FOR_RETRO_FLAG  = 'Y' &#xD;&#xA; GROUP BY ORG_NAME, PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;---&#xD;&#xA;Union All&#xD;&#xA;--supplemental check&#xD;&#xA; SELECT ORG_NAME, PIT.ITEM_TYPE_DIRECTION, SUM(PAPI.AMOUNT) AS AMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_ORGANIZATION(NOLOCK) ORG ON PAPI.VENDOR_ORG_ID = ORG.ORG_ID  &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;= @LASTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;   OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD')))&#xD;&#xA;       AND PAPI.START_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND @PAYMENTDATE &lt;= (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END)  &#xD;&#xA;   AND PIT.CHECK_TYPE_VALUE = 'SPCK'&#xD;&#xA; GROUP BY ORG_NAME, PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; &#xD;&#xA;Union&#xD;&#xA;--REISSUE CHECK&#xD;&#xA; SELECT ORG_NAME, PIT.ITEM_TYPE_DIRECTION, SUM(PAPI.AMOUNT) AS AMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_ORGANIZATION(NOLOCK) ORG ON PAPI.VENDOR_ORG_ID = ORG.ORG_ID  &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' OR CV.DATA2 = 'RPCD')&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;   --AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)   &#xD;&#xA;       AND @PAYMENTDATE &lt; (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END)  &#xD;&#xA;   AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') = 'Y'&#xD;&#xA; GROUP BY ORG_NAME, PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#xD;&#xA;Union All&#xD;&#xA;--PROD PIR 5695&#xD;&#xA; SELECT ORG_NAME, PIT.ITEM_TYPE_DIRECTION, SUM(PAPI.AMOUNT) AS AMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  INNER JOIN SGT_ORGANIZATION(NOLOCK) ORG ON PAPI.VENDOR_ORG_ID = ORG.ORG_ID  &#xD;&#xA;  WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND dateadd(m,-1,BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE  IN  ('REFD','AURD','RGRD')&#xD;&#xA;       AND @PAYMENTDATE &lt;= (CASE WHEN PAPI.END_DATE IS NULL THEN '99991231' ELSE PAPI.END_DATE END)  &#xD;&#xA;   AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA; GROUP BY ORG_NAME, PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; &#xD;&#xA;) MA &#xD;&#xA;PIVOT(SUM(AMOUNT) FOR ITEM_TYPE_DIRECTION IN ([1], [-1])) AS PVT&#xD;&#xA;ORDER BY ORG_NAME">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="UpdateBenefitEndDateFromMonthly" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @ENDDATE DATETIME&#xD;&#xA;SET @ENDDATE = DATEADD(M,1,@PAYMENTDATE) - 1&#xD;&#xA;&#xD;&#xA;UPDATE PA&#xD;&#xA;SET PA.BENEFIT_END_DATE = @ENDDATE,&#xD;&#xA;MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;MODIFIED_DATE = GETDATE(),&#xD;&#xA;UPDATE_SEQ = UPDATE_SEQ + 1&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA;  SELECT DISTINCT PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_CALCULATION DROC WITH(NOLOCK)&#xD;&#xA;   ON DROC.DRO_CALCULATION_ID = PA.DRO_CALCULATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DROA WITH(NOLOCK)&#xD;&#xA;   ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; WHERE (CV.DATA2 = 'APRD')  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;  AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE='RFND' AND (PA.BENEFIT_OPTION_VALUE IN ('AURD','RGRD')) &#xD;&#xA;  OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DETH' AND (PA.BENEFIT_OPTION_VALUE IN  ('AURD','REFD')))&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA;  SELECT DISTINCT PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_CALCULATION DROC WITH(NOLOCK)&#xD;&#xA;   ON DROC.DRO_CALCULATION_ID = PA.DRO_CALCULATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DROA WITH(NOLOCK)&#xD;&#xA;   ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; WHERE (CV.DATA2 = 'APRD')  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;  AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt; @PAYMENTDATE) &#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL') &#xD;&#xA;  AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE='RFND' AND (PA.BENEFIT_OPTION_VALUE IN ('AURD','RGRD')) &#xD;&#xA;   OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DETH' AND (PA.BENEFIT_OPTION_VALUE IN  ('AURD','REFD')))&#xD;&#xA;  AND (BA.PLAN_ID IN (7,28,30) OR DROA.PLAN_ID IN (7,28,30))&#xD;&#xA;) TEMP ON TEMP.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateBenefitEndDateFromAdhoc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE PA&#xD;&#xA;SET PA.BENEFIT_END_DATE = @paymentdate,&#xD;&#xA;MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA;MODIFIED_DATE = GETDATE(),&#xD;&#xA;UPDATE_SEQ = UPDATE_SEQ + 1&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA;  SELECT DISTINCT PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_CALCULATION DROC WITH(NOLOCK)&#xD;&#xA;   ON DROC.DRO_CALCULATION_ID = PA.DRO_CALCULATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DROA WITH(NOLOCK)&#xD;&#xA;   ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; WHERE (CV.DATA2 = 'RPCD')  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;  AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL  &#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA;  SELECT DISTINCT PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_CALCULATION DROC WITH(NOLOCK)&#xD;&#xA;   ON DROC.DRO_CALCULATION_ID = PA.DRO_CALCULATION_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DROA WITH(NOLOCK)&#xD;&#xA;   ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA; WHERE (CV.DATA2 = 'RPCD')  &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE) &lt;=  @PAYMENTDATE&#xD;&#xA;  AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt; @PAYMENTDATE) &#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE IN('DBCT','DTCT','DBDC','DBTT','SPEL')   &#xD;&#xA;  AND (BA.PLAN_ID IN (7,28,30) OR DROA.PLAN_ID IN (7,28,30))&#xD;&#xA;) TEMP ON TEMP.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadBenefitPaymentChangeCorData" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" SELECT * FROM SGT_PAYEE_ACCOUNT A &#xD;&#xA;  INNER JOIN TEMP_CURRENT_PAYEE_ACCOUNTS DP &#xD;&#xA;   ON A.PAYEE_ACCOUNT_ID=DP.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PERSON B&#xD;&#xA;   ON A.PAYEE_PERSLINK_ID=B.PERSON_ID&#xD;&#xA;  ORDER BY B.LAST_NAME -- Backlog PIR 12027 -- added order by clause">
      <parameters />
    </query>
    <query ID="LoadBenefitPaymentChangeBeneficiaryData" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT A.PAYEE_ACCOUNT_ID,PLN.PLAN_NAME AS istrPlanName,'Primary' AS istrBeneficiaryType,&#xD;&#xA;ISNULL(PRB.LAST_NAME,'') +' '+ISNULL(PRB.FIRST_NAME,'') + ' '+ISNULL(PRB.MIDDLE_NAME,'') AS istrPrimaryBeneficiaryName,&#xD;&#xA;PAB.DIST_PERCENT&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT A &#xD;&#xA;INNER JOIN TEMP_CURRENT_PAYEE_ACCOUNTS DP &#xD;&#xA; ON A.PAYEE_ACCOUNT_ID=DP.PAYEE_ACCOUNT_ID  &#xD;&#xA;INNER JOIN SGT_PERSON_BENEFICIARY PB&#xD;&#xA; ON A.PAYEE_PERSLINK_ID=PB.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_BENEFICIARY PAB&#xD;&#xA; ON PB.BENEFICIARY_ID=PAB.BENEFICIARY_ID AND BENEFICIARY_TYPE_VALUE='PRIM'&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PERACCT&#xD;&#xA; ON PAB.PERSON_ACCOUNT_ID = PERACCT.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN PLN&#xD;&#xA; ON PERACCT.PLAN_ID = PLN.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PERSON PRB&#xD;&#xA; ON PRB.PERSON_ID=PB.BENEFICIARY_PERSON_ID&#xD;&#xA;inner  JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID &#xD;&#xA;    from SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;   inner JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;   ON  BA.BENEFIT_APPLICATION_ID = bapa.BENEFIT_APPLICATION_ID  &#xD;&#xA;   where isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA;  ) AS BAA ON A.APPLICATION_ID = BAA.BENEFIT_APPLICATION_ID --and PAB.PERSON_ACCOUNT_ID=BAA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE  PAB.START_DATE &lt;= @PAYMENTDATE AND (PAB.END_DATE IS NULL OR PAB.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA;UNION  &#xD;&#xA;SELECT A.PAYEE_ACCOUNT_ID,PLN.PLAN_NAME AS istrPlanName,'Contingent' AS istrBeneficiaryType,&#xD;&#xA;ISNULL(PRB.LAST_NAME,'') +' '+ISNULL(PRB.FIRST_NAME,'') + ' '+ISNULL(PRB.MIDDLE_NAME,'') AS istrPrimaryBeneficiaryName,&#xD;&#xA;PAB.DIST_PERCENT&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT A &#xD;&#xA;INNER JOIN  TEMP_CURRENT_PAYEE_ACCOUNTS DP &#xD;&#xA; ON A.PAYEE_ACCOUNT_ID=DP.PAYEE_ACCOUNT_ID  &#xD;&#xA;INNER JOIN SGT_PERSON_BENEFICIARY PB&#xD;&#xA; ON A.PAYEE_PERSLINK_ID=PB.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_BENEFICIARY PAB&#xD;&#xA; ON PB.BENEFICIARY_ID=PAB.BENEFICIARY_ID AND BENEFICIARY_TYPE_VALUE='CONT'&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PERACCT&#xD;&#xA; ON PAB.PERSON_ACCOUNT_ID = PERACCT.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN PLN&#xD;&#xA; ON PERACCT.PLAN_ID = PLN.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PERSON PRB&#xD;&#xA; ON PRB.PERSON_ID=PB.BENEFICIARY_PERSON_ID&#xD;&#xA;INNER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID &#xD;&#xA;    from SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;   inner JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;   ON  BA.BENEFIT_APPLICATION_ID = bapa.BENEFIT_APPLICATION_ID  &#xD;&#xA;   where isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA;  ) AS BAA ON A.APPLICATION_ID = BAA.BENEFIT_APPLICATION_ID --and PAB.PERSON_ACCOUNT_ID=BAA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE  PAB.START_DATE &lt;= @PAYMENTDATE AND (PAB.END_DATE IS NULL OR PAB.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;IF OBJECT_ID('TEMP_CURRENT_PAYEE_ACCOUNTS') IS NOT NULL&#xD;&#xA;  DROP TABLE TEMP_CURRENT_PAYEE_ACCOUNTS">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadDeathRefundMemberAccountDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM &#xD;&#xA; (SELECT BAA.MEMBER_PERSON_ID,BA.BENEFIT_ACCOUNT_ID, SUM(CASE WHEN &#xD;&#xA;      PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;      AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;      AND VENDOR_FLAG= 'N'  &#xD;&#xA;      AND TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;      AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;     THEN &#xD;&#xA;      PHD.AMOUNT &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS TAXABLE_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN (ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;     AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;     AND VENDOR_FLAG= 'N'  &#xD;&#xA;      AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;     AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET')&#xD;&#xA;    THEN AMOUNT ELSE 0 END) AS NONTAXABLE_AMOUNT&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_BENEFIT_ACCOUNT BA&#xD;&#xA;   ON PA.BENEFIT_ACCOUNT_ID=BA.BENEFIT_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;   ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD(NOLOCK) &#xD;&#xA;   ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT(NOLOCK) &#xD;&#xA;   ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;  INNER JOIN(SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID ,BA.MEMBER_PERSON_ID&#xD;&#xA;       FROM SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;      INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;      ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;      WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA;      ) AS BAA ON PA.APPLICATION_ID = BAA.BENEFIT_APPLICATION_ID&#xD;&#xA; WHERE (PA.BENEFIT_ACCOUNT_TYPE_VALUE='DETH' OR PA.BENEFIT_ACCOUNT_TYPE_VALUE='PSTD')&#xD;&#xA;    AND PA.BENEFIT_OPTION_VALUE='REFD' AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHECULEID&#xD;&#xA; GROUP BY BAA.MEMBER_PERSON_ID,BA.BENEFIT_ACCOUNT_ID)DEATH&#xD;&#xA;  INNER JOIN SGT_PERSON M ON M.PERSON_ID=DEATH.MEMBER_PERSON_ID&#xD;&#xA;  INNER JOIN SGT_BENEFIT_ACCOUNT BA ON BA.BENEFIT_ACCOUNT_ID= DEATH.BENEFIT_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYMENTSCHECULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadDeathRefundPayeeAccountDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT PA.APPLICATION_ID,PA.PAYEE_PERSLINK_ID,BAA.MEMBER_PERSON_ID,&#xD;&#xA; isnull(PERADDR.ADDR_LINE_1,'')+isnull(PERADDR.ADDR_LINE_2,'') +','+&#xD;&#xA; isnull(PERADDR.ADDR_CITY,'')+isnull(PERADDR.ADDR_STATE_VALUE,'') +', '+&#xD;&#xA; isnull(PERADDR.ADDR_COUNTRY_VALUE,'') + isnull(PERADDR.ADDR_ZIP_CODE,'') +', '+&#xD;&#xA; isnull(PERADDR.ADDR_ZIP_4_CODE,'')+ isnull(PERADDR.FOREIGN_PROVINCE,'') +', '+&#xD;&#xA; isnull(PERADDR.FOREIGN_POSTAL_CODE ,'') as istrpayeeaddress,&#xD;&#xA; isnull(p.last_name,'') +','+isnull(p.first_name,'') +','+isnull(p.middle_name,'') istrpayeename &#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA   &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;  ON PA.PAYEE_ACCOUNT_ID=PHH.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PERSON P &#xD;&#xA;  ON PA.PAYEE_PERSLINK_ID=P.PERSON_ID &#xD;&#xA; INNER JOIN(SELECT BA.BENEFIT_APPLICATION_ID,BAPA.PERSON_ACCOUNT_ID ,BA.MEMBER_PERSON_ID&#xD;&#xA;      FROM SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;     INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;     ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;     WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC')&#xD;&#xA;     ) AS BAA ON PA.APPLICATION_ID = BAA.BENEFIT_APPLICATION_ID&#xD;&#xA; INNER JOIN (SELECT  P.PERSON_ID, CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;    CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;      THEN PA2.ADDR_LINE_1  &#xD;&#xA;      WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;      THEN PA1.ADDR_LINE_1  END&#xD;&#xA;    ELSE  PA3.ADDR_LINE_1 END&#xD;&#xA;   AS ADDR_LINE_1,&#xD;&#xA;   CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;       CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;         THEN PA2.ADDR_LINE_2  &#xD;&#xA;         WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;         THEN PA1.ADDR_LINE_2  END&#xD;&#xA;       ELSE  PA3.ADDR_LINE_2 END&#xD;&#xA;      AS ADDR_LINE_2,&#xD;&#xA;   CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;       CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;         THEN PA2.ADDR_CITY  &#xD;&#xA;         WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;         THEN PA1.ADDR_CITY  END&#xD;&#xA;       ELSE  PA3.ADDR_CITY END&#xD;&#xA;      AS ADDR_CITY,&#xD;&#xA;   CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;       CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;         THEN PA2.ADDR_STATE_ID  &#xD;&#xA;         WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;         THEN PA1.ADDR_STATE_ID  END&#xD;&#xA;       ELSE  PA3.ADDR_STATE_ID END&#xD;&#xA;      AS ADDR_STATE_ID,&#xD;&#xA;   CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;       CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;         THEN PA2.ADDR_STATE_VALUE  &#xD;&#xA;         WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;         THEN PA1.ADDR_STATE_VALUE  END&#xD;&#xA;       ELSE  PA3.ADDR_STATE_VALUE END&#xD;&#xA;      AS ADDR_STATE_VALUE,&#xD;&#xA;   CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;       CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;         THEN PA2.ADDR_COUNTRY_ID &#xD;&#xA;         WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;         THEN PA1.ADDR_COUNTRY_ID  END&#xD;&#xA;       ELSE  PA3.ADDR_COUNTRY_ID END&#xD;&#xA;      AS ADDR_COUNTRY_ID,&#xD;&#xA;   CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;       CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;         THEN PA2.ADDR_COUNTRY_VALUE  &#xD;&#xA;         WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;         THEN PA1.ADDR_COUNTRY_VALUE  END&#xD;&#xA;       ELSE  PA3.ADDR_COUNTRY_VALUE END&#xD;&#xA;      AS ADDR_COUNTRY_VALUE,&#xD;&#xA;   CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;       CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;         THEN PA2.ADDR_ZIP_CODE &#xD;&#xA;         WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;         THEN PA1.ADDR_ZIP_CODE  END&#xD;&#xA;       ELSE  PA3.ADDR_ZIP_CODE END&#xD;&#xA;      AS ADDR_ZIP_CODE,&#xD;&#xA;   CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;       CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;         THEN PA2.ADDR_ZIP_4_CODE  &#xD;&#xA;         WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;         THEN PA1.ADDR_ZIP_4_CODE  END&#xD;&#xA;       ELSE  PA3.ADDR_ZIP_4_CODE END&#xD;&#xA;      AS ADDR_ZIP_4_CODE,&#xD;&#xA;   CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;       CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;         THEN PA2.FOREIGN_PROVINCE  &#xD;&#xA;         WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;         THEN PA1.FOREIGN_PROVINCE  END&#xD;&#xA;       ELSE  PA3.FOREIGN_PROVINCE END&#xD;&#xA;      AS FOREIGN_PROVINCE,&#xD;&#xA;   CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;       CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;         THEN PA2.FOREIGN_POSTAL_CODE  &#xD;&#xA;         WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;         THEN PA1.FOREIGN_POSTAL_CODE  END&#xD;&#xA;       ELSE  PA3.FOREIGN_POSTAL_CODE END&#xD;&#xA;      AS FOREIGN_POSTAL_CODE&#xD;&#xA;   FROM SGT_PERSON P &#xD;&#xA;   LEFT OUTER JOIN SGT_PERSON_ADDRESS PA1   ON P.PERSON_ID  = PA1.PERSON_ID  AND PA1.ADDRESS_TYPE_VALUE = 'PERM'  AND &#xD;&#xA;         @PAYMENTDATE BETWEEN PA1.START_DATE AND &#xD;&#xA;         (CASE WHEN PA1.END_DATE IS NULL &#xD;&#xA;           THEN '99991231' ELSE PA1.END_DATE END)&#xD;&#xA;   LEFT OUTER JOIN SGT_PERSON_ADDRESS PA2  ON P.PERSON_ID  = PA2.PERSON_ID AND PA2.ADDRESS_TYPE_VALUE = 'TEMP' AND&#xD;&#xA;         @PAYMENTDATE BETWEEN PA2.START_DATE AND &#xD;&#xA;         (CASE WHEN PA2.END_DATE IS NULL &#xD;&#xA;           THEN '99991231' ELSE PA2.END_DATE END)&#xD;&#xA;   LEFT OUTER JOIN SGT_PERSON_ADDRESS PA3  ON P.PERSON_ID  = PA3.PERSON_ID AND PA3.ADDRESS_TYPE_VALUE = 'PAYM' AND&#xD;&#xA;         @PAYMENTDATE BETWEEN PA3.START_DATE AND &#xD;&#xA;         (CASE WHEN PA3.END_DATE IS NULL &#xD;&#xA;           THEN '99991231' ELSE PA3.END_DATE END)) AS PERADDR        &#xD;&#xA;  ON PERADDR.PERSON_ID=PA.PAYEE_PERSLINK_ID         &#xD;&#xA;WHERE (PA.BENEFIT_ACCOUNT_TYPE_VALUE='DETH' OR PA.BENEFIT_ACCOUNT_TYPE_VALUE='PSTD') &#xD;&#xA;    AND PA.BENEFIT_OPTION_VALUE='REFD' and &#xD;&#xA;    PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID AND PHH.PAYMENT_DATE=@PAYMENTDATE&#xD;&#xA;&#xD;&#xA;">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadBenefitPaymentChangePaymentHeaders" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" SELECT PHH.* FROM SGT_PAYEE_ACCOUNT A &#xD;&#xA;  INNER JOIN TEMP_BEN_PAY_CHANGE_PAYEE DP &#xD;&#xA;   ON A.PAYEE_ACCOUNT_ID=DP.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PERSON B&#xD;&#xA;   ON A.PAYEE_PERSLINK_ID=B.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID=A.PAYEE_ACCOUNT_ID&#xD;&#xA;  ORDER BY PHH.PAYMENT_DATE desc&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="LoadBenefitPaymentChangePaymentDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" SELECT PHD.*,PIT.*,PHH.PAYEE_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT A &#xD;&#xA;  INNER JOIN TEMP_BEN_PAY_CHANGE_PAYEE DP &#xD;&#xA;   ON A.PAYEE_ACCOUNT_ID=DP.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PERSON B&#xD;&#xA;   ON A.PAYEE_PERSLINK_ID=B.PERSON_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID=A.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD&#xD;&#xA;   ON PHH.PAYMENT_HISTORY_HEADER_ID=PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;   ON PHD.PAYMENT_ITEM_TYPE_ID=PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="LoadBenefitPaymentChanngePapitDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA; SELECT PAPIT.*,PIT.* FROM SGT_PAYEE_ACCOUNT A &#xD;&#xA;  INNER JOIN TEMP_BEN_PAY_CHANGE_PAYEE DP &#xD;&#xA;   ON A.PAYEE_ACCOUNT_ID=DP.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PERSON B&#xD;&#xA;   ON A.PAYEE_PERSLINK_ID=B.PERSON_ID &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT&#xD;&#xA;   ON PAPIT.PAYEE_ACCOUNT_ID=A.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT&#xD;&#xA;   ON PAPIT.PAYMENT_ITEM_TYPE_ID=PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#xD;&#xA; IF OBJECT_ID('TEMP_BEN_PAY_CHANGE_PAYEE') IS NOT NULL&#xD;&#xA;  DROP TABLE TEMP_BEN_PAY_CHANGE_PAYEE&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="LoadPostRetirmentIncreaseRequests" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * --POST_RETIREMENT_INCREASE_BATCH_REQUEST_ID &#xD;&#xA; FROM SGT_POST_RETIREMENT_INCREASE_BATCH_REQUEST &#xD;&#xA; WHERE BATCH_REQUEST_STATUS_VALUE = 'PROC'&#xD;&#xA;  AND ACTION_STATUS_VALUE = 'APPR' &#xD;&#xA;  AND STATUS_VALUE = 'VALD'&#xD;&#xA;  and POST_RETIREMENT_INCREASE_TYPE_VALUE &lt;&gt; 'SUPP'&#xD;&#xA;  and Effective_date between @EffectiveStartDate  and @EffectiveEndDate &#xD;&#xA;">
      <parameters>
        <parameter ID="@EffectiveStartDate" sfwDataType="DateTime" />
        <parameter ID="@EffectiveEndDate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadRetireeChangeData" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PAYEE_ACCOUNT_ID INTO #TEMP_CURRENT_PAYEE_ACCOUNTS FROM&#xD;&#xA;SGT_PAYMENT_HISTORY_HEADER CURRENTPAYMENT WITH(NOLOCK) &#xD;&#xA;WHERE CURRENTPAYMENT.PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID AND ISNULL(CURRENTPAYMENT.PERSON_ID, 0) &gt; 0 &#xD;&#xA;AND ISNULL(CURRENTPAYMENT.PAYEE_ACCOUNT_ID, 0) &gt; 0 &#xD;&#xA;DECLARE @LASTPAYMENTSCHEDULEID INT&#xD;&#xA;SELECT TOP 1 @LASTPAYMENTSCHEDULEID = PAYMENT_SCHEDULE_ID FROM SGT_PAYMENT_SCHEDULE WHERE SCHEDULE_TYPE_VALUE = 'MTLY' AND STATUS_VALUE = 'PRCD'&#xD;&#xA;AND PAYMENT_DATE &lt; (SELECT PAYMENT_DATE FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID)&#xD;&#xA;ORDER BY PAYMENT_DATE DESC&#xD;&#xA;&#xD;&#xA;DECLARE @LASTPAYMENTDATE DATETIME&#xD;&#xA;SET @LASTPAYMENTDATE = DATEADD(M,-1,@PAYMENTDATE)&#xD;&#xA;&#xD;&#xA;CREATE TABLE #TEMP(&#xD;&#xA; PAYEE_ACCOUNT_ID [INT] NULL,&#xD;&#xA; MINIMUM_GUARANTEE_AMOUNT [DECIMAL](13, 2) NULL,&#xD;&#xA; STARTING_NONTAXABLE_AMOUNT [DECIMAL](13, 2) NULL,&#xD;&#xA; LTD_NONTAXABLE_AMOUNT [DECIMAL](13, 2) NULL,&#xD;&#xA; YTD_FED_TAX [DECIMAL](13, 2) NULL,&#xD;&#xA; YTD_STATE_TAX [DECIMAL](13, 2) NULL,&#xD;&#xA; YTD_MISC [DECIMAL](13, 2) NULL,&#xD;&#xA; YTD_NDPEA_DUES [DECIMAL](13, 2) NULL,&#xD;&#xA; YTD_HEALTH [DECIMAL](13, 2) NULL,&#xD;&#xA; YTD_LIFE [DECIMAL](13, 2) NULL,&#xD;&#xA; YTD_DENTAL [DECIMAL](13, 2) NULL,&#xD;&#xA; YTD_VISION [DECIMAL](13, 2) NULL,&#xD;&#xA; YTD_MEDICARE [DECIMAL](13, 2) NULL,&#xD;&#xA; YTD_TAXABLE_AMOUNT [DECIMAL](13, 2) NULL,&#xD;&#xA; YTD_NONTAXABLE_AMOUNT [DECIMAL](13, 2) NULL,&#xD;&#xA; YTD_NET_AMOUNT [DECIMAL](13, 2) NULL,&#xD;&#xA; OLD_FED_TAX [DECIMAL](13, 2) NULL,&#xD;&#xA; OLD_STATE_TAX [DECIMAL](13, 2) NULL,&#xD;&#xA; OLD_MISC [DECIMAL](13, 2) NULL,&#xD;&#xA; OLD_NDPEA_DUES [DECIMAL](13, 2) NULL,&#xD;&#xA; OLD_HEALTH [DECIMAL](13, 2) NULL,&#xD;&#xA; OLD_LIFE [DECIMAL](13, 2) NULL,&#xD;&#xA; OLD_DENTAL [DECIMAL](13, 2) NULL,&#xD;&#xA; OLD_VISION [DECIMAL](13, 2) NULL,&#xD;&#xA; OLD_MEDICARE [DECIMAL](13, 2) NULL,&#xD;&#xA; OLD_TAXABLE_AMOUNT [DECIMAL](13, 2) NULL,&#xD;&#xA; OLD_NONTAXABLE_AMOUNT [DECIMAL](13, 2) NULL,&#xD;&#xA; OLD_NET_AMOUNT [DECIMAL](13, 2) NULL,&#xD;&#xA; NEW_FED_TAX [DECIMAL](13, 2) NULL,&#xD;&#xA; NEW_STATE_TAX [DECIMAL](13, 2) NULL,&#xD;&#xA; NEW_MISC [DECIMAL](13, 2) NULL,&#xD;&#xA; NEW_NDPEA_DUES [DECIMAL](13, 2) NULL,&#xD;&#xA; NEW_HEALTH [DECIMAL](13, 2) NULL,&#xD;&#xA; NEW_LIFE [DECIMAL](13, 2) NULL,&#xD;&#xA; NEW_DENTAL [DECIMAL](13, 2) NULL,&#xD;&#xA; NEW_VISION [DECIMAL](13, 2) NULL,&#xD;&#xA; NEW_MEDICARE [DECIMAL](13, 2) NULL,&#xD;&#xA; NEW_TAXABLE_AMOUNT [DECIMAL](13, 2) NULL,&#xD;&#xA; NEW_NONTAXABLE_AMOUNT [DECIMAL](13, 2) NULL,&#xD;&#xA; NEW_NET_AMOUNT [DECIMAL](13, 2) NULL,&#xD;&#xA;) &#xD;&#xA;&#xD;&#xA;INSERT INTO #TEMP(PAYEE_ACCOUNT_ID,MINIMUM_GUARANTEE_AMOUNT,STARTING_NONTAXABLE_AMOUNT,LTD_NONTAXABLE_AMOUNT)&#xD;&#xA;SELECT PHH.PAYEE_ACCOUNT_ID,PA.MINIMUM_GUARANTEE_AMOUNT,PA.NONTAXABLE_BEGINNING_BALANCE,&#xD;&#xA;  SUM(CASE WHEN (PIT.ITEM_TYPE_DIRECTION = 1 AND PIT.PAYMENT_1099R_FLAG = 'Y' AND PIT.VENDOR_FLAG = 'N'&#xD;&#xA;  AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET')&#xD;&#xA;     THEN PHD.AMOUNT ELSE 0 END) AS LTD_NONTAXABLE_AMOUNT&#xD;&#xA;FROM #TEMP_CURRENT_PAYEE_ACCOUNTS TEMP WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = TEMP.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON TEMP.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_BENEFIT_ACCOUNT BEN WITH(NOLOCK) ON PA.BENEFIT_ACCOUNT_ID = BEN.BENEFIT_ACCOUNT_ID &#xD;&#xA;GROUP BY PHH.PAYEE_ACCOUNT_ID,PA.MINIMUM_GUARANTEE_AMOUNT,PA.NONTAXABLE_BEGINNING_BALANCE&#xD;&#xA;ORDER BY PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UPDATE A&#xD;&#xA;SET A.YTD_FED_TAX = B.YTD_FED_TAX,&#xD;&#xA; A.YTD_STATE_TAX = B.YTD_STATE_TAX,&#xD;&#xA; A.YTD_MISC = B.YTD_MISC,&#xD;&#xA; A.YTD_NDPEA_DUES = B.YTD_NDPEA_DUES,&#xD;&#xA; A.YTD_HEALTH = B.YTD_HEALTH,&#xD;&#xA; A.YTD_LIFE = B.YTD_LIFE,&#xD;&#xA; A.YTD_DENTAL = B.YTD_DENTAL,&#xD;&#xA; A.YTD_VISION = B.YTD_VISION,&#xD;&#xA; A.YTD_MEDICARE = B.YTD_MEDICARE,&#xD;&#xA; A.YTD_TAXABLE_AMOUNT = B.YTD_TAXABLE_AMOUNT,&#xD;&#xA; A.YTD_NONTAXABLE_AMOUNT = B.YTD_NONTAXABLE_AMOUNT,&#xD;&#xA; A.YTD_NET_AMOUNT = B.YTD_NET_AMOUNT&#xD;&#xA;FROM #TEMP A INNER JOIN&#xD;&#xA;(&#xD;&#xA; SELECT *&#xD;&#xA;&#x9;,(ISNULL(YTD_MISC1,0)) AS YTD_MISC&#x9;&#xD;&#xA;&#x9;,(ISNULL(YTD_TAXABLE_AMOUNT,0)+ISNULL(YTD_NONTAXABLE_AMOUNT,0)-ISNULL(YTD_FED_TAX,0)-ISNULL(YTD_STATE_TAX,0)-ISNULL(YTD_MISC1,0)-ISNULL(YTD_NDPEA_DUES,0)-ISNULL(YTD_HEALTH,0)-ISNULL(YTD_LIFE,0)-ISNULL(YTD_DENTAL,0)-ISNULL(YTD_VISION,0)-ISNULL(YTD_MEDICARE,0)) AS YTD_NET_AMOUNT&#xD;&#xA; FROM &#xD;&#xA; (&#xD;&#xA;  SELECT PHH.PAYEE_ACCOUNT_ID,  &#xD;&#xA;    SUM(CASE WHEN (PHD.PAYMENT_ITEM_TYPE_ID IN (22,30,41,47,53,62,93,100,102,104))&#xD;&#xA;      THEN PHD.AMOUNT ELSE 0 END) AS YTD_FED_TAX,&#xD;&#xA;    SUM(CASE WHEN (PHD.PAYMENT_ITEM_TYPE_ID IN (23,31,42,48,54,63,94,101,103,105))&#xD;&#xA;      THEN PHD.AMOUNT ELSE 0 END) AS YTD_STATE_TAX,&#xD;&#xA;    SUM(CASE WHEN (PHD.PAYMENT_ITEM_TYPE_ID IN (28,18,32,34,35,36,37,39,40,43,45,46,49,51,52,55,56,96,97,98,99))&#xD;&#xA;      THEN PHD.AMOUNT ELSE 0 END) AS YTD_TAXABLE_AMOUNT,&#xD;&#xA;    SUM(CASE WHEN (PHD.PAYMENT_ITEM_TYPE_ID IN (33,38,44,50,29))&#xD;&#xA;      THEN PHD.AMOUNT ELSE 0 END) AS YTD_NONTAXABLE_AMOUNT,&#xD;&#xA;    SUM(CASE WHEN PHD.PAYMENT_ITEM_TYPE_ID IN (67,76,85,68,77,86,21,60,159,160,161,57) THEN PHD.AMOUNT ELSE 0 END) AS YTD_MISC1,&#xD;&#xA;&#x9;SUM(CASE WHEN PHD.PAYMENT_ITEM_TYPE_ID IN (69,78,87) THEN PHD.AMOUNT ELSE 0 END) AS YTD_NDPEA_DUES,&#xD;&#xA;    SUM(CASE WHEN PHD.PAYMENT_ITEM_TYPE_ID IN (66,75,84,70,79,88) THEN PHD.AMOUNT ELSE 0 END) AS YTD_HEALTH,&#xD;&#xA;    SUM(CASE WHEN PHD.PAYMENT_ITEM_TYPE_ID IN (71,80,89) THEN PHD.AMOUNT ELSE 0 END) AS YTD_LIFE,&#xD;&#xA;    SUM(CASE WHEN PHD.PAYMENT_ITEM_TYPE_ID IN (72,81,90) THEN PHD.AMOUNT ELSE 0 END) AS YTD_DENTAL,&#xD;&#xA;    SUM(CASE WHEN PHD.PAYMENT_ITEM_TYPE_ID IN (73,82,91) THEN PHD.AMOUNT ELSE 0 END) AS YTD_VISION,&#xD;&#xA;    SUM(CASE WHEN PHD.PAYMENT_ITEM_TYPE_ID IN (110,112,113) THEN PHD.AMOUNT ELSE 0 END) AS YTD_MEDICARE&#xD;&#xA;  FROM #TEMP_CURRENT_PAYEE_ACCOUNTS TEMP WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.PAYEE_ACCOUNT_ID = TEMP.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  WHERE YEAR(PHH.PAYMENT_DATE) = YEAR(@PAYMENTDATE)&#xD;&#xA;  GROUP BY PHH.PAYEE_ACCOUNT_ID &#xD;&#xA; )TEMP1 &#xD;&#xA;) B ON A.PAYEE_ACCOUNT_ID = B.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;--Backlog PIR 11613&#xD;&#xA;&#xD;&#xA;UPDATE A&#xD;&#xA;SET A.OLD_FED_TAX = B.OLD_FED_TAX,&#xD;&#xA; A.OLD_STATE_TAX = B.OLD_STATE_TAX,&#xD;&#xA; A.OLD_MISC = B.OLD_MISC,&#xD;&#xA; A.OLD_NDPEA_DUES = B.OLD_NDPEA_DUES,&#xD;&#xA; A.OLD_HEALTH = ISNULL(B.OLD_HEALTH,0),&#xD;&#xA; A.OLD_LIFE = ISNULL(B.OLD_LIFE,0),&#xD;&#xA; A.OLD_DENTAL = ISNULL(B.OLD_DENTAL,0),&#xD;&#xA; A.OLD_VISION = ISNULL(B.OLD_VISION,0),&#xD;&#xA; A.OLD_TAXABLE_AMOUNT = B.OLD_TAXABLE_AMOUNT,&#xD;&#xA; A.OLD_NONTAXABLE_AMOUNT = B.OLD_NONTAXABLE_AMOUNT,&#xD;&#xA; A.OLD_NET_AMOUNT = B.OLD_NET_AMOUNT,&#xD;&#xA; A.NEW_FED_TAX = B.NEW_FED_TAX,&#xD;&#xA; A.NEW_STATE_TAX = B.NEW_STATE_TAX,&#xD;&#xA; A.NEW_MISC = B.NEW_MISC,&#xD;&#xA; A.NEW_NDPEA_DUES = B.NEW_NDPEA_DUES,&#xD;&#xA; A.NEW_HEALTH = ISNULL(B.NEW_HEALTH,0),&#xD;&#xA; A.NEW_LIFE = ISNULL(B.NEW_LIFE,0),&#xD;&#xA; A.NEW_DENTAL = ISNULL(B.NEW_DENTAL,0),&#xD;&#xA; A.NEW_VISION = ISNULL(B.NEW_VISION,0),&#xD;&#xA; A.NEW_TAXABLE_AMOUNT = B.NEW_TAXABLE_AMOUNT,&#xD;&#xA; A.NEW_NONTAXABLE_AMOUNT = B.NEW_NONTAXABLE_AMOUNT,&#xD;&#xA; A.NEW_NET_AMOUNT = B.NEW_NET_AMOUNT,&#xD;&#xA; A.OLD_MEDICARE = B.OLD_MEDICARE,&#xD;&#xA; A.NEW_MEDICARE = B.NEW_MEDICARE&#xD;&#xA;FROM #TEMP A INNER JOIN&#xD;&#xA;(&#xD;&#xA; SELECT *,(ISNULL(OLD_MISC1,0)) AS OLD_MISC,  &#xD;&#xA; (ISNULL(OLD_TAXABLE_AMOUNT,0) + ISNULL(OLD_NONTAXABLE_AMOUNT,0)-ISNULL(OLD_FED_TAX,0)-ISNULL(OLD_STATE_TAX,0)-ISNULL(OLD_MISC1,0)-ISNULL(OLD_NDPEA_DUES,0)-ISNULL(OLD_HEALTH,0)-ISNULL(OLD_LIFE,0)-ISNULL(OLD_DENTAL,0)-ISNULL(OLD_VISION,0)-ISNULL(OLD_MEDICARE,0)) AS OLD_NET_AMOUNT,&#xD;&#xA;   (ISNULL(NEW_MISC1,0)) AS NEW_MISC,   &#xD;&#xA;   (ISNULL(NEW_TAXABLE_AMOUNT,0)+ISNULL(NEW_NONTAXABLE_AMOUNT,0)-ISNULL(NEW_FED_TAX,0)-ISNULL(NEW_STATE_TAX,0)-ISNULL(NEW_MISC1,0)-ISNULL(NEW_NDPEA_DUES,0)-ISNULL(NEW_HEALTH,0)-ISNULL(NEW_LIFE,0)-ISNULL(NEW_DENTAL,0)-ISNULL(NEW_VISION,0)-ISNULL(NEW_MEDICARE,0)) AS NEW_NET_AMOUNT&#xD;&#xA; FROM&#xD;&#xA; (&#xD;&#xA;  SELECT PA.PAYEE_ACCOUNT_ID, &#xD;&#xA;&#x9;  (SELECT SUM(ISNULL(PHD.AMOUNT, 0)) FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID =PHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@LASTPAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@LASTPAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @LASTPAYMENTSCHEDULEID &#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PHD.PAYMENT_ITEM_TYPE_ID IN (22,30,41,47,53,62,93,100,102,104) GROUP BY PHH.PAYEE_ACCOUNT_ID) AS OLD_FED_TAX,&#xD;&#xA;&#x9;  &#xD;&#xA;&#x9;  (SELECT SUM(ISNULL(PHD.AMOUNT, 0)) FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID =PHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@LASTPAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@LASTPAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @LASTPAYMENTSCHEDULEID &#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PHD.PAYMENT_ITEM_TYPE_ID IN (23,31,42,48,54,63,94,101,103,105) GROUP BY PHH.PAYEE_ACCOUNT_ID) AS OLD_STATE_TAX,&#xD;&#xA;&#xD;&#xA;(SELECT SUM(ISNULL(PHD.AMOUNT, 0)) FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID =PHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@LASTPAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@LASTPAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @LASTPAYMENTSCHEDULEID &#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PHD.PAYMENT_ITEM_TYPE_ID IN (28,18,32,34,35,36,37,39,40,43,45,46,49,51,52,55,56,96,97,98,99) GROUP BY PHH.PAYEE_ACCOUNT_ID) AS OLD_TAXABLE_AMOUNT,&#x9;  &#xD;&#xA;&#xD;&#xA;&#x9;  (SELECT SUM(ISNULL(PHD.AMOUNT, 0)) FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID =PHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@LASTPAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@LASTPAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @LASTPAYMENTSCHEDULEID &#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PHD.PAYMENT_ITEM_TYPE_ID IN (33,38,44,50,29) GROUP BY PHH.PAYEE_ACCOUNT_ID) AS OLD_NONTAXABLE_AMOUNT,&#xD;&#xA;&#xD;&#xA;&#x9;(SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@LASTPAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@LASTPAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @LASTPAYMENTSCHEDULEID AND PHD.PAYMENT_ITEM_TYPE_ID IN (67,76,85,68,77,86,21,60,159,160,161,57)  AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS OLD_MISC1,&#xD;&#xA;&#x9;(SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@LASTPAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@LASTPAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @LASTPAYMENTSCHEDULEID AND PHD.PAYMENT_ITEM_TYPE_ID IN (69,78,87) AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS OLD_NDPEA_DUES,&#xD;&#xA;    (SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@LASTPAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@LASTPAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @LASTPAYMENTSCHEDULEID AND PHD.PAYMENT_ITEM_TYPE_ID IN (66,75,84,70,79,88) AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS OLD_HEALTH,&#xD;&#xA;&#x9;(SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@LASTPAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@LASTPAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @LASTPAYMENTSCHEDULEID AND PHD.PAYMENT_ITEM_TYPE_ID IN (71,80,89) AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS OLD_LIFE,&#xD;&#xA;&#x9;(SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@LASTPAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@LASTPAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @LASTPAYMENTSCHEDULEID AND PHD.PAYMENT_ITEM_TYPE_ID IN (72,81,90) AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS OLD_DENTAL,&#xD;&#xA;&#x9;(SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@LASTPAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@LASTPAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @LASTPAYMENTSCHEDULEID AND PHD.PAYMENT_ITEM_TYPE_ID IN (73,82,91) AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS OLD_VISION,&#xD;&#xA;&#x9;(SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@LASTPAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@LASTPAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @LASTPAYMENTSCHEDULEID AND PHD.PAYMENT_ITEM_TYPE_ID IN (110,112,113)  AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS OLD_MEDICARE,&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;  (SELECT SUM(ISNULL(PHD.AMOUNT, 0)) FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID =PHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@PAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID &#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PHD.PAYMENT_ITEM_TYPE_ID IN (22,30,41,47,53,62,93,100,102,104) GROUP BY PHH.PAYEE_ACCOUNT_ID) AS NEW_FED_TAX,&#xD;&#xA;&#x9; &#xD;&#xA;&#x9;  (SELECT SUM(ISNULL(PHD.AMOUNT, 0)) FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID =PHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@PAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID &#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PHD.PAYMENT_ITEM_TYPE_ID IN (23,31,42,48,54,63,94,101,103,105) GROUP BY PHH.PAYEE_ACCOUNT_ID) AS NEW_STATE_TAX,&#xD;&#xA;&#xD;&#xA; (SELECT SUM(ISNULL(PHD.AMOUNT, 0)) FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID =PHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@PAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID &#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PHD.PAYMENT_ITEM_TYPE_ID IN (28,18,32,34,35,36,37,39,40,43,45,46,49,51,52,55,56,96,97,98,99) GROUP BY PHH.PAYEE_ACCOUNT_ID) AS NEW_TAXABLE_AMOUNT,&#xD;&#xA;&#x9; &#xD;&#xA;&#x9;  (SELECT SUM(ISNULL(PHD.AMOUNT, 0)) FROM SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PIT.PAYMENT_ITEM_TYPE_ID =PHD.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@PAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID &#xD;&#xA; AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PHD.PAYMENT_ITEM_TYPE_ID IN (33,38,44,50,29) GROUP BY PHH.PAYEE_ACCOUNT_ID) AS NEW_NONTAXABLE_AMOUNT,&#xD;&#xA;&#xD;&#xA;   &#x9;(SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@PAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID AND PHD.PAYMENT_ITEM_TYPE_ID IN (67,76,85,68,77,86,21,60,159,160,161,57)  AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS NEW_MISC1,&#xD;&#xA;    (SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@PAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID AND PHD.PAYMENT_ITEM_TYPE_ID IN (69,78,87) AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS NEW_NDPEA_DUES,&#xD;&#xA;&#x9;(SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@PAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PHD.PAYMENT_ITEM_TYPE_ID IN (66,75,84,70,79,88) GROUP BY PHH.PAYEE_ACCOUNT_ID) AS NEW_HEALTH,&#xD;&#xA;&#x9;(SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@PAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID AND PHD.PAYMENT_ITEM_TYPE_ID IN (71,80,89)  AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS NEW_LIFE,&#xD;&#xA;&#x9;(SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@PAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID AND PHD.PAYMENT_ITEM_TYPE_ID IN (72,81,90)  AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS NEW_DENTAL,&#xD;&#xA;&#x9;(SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@PAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID AND PHD.PAYMENT_ITEM_TYPE_ID IN (73,82,91)  AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS NEW_VISION,&#xD;&#xA;&#x9;(SELECT SUM(ISNULL(PHD.AMOUNT, 0))  FROM  SGT_PAYMENT_HISTORY_HEADER PHH INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD WITH(NOLOCK) ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID WHERE MONTH(PHH.PAYMENT_DATE) = MONTH(@PAYMENTDATE) AND  YEAR(PHH.PAYMENT_DATE) = YEAR(@PAYMENTDATE) AND PHH.PAYMENT_SCHEDULE_ID = @CURRENTPAYMENTSCHEDULID AND PHD.PAYMENT_ITEM_TYPE_ID IN (110,112,113)  AND PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID GROUP BY PHH.PAYEE_ACCOUNT_ID) AS NEW_MEDICARE&#xD;&#xA;  FROM #TEMP_CURRENT_PAYEE_ACCOUNTS TEMP WITH(NOLOCK)&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) ON TEMP.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPIT WITH(NOLOCK) ON PAPIT.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PAPIT.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  GROUP BY PA.PAYEE_ACCOUNT_ID , PA.PAYEE_PERSLINK_ID&#xD;&#xA; )TEMP2&#xD;&#xA;) B ON A.PAYEE_ACCOUNT_ID = B.PAYEE_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT PAYEE_ACCOUNT_ID,&#xD;&#xA; ISNULL(MINIMUM_GUARANTEE_AMOUNT ,0) AS MINIMUM_GUARANTEE_AMOUNT, &#xD;&#xA; ISNULL(STARTING_NONTAXABLE_AMOUNT ,0) AS STARTING_NONTAXABLE_AMOUNT, &#xD;&#xA; ISNULL(LTD_NONTAXABLE_AMOUNT ,0)AS LTD_NONTAXABLE_AMOUNT,&#xD;&#xA; ISNULL(YTD_FED_TAX ,0) AS YTD_FED_TAX,&#xD;&#xA; ISNULL(YTD_STATE_TAX ,0)AS YTD_STATE_TAX,&#xD;&#xA; ISNULL(YTD_MISC ,0)AS YTD_MISC,&#xD;&#xA; ISNULL(YTD_NDPEA_DUES ,0)AS YTD_NDPEA_DUES,&#xD;&#xA; ISNULL(YTD_HEALTH ,0) AS YTD_HEALTH,&#xD;&#xA; ISNULL(YTD_LIFE ,0)AS YTD_LIFE,&#xD;&#xA; ISNULL(YTD_DENTAL ,0) AS YTD_DENTAL,&#xD;&#xA; ISNULL(YTD_VISION ,0) AS YTD_VISION,&#xD;&#xA; ISNULL(YTD_TAXABLE_AMOUNT ,0) AS YTD_TAXABLE_AMOUNT,&#xD;&#xA; ISNULL(YTD_NONTAXABLE_AMOUNT ,0) AS YTD_NONTAXABLE_AMOUNT,&#xD;&#xA; ISNULL(YTD_NET_AMOUNT ,0) AS YTD_NET_AMOUNT,&#xD;&#xA; ISNULL(OLD_FED_TAX ,0) AS OLD_FED_TAX,&#xD;&#xA; ISNULL(OLD_STATE_TAX ,0) AS OLD_STATE_TAX,&#xD;&#xA; ISNULL(OLD_MISC ,0) AS OLD_MISC,&#xD;&#xA; ISNULL(OLD_NDPEA_DUES ,0) AS OLD_NDPEA_DUES,&#xD;&#xA; ISNULL(OLD_HEALTH ,0) AS OLD_HEALTH,&#xD;&#xA; ISNULL(OLD_LIFE ,0) AS OLD_LIFE,&#xD;&#xA; ISNULL(OLD_DENTAL ,0) AS OLD_DENTAL,&#xD;&#xA; ISNULL(OLD_VISION ,0) AS OLD_VISION,&#xD;&#xA; ISNULL(OLD_TAXABLE_AMOUNT ,0) AS OLD_TAXABLE_AMOUNT,&#xD;&#xA; ISNULL(OLD_NONTAXABLE_AMOUNT ,0) AS OLD_NONTAXABLE_AMOUNT,&#xD;&#xA; ISNULL(OLD_NET_AMOUNT ,0) AS OLD_NET_AMOUNT,&#xD;&#xA; ISNULL(NEW_FED_TAX ,0) AS NEW_FED_TAX,&#xD;&#xA; ISNULL(NEW_STATE_TAX ,0) AS NEW_STATE_TAX,&#xD;&#xA; ISNULL(NEW_MISC ,0) AS NEW_MISC,&#xD;&#xA; ISNULL(NEW_NDPEA_DUES ,0) AS NEW_NDPEA_DUES,&#xD;&#xA; ISNULL(NEW_HEALTH ,0) AS NEW_HEALTH,&#xD;&#xA; ISNULL(NEW_LIFE ,0) AS NEW_LIFE,&#xD;&#xA; ISNULL(NEW_DENTAL ,0) AS NEW_DENTAL,&#xD;&#xA; ISNULL(NEW_VISION ,0) AS NEW_VISION,&#xD;&#xA; ISNULL(NEW_TAXABLE_AMOUNT ,0) AS NEW_TAXABLE_AMOUNT,&#xD;&#xA; ISNULL(NEW_NONTAXABLE_AMOUNT ,0) AS NEW_NONTAXABLE_AMOUNT,&#xD;&#xA; ISNULL(NEW_NET_AMOUNT ,0) AS NEW_NET_AMOUNT,&#xD;&#xA; ISNULL(OLD_MEDICARE ,0) AS OLD_MEDICARE,&#xD;&#xA; ISNULL(NEW_MEDICARE ,0) AS NEW_MEDICARE,&#xD;&#xA; ISNULL(YTD_MEDICARE ,0) AS YTD_MEDICARE&#xD;&#xA;FROM #TEMP WITH(NOLOCK)&#xD;&#xA;WHERE OLD_NET_AMOUNT != 0 AND&#xD;&#xA;NEW_NET_AMOUNT !=0 AND&#xD;&#xA;OLD_NET_AMOUNT != NEW_NET_AMOUNT&#xD;&#xA;IF OBJECT_ID('TEMP_CURRENT_PAYEE_ACCOUNTS') IS NOT NULL&#xD;&#xA;  DROP TABLE TEMP_CURRENT_PAYEE_ACCOUNTS  &#xD;&#xA;SELECT DISTINCT PAYEE_ACCOUNT_ID INTO TEMP_CURRENT_PAYEE_ACCOUNTS &#xD;&#xA;FROM #TEMP WITH(NOLOCK)&#xD;&#xA;WHERE NEW_NET_AMOUNT != 0 AND OLD_NET_AMOUNT !=0&#xD;&#xA;AND NEW_NET_AMOUNT != OLD_NET_AMOUNT&#xD;&#xA;DROP TABLE #TEMP_CURRENT_PAYEE_ACCOUNTS&#xD;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@CURRENTPAYMENTSCHEDULID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="DeleteBackUpMonthly" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="set nocount on&#xD;&#xA;DECLARE @LAST_PAYMENTDATE DATETIME&#xD;&#xA;DECLARE @BACKUPTABLEPREFIX VARCHAR(500)&#xD;&#xA;&#xD;&#xA;SET @LAST_PAYMENTDATE  = DATEADD(M,-1,@PAYMENTDATE)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT @BACKUPTABLEPREFIX = LTRIM(RTRIM(BACKUP_TABLE_PREFIX))+'%' FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA; WHERE STATUS_VALUE = 'PRCD' AND SCHEDULE_TYPE_VALUE = 'MTLY' AND PAYMENT_DATE = @LAST_PAYMENTDATE&#xD;&#xA;&#xD;&#xA;DECLARE @ROWCOUNTER INT, @MAXROWS INT&#xD;&#xA;&#xD;&#xA;SET @ROWCOUNTER  = 1&#xD;&#xA;SET @MAXROWS = 0 &#xD;&#xA;&#xD;&#xA;DECLARE @TARGET_TABLE VARCHAR(2000)&#xD;&#xA;&#xD;&#xA;IF @BACKUPTABLEPREFIX IS NOT NULL BEGIN&#xD;&#xA; &#xD;&#xA; IF OBJECT_ID('TEMPDB..#TEMPDROPPREVIOUSBACKUP') IS NOT NULL&#xD;&#xA;  DROP TABLE #TEMPDROPPREVIOUSBACKUP &#xD;&#xA;&#xD;&#xA; CREATE TABLE #TEMPDROPPREVIOUSBACKUP &#xD;&#xA; (&#xD;&#xA;  PRIMARY_KEY INT IDENTITY(1,1) NOT NULL PRIMARY KEY, &#xD;&#xA;  NAME VARCHAR(500)&#xD;&#xA; )&#xD;&#xA;&#xD;&#xA; INSERT INTO #TEMPDROPPREVIOUSBACKUP &#xD;&#xA;  SELECT NAME AS NAME &#xD;&#xA;   FROM SYS.OBJECTS WHERE NAME LIKE @BACKUPTABLEPREFIX &#xD;&#xA;&#xD;&#xA; SET @MAXROWS = @@ROWCOUNT   &#xD;&#xA; &#xD;&#xA;  IF @MAXROWS  &gt; 0 BEGIN&#xD;&#xA;&#xD;&#xA;  WHILE @MAXROWS &gt; 0 AND @ROWCOUNTER &lt;= @MAXROWS BEGIN&#xD;&#xA;    &#xD;&#xA;   SET @TARGET_TABLE  = NULL&#xD;&#xA;&#xD;&#xA;   SELECT @TARGET_TABLE  = NAME&#xD;&#xA;    FROM #TEMPDROPPREVIOUSBACKUP &#xD;&#xA;    WHERE PRIMARY_KEY = @ROWCOUNTER&#xD;&#xA;  &#xD;&#xA;   IF @TARGET_TABLE IS NOT NULL BEGIN&#xD;&#xA;    IF @TARGET_TABLE IS NOT NULL BEGIN&#xD;&#xA;     SET @TARGET_TABLE = 'DROP TABLE ' + @TARGET_TABLE&#xD;&#xA;      --PRINT @TARGET_TABLE &#xD;&#xA;     EXECUTE (@TARGET_TABLE )        &#xD;&#xA;    END   &#xD;&#xA;    SET @ROWCOUNTER = @ROWCOUNTER + 1 &#xD;&#xA;   END&#xD;&#xA;   END&#xD;&#xA; END&#xD;&#xA;END&#xD;&#xA;set nocount off&#xD;&#xA;select 1">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="DeleteBackUpAdhoc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SET NOCOUNT ON&#xD;&#xA;DECLARE @BACKUPTABLEPREFIX VARCHAR(500)&#xD;&#xA;&#xD;&#xA;SELECT TOP 1 @BACKUPTABLEPREFIX = LTRIM(RTRIM(BACKUP_TABLE_PREFIX))+'%' FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA; WHERE STATUS_VALUE = 'PRCD' AND SCHEDULE_TYPE_VALUE = 'ADHC' AND PAYMENT_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PAYMENT_SCHEDULE_ID &lt;&gt; @PAYMENTSCHEDULEID&#xD;&#xA; ORDER BY PAYMENT_DATE DESC&#xD;&#xA; &#xD;&#xA; &#xD;&#xA;DECLARE @ROWCOUNTER INT, @MAXROWS INT&#xD;&#xA;&#xD;&#xA;SET @ROWCOUNTER  = 1&#xD;&#xA;SET @MAXROWS = 0 &#xD;&#xA;&#xD;&#xA;DECLARE @TARGET_TABLE VARCHAR(2000)&#xD;&#xA;&#xD;&#xA;IF @BACKUPTABLEPREFIX IS NOT NULL BEGIN&#xD;&#xA; &#xD;&#xA; IF OBJECT_ID('TEMPDB..#TEMPDROPPREVIOUSBACKUP') IS NOT NULL&#xD;&#xA;  DROP TABLE #TEMPDROPPREVIOUSBACKUP &#xD;&#xA;&#xD;&#xA; CREATE TABLE #TEMPDROPPREVIOUSBACKUP &#xD;&#xA; (&#xD;&#xA;  PRIMARY_KEY INT IDENTITY(1,1) NOT NULL PRIMARY KEY, &#xD;&#xA;  NAME VARCHAR(500)&#xD;&#xA; )&#xD;&#xA;&#xD;&#xA; INSERT INTO #TEMPDROPPREVIOUSBACKUP &#xD;&#xA;  SELECT NAME AS NAME &#xD;&#xA;   FROM SYS.OBJECTS WHERE NAME LIKE @BACKUPTABLEPREFIX &#xD;&#xA;&#xD;&#xA; SET @MAXROWS = @@ROWCOUNT   &#xD;&#xA; &#xD;&#xA;  IF @MAXROWS  &gt; 0 BEGIN&#xD;&#xA;&#xD;&#xA;  WHILE @MAXROWS &gt; 0 AND @ROWCOUNTER &lt;= @MAXROWS BEGIN&#xD;&#xA;    &#xD;&#xA;   SET @TARGET_TABLE  = NULL&#xD;&#xA;&#xD;&#xA;   SELECT @TARGET_TABLE  = NAME&#xD;&#xA;    FROM #TEMPDROPPREVIOUSBACKUP &#xD;&#xA;    WHERE PRIMARY_KEY = @ROWCOUNTER&#xD;&#xA;  &#xD;&#xA;   IF @TARGET_TABLE IS NOT NULL BEGIN&#xD;&#xA;    IF @TARGET_TABLE IS NOT NULL BEGIN&#xD;&#xA;     SET @TARGET_TABLE = 'DROP TABLE ' + @TARGET_TABLE&#xD;&#xA;      --PRINT @TARGET_TABLE &#xD;&#xA;     EXECUTE (@TARGET_TABLE )        &#xD;&#xA;    END   &#xD;&#xA;    SET @ROWCOUNTER = @ROWCOUNTER + 1 &#xD;&#xA;   END&#xD;&#xA;   END&#xD;&#xA; END&#xD;&#xA;END&#xD;&#xA;SET NOCOUNT OFF&#xD;&#xA;SELECT 1">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateBenefitEndDateWithTermCertainEndDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LASTDAYOFTHEMONTH DATETIME&#xD;&#xA;SET @LASTDAYOFTHEMONTH = DATEADD(M,1,@PAYMENTDATE) - 1&#xD;&#xA;PRINT  @LASTDAYOFTHEMONTH&#xD;&#xA;&#xD;&#xA;UPDATE PAYEE SET BENEFIT_END_DATE = TERM_CERTAIN_END_DATE &#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PAYEE&#xD;&#xA; INNER JOIN &#xD;&#xA; ( &#xD;&#xA;  SELECT DISTINCT PA.PAYEE_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;    ON  PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE   &#xD;&#xA;   WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (NOLOCK)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;   AND TERM_CERTAIN_END_DATE IS NOT NULL AND &#xD;&#xA;    TERM_CERTAIN_END_DATE BETWEEN @PAYMENTDATE AND @LASTDAYOFTHEMONTH&#xD;&#xA;   AND PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;   AND PA.ACCOUNT_RELATION_VALUE NOT IN ('MEMB', 'ALTP') --PIR 15486&#xD;&#xA; ) AS TSEND&#xD;&#xA; ON PAYEE.PAYEE_ACCOUNT_ID = TSEND.PAYEE_ACCOUNT_ID&#xD;&#xA; ">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPAPITForRecalculatingTax" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;Select *,ISNULL(SPEIT.UPDATE_SEQ,0) AS PAPIT_UPDATE_SEQ,&#xD;&#xA;SPEIT.CREATED_BY AS PAPIT_CREATED_BY,SPEIT.CREATED_DATE AS PAPIT_CREATED_DATE,&#xD;&#xA;SPEIT.MODIFIED_BY AS PAPIT_MODIFIED_BY,SPEIT.MODIFIED_DATE AS PAPIT_MODIFIED_DATE&#xD;&#xA; from (&#xD;&#xA;  SELECT &#xD;&#xA;   PA.*&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV (nolock)&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   LEFT JOIN SGT_PERSON P&#xD;&#xA;    ON P.PERSON_ID=PA.PAYEE_PERSLINK_ID&#xD;&#xA;   LEFT JOIN SGT_ORGANIZATION O&#xD;&#xA;    ON O.ORG_ID=PA.PAYEE_ORG_ID&#xD;&#xA;  WHERE CV.DATA2 NOT IN ('CNLD','TRMD')  &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND')&#xD;&#xA; )TEMP  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE SPEIT&#xD;&#xA;  ON SPEIT.PAYEE_ACCOUNT_ID=TEMP.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE SPIT WITH(NOLOCK) ON SPIT.PAYMENT_ITEM_TYPE_ID=SPEIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; LEFT JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON ORG.ORG_ID=SPEIT.VENDOR_ORG_ID ">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadTaxWithHoldingForRecalculatingTax" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select * from (&#xD;&#xA;  SELECT &#xD;&#xA;   PA.*&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV (nolock)&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;   LEFT JOIN SGT_PERSON P&#xD;&#xA;    ON P.PERSON_ID=PA.PAYEE_PERSLINK_ID&#xD;&#xA;   LEFT JOIN SGT_ORGANIZATION O&#xD;&#xA;    ON O.ORG_ID=PA.PAYEE_ORG_ID&#xD;&#xA;  WHERE CV.DATA2 NOT IN ('CNLD','TRMD')  &#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND (PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'RFND')&#xD;&#xA; )TEMP  &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_TAX_WITHHOLDING TAX&#xD;&#xA;  ON TEMP.PAYEE_aCCOUNT_ID=TAX.PAYEE_ACCOUNT_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="DeletePrevBackUpForSamePaymentSchedule" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="set nocount on&#xD;&#xA;&#xD;&#xA;DECLARE @BACKUPTABLEPREFIX VARCHAR(500)&#xD;&#xA;&#xD;&#xA;SELECT @BACKUPTABLEPREFIX = LTRIM(RTRIM(BACKUP_TABLE_PREFIX))+'%' FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA; WHERE PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;  &#xD;&#xA;DECLARE @ROWCOUNTER INT, @MAXROWS INT&#xD;&#xA;&#xD;&#xA;SET @ROWCOUNTER  = 1&#xD;&#xA;SET @MAXROWS = 0 &#xD;&#xA;&#xD;&#xA;DECLARE @TARGET_TABLE VARCHAR(2000)&#xD;&#xA;&#xD;&#xA;IF @BACKUPTABLEPREFIX IS NOT NULL BEGIN&#xD;&#xA; &#xD;&#xA; IF OBJECT_ID('TEMPDB..#TEMPDROPPREVIOUSBACKUP') IS NOT NULL&#xD;&#xA;  DROP TABLE #TEMPDROPPREVIOUSBACKUP &#xD;&#xA;&#xD;&#xA; CREATE TABLE #TEMPDROPPREVIOUSBACKUP &#xD;&#xA; (&#xD;&#xA;  PRIMARY_KEY INT IDENTITY(1,1) NOT NULL PRIMARY KEY, &#xD;&#xA;  NAME VARCHAR(500)&#xD;&#xA; )&#xD;&#xA;&#xD;&#xA; INSERT INTO #TEMPDROPPREVIOUSBACKUP &#xD;&#xA;  SELECT NAME AS NAME &#xD;&#xA;   FROM SYS.OBJECTS WHERE NAME LIKE @BACKUPTABLEPREFIX &#xD;&#xA;&#xD;&#xA; SET @MAXROWS = @@ROWCOUNT   &#xD;&#xA; &#xD;&#xA;  IF @MAXROWS  &gt; 0 BEGIN&#xD;&#xA;&#xD;&#xA;  WHILE @MAXROWS &gt; 0 AND @ROWCOUNTER &lt;= @MAXROWS BEGIN&#xD;&#xA;    &#xD;&#xA;   SET @TARGET_TABLE  = NULL&#xD;&#xA;&#xD;&#xA;   SELECT @TARGET_TABLE  = NAME&#xD;&#xA;    FROM #TEMPDROPPREVIOUSBACKUP &#xD;&#xA;    WHERE PRIMARY_KEY = @ROWCOUNTER&#xD;&#xA;  &#xD;&#xA;   IF @TARGET_TABLE IS NOT NULL BEGIN&#xD;&#xA;    IF @TARGET_TABLE IS NOT NULL BEGIN&#xD;&#xA;     SET @TARGET_TABLE = 'DROP TABLE ' + @TARGET_TABLE&#xD;&#xA;      --PRINT @TARGET_TABLE &#xD;&#xA;     EXECUTE (@TARGET_TABLE )        &#xD;&#xA;    END   &#xD;&#xA;    SET @ROWCOUNTER = @ROWCOUNTER + 1 &#xD;&#xA;   END&#xD;&#xA;   END&#xD;&#xA; END&#xD;&#xA;END&#xD;&#xA;set nocount off&#xD;&#xA;select 1">
      <parameters>
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllPayeeAccountNotInCompCancForRhicFactorChange" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select distinct a.* from sgt_payee_account a &#xD;&#xA;inner join sgt_payee_account_status b on a.payee_account_id = b.payee_account_id&#xD;&#xA;inner join sgs_code_value c on b.status_id = c.code_id and b.status_value = c.code_value&#xD;&#xA;where c.data2 not in ('CNLD','TRMD') &#xD;&#xA;and (a.rhic_amount &gt; 0)&#xD;&#xA;and b.payee_account_status_id = &#xD;&#xA;(&#xD;&#xA; SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT_STATUS PAS (nolock)&#xD;&#xA; WHERE PAS.PAYEE_ACCOUNT_ID = a.PAYEE_ACCOUNT_ID    &#xD;&#xA; ORDER BY PAS.STATUS_EFFECTIVE_DATE DESC,PAS.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;)">
      <parameters />
    </query>
    <query ID="LoadAllBenefitAccountForRhicFactorChange" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select distinct ben.* from sgt_payee_account a &#xD;&#xA;inner join sgt_benefit_account ben on a.benefit_account_id = ben.benefit_account_id&#xD;&#xA;inner join sgt_payee_account_status b on a.payee_account_id = b.payee_account_id&#xD;&#xA;inner join sgs_code_value c on b.status_id = c.code_id and b.status_value = c.code_value&#xD;&#xA;where c.data2 not in ('CNLD','TRMD') &#xD;&#xA;and (a.rhic_amount &gt; 0 or ben.spouse_rhic_amount &gt; 0 or ben.rhic_benefit_amount &gt; 0)&#xD;&#xA;and b.payee_account_status_id = &#xD;&#xA;(&#xD;&#xA; SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT_STATUS PAS (nolock)&#xD;&#xA; WHERE PAS.PAYEE_ACCOUNT_ID = a.PAYEE_ACCOUNT_ID    &#xD;&#xA; ORDER BY PAS.STATUS_EFFECTIVE_DATE DESC,PAS.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;)">
      <parameters />
    </query>
    <query ID="LoadTermCertainPayees" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LASTDAYOFTHEMONTH DATETIME&#xD;&#xA;SET @LASTDAYOFTHEMONTH = DATEADD(M,1,@PAYMENTDATE) - 1&#xD;&#xA;PRINT  @LASTDAYOFTHEMONTH&#xD;&#xA; &#xD;&#xA;SELECT DISTINCT PA.* &#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA; INNER JOIN  SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;  ON  PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;  ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;  ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE   &#xD;&#xA; WHERE (CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' ) &#xD;&#xA; AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (NOLOCK)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA; AND TERM_CERTAIN_END_DATE IS NOT NULL &#xD;&#xA; AND TERM_CERTAIN_END_DATE BETWEEN @PAYMENTDATE AND @LASTDAYOFTHEMONTH&#xD;&#xA; AND PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA; AND PA.ACCOUNT_RELATION_VALUE = 'BENE'&#xD;&#xA; AND PA.FAMILY_RELATION_VALUE = 'SPOU'">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="RetirementMissingPayroll" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;SBA.MEMBER_PERSON_ID 'PERSLINKID',&#xD;&#xA;ISNULL(PER.LAST_NAME,'') +' '+ ISNULL(PER.FIRST_NAME,'') +' ' + ISNULL(PER.MIDDLE_NAME,'') 'NAME',&#xD;&#xA;SBA.RETIREMENT_DATE 'RETIREMENT_DATE',&#xD;&#xA;CV.[DESCRIPTION] 'BENEFIT_TYPE',&#xD;&#xA;CV1.[DESCRIPTION] 'STATUS',&#xD;&#xA;CV2.[DESCRIPTION] 'ACTION_STATUS', &#xD;&#xA;ISNULL(SPA.PAYEE_ACCOUNT_ID,'') 'PAYEE_ACCOUNT_ID'&#xD;&#xA;FROM SGT_BENEFIT_APPLICATION SBA WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON PER.PERSON_ID=SBA.MEMBER_PERSON_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON SBA.BENEFIT_ACCOUNT_TYPE_VALUE = CV.CODE_VALUE AND SBA.BENEFIT_ACCOUNT_TYPE_ID = CV.CODE_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK) ON SBA.STATUS_VALUE = CV1.CODE_VALUE AND SBA.STATUS_ID = CV1.CODE_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK) ON SBA.ACTION_STATUS_VALUE = CV2.CODE_VALUE AND SBA.ACTION_STATUS_ID = CV2.CODE_ID&#xD;&#xA;LEFT JOIN SGT_PAYEE_ACCOUNT SPA WITH(NOLOCK) ON SPA.APPLICATION_ID=SBA.BENEFIT_APPLICATION_ID&#xD;&#xA;WHERE &#xD;&#xA;SBA.STATUS_VALUE IN ('REVW','VALD') AND&#xD;&#xA;SBA.ACTION_STATUS_VALUE IN ('PEND','VERF') AND &#xD;&#xA;SBA.BENEFIT_ACCOUNT_TYPE_VALUE NOT IN ('RFND') AND &#xD;&#xA;SBA.RETIREMENT_DATE &gt;= @RETIREMENT_DATE AND&#xD;&#xA;NOT EXISTS&#xD;&#xA;(&#xD;&#xA;SELECT EMP.END_DATE,MONTH(EMP.END_DATE),YEAR(EMP.END_DATE),* FROM SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT SBAPA WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL EMPDTL WITH(NOLOCK) ON EMPDTL.PERSON_ACCOUNT_ID=SBAPA.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL DTL WITH(NOLOCK) ON DTL.PERSON_EMPLOYMENT_DTL_ID = EMPDTL.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) ON EMP.PERSON_EMPLOYMENT_ID=DTL.PERSON_EMPLOYMENT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION CONT WITH(NOLOCK) ON CONT.PERSON_ACCOUNT_ID= SBAPA.PERSON_ACCOUNT_ID&#xD;&#xA;AND CONT.PAY_PERIOD_MONTH = MONTH(EMP.END_DATE) AND CONT.PAY_PERIOD_YEAR = YEAR(EMP.END_DATE)&#xD;&#xA; WHERE &#xD;&#xA;SBAPA.BENEFIT_APPLICATION_ID = SBA.BENEFIT_APPLICATION_ID&#xD;&#xA;)&#xD;&#xA;ORDER BY PER.LAST_NAME">
      <parameters>
        <parameter ID="@RETIREMENT_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="CheckRegisterReportSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PLAN_NAME,&#xD;&#xA;  ISNULL(CHLD,0) AS CHLD,ISNULL(DNTL,0) AS DNTL,ISNULL(DUES,0) AS DUES,ISNULL(FDTX,0) AS FDTX,&#xD;&#xA;  ISNULL(GROS,0) AS GROS,ISNULL(HLTH,0) AS HLTH,ISNULL(LAVY,0) AS LAVY,ISNULL(LIFE,0) AS LIFE,ISNULL(LTCI,0) AS LTCI,&#xD;&#xA;  ISNULL(MCPD,0) AS MCPD,ISNULL(RECV,0) AS RECV,ISNULL(RHIC,0) AS RHIC,ISNULL(STTX,0) AS STTX,&#xD;&#xA;  ISNULL(THRD,0) AS THRD,ISNULL(VISN,0) AS VISN,ISNULL(BLNK,0) AS BLNK&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA; SELECT PL.PLAN_NAME &#xD;&#xA;   ,ISNULL(ACH_CHECK_GROUP_VALUE,'BLNK') AS ACH_CHECK_GROUP_VALUE&#xD;&#xA;   ,SUM(PHD.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AMOUNT&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH &#xD;&#xA;  INNER JOIN  SGT_PAYMENT_HISTORY_DISTRIBUTION PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN  SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT(NOLOCK) PA  ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN  SGS_CODE_VALUE(NOLOCK) BTYP ON PA.BENEFIT_ACCOUNT_TYPE_ID = BTYP.CODE_ID&#xD;&#xA;    AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = BTYP.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN  SGS_CODE_VALUE(NOLOCK) BOPT ON PA.BENEFIT_OPTION_ID = BOPT.CODE_ID&#xD;&#xA;    AND PA.BENEFIT_OPTION_VALUE = BOPT.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN  SGT_ORGANIZATION(NOLOCK) PORG ON PORG.ORG_ID = PHDN.ORG_ID&#xD;&#xA;  LEFT OUTER JOIN  SGT_PERSON PER ON PER.PERSON_ID = PHDN.PERSON_ID&#xD;&#xA;  LEFT OUTER JOIN  SGT_PLAN(NOLOCK) PL ON PHH.PLAN_ID = PL.PLAN_ID &#xD;&#xA; WHERE PHH.PAYMENT_SCHEDULE_ID = @SCHEDULE_ID&#xD;&#xA; AND PHDN.PAYMENT_METHOD_VALUE in ('CHK','RCHK')&#xD;&#xA; GROUP BY PL.PLAN_NAME,ACH_CHECK_GROUP_VALUE&#xD;&#xA;) MA&#xD;&#xA;PIVOT (SUM(AMOUNT) FOR ACH_CHECK_GROUP_VALUE IN ([CHLD],[DNTL],[DUES],[FDTX],[GROS],[HLTH],[LAVY],[LIFE],[LTCI],[MCPD],[RECV],[RHIC],[STTX],[THRD],[VISN],[BLNK])) AS PVT &#xD;&#xA;ORDER BY PLAN_NAME">
      <parameters>
        <parameter ID="@SCHEDULE_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetRecoveryAmount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ISNULL(SUM(ISNULL(AMOUNT,0)),0.00) FROM SGT_PAYMENT_BENEFIT_OVERPAYMENT_HEADER A WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYMENT_BENEFIT_OVERPAYMENT_DETAIL B WITH(NOLOCK) ON A.BENEFIT_OVERPAYMENT_ID = B.BENEFIT_OVERPAYMENT_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_ITEM_TYPE C WITH(NOLOCK) ON B.PAYMENT_ITEM_TYPE_ID = C.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_RECOVERY D WITH(NOLOCK) ON A.BENEFIT_OVERPAYMENT_ID = D.BENEFIT_OVERPAYMENT_ID&#xD;&#xA;WHERE &#xD;&#xA;D.STATUS_VALUE  =  'SATD' AND &#xD;&#xA;A.PAYEE_ACCOUNT_ID =@PAYEEACCOUNTID AND &#xD;&#xA;C.ITEM_TYPE_DIRECTION=1 AND &#xD;&#xA;C.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'">
      <parameters>
        <parameter ID="@PAYEEACCOUNTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="ReturnToWorkReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="  SELECT TBL.PERSLink_ID&#xD;&#xA;&#x9;,TBL.FIRST_NAME + ' ' + TBL.LAST_NAME AS NAME&#xD;&#xA;&#x9;,TBL.PLAN_NAME&#xD;&#xA;&#x9;,CV.DESCRIPTION AS STATUS&#xD;&#xA;&#x9;,FORMAT( PA.START_DATE,'MM/dd/yyyy') AS START_DATE&#xD;&#xA;&#x9;,FORMAT(PA.END_DATE,'MM/dd/yyyy') AS END_DATE&#xD;&#xA;&#x9;,PY.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;,BO.DESCRIPTION AS BENEFIT_OPTION&#xD;&#xA;&#x9;--,BA.BENEFIT_APPLICATION_ID&#xD;&#xA;&#x9;--,BA.ACTION_STATUS_VALUE&#xD;&#xA; FROM&#xD;&#xA;(&#xD;&#xA;&#x9;&#x9;Select OPACC.PERSON_ID as 'PERSLink_ID', PER.FIRST_NAME, PER.LAST_NAME,OPACC.PLAN_ID, PLA.PLAN_NAME from SGT_PERSON_ACCOUNT OPACC&#xD;&#xA;&#x9;&#x9;INNER JOIN&#xD;&#xA;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;select PACC.PERSON_ID,PACC.PLAN_ID,PACC.PERSON_ACCOUNT_ID from SGT_PAYEE_ACCOUNT PA  &#xD;&#xA;&#x9;&#x9;inner join SGT_PAYEE_ACCOUNT_STATUS SPAS&#xD;&#xA;&#x9;&#x9;on PA.PAYEE_ACCOUNT_ID = SPAS.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGS_CODE_VALUE CODE&#xD;&#xA;&#x9;&#x9;ON spas.STATUS_ID=CODE.CODE_ID AND spas.STATUS_VALUE=CODE.CODE_VALUE&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_APPLICATION BA  &#xD;&#xA;&#x9;&#x9;ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA &#xD;&#xA;&#x9;&#x9;ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;&#x9;&#x9;and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' &#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT PACC &#xD;&#xA;&#x9;&#x9;ON PACC.PERSON_ACCOUNT_ID= BAPA.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;where ACCOUNT_RELATION_VALUE = 'memb'&#xD;&#xA;&#x9;&#x9;and (spas.SUSPENSION_STATUS_REASON_VALUE = 'RTNW' or spas.TERMINATED_STATUS_REASON_VALUE = 'RTNW')&#xD;&#xA;&#x9;&#x9;AND CODE.DATA2 ='SPND'&#xD;&#xA;&#x9;&#x9;AND  SPAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  )&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;) AS SUSPPA&#xD;&#xA;&#x9;&#x9;ON OPACC.PLAN_ID=SUSPPA.PLAN_ID AND OPACC.PERSON_ID=SUSPPA.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON PER&#xD;&#xA;&#x9;&#x9;ON PER.PERSON_ID=OPACC.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PLAN PLA ON OPACC.PLAN_ID = PLA.PLAN_ID&#xD;&#xA;&#x9;&#x9;GROUP BY OPACC.PLAN_ID,OPACC.PERSON_ID,PER.FIRST_NAME, PER.LAST_NAME, PLA.PLAN_NAME&#xD;&#xA;&#x9;&#x9;HAVING COUNT(*) &gt;1&#xD;&#xA;&#x9;&#x9;UNION ALL&#xD;&#xA;&#x9;&#x9;Select OPACC.PERSON_ID as 'PERSLink ID', PER.FIRST_NAME , PER.LAST_NAME ,OPACC.PLAN_ID, PLA.PLAN_NAME from SGT_PERSON_ACCOUNT OPACC&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON PER&#xD;&#xA;&#x9;&#x9;ON PER.PERSON_ID=OPACC.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PLAN PLA ON OPACC.PLAN_ID = PLA.PLAN_ID&#xD;&#xA;&#x9;&#x9;WHERE OPACC.PLAN_PARTICIPATION_STATUS_VALUE ='RTRD'&#xD;&#xA;&#x9;&#x9;GROUP BY OPACC.PLAN_ID,OPACC.PERSON_ID,PER.FIRST_NAME, PER.LAST_NAME, PLA.PLAN_NAME&#xD;&#xA;&#x9;&#x9;HAVING COUNT(*) &gt;1&#xD;&#xA;) AS TBL&#xD;&#xA;INNER JOIN SGT_PLAN PL ON PL.PLAN_ID = TBL.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA ON PA.PERSON_ID = TBL.PERSLink_ID AND PA.PLAN_ID = TBL.PLAN_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV ON CV.CODE_ID = PA.PLAN_PARTICIPATION_STATUS_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND CV.CODE_VALUE = PA.PLAN_PARTICIPATION_STATUS_VALUE&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA ON BAPA.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA  &#x9;ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' &#xD;&#xA;LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PY ON BA.BENEFIT_APPLICATION_ID = PY.APPLICATION_ID &#xD;&#xA;LEFT OUTER JOIN SGS_CODE_VALUE BO ON BO.CODE_ID = BA.BENEFIT_OPTION_ID AND BO.CODE_VALUE = BA.BENEFIT_OPTION_VALUE&#xD;&#xA;WHERE ISNULL(BA.ACTION_STATUS_VALUE,'') &lt;&gt; 'CANC'&#xD;&#xA;ORDER BY PERSLink_ID">
      <parameters />
    </query>
    <query ID="FinalDuesWithholdingReportDisburse" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--Added BATCH_REQUEST_ID in where clause and removed schedule id from that. Added following properties for getting batch request id.&#xD;&#xA;&#xD;&#xA;SELECT ORG_NAME AS ORGANIZATION_NAME, ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') AS LAST_NAME, &#xD;&#xA; FIRST_NAME, RIGHT(SSN,4) SSN, SUM(PRP.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS DUES_AMOUNT, PER.PERSON_ID&#xD;&#xA; FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PROVIDER_REPORT_PAYMENT PRP ON SUBSYSTEM_REF_ID = PHD.PAYMENT_HISTORY_DETAIL_ID &#xD;&#xA;     AND SUBSYSTEM_ID = 349 AND SUBSYSTEM_VALUE IN ('PMNT', 'PRCB')&#xD;&#xA; INNER JOIN DBO.SGT_ORGANIZATION(NOLOCK) ORG ON PRP.PROVIDER_ORG_ID = ORG.ORG_ID &#xD;&#xA; INNER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;WHERE &#xD;&#xA;PRP.BATCH_REQUEST_ID = @BATCHREQUESTID and&#xD;&#xA;   UPPER(CHECK_COMPONENT_DESCRIPTION) = 'DUES'  &#xD;&#xA;   and  per.PERSON_ID = prp.person_id  &#xD;&#xA;GROUP BY ORG_NAME, LAST_NAME, FIRST_NAME, RIGHT(SSN,4), MIDDLE_NAME, PER.PERSON_ID&#xD;&#xA;--ORDER BY ORG_NAME, LAST_NAME&#xD;&#xA;&#xD;&#xA;union all&#xD;&#xA;&#xD;&#xA;SELECT ORG_NAME AS ORGANIZATION_NAME, ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') AS LAST_NAME, &#xD;&#xA; FIRST_NAME, RIGHT(SSN,4) SSN, SUM(PRP.AMOUNT*PIT.ITEM_TYPE_DIRECTION) AS DUES_AMOUNT, PER.PERSON_ID &#xD;&#xA; FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN SGT_PAYMENT_BENEFIT_OVERPAYMENT_HEADER (NOLOCK) PHH ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_BENEFIT_OVERPAYMENT_DETAIL(NOLOCK) PHD ON PHH.BENEFIT_OVERPAYMENT_ID  = PHD.BENEFIT_OVERPAYMENT_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN SGT_PROVIDER_REPORT_PAYMENT PRP ON SUBSYSTEM_REF_ID = PHD.BENEFIT_OVERPAYMENT_DETAIL_ID &#xD;&#xA;     AND SUBSYSTEM_ID = 349 AND SUBSYSTEM_VALUE IN ( 'PRCB')&#xD;&#xA; INNER JOIN DBO.SGT_ORGANIZATION(NOLOCK) ORG ON PRP.PROVIDER_ORG_ID = ORG.ORG_ID &#xD;&#xA; INNER JOIN DBO.SGT_PERSON(NOLOCK) PER ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;WHERE &#xD;&#xA;PRP.BATCH_REQUEST_ID = @BATCHREQUESTID AND&#xD;&#xA;  UPPER(CHECK_COMPONENT_DESCRIPTION) = 'DUES' &#xD;&#xA;  and per.PERSON_ID = prp.person_id  &#xD;&#xA; GROUP BY ORG_NAME, LAST_NAME, FIRST_NAME, RIGHT(SSN,4), MIDDLE_NAME, PER.PERSON_ID &#xD;&#xA;ORDER BY ORG_NAME, LAST_NAME">
      <parameters>
        <parameter ID="@BATCHREQUESTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptEscheatToStateReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;&#x9;'IN-05' AS IN_FIVE, P.LAST_NAME + ', ' + P.FIRST_NAME + ' ' + P.MIDDLE_NAME as RECIPIENT_NAME, &#xD;&#xA;     isnull(TEMP.ADDR_LINE_1,'')+ ', ' + isnull(TEMP.ADDR_LINE_2,'') +', '+&#xD;&#xA;     isnull(TEMP.ADDR_CITY,'')+ ', ' + isnull(TEMP.ADDR_STATE_VALUE,'') +', ' + isnull(TEMP.ADDR_ZIP_CODE,'') +'-'+&#xD;&#xA;     isnull(TEMP.ADDR_ZIP_4_CODE,'') AS RECIPIENT_ADDRESS,&#xD;&#xA;P.SSN,PHD.NET_AMOUNT,PHD.PERSON_ID,PHD.CHECK_NUMBER, PHH2.PAYMENT_DATE AS PAY_CHECK_DATE &#xD;&#xA;FROM &#xD;&#xA;SGT_PAYMENT_HISTORY_DISTRIBUTION  PHD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK) ON PHH.OLD_PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;INNER JOIN SGT_PERSON P WITH(NOLOCK) ON PHD.PERSON_ID = P.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH WITH(NOLOCK) ON PHDSH.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;AND PHDSH.DISTRIBUTION_STATUS_VALUE = 'COTS'&#xD;&#xA;INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH2 ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH2.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;LEFT JOIN &#xD;&#xA;(&#xD;&#xA;     SELECT &#xD;&#xA;           ROW_NUMBER() OVER (PARTITION BY PA.PERSON_ID ORDER BY &#xD;&#xA;        CASE WHEN ADDRESS_TYPE_VALUE = 'TEMP' AND ( CONVERT(DATETIME,PA.START_DATE,101) &lt;= CONVERT(DATETIME,GETDATE(),101) &#xD;&#xA;                                                    AND CONVERT(DATETIME, ISNULL(PA.END_DATE,'99991231'),101) &gt;= CONVERT(DATETIME,GETDATE(),101)) THEN 0&#xD;&#xA;            WHEN ADDRESS_TYPE_VALUE = 'PERM' AND (PA.END_DATE IS NULL) THEN 1&#xD;&#xA;            WHEN ADDRESS_TYPE_VALUE = 'PERM' AND PA.END_DATE IS NOT NULL THEN 2&#xD;&#xA;            ELSE 3&#xD;&#xA;        END, PA.END_DATE DESC) AS SR_NO,&#xD;&#xA;            PA.* &#xD;&#xA;FROM SGT_PERSON_ADDRESS PA WITH(NOLOCK) &#xD;&#xA;) TEMP ON P.PERSON_ID = TEMP.PERSON_ID &#xD;&#xA;WHERE TEMP.SR_NO = 1&#xD;&#xA;AND PHD.DISTRIBUTION_STATUS_VALUE = 'CPIS'&#xD;&#xA;AND PHH.PAYMENT_DATE BETWEEN @FROM_DATE AND ISNULL(@TO_DATE, GETDATE())&#xD;&#xA;ORDER BY P.PERSON_ID">
      <parameters>
        <parameter ID="@FROM_DATE" sfwDataType="DateTime" />
        <parameter ID="@TO_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountByPersonAccountId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;&#x9;PA.*&#xD;&#xA;FROM &#xD;&#xA;&#x9;SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) ON PA.APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID AND ISNULL(BAPA.IS_APPLICATION_PERSON_ACCOUNT_FLAG,'') = 'Y'&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE   &#xD;&#xA; WHERE PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (&#xD;&#xA;&#x9;SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;&#x9;FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)&#xD;&#xA;&#x9;WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;AND CV.DATA2 != 'CNLD' &#xD;&#xA;AND BAPA.PERSON_ACCOUNT_ID = @PERSONACCOUNTID &#xD;&#xA;AND &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;((@BENOPTION = -999) AND ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' AND ISNULL(PA.RHIC_EE_AMOUNT_REFUND_FLAG, 'N') = 'N') OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DISA', 'RETR')))) &#xD;&#xA;&#x9;&#x9;OR (@BENOPTION = -998 AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DETH') OR&#xD;&#xA;&#x9;&#x9;(@BENOPTION = -997 AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'PSTD')&#xD;&#xA;&#xD;&#xA;&#x9;) AND ISNULL(PA.PAYEE_PERSLINK_ID, 0) &gt; 0&#xD;&#xA;ORDER BY PA.PAYEE_ACCOUNT_ID DESC">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@BENOPTION" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountWithOutstandingStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('TEMP_OUTSTANDING_PAYEES') IS NOT NULL&#xD;&#xA;  DROP TABLE TEMP_OUTSTANDING_PAYEES   &#xD;&#xA;&#xD;&#xA;;WITH CONSECUTIVE_MONTH AS&#xD;&#xA;(      SELECT &#xD;&#xA;              /* finding two consecutive payments Outstanding by payment date get month Start date same for all instances */&#xD;&#xA;              DATEADD(m, DATEDIFF(m, 0, DATEADD(m, -1 * ROW_NUMBER() OVER(PARTITION BY PHH.PAYEE_ACCOUNT_ID ORDER BY PHH.PAYMENT_DATE), PHH.PAYMENT_DATE)), 0) AS Month_Start_Date&#xD;&#xA;              ,PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;       FROM          SGT_PAYMENT_HISTORY_HEADER PHH WITH(NOLOCK)&#xD;&#xA;       INNER JOIN    SGT_PAYMENT_HISTORY_DISTRIBUTION PHD WITH(NOLOCK) ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;                           AND PHH.PAYMENT_DATE &lt; CONVERT(DATE,GETDATE() - DAY(GETDATE()) + 1)  /*PAYMENT_DATE &lt; current month =&gt; exclude the payment for the current month*/     &#xD;&#xA;       WHERE  STATUS_VALUE = 'OUST' AND OLD_PAYMENT_HISTORY_HEADER_ID IS NULL      &#xD;&#xA;       AND NOT EXISTS(      &#xD;&#xA;                           /*an account that's already been suspended due to uncashed checks*/&#xD;&#xA;                           SELECT TOP 1 1 FROM SGT_PERSON_ACCOUNT PA WITH(NOLOCK) &#xD;&#xA;                           WHERE PA.PERSON_ID = PHH.PERSON_ID AND PA.PLAN_ID = PHH.PLAN_ID AND PA.PLAN_PARTICIPATION_STATUS_VALUE = 'SUS2'&#xD;&#xA;                     ) &#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT PHH.PAYEE_ACCOUNT_ID AS PAYEE_ACCOUNT_ID, COUNT(PHH.PAYEE_ACCOUNT_ID) AS PAYEE_ACCOUNT_COUNT &#xD;&#xA;INTO   TEMP_OUTSTANDING_PAYEES&#xD;&#xA;FROM   CONSECUTIVE_MONTH PHH&#xD;&#xA;GROUP BY PHH. Month_Start_Date, PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;HAVING COUNT(PHH.PAYEE_ACCOUNT_ID) &gt; 1&#xD;&#xA;&#xD;&#xA;SELECT * FROM TEMP_OUTSTANDING_PAYEES TEMP WITH (NOLOCK)">
      <parameters />
    </query>
    <query ID="InsertWorkflowRequestForProcess359" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @PROCESSID INT&#xD;&#xA;SELECT @PROCESSID = PROCESS_ID FROM SGW_BPM_PROCESS (nolock) WHERE CASE_ID IN (&#x9;SELECT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TOP 1 CASE_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SGW_BPM_CASE (nolock)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;[NAME] like '%SuspendBenefitsUncashedChecks%' AND &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EFFECTIVE_DATE &lt;= @TODAYDATE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EFFECTIVE_DATE DESC&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO SGW_BPM_REQUEST&#xD;&#xA;( &#xD;&#xA;PROCESS_ID, &#xD;&#xA;REFERENCE_ID, &#xD;&#xA;PERSON_ID, &#xD;&#xA;STATUS_ID,&#xD;&#xA;STATUS_VALUE,&#xD;&#xA; SOURCE_ID,&#xD;&#xA;SOURCE_VALUE,&#xD;&#xA; CREATED_BY, &#xD;&#xA; CREATED_DATE,&#xD;&#xA;  MODIFIED_BY, &#xD;&#xA;  MODIFIED_DATE,&#xD;&#xA;   UPDATE_SEQ&#xD;&#xA;)&#xD;&#xA;SELECT &#xD;&#xA;&#x9;@PROCESSID AS PROCESS_ID,&#xD;&#xA;&#x9;PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;&#x9;PA.PAYEE_PERSLINK_ID,&#xD;&#xA;&#x9;7026 as STATUS_ID,&#xD;&#xA;&#x9;'UNPC'as STATUS_VALUE,&#xD;&#xA;&#x9;2021 AS SOURCE_ID,&#xD;&#xA;&#x9;'BTCH' AS SOURCE_VALUE,&#xD;&#xA;&#x9;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) CREATED_BY,&#xD;&#xA;&#x9;@TODAYDATE CREATED_DATE,&#xD;&#xA;&#x9;'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) MODIFIED_BY,&#xD;&#xA;&#x9;@TODAYDATE MODIFIED_DATE,&#xD;&#xA;&#x9;0 UPDATE_SEQ &#xD;&#xA;&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK) WHERE PA.PAYEE_ACCOUNT_ID IN (&#xD;&#xA;&#x9;&#x9;&#x9;SELECT PAYEE_ACCOUNT_ID FROM TEMP_OUTSTANDING_PAYEES )&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID('TEMP_OUTSTANDING_PAYEES') IS NOT NULL&#xD;&#xA; DROP TABLE TEMP_OUTSTANDING_PAYEES">
      <parameters>
        <parameter ID="@TODAYDATE" sfwDataType="DateTime" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRetirementPayeeAccount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;PA.PAYEE_ACCOUNT_ID,&#xD;&#xA;PA.BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;CV1.DESCRIPTION AS benefit_account_type_description,&#xD;&#xA;P.PLAN_NAME AS istrPlanName,&#xD;&#xA;PA.BENEFIT_OPTION_ID,&#xD;&#xA;PA.BENEFIT_OPTION_VALUE,&#xD;&#xA;CV2.DESCRIPTION AS benefit_option_description&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA&#xD;&#xA;INNER JOIN SGT_BENEFIT_APPLICATION BA ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID&#xD;&#xA;INNER JOIN SGT_PLAN P ON P.PLAN_ID = BA.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS ON PA.PAYEE_ACCOUNT_ID = PAS.PAYEE_ACCOUNT_ID&#xD;&#xA;AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (NOLOCK)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC)&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV1 ON CV1.CODE_ID = PA.BENEFIT_ACCOUNT_TYPE_ID AND CV1.CODE_VALUE = PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV2 ON CV2.CODE_ID = PA.BENEFIT_OPTION_ID AND CV2.CODE_VALUE = PA.BENEFIT_OPTION_VALUE&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV3 ON CV3.CODE_ID = PAS.STATUS_ID AND CV3.CODE_VALUE = PAS.STATUS_VALUE&#xD;&#xA;WHERE (CV3.DATA2 = 'RECV' OR CV3.DATA2 = 'APRD')&#xD;&#xA;AND PA.PAYEE_PERSLINK_ID = @PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="QueryHighRiskNewPayees" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE  @LASTPAYMENTDATE DATETIME&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;SELECT TOP 1 @LASTPAYMENTDATE = EFFECTIVE_DATE   &#xD;&#xA;&#x9;FROM&#x9;SGT_PAYMENT_SCHEDULE WITH(NOLOCK) &#xD;&#xA;&#x9;WHERE&#x9;SCHEDULE_TYPE_VALUE  = 'MTLY' &#xD;&#xA;&#x9;AND&#x9;&#x9;STATUS_VALUE = 'PRCD' &#xD;&#xA;&#x9;AND&#x9;&#x9;PAYMENT_DATE &lt; @PAYMENTDATE&#xD;&#xA;&#x9;ORDER BY PAYMENT_DATE DESC&#xD;&#xA;&#xD;&#xA;SELECT&#x9;  REP.PERSLINK_ID,REP.PAYEE_ACCOUNT_ID, REP.LAST_NAME&#xD;&#xA;INTO&#x9;#TEMPTABLE&#xD;&#xA;FROM&#xD;&#xA;(&#xD;&#xA;&#x9;SELECT&#x9;PAYEE_ACCOUNT_ID,ISNULL(PERSON_ID,ORG.ORG_CODE) AS PERSLINK_ID, LEFT(SSN,3)+'-'+SUBSTRING(SSN,4,2)+'-'+RIGHT(SSN,4) AS SSN, FIRST_NAME, &#xD;&#xA;&#x9;&#x9;&#x9;CASE WHEN PERSON_ID IS NULL THEN ORG.ORG_NAME&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') END AS LAST_NAME, RETIREMENT_DATE&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;FROM &#xD;&#xA;&#x9;(&#xD;&#xA;&#x9;&#x9;SELECT&#x9;PAYEE_ACCOUNT_ID,PAYEE_PERSLINK_ID,RETIREMENT_DATE,PAYEE_ORG_ID&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;FROM &#xD;&#xA;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;PA.PAYEE_ACCOUNT_ID,PA.PAYEE_PERSLINK_ID, BA.RETIREMENT_DATE, PA.PAYEE_ORG_ID&#x9;&#x9;&#x9;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;SGT_PAYEE_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPI WITH(NOLOCK) ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN SGT_BENEFIT_ACCOUNT BAC WITH(NOLOCK) ON PA.BENEFIT_ACCOUNT_ID = BAC.BENEFIT_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT DISTINCT A.PAYEE_ACCOUNT_ID from SGT_PAYMENT_HISTORY_HEADER  A WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN SGT_PAYMENT_SCHEDULE B WITH(NOLOCK) ON A.PAYMENT_SCHEDULE_ID = B.PAYMENT_SCHEDULE_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE A.PAYMENT_DATE &lt;= @LASTPAYMENTDATE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND isnull(B.SCHEDULE_TYPE_VALUE,'MTLY') =  'MTLY'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;-- take all old payments before the last payment date and make sure no payments are made earlier&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;) PREVPHH&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ON PREVPHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE CV.DATA2 = 'APRD' AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;&#x9;&#x9;&#x9;   AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;&#x9;&#x9;&#x9;   AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;&#x9;&#x9;&#x9;   AND PREVPHH.PAYEE_ACCOUNT_ID IS NULL  -- he should not have got any payment previously&#xD;&#xA;&#x9;&#x9;&#x9;  --COND: 1,2,3,4&#xD;&#xA;&#x9;&#x9;&#x9;   AND ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD'))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;   AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;&#x9;&#x9;&#x9;   AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY PA.PAYEE_ACCOUNT_ID,PA.PAYEE_PERSLINK_ID, RETIREMENT_DATE, (BAC.STARTING_NONTAXABLE_AMOUNT+BAC.STARTING_TAXABLE_AMOUNT), MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;,PA.ACCOUNT_RELATION_VALUE, PA.PAYEE_ORG_ID&#xD;&#xA;    &#xD;&#xA;&#x9;&#x9;  UNION ALL&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;PA.PAYEE_ACCOUNT_ID,PA.PAYEE_PERSLINK_ID, BA.RETIREMENT_DATE, PA.PAYEE_ORG_ID&#x9;&#x9;&#x9;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;SGT_PAYEE_ACCOUNT PA&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE PAPI WITH(NOLOCK) ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT WITH(NOLOCK) ON PIT.PAYMENT_ITEM_TYPE_ID = PAPI.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN SGT_BENEFIT_ACCOUNT BAC WITH(NOLOCK) ON PA.BENEFIT_ACCOUNT_ID = BAC.BENEFIT_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT DISTINCT A.PAYEE_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;SGT_PAYMENT_HISTORY_HEADER  A WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN SGT_PAYMENT_SCHEDULE B WITH(NOLOCK) ON A.PAYMENT_SCHEDULE_ID = B.PAYMENT_SCHEDULE_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE A.PAYMENT_DATE &lt;= @LASTPAYMENTDATE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND isnull(B.SCHEDULE_TYPE_VALUE,'MTLY') =  'MTLY'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- take all old payments before the last payment date and make sure no payments are made earlier&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;) PREVPHH&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ON PREVPHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE CV.DATA2 = 'APRD' AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(SELECT&#x9;&#x9;TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND&#x9;PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND PREVPHH.PAYEE_ACCOUNT_ID IS NULL  -- he should not have got any payment previously&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;--COND: 1,2,3,4&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND ((PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;OR PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;OR (PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') AND PA.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD'))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY PA.PAYEE_ACCOUNT_ID,PA.PAYEE_PERSLINK_ID, RETIREMENT_DATE, (BAC.STARTING_NONTAXABLE_AMOUNT+BAC.STARTING_TAXABLE_AMOUNT), MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;,PA.ACCOUNT_RELATION_VALUE, PA.PAYEE_ORG_ID&#xD;&#xA;&#x9;&#x9;)TEMP&#xD;&#xA;&#x9;&#x9;GROUP BY PAYEE_ACCOUNT_ID,PAYEE_PERSLINK_ID,RETIREMENT_DATE,PAYEE_ORG_ID&#xD;&#xA;&#x9;&#x9;--,MINIMUM_GUARANTEE_AMOUNT,ACCOUNT_BALANCE,INDICATOR&#xD;&#xA;  &#xD;&#xA;&#x9;UNION ALL&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;SELECT&#x9;PA.PAYEE_ACCOUNT_ID,PA.PAYEE_PERSLINK_ID, BA.RETIREMENT_DATE, PA.PAYEE_ORG_ID&#x9;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9;FROM SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xD;&#xA;&#x9;&#x9;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE &#xD;&#xA;&#x9;&#x9;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) &#xD;&#xA;&#x9;&#x9;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID  &#xD;&#xA;&#x9;&#x9;LEFT OUTER JOIN SGT_BENEFIT_DRO_APPLICATION DROA WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;   ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA;&#x9;&#x9;LEFT OUTER JOIN SGT_BENEFIT_ACCOUNT BAC WITH(NOLOCK) ON PA.BENEFIT_ACCOUNT_ID = BAC.BENEFIT_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;WHERE (CV.DATA2 = 'APRD')  &#xD;&#xA;&#x9;&#x9;&#x9;AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;&#x9;&#x9;&#x9;( &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;AND&#x9;&#x9;PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;&#x9;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE &#xD;&#xA;&#x9;&#x9;  AND PA.BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;&#x9;&#x9;  AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt; @PAYMENTDATE) &#xD;&#xA;&#x9;&#x9;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL') &#xD;&#xA;&#x9;&#x9;  AND (BA.PLAN_ID = 7 OR DROA.PLAN_ID = 7 OR BA.PLAN_ID = 28 OR DROA.PLAN_ID = 28)&#xD;&#xA;&#x9; ) MA &#xD;&#xA;&#x9; LEFT OUTER JOIN SGT_PERSON PER WITH(NOLOCK) ON MA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;&#x9; LEFT OUTER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON MA.PAYEE_ORG_ID = ORG.ORG_ID&#xD;&#xA;&#x9; --ORDER BY LAST_NAME, FIRST_NAME, SSN&#xD;&#xA;) REP ORDER BY REP.PERSLINK_ID &#xD;&#xA;&#xD;&#xA;SELECT T.* FROM&#x9;#TEMPTABLE T&#xD;&#xA;&#x9;JOIN SGT_PERSON_TFFR_TIAA_SERVICE SPTTS WITH(NOLOCK)&#xD;&#xA;&#x9;ON SPTTS.PERSON_ID = T.PERSLINK_ID&#xD;&#xA;UNION ALL&#xD;&#xA;&#x9;SELECT T.* FROM&#x9;#TEMPTABLE T&#xD;&#xA;&#x9;JOIN &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;SELECT PERSON_ID FROM SGT_PERSON_ACCOUNT A  WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;JOIN SGT_PLAN P  WITH(NOLOCK) ON A.PLAN_ID = P.PLAN_ID AND P.BENEFIT_TYPE_VALUE = 'RETR'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE A.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1', 'RTRD', 'SUS2')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;HAVING COUNT(*) &gt; 1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)AS SPA&#xD;&#xA;&#x9;ON SPA.PERSON_ID = T.PERSLINK_ID &#x9;&#xD;&#xA;UNION ALL&#xD;&#xA;&#x9;SELECT T.* FROM&#x9;#TEMPTABLE T&#xD;&#xA;&#x9;JOIN SGT_BENEFIT_DRO_APPLICATION SBDA WITH(NOLOCK)&#xD;&#xA;&#x9;ON SBDA.MEMBER_PERSLINK_ID = T.PERSLINK_ID &#xD;&#xA;&#x9;AND SBDA.DRO_STATUS_VALUE IN ('APRD','PDNF','QLFD','RCVD')&#xD;&#xA;UNION ALL&#xD;&#xA;&#x9;SELECT T.* FROM&#x9;#TEMPTABLE T&#xD;&#xA;&#x9;JOIN SGT_BENEFIT_DRO_APPLICATION SBDA WITH(NOLOCK)&#xD;&#xA;&#x9;ON SBDA.ALTERNATE_PAYEE_PERSLINK_ID  = T.PERSLINK_ID&#xD;&#xA;&#x9;AND SBDA.DRO_STATUS_VALUE IN ('APRD','PDNF','QLFD','RCVD')&#xD;&#xA;&#xD;&#xA;DROP TABLE #TEMPTABLE">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptPopupPayeeAccount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  DISTINCT&#xD;&#xA;&#x9;&#x9;SCI.PERSON_ID AS 'PERSLink_ID'&#xD;&#xA;&#x9;&#x9;,sgt_person_base.FIRST_NAME AS 'First_Name'&#xD;&#xA;&#x9;&#x9;,sgt_person_base.LAST_NAME AS 'Last_Name'&#xD;&#xA;&#x9;&#x9;,CONVERT(INT,ISNULL(SCIP.PARAMETER_VALUE,'0')) as contact_ticket_id&#xD;&#xA;&#x9;&#x9;,CONVERT(VARCHAR(10), SPI.CREATED_DATE, 101) AS 'Process_Created_Date' &#xD;&#xA;&#x9;&#x9;,CONVERT(VARCHAR(10), SPI.MODIFIED_DATE,101) AS 'Process_Modified_Date' &#xD;&#xA;FROM&#xD;&#xA;&#x9;&#x9;SGW_BPM_PROCESS SP WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGW_BPM_PROCESS_INSTANCE SPI WITH(NOLOCK) ON SP.PROCESS_ID = SPI.PROCESS_ID AND SP.[NAME] = 'Popup Payee Account'&#xD;&#xA;INNER JOIN SGW_BPM_CASE_INSTANCE SCI WITH(NOLOCK) ON SPI.CASE_INSTANCE_ID = SCI.CASE_INSTANCE_ID&#xD;&#xA;INNER JOIN SGW_BPM_CASE_INST_PARAMETER SCIP WITH(NOLOCK) ON SCIP.CASE_INSTANCE_ID=SCI.CASE_INSTANCE_ID AND SCIP.PARAMETER_NAME='contact_ticket_id'&#xD;&#xA;LEFT JOIN sgt_contact_ticket sct WITH(NOLOCK) on  CONVERT(INT,ISNULL(SCIP.PARAMETER_VALUE,'0'))  = sct.CONTACT_TICKET_ID &#xD;&#xA;INNER JOIN SGT_PERSON_BASE WITH(NOLOCK) ON SCI.PERSON_ID = SGT_PERSON_BASE.PERSON_ID&#xD;&#xA;WHERE SPI.CREATED_DATE BETWEEN @PROCESS_INSTANCE_CREATED_DATE1 AND @PROCESS_INSTANCE_CREATED_DATE2&#xD;&#xA;GROUP BY&#xD;&#xA;&#x9;&#x9;SCIP.PARAMETER_VALUE&#xD;&#xA;&#x9;&#x9;,SCI.PERSON_ID&#xD;&#xA;&#x9;&#x9;,sgt_person_base.LAST_NAME&#xD;&#xA;&#x9;&#x9;,sgt_person_base.FIRST_NAME&#xD;&#xA;&#x9;&#x9;,SPI.CREATED_DATE &#xD;&#xA;&#x9;&#x9;,SPI.MODIFIED_DATE&#xD;&#xA;ORDER BY&#xD;&#xA;&#x9;&#x9;SCI.PERSON_ID">
      <parameters>
        <parameter ID="@PROCESS_INSTANCE_CREATED_DATE1" sfwDataType="DateTime" />
        <parameter ID="@PROCESS_INSTANCE_CREATED_DATE2" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptBenefitPaymentChangeDetailsReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @SCHEDULE_ID INT&#xD;&#xA;DECLARE @LAST_PAYMENTDATE DATETIME&#xD;&#xA;DECLARE @CREATED_BY VARCHAR(50)&#xD;&#xA;&#xD;&#xA;SET @LAST_PAYMENTDATE  = DATEADD(M,-1,@PAYMENTDATE)&#xD;&#xA;&#xD;&#xA;SELECT @SCHEDULE_ID = PAYMENT_SCHEDULE_ID,@CREATED_BY = ISNULL(CREATED_BY,'') FROM SGT_PAYMENT_SCHEDULE &#xD;&#xA; WHERE STATUS_VALUE = 'PRCD' AND SCHEDULE_TYPE_VALUE = 'MTLY' AND PAYMENT_DATE = @LAST_PAYMENTDATE&#xD;&#xA;&#xD;&#xA;SELECT @SCHEDULE_ID = ISNULL(@SCHEDULE_ID,0)&#xD;&#xA;&#xD;&#xA;----- taken ID in temp table from payment history header table&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA; INTO #DIST&#xD;&#xA; FROM DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH &#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_HISTORY_DISTRIBUTION(NOLOCK) PHDN ON PHH.PAYMENT_HISTORY_HEADER_ID = PHDN.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;WHERE ISNULL(PAYMENT_SCHEDULE_ID,0) = @SCHEDULE_ID&#xD;&#xA; AND PHDN.DISTRIBUTION_STATUS_VALUE IN ('ACRD','AOTS','CLRD','COTS','RCRD','ROTS','RRCL','RROT','AVPD','RAVP','RVPD','CVPD','CSPP','RRSP')&#xD;&#xA; AND PHH.STATUS_VALUE IN ('OUST','PRCD','RPND')&#xD;&#xA; AND PAYMENT_METHOD_VALUE IN ('CHK','ACH')&#xD;&#xA;-----------------------------------&#xD;&#xA;CREATE TABLE #PREV&#xD;&#xA; (BATCH_SCHEDULE_ID INT,&#xD;&#xA; PAYEE_ACCOUNT_ID INT,&#xD;&#xA; PAYEE_PERSLINK_ID INT,&#xD;&#xA; PAYEE_ORG_ID INT,&#xD;&#xA; PAYMENT_ITEM_TYPE_ID INT,&#xD;&#xA; AMOUNT DECIMAL(13,2),&#xD;&#xA; PERSON_ACCOUNT_ID INT)&#xD;&#xA; --COND: 2  -- taken payee account data which are in receiving and approved status for current month and created by user or batch&#xD;&#xA; INSERT INTO #PREV&#xD;&#xA; SELECT  PAPIT.BATCH_SCHEDULE_ID AS BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PHD.PAYMENT_ITEM_TYPE_ID, SUM(PHD.AMOUNT) AS AMOUNT, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN #DIST(NOLOCK) PHDN ON PHH.PAYMENT_HISTORY_HEADER_ID = PHDN.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;   (&#xD;&#xA;    SELECT DISTINCT BATCH_SCHEDULE_ID, &#xD;&#xA;     PAYEE_ACCOUNT_ID,&#xD;&#xA;     PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;&#x9; PERSON_ACCOUNT_ID&#xD;&#xA;     FROM DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI&#xD;&#xA;     WHERE PAPI.START_DATE &lt;= @LAST_PAYMENTDATE AND &#xD;&#xA;     (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;   ) PAPIT ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;    AND PHD.PAYMENT_ITEM_TYPE_ID = PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE ISNULL(PAYMENT_SCHEDULE_ID,0) = @SCHEDULE_ID&#xD;&#xA;  AND (PHD.CREATED_BY &lt;&gt; 'CONVERSION' OR PHD.MODIFIED_BY &lt;&gt; 'CONVERSION')&#xD;&#xA;  AND CV.DATA2 IN ('RECV','APRD')&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAS1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)  &#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA;  AND ISNULL(PAPIT.PAYMENT_ITEM_TYPE_ID, 0) NOT IN (110,112)&#xD;&#xA; GROUP BY PAPIT.BATCH_SCHEDULE_ID,PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PHD.PAYMENT_ITEM_TYPE_ID, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT  PAPIT.BATCH_SCHEDULE_ID AS BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PHD.PAYMENT_ITEM_TYPE_ID, PHD.AMOUNT AS AMOUNT, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;  FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_HEADER(NOLOCK) PHH ON PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN #DIST(NOLOCK) PHDN ON PHH.PAYMENT_HISTORY_HEADER_ID = PHDN.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYMENT_HISTORY_DETAIL(NOLOCK) PHD ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;   (&#xD;&#xA;    SELECT DISTINCT BATCH_SCHEDULE_ID, &#xD;&#xA;     PAYEE_ACCOUNT_ID,&#xD;&#xA;     PAYMENT_ITEM_TYPE_ID,&#xD;&#xA;&#x9; PERSON_ACCOUNT_ID,&#xD;&#xA;&#x9; AMOUNT&#xD;&#xA;     FROM DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI&#xD;&#xA;     WHERE PAPI.START_DATE &lt;= @LAST_PAYMENTDATE AND &#xD;&#xA;     (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @LAST_PAYMENTDATE)&#xD;&#xA;   ) PAPIT ON PHH.PAYEE_ACCOUNT_ID = PAPIT.PAYEE_ACCOUNT_ID &#xD;&#xA;    AND PHD.PAYMENT_ITEM_TYPE_ID = PAPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;&#x9;AND PAPIT.AMOUNT = PHD.AMOUNT&#xD;&#xA; WHERE ISNULL(PAYMENT_SCHEDULE_ID,0) = @SCHEDULE_ID&#xD;&#xA;  AND (PHD.CREATED_BY &lt;&gt; 'CONVERSION' OR PHD.MODIFIED_BY &lt;&gt; 'CONVERSION')&#xD;&#xA;  AND CV.DATA2 IN ('RECV','APRD')&#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAS1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)  &#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA;  AND ISNULL(PAPIT.PAYMENT_ITEM_TYPE_ID, 0) IN (110,112)&#xD;&#xA; GROUP BY PAPIT.BATCH_SCHEDULE_ID,PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PHD.PAYMENT_ITEM_TYPE_ID, PHD.AMOUNT, PAPIT.PERSON_ACCOUNT_ID&#xD;&#xA;-------------------------------------------------&#xD;&#xA;SELECT MA.BATCH_SCHEDULE_ID, MA.PAYEE_ACCOUNT_ID, MA.PERSON_ID&#xD;&#xA;, ORG_CODE &#xD;&#xA; , STEP_NAME&#xD;&#xA; , ISNULL(LAST_NAME,'')+' '+ISNULL(FIRST_NAME,'')+', '+ISNULL(MIDDLE_NAME,'') AS LAST_NAME&#xD;&#xA; , FIRST_NAME&#xD;&#xA; , ORG_NAME&#xD;&#xA; , ITEM_TYPE_CODE&#xD;&#xA; , ITEM_TYPE_DESCRIPTION&#xD;&#xA; , CHECK_COMPONENT_DESCRIPTION &#xD;&#xA; , ISNULL(AFTERAMOUNT,0)* ITEM_TYPE_DIRECTION AS AFTER_AMOUNT&#xD;&#xA; , ISNULL(BEFOREAMOUNT,0)* ITEM_TYPE_DIRECTION AS BEFORE_AMOUNT&#xD;&#xA; , (ISNULL(AFTERAMOUNT,0)* ITEM_TYPE_DIRECTION) &#xD;&#xA;  - (ISNULL(BEFOREAMOUNT,0)* ITEM_TYPE_DIRECTION) AS DIFFERENCE_AMOUNT&#xD;&#xA;  ,cid,pid,PIT.ITEM_TYPE_DIRECTION&#xD;&#xA; ,PERSON_ACCOUNT_ID&#xD;&#xA; &#xD;&#xA; INTO #FINAL&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;&#xD;&#xA;--&lt;&lt;&lt;&lt; CUR MONTH PAYMENT ITEM WISE AMOUNT, OTHER THAN BATCH ITEM&#xD;&#xA;&#xD;&#xA;-- if current month payee acc id and batch schedule id is null then take prev else take current month batch schedule id&#xD;&#xA;SELECT &#xD;&#xA; CASE &#xD;&#xA;  WHEN PREV.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND PREV.BATCH_SCHEDULE_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.BATCH_SCHEDULE_ID IS NOT NULL &#xD;&#xA;  THEN CUR_PAY.BATCH_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;  WHEN PREV.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND PREV.BATCH_SCHEDULE_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.BATCH_SCHEDULE_ID IS NULL &#xD;&#xA;  THEN CUR_PAY.BATCH_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;  WHEN PREV.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND PREV.BATCH_SCHEDULE_ID IS NULL &#xD;&#xA;    AND CUR_PAY.BATCH_SCHEDULE_ID IS NOT NULL &#xD;&#xA;  THEN CUR_PAY.BATCH_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;  WHEN PREV.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.PAYEE_ACCOUNT_ID IS  NULL &#xD;&#xA;    AND PREV.BATCH_SCHEDULE_ID IS NOT NULL &#xD;&#xA;    AND CUR_PAY.BATCH_SCHEDULE_ID IS NULL &#xD;&#xA;  THEN PREV.BATCH_SCHEDULE_ID&#xD;&#xA;&#xD;&#xA;  WHEN PREV.PAYEE_ACCOUNT_ID IS NULL &#xD;&#xA;    AND CUR_PAY.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;    AND PREV.BATCH_SCHEDULE_ID IS NULL &#xD;&#xA;    AND CUR_PAY.BATCH_SCHEDULE_ID IS NOT NULL &#xD;&#xA;  THEN CUR_PAY.BATCH_SCHEDULE_ID&#xD;&#xA; END AS BATCH_SCHEDULE_ID&#xD;&#xA; , ISNULL(CUR_PAY.PAYEE_ACCOUNT_ID, PREV.PAYEE_ACCOUNT_ID) AS PAYEE_ACCOUNT_ID&#xD;&#xA; , ISNULL(CUR_PAY.PAYEE_PERSLINK_ID, PREV.PAYEE_PERSLINK_ID) AS PERSON_ID&#xD;&#xA; , ISNULL(CUR_PAY.PAYEE_ORG_ID, PREV.PAYEE_ORG_ID) AS ORG_ID&#xD;&#xA; , ISNULL(CUR_PAY.PAYMENT_ITEM_TYPE_ID, PREV.PAYMENT_ITEM_TYPE_ID) PAYMENT_ITEM_TYPE_ID&#xD;&#xA; , CUR_PAY.AMOUNT AS AFTERAMOUNT, PREV.AMOUNT AS BEFOREAMOUNT,&#xD;&#xA; PREV.BATCH_SCHEDULE_ID AS PID,&#xD;&#xA; CUR_PAY.BATCH_SCHEDULE_ID AS CID,&#xD;&#xA; PREV.PERSON_ACCOUNT_ID&#xD;&#xA; FROM &#xD;&#xA;&#xD;&#xA;(&#xD;&#xA;--COND: 1&#xD;&#xA;SELECT PAPI.BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID&#xD;&#xA; , PAPI.PAYMENT_ITEM_TYPE_ID, SUM(PAPI.AMOUNT) AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPI.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WHERE PAYMENT_SCHEDULE_ID = @SCHEDULE_ID) PHHLAST&#xD;&#xA;    ON PHHLAST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;WHERE CV.DATA2 IN ('RECV','APRD')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA; AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) NOT IN (110,112)&#xD;&#xA;GROUP BY BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PAPI.PAYMENT_ITEM_TYPE_ID, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT PAPI.BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID&#xD;&#xA; , PIT1.PAYMENT_ITEM_TYPE_ID, SUM(PAPI.AMOUNT) AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PASLAST ON PASLAST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CVLAST ON PASLAST.STATUS_ID= CVLAST.CODE_ID AND PASLAST.STATUS_VALUE = CVLAST.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PAPI.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE CV.DATA2 IN ('RECV','APRD')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND CVLAST.DATA2  = 'RECV'&#xD;&#xA; AND PASLAST.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT top 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CVX &#xD;&#xA;   ON CVX.CODE_ID = PAS1.STATUS_ID AND CVX.CODE_VALUE = PAS1.STATUS_VALUE &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @LAST_PAYMENTDATE&#xD;&#xA;   and CVX.DATA2  = 'RECV' &#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA; AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA; AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) NOT IN (110,112)&#xD;&#xA;GROUP BY BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PIT1.PAYMENT_ITEM_TYPE_ID, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PAPI.BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID&#xD;&#xA; , PAPI.PAYMENT_ITEM_TYPE_ID, PAPI.AMOUNT AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT ON PAPI.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN (SELECT DISTINCT PAYEE_ACCOUNT_ID FROM SGT_PAYMENT_HISTORY_HEADER WHERE PAYMENT_SCHEDULE_ID = @SCHEDULE_ID) PHHLAST&#xD;&#xA;    ON PHHLAST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;WHERE CV.DATA2 IN ('RECV','APRD')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA; AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID, 0) IN (110,112)&#xD;&#xA; --AND PAPI.BATCH_SCHEDULE_ID IS NULL&#xD;&#xA;GROUP BY BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PAPI.PAYMENT_ITEM_TYPE_ID, PAPI.AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;UNION ALL&#xD;&#xA;SELECT PAPI.BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID&#xD;&#xA; , PIT1.PAYMENT_ITEM_TYPE_ID, PAPI.AMOUNT AS AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;FROM DBO.SGT_PAYEE_ACCOUNT(NOLOCK) PA&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PAS ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CV ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) PASLAST ON PASLAST.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN DBO.SGS_CODE_VALUE CVLAST ON PASLAST.STATUS_ID= CVLAST.CODE_ID AND PASLAST.STATUS_VALUE = CVLAST.CODE_VALUE&#xD;&#xA; INNER JOIN DBO.SGT_PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE(NOLOCK) PAPI ON PA.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PAPI.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1&#xD;&#xA;  ON PIT.ROLLOVER_ITEM_CODE = PIT1.ITEM_TYPE_CODE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_DETAIL PARD&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ID = PAPI.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_ROLLOVER_ITEM_DETAIL PARID&#xD;&#xA;  ON PARD.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID = PARID.PAYEE_ACCOUNT_ROLLOVER_DETAIL_ID&#xD;&#xA;     AND PAPI.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID = PARID.PAYEE_ACCOUNT_PAYMENT_ITEM_TYPE_ID&#xD;&#xA;WHERE CV.DATA2 IN ('RECV','APRD')&#xD;&#xA; AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND CVLAST.DATA2  = 'RECV'&#xD;&#xA; AND PASLAST.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;  (SELECT top 1 pas1.PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock) &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CVX &#xD;&#xA;   ON CVX.CODE_ID = PAS1.STATUS_ID AND CVX.CODE_VALUE = PAS1.STATUS_VALUE &#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @LAST_PAYMENTDATE&#xD;&#xA;   and CVX.DATA2  = 'RECV' &#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA; AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA; AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE AND (PA.BENEFIT_END_DATE IS NULL OR PA.BENEFIT_END_DATE &gt;= @PAYMENTDATE)&#xD;&#xA; AND PAPI.START_DATE &lt;= @PAYMENTDATE AND (PAPI.END_DATE IS NULL OR PAPI.END_DATE &gt;= @PAYMENTDATE) &#xD;&#xA; AND PIT.ALLOW_ROLLOVER_CODE_VALUE = 'RRED'&#xD;&#xA; AND PARD.STATUS_VALUE = 'ACTV'&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBCT','DTCT','DBDC','DBTT','RGRD','AURD','REFD','SPEL')&#xD;&#xA; AND PIT.CHECK_TYPE_VALUE &lt;&gt; 'SPCK'&#xD;&#xA; AND ISNULL(PAPI.REISSUE_ITEM_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA; AND ISNULL(PAPI.PAYMENT_ITEM_TYPE_ID,0) IN (110,112)&#xD;&#xA; --AND PAPI.BATCH_SCHEDULE_ID IS NULL&#xD;&#xA;GROUP BY BATCH_SCHEDULE_ID, PA.PAYEE_ACCOUNT_ID, PAYEE_PERSLINK_ID, PAYEE_ORG_ID, PIT1.PAYMENT_ITEM_TYPE_ID, PAPI.AMOUNT, PAPI.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;) AS CUR_PAY&#xD;&#xA;-----&#xD;&#xA;FULL OUTER JOIN  &#xD;&#xA;--&lt;&lt;&lt;&lt; PREV MONTH PAYMENT ITEM WISE AMOUNT, OTHER THAN BATCH ITEM&#xD;&#xA;#PREV AS PREV &#xD;&#xA;--COND: 3&#xD;&#xA;   ON CUR_PAY.PAYEE_ACCOUNT_ID = PREV.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND CUR_PAY.PAYMENT_ITEM_TYPE_ID = PREV.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;   AND (ISNULL(CUR_PAY.PERSON_ACCOUNT_ID,0)) = (ISNULL(PREV.PERSON_ACCOUNT_ID,0)) &#xD;&#xA;--COND: 4 &amp; 5&#xD;&#xA;WHERE &#xD;&#xA;(((CUR_PAY.PAYEE_ACCOUNT_ID IS NULL OR PREV.PAYEE_ACCOUNT_ID IS NULL OR CUR_PAY.AMOUNT &lt;&gt; PREV.AMOUNT)&#xD;&#xA;)&#xD;&#xA;)&#xD;&#xA;)MA &#xD;&#xA; LEFT OUTER JOIN DBO.SGT_PERSON(NOLOCK) PER ON MA.PERSON_ID = PER.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGT_ORGANIZATION(NOLOCK) ORG ON MA.ORG_ID = ORG.ORG_ID&#xD;&#xA; INNER JOIN DBO.SGT_PAYMENT_ITEM_TYPE(NOLOCK) PIT ON MA.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; LEFT OUTER JOIN DBO.SGS_BATCH_SCHEDULE(NOLOCK)BT ON MA.BATCH_SCHEDULE_ID = BT.BATCH_SCHEDULE_ID&#xD;&#xA; ORDER BY ISNULL(MA.BATCH_SCHEDULE_ID,999999999), PERSON_ID, ORG_CODE, ITEM_TYPE_CODE&#xD;&#xA;----------------------------------------------------------------------------------------&#xD;&#xA;&#xD;&#xA;BEGIN&#xD;&#xA; SELECT  ISNULL(CAST(PERSON_ID AS VARCHAR(10)),ORG_CODE) AS PERSLINK_ID, CASE WHEN PERSON_ID IS NULL THEN ORG_NAME&#xD;&#xA; ELSE LAST_NAME END AS LAST_NAME, FIRST_NAME, ITEM_TYPE_DESCRIPTION AS ITEM_TYPE,&#xD;&#xA;  BEFORE_AMOUNT, AFTER_AMOUNT,DIFFERENCE_AMOUNT &#xD;&#xA; FROM #FINAL&#xD;&#xA; WHERE BATCH_SCHEDULE_ID IS NOT NULL&#xD;&#xA; IF OBJECT_ID('TEMP_BEN_PAY_CHANGE_PAYEE') IS NOT NULL&#xD;&#xA;  DROP TABLE TEMP_BEN_PAY_CHANGE_PAYEE&#xD;&#xA;SELECT DISTINCT PAYEE_ACCOUNT_ID INTO TEMP_BEN_PAY_CHANGE_PAYEE FROM #FINAL &#xD;&#xA;WHERE BATCH_SCHEDULE_ID IS NOT NULL&#xD;&#xA;END &#xD;&#xA;&#xD;&#xA;----Drop temp table&#xD;&#xA;DROP TABLE #DIST&#xD;&#xA;DROP TABLE #PREV&#xD;&#xA;DROP TABLE #FINAL">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadRHICRecord" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; PA.PAYEE_ACCOUNT_ID,&#xA;&#x9;PA.PAYEE_PERSLINK_ID  &#xA;FROM&#xA;&#x9; SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)  INNER   &#xA;&#x9; JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xA;&#x9; ON PA.PAYEE_ACCOUNT_ID = PAS.PAYEE_ACCOUNT_ID INNER   &#xA;&#x9; JOIN SGS_CODE_VALUE CV WITH(NOLOCK) &#xA;&#x9; ON PAS.STATUS_ID =  CV.CODE_ID AND&#xA;&#x9; PAS.STATUS_VALUE = CV.CODE_VALUE &#xA;WHERE&#xA;&#x9; PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR',&#xA;&#x9;'DISA') AND&#xA;&#x9; PA.RHIC_AMOUNT &gt; 0 AND&#xA;&#x9; CV.DATA2 IN ('RECV',&#xA;&#x9;'APRD',&#xA;&#x9;'DCRC') AND&#xA;&#x9; PAS.PAYEE_ACCOUNT_STATUS_ID =   (SELECT&#xA;&#x9; TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID    &#xA;FROM&#xA;&#x9; SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)         &#xA;WHERE&#xA;&#x9; PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID    &#xA;ORDER BY    PAS1.STATUS_EFFECTIVE_DATE DESC,&#xA;&#x9;PAS1.PAYEE_ACCOUNT_STATUS_ID DESC  )AND&#xA;&#x9; PA.PAYEE_ACCOUNT_ID NOT IN(SELECT&#xA;&#x9; PA.PAYEE_ACCOUNT_ID &#xA;FROM&#xA;&#x9; SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)    &#xA;&#x9; JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL RCD WITH(NOLOCK) &#xA;&#x9; ON PA.PAYEE_ACCOUNT_ID = RCD.DONAR_PAYEE_ACCOUNT_ID INNER   &#xA;&#x9; JOIN SGT_BENEFIT_RHIC_COMBINE RC WITH(NOLOCK) &#xA;&#x9; ON RCD.BENEFIT_RHIC_COMBINE_ID = RC.BENEFIT_RHIC_COMBINE_ID &#xA;WHERE&#xA;&#x9; RC.ACTION_STATUS_VALUE = 'APPR')UNION ALL SELECT&#xA;&#x9; PA.PAYEE_ACCOUNT_ID,&#xA;&#x9;PA.PAYEE_PERSLINK_ID  &#xA;FROM&#xA;&#x9; SGT_PAYEE_ACCOUNT PA INNER   &#xA;&#x9; JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xA;&#x9; ON PA.PAYEE_ACCOUNT_ID = PAS.PAYEE_ACCOUNT_ID INNER   &#xA;&#x9; JOIN SGS_CODE_VALUE CV WITH(NOLOCK) &#xA;&#x9; ON PAS.STATUS_ID =  CV.CODE_ID AND&#xA;&#x9; PAS.STATUS_VALUE = CV.CODE_VALUE &#xA;WHERE&#xA;&#x9; PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH',&#xA;&#x9;'PSTD') AND&#xA;&#x9; ACCOUNT_RELATION_VALUE = 'JANT' AND&#xA;&#x9; PA.RHIC_AMOUNT &gt; 0 AND&#xA;&#x9; CV.DATA2 IN ('RECV',&#xA;&#x9;'APRD',&#xA;&#x9;'DCRC') AND&#xA;&#x9; PAS.PAYEE_ACCOUNT_STATUS_ID =   (SELECT&#xA;&#x9; TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID    &#xA;FROM&#xA;&#x9; SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)         &#xA;WHERE&#xA;&#x9; PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID    &#xA;ORDER BY    PAS1.STATUS_EFFECTIVE_DATE DESC,&#xA;&#x9;PAS1.PAYEE_ACCOUNT_STATUS_ID DESC  )AND&#xA;&#x9; PA.PAYEE_ACCOUNT_ID NOT IN(SELECT&#xA;&#x9; PA.PAYEE_ACCOUNT_ID &#xA;FROM&#xA;&#x9; SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)    &#xA;&#x9; JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL RCD WITH(NOLOCK) &#xA;&#x9; ON PA.PAYEE_ACCOUNT_ID = RCD.DONAR_PAYEE_ACCOUNT_ID INNER   &#xA;&#x9; JOIN SGT_BENEFIT_RHIC_COMBINE RC WITH(NOLOCK) &#xA;&#x9; ON RCD.BENEFIT_RHIC_COMBINE_ID = RC.BENEFIT_RHIC_COMBINE_ID &#xA;WHERE&#xA;&#x9; RC.ACTION_STATUS_VALUE = 'APPR')UNION ALL SELECT&#xA;&#x9; PA.PAYEE_ACCOUNT_ID,&#xA;&#x9;BA.JOINT_ANNUITANT_PERSLINK_ID  &#xA;FROM&#xA;&#x9; SGT_PAYEE_ACCOUNT PA INNER   &#xA;&#x9; JOIN SGT_PAYEE_ACCOUNT_STATUS PAS WITH(NOLOCK) &#xA;&#x9; ON PA.PAYEE_ACCOUNT_ID = PAS.PAYEE_ACCOUNT_ID INNER   &#xA;&#x9; JOIN SGS_CODE_VALUE CV WITH(NOLOCK) &#xA;&#x9; ON PAS.STATUS_ID =  CV.CODE_ID AND&#xA;&#x9; PAS.STATUS_VALUE = CV.CODE_VALUE INNER   &#xA;&#x9; JOIN SGT_PERSON P WITH(NOLOCK) &#xA;&#x9; ON PA.PAYEE_PERSLINK_ID = P.PERSON_ID INNER   &#xA;&#x9; JOIN SGT_BENEFIT_APPLICATION BA WITH(NOLOCK) &#xA;&#x9; ON PA.APPLICATION_ID = BA.BENEFIT_APPLICATION_ID INNER   &#xA;&#x9; JOIN SGT_PERSON P1 WITH(NOLOCK) &#xA;&#x9; ON BA.JOINT_ANNUITANT_PERSLINK_ID = P1.PERSON_ID &#xA;WHERE&#xA;&#x9; PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR',&#xA;&#x9;'DISA') AND&#xA;&#x9; PA.RHIC_AMOUNT &gt; 0 AND&#xA;&#x9; CV.DATA2 IN ('TRMD') AND&#xA;&#x9; PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR',&#xA;&#x9;'DISA') AND&#xA;&#x9; (PA.BENEFIT_OPTION_VALUE &lt;&gt; 'J100' OR PA.BENEFIT_OPTION_VALUE &lt;&gt; 'J50S') AND&#xA;&#x9; P.DATE_OF_DEATH IS NOT NULL AND&#xA;&#x9; P1.DATE_OF_DEATH IS NULL AND&#xA;&#x9; BA.RHIC_OPTION_VALUE &lt;&gt; 'STRD' AND&#xA;&#x9; PAS.PAYEE_ACCOUNT_STATUS_ID =   (SELECT&#xA;&#x9; TOP 1 pas1.PAYEE_ACCOUNT_STATUS_ID    &#xA;FROM&#xA;&#x9; SGT_PAYEE_ACCOUNT_STATUS PAS1 WITH(NOLOCK)         &#xA;WHERE&#xA;&#x9; PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID    &#xA;ORDER BY    PAS1.STATUS_EFFECTIVE_DATE DESC,&#xA;&#x9;PAS1.PAYEE_ACCOUNT_STATUS_ID DESC  )AND&#xA;&#x9; BA.JOINT_ANNUITANT_PERSLINK_ID NOT IN   (SELECT&#xA;&#x9; RC.PERSON_ID   &#xA;FROM&#xA;&#x9; SGT_BENEFIT_RHIC_COMBINE RC WITH(NOLOCK)  INNER   &#xA;&#x9; JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL RCD WITH(NOLOCK) &#xA;&#x9; ON RC.BENEFIT_RHIC_COMBINE_ID = RCD.BENEFIT_RHIC_COMBINE_ID   &#xA;WHERE&#xA;&#x9; RC.ACTION_STATUS_VALUE IN ('APPR') AND&#xA;&#x9; RC.END_DATE IS NULL )">
      <parameters />
    </query>
    <query ID="LoadDroDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; * &#xA;FROM&#xA;&#x9; SGT_BENEFIT_CALCULATION BC WITH(NOLOCK) &#xA;&#x9;INNER &#xA;&#x9; JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK)&#xA;&#x9; ON PA.PERSON_ID = BC.PERSON_ID AND&#xA;&#x9; PA.PLAN_ID =  BC.PLAN_ID &#xA;&#x9;INNER &#xA;&#x9; JOIN SGT_BENEFIT_DRO_APPLICATION DRO WITH(NOLOCK)&#xA;&#x9; ON DRO.MEMBER_PERSLINK_ID = PA.PERSON_ID &#xA;WHERE&#xA;&#x9; DRO_STATUS_VALUE = 'QLFD' AND&#xA;&#x9; DRO_MODEL_VALUE IN('RDBM',&#xA;&#x9;'RJSM ') AND&#xA;&#x9; BC.BENEFIT_CALCULATION_ID =  @BENEFIT_CALCULATION_ID">
      <parameters>
        <parameter ID="@BENEFIT_CALCULATION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePullCheckFlagToN" sfwQueryType="NonQuery" sfwDataType="int" sfwSql="SELECT&#xA;&#x9;PA.PAYEE_ACCOUNT_ID, PA.PAYEE_PERSLINK_ID&#xA;INTO #TEMP&#xA;FROM SGT_PAYEE_ACCOUNT PA (nolock)&#xA;WHERE&#xA;&#x9;PA.PULL_CHECK_FLAG = 'S'&#xA;&#x9;AND (1 = CASE&#xA;&#x9;&#x9;&#x9;&#x9;WHEN (SELECT COUNT(1) FROM SGT_PERSON_ADDRESS LADD (nolock) WHERE LADD.PERSON_ID = PA.PAYEE_PERSLINK_ID &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND ((LADD.START_DATE != ISNULL(LADD.END_DATE,'99991231')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND @NEXTBENEFITPAYMENTDATE BETWEEN LADD.START_DATE AND ISNULL(LADD.END_DATE,'99991231'))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND ISNULL(LADD.UNDELIVERABLE_ADDRESS, 'N') != 'Y')) &gt; 0  THEN 1&#xA;&#x9;&#x9;&#x9;&#x9;ELSE 0 END&#xA;&#x9;OR 1 = CASE WHEN (SELECT COUNT(1) FROM SGT_PAYEE_ACCOUNT_ACH_DETAIL PACH (nolock) WHERE PACH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND @NEXTBENEFITPAYMENTDATE BETWEEN PACH.ACH_START_DATE AND ISNULL(PACH.ACH_END_DATE,'99991231') &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND PACH.ACH_START_DATE != ISNULL(PACH.ACH_END_DATE,'99991231')) &gt; 0 THEN 1&#xA;&#x9;&#x9;&#x9;ELSE 0 END)&#xA;&#xA;UPDATE SGT_PAYEE_ACCOUNT SET PULL_CHECK_FLAG = 'N' WHERE PAYEE_ACCOUNT_ID IN (SELECT PAYEE_ACCOUNT_ID FROM #TEMP)&#xA;--SELECT PULL_CHECK_FLAG, * FROM SGT_PAYEE_ACCOUNT WHERE PAYEE_ACCOUNT_ID IN (SELECT PAYEE_ACCOUNT_ID FROM #TEMP)&#xA;--SELECT * FROM SGT_PAYEE_ACCOUNT_ACH_DETAIL WHERE PAYEE_ACCOUNT_ID IN (SELECT PAYEE_ACCOUNT_ID FROM #TEMP)&#xA;--SELECT * FROM SGT_PERSON_ADDRESS WHERE PERSON_ID IN (SELECT PAYEE_PERSLINK_ID FROM #TEMP)&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@NEXTBENEFITPAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="UpdatePullCheckFlagToS" sfwQueryType="NonQuery" sfwDataType="int" sfwSql="SELECT&#xA;&#x9;PA.PAYEE_ACCOUNT_ID, PA.PAYEE_PERSLINK_ID,&#xA;&#x9;PAS.STATUS_VALUE&#xA;INTO #TEMP&#xA;FROM SGT_PAYEE_ACCOUNT PA (nolock)&#xA;INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS (nolock) ON PA.PAYEE_ACCOUNT_ID = PAS.PAYEE_ACCOUNT_ID&#xA;INNER JOIN SGS_CODE_VALUE CV1 (nolock) ON CV1.CODE_VALUE = PAS.STATUS_VALUE&#xA;WHERE&#xA;&#x9;PA.PULL_CHECK_FLAG != 'S'&#xA;&#x9;AND PAYEE_ACCOUNT_STATUS_ID  = &#xA;&#x9;&#x9;(SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xA;&#x9;&#x9;FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xA;&#x9;&#x9;WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @NEXTBENEFITPAYMENTDATE&#xA;&#x9;&#x9;ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xA;&#x9;&#x9;)&#xA;&#x9;AND CV1.DATA2 IN ('RECV', 'APRD')&#xA;&#x9;AND 1 = CASE&#xA;&#x9;&#x9;&#x9;&#x9;WHEN (SELECT COUNT(1) FROM SGT_PERSON_ADDRESS LADD (nolock) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE LADD.PERSON_ID = PA.PAYEE_PERSLINK_ID &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND ((LADD.START_DATE != ISNULL(LADD.END_DATE,'99991231')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND @NEXTBENEFITPAYMENTDATE BETWEEN LADD.START_DATE AND ISNULL(LADD.END_DATE,'99991231'))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND ISNULL(LADD.UNDELIVERABLE_ADDRESS, 'N') != 'Y')) = 0 THEN 1&#xA;&#x9;&#x9;&#x9;&#x9;ELSE 0 END&#xA;&#x9;AND 1 = CASE WHEN (SELECT COUNT(1) FROM SGT_PAYEE_ACCOUNT_ACH_DETAIL PACH (nolock) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE PACH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND @NEXTBENEFITPAYMENTDATE BETWEEN PACH.ACH_START_DATE AND ISNULL(PACH.ACH_END_DATE,'99991231') &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND PACH.ACH_START_DATE != ISNULL(PACH.ACH_END_DATE,'99991231')) = 0 THEN 1&#xA;&#x9;&#x9;&#x9;ELSE 0 END&#xA;&#xA;&#xA;UPDATE SGT_PAYEE_ACCOUNT SET PULL_CHECK_FLAG = 'S' WHERE PAYEE_ACCOUNT_ID IN (SELECT PAYEE_ACCOUNT_ID FROM #TEMP)&#xA;--SELECT PULL_CHECK_FLAG, * FROM SGT_PAYEE_ACCOUNT WHERE PAYEE_ACCOUNT_ID IN (SELECT PAYEE_ACCOUNT_ID FROM #TEMP)&#xA;--SELECT * FROM SGT_PAYEE_ACCOUNT_ACH_DETAIL WHERE PAYEE_ACCOUNT_ID IN (SELECT PAYEE_ACCOUNT_ID FROM #TEMP)&#xA;--SELECT * FROM SGT_PERSON_ADDRESS WHERE PERSON_ID IN (SELECT PAYEE_PERSLINK_ID FROM #TEMP)&#xA;&#xA;DROP TABLE #TEMP">
      <parameters>
        <parameter ID="@NEXTBENEFITPAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPayeeAccountByMemberPerslinkId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  TOP 1 A.* &#xA;FROM SGT_PAYEE_ACCOUNT A (NOLOCK)  &#xA;LEFT JOIN SGT_BENEFIT_APPLICATION B (NOLOCK) ON A.APPLICATION_ID  = B.BENEFIT_APPLICATION_ID  &#xA;WHERE A.APPLICATION_ID IS NOT NULL &#xA;AND B.MEMBER_PERSON_ID = @Member_Perslink_Id&#xA;ORDER BY A.PAYEE_ACCOUNT_ID DESC">
      <parameters>
        <parameter ID="@Member_Perslink_Id" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="PayeeAccountId" sfwType="Column" sfwValue="payee_account_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="True" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PayeePerslinkId" sfwType="Column" sfwValue="payee_perslink_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PayeeOrgId" sfwType="Column" sfwValue="payee_org_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="ApplicationId" sfwType="Column" sfwValue="application_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="CalculationId" sfwType="Column" sfwValue="calculation_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="BenefitAccountId" sfwType="Column" sfwValue="benefit_account_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="StatusDescription" sfwType="Description" sfwValue="status_description" />
    <attribute ID="StatusId" sfwType="Column" sfwValue="status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="2213" sfwDataType="int" sfwRequired="False" />
    <attribute ID="StatusValue" sfwType="Column" sfwValue="status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="BenefitAccountTypeDescription" sfwType="Description" sfwValue="benefit_account_type_description" />
    <attribute ID="BenefitAccountTypeId" sfwType="Column" sfwValue="benefit_account_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="1904" sfwDataType="int" sfwRequired="False" />
    <attribute ID="BenefitAccountTypeValue" sfwType="Column" sfwValue="benefit_account_type_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="BenefitAccountSubTypeDescription" sfwType="Description" sfwValue="benefit_account_sub_type_description" />
    <attribute ID="BenefitAccountSubTypeId" sfwType="Column" sfwValue="benefit_account_sub_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="2201" sfwDataType="int" sfwRequired="False" />
    <attribute ID="BenefitAccountSubTypeValue" sfwType="Column" sfwValue="benefit_account_sub_type_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="PullCheckFlag" sfwType="Column" sfwValue="pull_check_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="BenefitBeginDate" sfwType="Column" sfwValue="benefit_begin_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="BenefitEndDate" sfwType="Column" sfwValue="benefit_end_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="AccountRelationDescription" sfwType="Description" sfwValue="account_relation_description" />
    <attribute ID="AccountRelationId" sfwType="Column" sfwValue="account_relation_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="2225" sfwDataType="int" sfwRequired="False" />
    <attribute ID="AccountRelationValue" sfwType="Column" sfwValue="account_relation_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="FamilyRelationDescription" sfwType="Description" sfwValue="family_relation_description" />
    <attribute ID="FamilyRelationId" sfwType="Column" sfwValue="family_relation_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="321" sfwDataType="int" sfwRequired="False" />
    <attribute ID="FamilyRelationValue" sfwType="Column" sfwValue="family_relation_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="MinimumGuaranteeAmount" sfwType="Column" sfwValue="minimum_guarantee_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="NontaxableBeginningBalance" sfwType="Column" sfwValue="nontaxable_beginning_balance" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="BenefitOptionDescription" sfwType="Description" sfwValue="benefit_option_description" />
    <attribute ID="BenefitOptionId" sfwType="Column" sfwValue="benefit_option_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="2216" sfwDataType="int" sfwRequired="False" />
    <attribute ID="BenefitOptionValue" sfwType="Column" sfwValue="benefit_option_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="RhicAmount" sfwType="Column" sfwValue="rhic_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="DroCalculationId" sfwType="Column" sfwValue="dro_calculation_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="ExclusionMethodDescription" sfwType="Description" sfwValue="exclusion_method_description" />
    <attribute ID="ExclusionMethodId" sfwType="Column" sfwValue="exclusion_method_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="2227" sfwDataType="int" sfwRequired="False" />
    <attribute ID="ExclusionMethodValue" sfwType="Column" sfwValue="exclusion_method_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="WorkflowAgeConversionFlag" sfwType="Column" sfwValue="workflow_age_conversion_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="WorkflowRuleConversionFlag" sfwType="Column" sfwValue="workflow_rule_conversion_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="RecertificationDate" sfwType="Column" sfwValue="recertification_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="IsMedicalBatchLetterSentFlag" sfwType="Column" sfwValue="is_medical_batch_letter_sent_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="IsDisabilityBatchLetterSentFlag" sfwType="Column" sfwValue="is_disability_batch_letter_sent_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="CaseRecertificationDate" sfwType="Column" sfwValue="case_recertification_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="IsRecertificationDateSetFlag" sfwType="Column" sfwValue="is_recertification_date_set_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="IsPre1991DisabilityFlag" sfwType="Column" sfwValue="is_pre_1991_disability_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="TermCertainEndDate" sfwType="Column" sfwValue="term_certain_end_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="RhicEeAmountRefundFlag" sfwType="Column" sfwValue="rhic_ee_amount_refund_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DroApplicationId" sfwType="Column" sfwValue="dro_application_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="AccountOwnerBatchInitiatedFlag" sfwType="Column" sfwValue="account_owner_batch_initiated_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="AlternatePayeeBatchInitiatedFlag" sfwType="Column" sfwValue="alternate_payee_batch_initiated_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="FirstBeneficiaryBatchInitiatedFlag" sfwType="Column" sfwValue="first_beneficiary_batch_initiated_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="LegacyAccountNo" sfwType="Column" sfwValue="legacy_account_no" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="10" />
    <attribute ID="GraduatedBenefitOptionDescription" sfwType="Description" sfwValue="graduated_benefit_option_description" />
    <attribute ID="GraduatedBenefitOptionId" sfwType="Column" sfwValue="graduated_benefit_option_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="1913" sfwDataType="int" sfwRequired="False" />
    <attribute ID="GraduatedBenefitOptionValue" sfwType="Column" sfwValue="graduated_benefit_option_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="DisaNormalEffectiveDate" sfwType="Column" sfwValue="disa_normal_effective_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="IncludeInAdhocFlag" sfwType="Column" sfwValue="include_in_adhoc_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="objPayee" sfwType="Object" sfwEntity="entPerson" sfwValue="ibusPayee" />
    <attribute ID="objMember" sfwType="Object" sfwEntity="entPerson" sfwValue="ibusMember" />
    <attribute ID="objPayeeAccountActiveStatus" sfwType="Object" sfwEntity="entPayeeAccountStatus" sfwValue="ibusPayeeAccountActiveStatus" />
    <attribute ID="objApplication" sfwType="Object" sfwEntity="entBenefitApplication" sfwValue="ibusApplication" />
    <attribute ID="objPlan" sfwType="Object" sfwEntity="entPlan" sfwValue="ibusPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecBenefitAmount" sfwValue="idecBenefitAmount" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountAchDetail" ID="lstAchDetail" sfwValue="iclbAchDetail" />
    <attribute ID="objRecipientOrganization" sfwType="Object" sfwEntity="entOrganization" sfwValue="ibusRecipientOrganization" />
    <attribute sfwDataType="string" sfwType="Property" ID="LstrPayee" sfwValue="lstrPayee" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPayee" sfwValue="istrPayee" />
    <attribute ID="objNormalBenefitCalculation" sfwType="Object" sfwEntity="entBenefitCalculation" sfwValue="ibusNormalBenefitCalculation" />
    <attribute ID="objBenefitAccount" sfwType="Object" sfwEntity="entBenefitAccount" sfwValue="ibusBenefitAccount" />
    <attribute ID="objDROCalculation" sfwType="Object" sfwEntity="entBenefitDroCalculation" sfwValue="ibusDROCalculation" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMinimumGuaranteeAmount" sfwValue="idecMinimumGuaranteeAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecNontaxableBeginningBalnce" sfwValue="idecNontaxableBeginningBalnce" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDisabilityTotalTaxableAmount" sfwValue="idecDisabilityTotalTaxableAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecStartingNontaxableAmount" sfwValue="idecStartingNontaxableAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDisabilityTotalNonTaxableAmount" sfwValue="idecDisabilityTotalNonTaxableAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDisabilityTotalAccountAmount" sfwValue="idecDisabilityTotalAccountAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecSSLIAfterChange" sfwValue="idecSSLIAfterChange" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountPaymentItemType" ID="lstMonthlyBenefits" sfwValue="iclbMonthlyBenefits" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecGrossAmount" sfwValue="idecGrossAmount" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtLastBenefitPaymentDate" sfwValue="idtLastBenefitPaymentDate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrNextBenefitPaymentDate" sfwValue="istrNextBenefitPaymentDate" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalDeductionsAmount" sfwValue="idecTotalDeductionsAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecGrossBenfitAmount" sfwValue="idecGrossBenfitAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecBalanceNontaxableAmount" sfwValue="idecBalanceNontaxableAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecExclusionAmount" sfwValue="idecExclusionAmount" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountPaymentItemType" ID="lstDeductions" sfwValue="iclbDeductions" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountTaxWithholding" ID="lstTaxWithholingHistory" sfwValue="iclbTaxWithholingHistory" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountRolloverDetail" ID="lstRolloverDetail" sfwValue="iclbRolloverDetail" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountRetroPayment" ID="lstRetroPayment" sfwValue="iclbRetroPayment" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="Idecpaidgrossamount" sfwValue="idecpaidgrossamount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="Idecpaidtaxableamount" sfwValue="idecpaidtaxableamount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="Idecpaidnontaxableamount" sfwValue="idecpaidnontaxableamount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecPaidTaxableRolloverAmount" sfwValue="idecPaidTaxableRolloverAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecPaidNonTaxableRolloverAmount" sfwValue="idecPaidNonTaxableRolloverAmount" />
    <attribute sfwType="Collection" sfwEntity="entPaymentHistoryHeader" ID="lstPaymentDetails" sfwValue="iclbPaymentDetails" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountStatus" ID="lstPayeeAccountStatus" sfwValue="iclbPayeeAccountStatus" />
    <attribute sfwType="Collection" sfwEntity="entPayment1099r" ID="lstPayment1099r" sfwValue="iclbPayment1099r" />
    <attribute sfwType="Collection" sfwEntity="entPaymentBenefitOverpaymentHeader" ID="lstPaymentBenefitOverpaymentHeader" sfwValue="iclbPaymentBenefitOverpaymentHeader" />
    <attribute sfwType="Collection" sfwEntity="entPaymentRecovery" ID="lstPaymentRecoveryWithoutBenefitOverpaymentHeader" sfwValue="iclbPaymentRecoveryWithoutBenefitOverpaymentHeader" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalTaxableAmount" sfwValue="idecTotalTaxableAmount" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountAchDetail" ID="lstActiveACHDetails" sfwValue="iclbActiveACHDetails" />
    <attribute sfwDataType="boolean" sfwType="Property" ID="IblnIsEmailAddressWaived" sfwValue="iblnIsEmailAddressWaived" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountPaymentItemType" ID="lstBenefitsOnly" sfwValue="iclbBenefitsOnly" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountPaymentItemType" ID="lstActiveDeductions" sfwValue="iclbActiveDeductions" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMSSYTDpaidgrossamount" sfwValue="idecMSSYTDpaidgrossamount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMSSYTDpaidtaxableamount" sfwValue="idecMSSYTDpaidtaxableamount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMSSYTDpaidnontaxableamount" sfwValue="idecMSSYTDpaidnontaxableamount" />
    <attribute sfwType="Collection" sfwEntity="entPaymentHistoryHeader" ID="lstPaymentDetailsThatYear" sfwValue="iclbPaymentDetailsThatYear" />
    <attribute sfwType="Collection" sfwEntity="entPaymentHistoryHeader" ID="lstMSSPaymentHistoryHeader" sfwValue="iclbMSSPaymentHistoryHeader" />
    <attribute ID="objPayeeAccountFedTaxWithholding" sfwType="Object" sfwEntity="entPayeeAccountTaxWithholding" sfwValue="ibusPayeeAccountFedTaxWithholding" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecFedTaxAmount" sfwValue="idecFedTaxAmount" />
    <attribute ID="objPayeeAccountStateTaxWithholding" sfwType="Object" sfwEntity="entPayeeAccountTaxWithholding" sfwValue="ibusPayeeAccountStateTaxWithholding" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecStateTaxAmount" sfwValue="idecStateTaxAmount" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountTaxWithholding" ID="lstFederalTaxWithholding" sfwValue="iclbFederalTaxWithholding" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountTaxWithholding" ID="lstStateTaxWithholding" sfwValue="iclbStateTaxWithholding" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecPLSOFederalTaxAmount" sfwValue="idecPLSOFederalTaxAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="BenefitBeginLongDate" sfwValue="icdoPayeeAccount.benefit_begin_long_date" />
    <attribute sfwDataType="boolean" sfwType="Property" ID="IsPLSORollovered" sfwValue="IsPLSORollovered" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecNetPLSO" sfwValue="idecNetPLSO" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecPLSONonTaxable" sfwValue="idecPLSONonTaxable" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecPLSOStateTaxAmount" sfwValue="idecPLSOStateTaxAmount" />
    <attribute ID="objBenefitCalculaton" sfwType="Object" sfwEntity="entBenefitCalculation" sfwValue="ibusBenefitCalculaton" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecPLSOTaxable" sfwValue="idecPLSOTaxable" />
    <attribute sfwDataType="string" sfwType="Property" ID="IsBenefitPayable" sfwValue="IsBenefitPayable" />
    <attribute sfwDataType="boolean" sfwType="Property" ID="IsTermCertainEndDatePastDate" sfwValue="IsTermCertainEndDatePastDate" />
    <attribute ID="objLatestPaymentHistory" sfwType="Object" sfwEntity="entPaymentHistoryHeader" sfwValue="ibusLatestPaymentHistory" />
    <attribute sfwDataType="string" sfwType="Property" ID="TermCertainLongEndDate" sfwValue="icdoPayeeAccount.term_certain_long_end_date" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecRhicAmount" sfwValue="idecRhicAmount" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccountPaymentItemType" ID="lstPAPITForCorrs" sfwValue="iclbPAPITForCorrs" />
    <attribute sfwDataType="string" sfwType="Property" ID="CurrentMonth" sfwValue="icdoPayeeAccount.Current_Month" />
    <attribute sfwDataType="string" sfwType="Property" ID="NextMonth" sfwValue="icdoPayeeAccount.Next_Month" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrMonthYearPaymentDate" sfwValue="istrMonthYearPaymentDate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrMonthYearTCEndDate" sfwValue="istrMonthYearTCEndDate" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMultiplier1" sfwValue="idecMultiplier1" />
    <attribute ID="objBenefitPostRetirementDROCalculation" sfwType="Object" sfwEntity="entBenefitPostRetirementDROCalculation" sfwValue="ibusBenefitPostRetirementDROCalculation" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrNoofMonthsFirstPaymentRepresents" sfwValue="istrNoofMonthsFirstPaymentRepresents" />
    <attribute ID="objJointAnnuitant" sfwType="Object" sfwEntity="entPerson" sfwValue="ibusJointAnnuitant" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrJSPercent" sfwValue="istrJSPercent" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecJSPayableFactor" sfwValue="idecJSPayableFactor" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberRHICAmount" sfwValue="idecMemberRHICAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecSpouseRHICAmount" sfwValue="idecSpouseRHICAmount" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintBenefitAcctSubType" sfwValue="iintBenefitAcctSubType" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecReducedBenefit" sfwValue="idecReducedBenefit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDNROIncrease" sfwValue="idecDNROIncrease" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecEarlyMonthlyPayableFactor" sfwValue="idecEarlyMonthlyPayableFactor" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecFinalAverageSalary" sfwValue="idecFinalAverageSalary" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecActurallyAdjustedBenefit" sfwValue="idecActurallyAdjustedBenefit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecGraduatedBenefit" sfwValue="idecGraduatedBenefit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecGraduatedBenefitFactor" sfwValue="idecGraduatedBenefitFactor" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMonthlyBenefit1" sfwValue="idecMonthlyBenefit1" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMonthlyBenefit2" sfwValue="idecMonthlyBenefit2" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMonthlyBenefit3" sfwValue="idecMonthlyBenefit3" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMultiplier2" sfwValue="idecMultiplier2" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMultiplier3" sfwValue="idecMultiplier3" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintHPJudgesNBCondition" sfwValue="iintHPJudgesNBCondition" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecPLSOPayableFactor" sfwValue="idecPLSOPayableFactor" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintQDROApplies" sfwValue="iintQDROApplies" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrRTWOrReducedBenefitOption" sfwValue="istrRTWOrReducedBenefitOption" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecReducedBenefitDecrease" sfwValue="idecReducedBenefitDecrease" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecSpouseBenefit" sfwValue="idecSpouseBenefit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecReducedQDROBenefit" sfwValue="idecReducedQDROBenefit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecYrsofService1" sfwValue="idecYrsofService1" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecYrsofService2" sfwValue="idecYrsofService2" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecYrsofService3" sfwValue="idecYrsofService3" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberAccountBalance" sfwValue="idecMemberAccountBalance" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberNonTaxableAmount" sfwValue="idecMemberNonTaxableAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberTaxableAmount" sfwValue="idecMemberTaxableAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecEarlyRetirementPayableFactor" sfwValue="idecEarlyRetirementPayableFactor" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintJobServiceCondition" sfwValue="iintJobServiceCondition" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTermCertainFactor" sfwValue="idecTermCertainFactor" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOptionMonthlyBenefit" sfwValue="idecOptionMonthlyBenefit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecUIFactor" sfwValue="idecUIFactor" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecLIBenefittoAgePrior" sfwValue="idecLIBenefittoAgePrior" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecLIBenefittoAgeBeg" sfwValue="idecLIBenefittoAgeBeg" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecLevelOptionSupplement" sfwValue="idecLevelOptionSupplement" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecJSMonthlyBenefit" sfwValue="idecJSMonthlyBenefit" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintJSRHICCondition" sfwValue="iintJSRHICCondition" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPlanCode" sfwValue="istrPlanCode" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintRetirementCondition" sfwValue="iintRetirementCondition" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintNoofMonths" sfwValue="iintNoofMonths" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecPLSOMonthlyBenefit" sfwValue="idecPLSOMonthlyBenefit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecEarlySingleLifeBenefit" sfwValue="idecEarlySingleLifeBenefit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHalfMonthlyBenefit" sfwValue="idecHalfMonthlyBenefit" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintSurvivingSpouseCondition" sfwValue="iintSurvivingSpouseCondition" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPayee18thBday" sfwValue="istrPayee18thBday" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrFinalPaymentDate" sfwValue="istrFinalPaymentDate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsDROTermCertain" sfwValue="istrIsDROTermCertain" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrFirstPaymentDate" sfwValue="istrFirstPaymentDate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrNumberOfPaymentsMade" sfwValue="istrNumberOfPaymentsMade" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrTaxChanges" sfwValue="istrTaxChanges" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrNextBenefitPaymentDateFormatted" sfwValue="istrNextBenefitPaymentDateFormatted" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalAccountBalance" sfwValue="idecTotalAccountBalance" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecNontaxableAmount" sfwValue="idecNontaxableAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecAFPEDuesAmount" sfwValue="idecAFPEDuesAmount" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtNextBenefitPaymentDate" sfwValue="idtNextBenefitPaymentDate" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDentalInsurancePremiumAmount" sfwValue="idecDentalInsurancePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthInsurancePremiumAmount" sfwValue="idecHealthInsurancePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecLifePremiumAmount" sfwValue="idecLifePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecLTCInsurancePremiumAmount" sfwValue="idecLTCInsurancePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMiscellaneousDueAmount" sfwValue="idecMiscellaneousDueAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecNDPEADuesAmount" sfwValue="idecNDPEADuesAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecVisionInsurancePremiumAmount" sfwValue="idecVisionInsurancePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="Idec3rdPartyHealthInsuranceAmount" sfwValue="idec3rdPartyHealthInsuranceAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecChildSupportAmount" sfwValue="idecChildSupportAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTaxLevyAmount" sfwValue="idecTaxLevyAmount" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="Idt10DaysPriorNextBenefitPaymentDate" sfwValue="idt10DaysPriorNextBenefitPaymentDate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrAssetsWithProvider" sfwValue="istrAssetsWithProvider" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDependentSupplementalCoverageAmount" sfwValue="idecDependentSupplementalCoverageAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsRHICoptionSelected" sfwValue="istrIsRHICoptionSelected" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsNoTaxOptionSelected" sfwValue="istrIsNoTaxOptionSelected" />
    <attribute sfwDataType="string" sfwType="Property" ID="IsrtProviderOrgName" sfwValue="isrtProviderOrgName" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsSpouseBeneficiary" sfwValue="istrIsSpouseBeneficiary" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsSpouseBeneficiaryOnLifePlan" sfwValue="istrIsSpouseBeneficiaryOnLifePlan" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsSpouseDeathAndMemberDependentAndSupplemental" sfwValue="istrIsSpouseDeathAndMemberDependentAndSupplemental" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsSpouseDepedentOnHealthPlan" sfwValue="istrIsSpouseDepedentOnHealthPlan" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsSpouseDepedentOnDentalPlan" sfwValue="istrIsSpouseDepedentOnDentalPlan" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsSpouseDepedentOnVisionPlan" sfwValue="istrIsSpouseDepedentOnVisionPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecSpouseSupplementalCoverageAmount" sfwValue="idecSpouseSupplementalCoverageAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrInterestAppliedForUnderpayment" sfwValue="istrInterestAppliedForUnderpayment" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMonthlyUnderPaymentAMount" sfwValue="idecMonthlyUnderPaymentAMount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IintNoOfUnderPaymentMonths" sfwValue="iintNoOfUnderPaymentMonths" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalMonthlyUnderPaymentAmount" sfwValue="idecTotalMonthlyUnderPaymentAmount" />
    <attribute ID="objRetirementDisabilityApplication" sfwType="Object" sfwEntity="entRetirementDisabilityApplication" sfwValue="ibusRetirementDisabilityApplication" />
    <attribute sfwDataType="string" sfwType="Property" ID="IsNonTaxableAmountExists" sfwValue="IsNonTaxableAmountExists" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrChangeDate" sfwValue="istrChangeDate" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOldDentalInsurancePremiumAmount" sfwValue="idecOldDentalInsurancePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecYTDDentalInsurancePremiumAmount" sfwValue="idecYTDDentalInsurancePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOldFedTaxAmount" sfwValue="idecOldFedTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecYTDFedTaxAmount" sfwValue="idecYTDFedTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOldHealthInsurancePremiumAmount" sfwValue="idecOldHealthInsurancePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecYTDHealthInsurancePremiumAmount" sfwValue="idecYTDHealthInsurancePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOldLifePremiumAmount" sfwValue="idecOldLifePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecYTDLifePremiumAmount" sfwValue="idecYTDLifePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOldMiscellaneousDueAmount" sfwValue="idecOldMiscellaneousDueAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecYTDMiscellaneousDueAmount" sfwValue="idecYTDMiscellaneousDueAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOldNDPEADuesAmount" sfwValue="idecOldNDPEADuesAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecYTDNDPEADuesAmount" sfwValue="idecYTDNDPEADuesAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOldStateTaxAmount" sfwValue="idecOldStateTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecYTDStateTaxAmount" sfwValue="idecYTDStateTaxAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOldNetAmount" sfwValue="idecOldNetAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecNetAmountYTD" sfwValue="idecNetAmountYTD" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOldNonTaxable" sfwValue="idecOldNonTaxable" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecNontaxableYTD" sfwValue="idecNontaxableYTD" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOldTaxable" sfwValue="idecOldTaxable" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTaxableYTD" sfwValue="idecTaxableYTD" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalLTDReceived" sfwValue="idecTotalLTDReceived" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOldVisionInsurancePremiumAmount" sfwValue="idecOldVisionInsurancePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecYTDVisionInsurancePremiumAmount" sfwValue="idecYTDVisionInsurancePremiumAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsBeneficiaryBlockVisible" sfwValue="istrIsBeneficiaryBlockVisible" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecOldMedicarePremiumAmount" sfwValue="idecOldMedicarePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMedicarePremiumAmount" sfwValue="idecMedicarePremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecYTDMedicarePremiumAmount" sfwValue="idecYTDMedicarePremiumAmount" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountBeneficiary" ID="lstPersonAccountBene" sfwValue="iclbPersonAccountBene" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMonthlyNormalBenefit" sfwValue="idecMonthlyNormalBenefit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMonthlySingleBenefit" sfwValue="idecMonthlySingleBenefit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecReducedMonthlyHealthCredit" sfwValue="idecReducedMonthlyHealthCredit" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecWSIorSSAReduction" sfwValue="idecWSIorSSAReduction" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintTotalBenefitMonths" sfwValue="iintTotalBenefitMonths" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrDBPlan" sfwValue="istrDBPlan" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthPremiumDeduction" sfwValue="idecHealthPremiumDeduction" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrSpouseName" sfwValue="istrSpouseName" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrSpouseSSN" sfwValue="istrSpouseSSN" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtSpouseDOB" sfwValue="idtSpouseDOB" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintBenefitType" sfwValue="iintBenefitType" />
    <attribute ID="IstEmailAddressWaived" sfwDataType="bool" sfwPrivate="False" sfwValue="iblnIsEmailAddressWaived" sfwType="Property" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="ldecMedicareInsPremiumAmount" sfwValue="idecMedicareInsPremiumAmount" />
    <attribute ID="IintIsMain2020orDC2020" sfwDataType="int" sfwPrivate="False" sfwValue="iintIsMain2020orDC2020" sfwType="Property" />
    <attribute ID="Idt30DaysfromDateofLetter" sfwDataType="datetime" sfwPrivate="False" sfwValue="idt30DaysfromDateofLetter" sfwType="Property" />
    <attribute ID="IdecTotalAmountDuefromPayee" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalAmountDuefromPayee" sfwType="Property" />
    <attribute ID="IstrPopUpMessageForCertify" sfwDataType="string" sfwPrivate="False" sfwValue="istrPopUpMessageForCertify" sfwType="Property" />
    <attribute ID="lstFutureDatedACHDetails" sfwType="Collection" sfwValue="iclbFutureDatedACHDetails" sfwEntity="entPayeeAccountAchDetail" sfwPrivate="False" />
    <attribute ID="ldecTotalTaxableAmountForVariableTax" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecTotalTaxableAmountForVariableTax" sfwType="Property" />
    <attribute ID="IdtmFedTaxEffDate" sfwDataType="datetime" sfwPrivate="False" sfwValue="idtmFedTaxEffDate" sfwType="Property" />
    <attribute ID="IdtmStateTaxEffDate" sfwDataType="datetime" sfwPrivate="False" sfwValue="idtmStateTaxEffDate" sfwType="Property" />
    <attribute ID="IdecMSSYTDTotalFederalTaxAmount" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecMSSYTDTotalFederalTaxAmount" sfwType="Property" />
    <attribute ID="IdecMSSYTDTotalNDStateTaxAmount" sfwDataType="decimal" sfwPrivate="False" sfwValue="idecMSSYTDTotalNDStateTaxAmount" sfwType="Property" />
    <attribute ID="IintFedTaxWithholdingId" sfwDataType="int" sfwPrivate="False" sfwValue="iintFedTaxWithholdingId" sfwType="Property" />
    <attribute ID="IintStateTaxWithholdingId" sfwDataType="int" sfwPrivate="False" sfwValue="iintStateTaxWithholdingId" sfwType="Property" />
    <attribute ID="FBOName" sfwDataType="string" sfwPrivate="False" sfwValue="istrFBOName" sfwType="Property" />
    <attribute ID="RolloverInstituteName" sfwDataType="string" sfwPrivate="False" sfwValue="istrRolloverInstituteName" sfwType="Property" />
    <attribute ID="RolloverAdd1" sfwDataType="string" sfwPrivate="False" sfwValue="istrRolloverAdd1" sfwType="Property" />
    <attribute ID="RolloverAdd2" sfwDataType="string" sfwPrivate="False" sfwValue="istrRolloverAdd2" sfwType="Property" />
    <attribute ID="RolloverCity" sfwDataType="string" sfwPrivate="False" sfwValue="istrRolloverCity" sfwType="Property" />
    <attribute ID="RolloverState" sfwDataType="string" sfwPrivate="False" sfwValue="istrRolloverState" sfwType="Property" />
    <attribute ID="RolloverZipCode" sfwDataType="string" sfwPrivate="False" sfwValue="istrRolloverZipCode" sfwType="Property" />
    <attribute ID="RolloverAccountNumber" sfwDataType="string" sfwPrivate="False" sfwValue="istrRolloverAccountNumber" sfwType="Property" />
    <attribute ID="objBenefitRefundCalculaton" sfwType="Object" sfwEntity="entBenefitRefundCalculation" sfwPrivate="False" sfwValue="ibusBenefitRefundCalculaton" />
    <attribute ID="IstrPullCheckFlag" sfwDataType="string" sfwPrivate="False" sfwValue="istrPullCheckFlag" sfwType="Property" />
  </attributes>
  <constraint />
  <methods />
  <lifecycle />
  <objectmethods />
  <ExtraFields />
</entity>