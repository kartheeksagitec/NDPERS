<?xml version="1.0" encoding="utf-8"?>
<entity ID="entPayment1099r" sfwMainCDO="icdoPayment1099r" sfwType="BusinessRule" sfwActive="True" sfwStatus="Review" sfwObjectID="busPayment1099r" sfwTableName="sgt_payment_1099r" sfwView="False" sfwParentEntity="entExtendBase">
  <queries>
    <query ID="CreateTableFor1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="---------------CREATING TEMP TABLE FOR 1099R TO STORE PAYMENT DETAILS---------&#xD;&#xA;&#xD;&#xA;CREATE TABLE [DBO].[TEMP_PAYMENT_DETAILS_1099R](&#xD;&#xA; [PAYMENT_DETAILS_1099R_ID] [INT] IDENTITY(1,1) NOT NULL,&#xD;&#xA; [PAYEE_ACCOUNT_ID] [INT] NULL,&#xD;&#xA; [PAYMENT_HISTORY_HEADER_ID] [INT] NULL,&#xD;&#xA; [BENEFIT_OVERPAYMENT_ID] [INT] NULL,&#xD;&#xA; [PLAN_ID] [INT] NULL,&#xD;&#xA; [BENEFIT_ACCOUNT_TYPE_ID] [INT] NULL,&#xD;&#xA; [BENEFIT_ACCOUNT_TYPE_VALUE] [VARCHAR](4) NULL,&#xD;&#xA; [BENEFIT_OPTION_ID] [INT] NULL,&#xD;&#xA; [BENEFIT_OPTION_VALUE] [VARCHAR](4) NULL,&#xD;&#xA; [PERSON_ID] [INT] NULL,&#xD;&#xA; [ORG_ID] [INT] NULL,&#xD;&#xA; [PAYMENT_DATE] [DATETIME] NULL,&#xD;&#xA; [ROLLOVER_PAYMENT_FLAG] [VARCHAR](1) NULL,&#xD;&#xA; [GROSS_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA; [TAXABLE_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA; [CAPITAL_GAIN] [DECIMAL](38, 2) NULL,&#xD;&#xA; [NON_TAXABLE_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA; [NON_TAXABLE_ROLLOVER] [DECIMAL](38, 2) NULL, -- 10009&#xD;&#xA; [FED_TAX_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA; [STATE_TAX_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA; [TOTAL_DISTRIBUTION_FLAG] [VARCHAR](1) NULL,&#xD;&#xA; [NAME] [VARCHAR](153) NULL,&#xD;&#xA; [AGE_ON_BENEFIT_BEGIN_DATE] [NUMERIC](18, 6) NULL,&#xD;&#xA; [AGE_ON_PAYMENT_DATE] [NUMERIC](18, 6) NULL,&#xD;&#xA; [DISTRIBUTION_CODE] [VARCHAR](2) NULL,&#xD;&#xA; [SSN] [VARCHAR](9) NULL,&#xD;&#xA; [FEDERAL_ID] [VARCHAR](9) NULL,&#xD;&#xA; [AGE59_SPLIT_FLAG] [VARCHAR](1) NULL,&#xD;&#xA; [CHECK_NUMBER] [VARCHAR](15) NULL,&#xD;&#xA; [CHECK_AMOUNT] [DECIMAL](38, 2) NULL&#xD;&#xA;) ON [PRIMARY]&#xD;&#xA;&#xD;&#xA;DECLARE @PERSLINKGOLIVEDATE AS DATETIME &#xD;&#xA;SELECT @PERSLINKGOLIVEDATE = CAST(DATA1 AS DATETIME) &#xD;&#xA;FROM SGS_CODE_VALUE WHERE CODE_ID = 52 AND CODE_VALUE = 'PGLD'&#xD;&#xA;---------------------- QUERY 1   --------------------------------&#xD;&#xA;&#xD;&#xA;------------- QUERY TO GET DATA FROM PAYMENT HISTORY ------------&#xD;&#xA;INSERT INTO TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;SELECT  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PHH.PAYMENT_HISTORY_HEADER_ID ,&#xD;&#xA;  NULL AS BENEFIT_OVERPAYMENT_ID,&#xD;&#xA;  PHH.PLAN_ID,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;  PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;  PA.BENEFIT_OPTION_ID,&#xD;&#xA;  PA.BENEFIT_OPTION_VALUE,&#xD;&#xA;  PA.PAYEE_PERSLINK_ID AS PERSON_ID,  &#xD;&#xA;  CASE WHEN PHD.ROLLOVER_FLAG = 'N' THEN      &#xD;&#xA;   CASE WHEN PA.PAYEE_ORG_ID IS NOT NULL THEN &#xD;&#xA;     PA.PAYEE_ORG_ID ELSE NULL &#xD;&#xA;   END &#xD;&#xA;  ELSE PHH.ORG_ID END AS ORG_ID,&#xD;&#xA;  PHH.PAYMENT_DATE,&#xD;&#xA;  PHD.ROLLOVER_FLAG AS ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;  PHD.GROSS_AMOUNT,&#xD;&#xA;  PHD.TAXABLE_AMOUNT,&#xD;&#xA;  PHD.CAPITAL_GAIN,&#xD;&#xA;  PHD.NON_TAXABLE_AMOUNT,&#xD;&#xA;  PHD.NON_TAXABLE_ROLLOVER, -- 10009&#xD;&#xA;  PHD.FED_TAX_AMOUNT,&#xD;&#xA;     PHD.STATE_TAX_AMOUNT,&#xD;&#xA;  CASE WHEN PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;   THEN 'Y'ELSE 'N' END AS TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;  CASE WHEN PA.PAYEE_PERSLINK_ID IS NOT NULL THEN &#xD;&#xA;    ISNULL(PER.LAST_NAME,'') +' '+ &#xD;&#xA;    ISNULL(PER.FIRST_NAME,'') +' '+&#xD;&#xA;    ISNULL(PER.MIDDLE_NAME,'')      &#xD;&#xA;   ELSE O.ORG_NAME END AS NAME,&#xD;&#xA;  CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;       ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,PA.BENEFIT_BEGIN_DATE))/365.25 END AGE_ON_BENEFIT_BEGIN_DATE,&#xD;&#xA;  CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;       ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 END AS AGE_ON_PAYMENT_DATE,&#xD;&#xA;  CASE WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;     OR&#xD;&#xA;     EXISTS(SELECT '0' FROM SGT_PAYMENT_HISTORY_DETAIL PHD1 &#xD;&#xA;        INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 ON PHD1.PAYMENT_ITEM_TYPE_ID = PIT1.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;        WHERE PHD1.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;        AND PIT1.PLSO_FLAG = 'Y'&#xD;&#xA;        )&#xD;&#xA;    )&#xD;&#xA;    AND &#xD;&#xA;    (&#xD;&#xA;     ((CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;       ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 END&#xD;&#xA;     ) BETWEEN 55 AND 59.5 AND PHH.PLAN_ID IN (1,5,6))&#xD;&#xA;     OR&#xD;&#xA;     ((CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;       ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 END&#xD;&#xA;     ) BETWEEN 50 AND 59.5 AND PHH.PLAN_ID IN (4,3,2,20,26,29))&#xD;&#xA;    )&#xD;&#xA;    and isnull(PHD.ROLLOVER_FLAG,'N') = 'N' THEN '2' &#xD;&#xA;    when  PHD.ROLLOVER_FLAG = 'Y'&#xD;&#xA;    and (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;     OR&#xD;&#xA;     EXISTS(SELECT '0' FROM SGT_PAYMENT_HISTORY_DETAIL PHD1 &#xD;&#xA;        INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 ON PHD1.PAYMENT_ITEM_TYPE_ID = PIT1.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;        WHERE PHD1.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;        AND PIT1.PLSO_FLAG = 'Y'&#xD;&#xA;        )&#xD;&#xA;     ) THEN 'G'  &#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR'&#xD;&#xA;     AND &#xD;&#xA;      (CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 END&#xD;&#xA;      ) &lt; 59.5 THEN '2'   &#xD;&#xA;    WHEN ( PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;      OR&#xD;&#xA;      EXISTS(SELECT '0' FROM SGT_PAYMENT_HISTORY_DETAIL PHD1 &#xD;&#xA;         INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 ON PHD1.PAYMENT_ITEM_TYPE_ID = PIT1.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;         WHERE PHD1.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;         AND PIT1.PLSO_FLAG = 'Y'&#xD;&#xA;         )&#xD;&#xA;     )&#xD;&#xA;     AND &#xD;&#xA;     (&#xD;&#xA;      (CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 END&#xD;&#xA;      )  &lt; 59.5 &#xD;&#xA;     )&#xD;&#xA;     THEN CASE WHEN PHD.ROLLOVER_FLAG = 'Y' THEN 'G' ELSE '1' END   &#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' THEN '3' &#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('PSTD','DETH') THEN '4' +&#xD;&#xA;     CASE WHEN PHD.ROLLOVER_FLAG = 'Y' THEN 'G' ELSE &#xD;&#xA;     CASE WHEN PA.BENEFIT_OPTION_VALUE = 'REFD' &#xD;&#xA;     AND PER.DATE_OF_BIRTH &lt; '01/02/1936' THEN 'A' ELSE '' END&#xD;&#xA;     END&#xD;&#xA;    WHEN &#xD;&#xA;     PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RFND' ,'RETR')&#xD;&#xA;     AND &#xD;&#xA;      (CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 END&#xD;&#xA;      ) &gt;= 59.5  AND isnull(PHD.ROLLOVER_FLAG,'N') = 'N' THEN '7' &#xD;&#xA;     WHEN PA.BENEFIT_OPTION_VALUE IN ('AURD','RGRD')&#xD;&#xA;     AND PER.DATE_OF_BIRTH &lt; '01/02/1936' THEN 'A'  &#xD;&#xA;     WHEN PHD.ROLLOVER_FLAG = 'Y' THEN 'G' &#xD;&#xA;  ELSE '' END AS DISTRIBUTION_CODE,&#xD;&#xA;  PER.SSN,&#xD;&#xA;  O.FEDERAL_ID,&#xD;&#xA;  CASE WHEN PER.PERSON_ID IS NULL THEN 'A'&#xD;&#xA;   WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('PSTD','DETH') THEN 'A'  --PIR 10610&#xD;&#xA;  ELSE CASE WHEN &#xD;&#xA;      (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 &lt; 59.5&#xD;&#xA;        THEN 'A' &#xD;&#xA;        ELSE CASE WHEN &#xD;&#xA;       PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'  THEN 'A' &#xD;&#xA;       ELSE 'B' END &#xD;&#xA;        END &#xD;&#xA;  END&#xD;&#xA;  AS AGE59_SPLIT_FLAG,&#xD;&#xA;  PHDN.CHECK_NUMBER,&#xD;&#xA;  PHDN.CHECK_AMOUNT&#xD;&#xA;FROM SGT_PAYMENT_HISTORY_HEADER PHH  &#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA; SELECT PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT&#xD;&#xA;   WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' &#xD;&#xA;   THEN&#xD;&#xA;    PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS GROSS_AMOUNT,&#xD;&#xA;  SUM(CASE &#xD;&#xA;&#x9;WHEN PIT.PAYMENT_ITEM_TYPE_ID IN (8,24) AND PIT.TAXABLE_ITEM_FLAG = 'Y' AND PIT.ITEM_TYPE_DIRECTION = 1 THEN PHD.AMOUNT &#xD;&#xA;&#x9;WHEN PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;    AND TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;    --AND PIT.ITEM_TYPE_CODE &lt;&gt; 'ITEM33'&#xD;&#xA;    --AND ITEM_TYPE_CODE NOT IN ('ITEM5','ITEM16')&#xD;&#xA;   THEN &#xD;&#xA;    CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;    THEN &#xD;&#xA;     CASE WHEN ROLLOVER_TYPE_VALUE IN ('EPLA','TIRA') THEN 0.00&#xD;&#xA;       WHEN (ROLLOVER_TYPE_VALUE = 'RIRA' &#xD;&#xA;       OR ROLLOVER_TYPE_VALUE IS NULL) THEN PHD.AMOUNT END&#xD;&#xA;    ELSE PHD.AMOUNT END &#xD;&#xA;   when allow_rollover_code_value = 'RRED' &#xD;&#xA;    AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;   then&#xD;&#xA;    PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;&#x9;WHEN PIT.PAYMENT_ITEM_TYPE_ID IN (28)&#xD;&#xA;&#x9;THEN&#xD;&#xA;&#x9;PHD.AMOUNT&#xD;&#xA;&#x9;WHEN PIT.PAYMENT_ITEM_TYPE_ID IN (26)&#xD;&#xA;&#x9;THEN&#xD;&#xA;&#x9;PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS TAXABLE_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')  --('RGRD','AURD')&#xD;&#xA;    AND PIT.ITEM_TYPE_CODE IN ('ITEM5','ITEM16')&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS CAPITAL_GAIN,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;     AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;   ---- AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   when allow_rollover_code_value = 'RRED' &#xD;&#xA;     AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y'&#xD;&#xA;     AND PIT.ITEM_TYPE_CODE &lt;&gt; 'ITEM31'&#xD;&#xA;   then&#xD;&#xA;    PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION&#xD;&#xA;&#x9;WHEN PIT.PAYMENT_ITEM_TYPE_ID IN (29)&#xD;&#xA;&#x9;THEN&#xD;&#xA;&#x9;PHD.AMOUNT&#xD;&#xA;&#x9;WHEN PIT.PAYMENT_ITEM_TYPE_ID IN (27)&#xD;&#xA;&#x9;THEN&#xD;&#xA;&#x9;PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;    AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;   THEN &#xD;&#xA;    CASE WHEN ROLLOVER_TYPE_VALUE IN ('EPLA','TIRA') AND PIT.PAYMENT_ITEM_TYPE_ID not in (9,25,59) THEN PHD.AMOUNT&#xD;&#xA;     WHEN (ROLLOVER_TYPE_VALUE = 'RIRA' &#xD;&#xA;      OR ROLLOVER_TYPE_VALUE IS NULL) THEN 0.00 END&#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS NON_TAXABLE_ROLLOVER, --10009&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.CHECK_COMPONENT_DESCRIPTION = 'FEDERAL TAX'&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS FED_TAX_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.CHECK_COMPONENT_DESCRIPTION = 'STATE TAX'&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS STATE_TAX_AMOUNT,&#xD;&#xA; CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END AS ROLLOVER_FLAG&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_DETAIL PHD    &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE YEAR(PHH.PAYMENT_DATE) = @TAXYEAR&#xD;&#xA; AND NOT EXISTS (&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT 1 FROM SGT_PAYMENT_HISTORY_HEADER H WITH(NOLOCK) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;JOIN SGT_PAYMENT_HISTORY_DETAIL D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID = D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND H.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID AND D.PAYMENT_ITEM_TYPE_ID IN (215,216,219,220)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA; GROUP BY PHD.PAYMENT_HISTORY_HEADER_ID,CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END&#xD;&#xA; HAVING SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   when allow_rollover_code_value = 'RRED' then&#xD;&#xA;     PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;     &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   ) &gt; 0&#xD;&#xA;   &#xD;&#xA;   union all&#xD;&#xA;&#xD;&#xA; SELECT PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   when allow_rollover_code_value = 'RRED' then&#xD;&#xA;    PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS GROSS_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;    AND TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;    --AND ITEM_TYPE_CODE NOT IN ('ITEM5','ITEM16')&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   when allow_rollover_code_value = 'RRED' &#xD;&#xA;    AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;   then&#xD;&#xA;    PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS TAXABLE_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PA.BENEFIT_OPTION_VALUE IN  ('AURD','REFD','RGRD')  --('RGRD','AURD')&#xD;&#xA;    AND PIT.ITEM_TYPE_CODE IN ('ITEM5','ITEM16')&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS CAPITAL_GAIN,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;     AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;   ---- AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   when allow_rollover_code_value = 'RRED' &#xD;&#xA;    AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y'&#xD;&#xA;   then&#xD;&#xA;    PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;    AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;   THEN &#xD;&#xA;    CASE WHEN ROLLOVER_TYPE_VALUE IN ('EPLA','TIRA') THEN PHD.AMOUNT&#xD;&#xA;     WHEN (ROLLOVER_TYPE_VALUE = 'RIRA' &#xD;&#xA;      OR ROLLOVER_TYPE_VALUE IS NULL) THEN 0.00 END &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS NON_TAXABLE_ROLLOVER,  -- 10009&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.CHECK_COMPONENT_DESCRIPTION = 'FEDERAL TAX'&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS FED_TAX_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.CHECK_COMPONENT_DESCRIPTION = 'STATE TAX'&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS STATE_TAX_AMOUNT,&#xD;&#xA; CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END AS ROLLOVER_FLAG&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_DETAIL PHD    &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE YEAR(PHH.PAYMENT_DATE) = @TAXYEAR&#xD;&#xA; AND EXISTS ( SELECT 1 FROM SGT_PAYMENT_HISTORY_DETAIL x&#xD;&#xA; WHERE X.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  AND X.PAYMENT_ITEM_TYPE_ID = 162)&#xD;&#xA; AND EXISTS ( SELECT 1 FROM SGT_PAYMENT_HISTORY_DETAIL y&#xD;&#xA;     INNER JOIN SGT_PAYMENT_ITEM_TYPE YPIT &#xD;&#xA;      ON Y.PAYMENT_ITEM_TYPE_ID = YPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;    WHERE Y.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  AND YPIT.ALLOW_ROLLOVER_CODE_VALUE ='RRED')&#xD;&#xA;  AND NOT EXISTS (&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT 1 FROM SGT_PAYMENT_HISTORY_HEADER H WITH(NOLOCK) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;JOIN SGT_PAYMENT_HISTORY_DETAIL D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID = D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND H.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID AND D.PAYMENT_ITEM_TYPE_ID IN (215,216,219,220)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA; GROUP BY PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA; CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END&#xD;&#xA; -- PIR 10509 start&#xD;&#xA; HAVING SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   when allow_rollover_code_value = 'RRED' then&#xD;&#xA;     PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;     &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   ) &gt; 0 -- PIR 10509 end&#xD;&#xA;&#xD;&#xA;   UNION ALL&#xD;&#xA;&#xD;&#xA;   SELECT PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT&#xD;&#xA;   WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' THEN&#xD;&#xA;    PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS GROSS_AMOUNT,&#xD;&#xA;  SUM(CASE &#xD;&#xA;  WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;    AND TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;    AND PIT.ITEM_TYPE_CODE &lt;&gt; 'ITEM33'&#xD;&#xA;    --AND ITEM_TYPE_CODE NOT IN ('ITEM5','ITEM16')&#xD;&#xA;   THEN &#xD;&#xA;    CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;    THEN &#xD;&#xA;     CASE WHEN ROLLOVER_TYPE_VALUE IN ('EPLA','TIRA') THEN 0.00&#xD;&#xA;       WHEN (ROLLOVER_TYPE_VALUE = 'RIRA' &#xD;&#xA;       OR ROLLOVER_TYPE_VALUE IS NULL) THEN PHD.AMOUNT END&#xD;&#xA;    ELSE PHD.AMOUNT END &#xD;&#xA;   when allow_rollover_code_value = 'RRED' &#xD;&#xA;    AND TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;   then&#xD;&#xA;    PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS TAXABLE_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD') &#xD;&#xA;    AND PIT.ITEM_TYPE_CODE IN ('ITEM5','ITEM16')&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS CAPITAL_GAIN,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;     AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y'&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   when allow_rollover_code_value = 'RRED' &#xD;&#xA;     AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y'&#xD;&#xA;     AND PIT.ITEM_TYPE_CODE &lt;&gt; 'ITEM31'&#xD;&#xA;   then&#xD;&#xA;    PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;    AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;   THEN &#xD;&#xA;    CASE WHEN ROLLOVER_TYPE_VALUE IN ('EPLA','TIRA') THEN PHD.AMOUNT&#xD;&#xA;     WHEN (ROLLOVER_TYPE_VALUE = 'RIRA' &#xD;&#xA;      OR ROLLOVER_TYPE_VALUE IS NULL) THEN 0.00 END&#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS NON_TAXABLE_ROLLOVER,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.CHECK_COMPONENT_DESCRIPTION = 'FEDERAL TAX' &#xD;&#xA;&#x9;AND (PIT.PAYMENT_ITEM_TYPE_ID NOT IN (215,216,219,220) OR &#xD;&#xA;&#x9;ISNULL(PHD.ROLLOVER_ORG_ID,0) = 0)&#xD;&#xA;&#x9;THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS FED_TAX_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.CHECK_COMPONENT_DESCRIPTION = 'STATE TAX'&#xD;&#xA;&#x9;AND (PIT.PAYMENT_ITEM_TYPE_ID NOT IN (215,216,219,220) OR &#xD;&#xA;&#x9;ISNULL(PHD.ROLLOVER_ORG_ID,0) = 0)&#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS STATE_TAX_AMOUNT,&#xD;&#xA; case when phh.ORG_ID &gt; 0 then 'Y' ELSE 'N' END AS ROLLOVER_FLAG&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_DETAIL PHD    &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE YEAR(PHH.PAYMENT_DATE) = @TAXYEAR &#xD;&#xA; AND EXISTS (&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT 1 FROM SGT_PAYMENT_HISTORY_HEADER H WITH(NOLOCK) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;JOIN SGT_PAYMENT_HISTORY_DETAIL D WITH(NOLOCK) ON H.PAYMENT_HISTORY_HEADER_ID = D.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND H.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID AND D.PAYMENT_ITEM_TYPE_ID IN (215,216,219,220)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;)&#xD;&#xA; GROUP BY PHD.PAYMENT_HISTORY_HEADER_ID,case when phh.ORG_ID &gt; 0 then 'Y' ELSE 'N' END&#xD;&#xA; HAVING SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;   THEN &#xD;&#xA;    PHD.AMOUNT &#xD;&#xA;   when (allow_rollover_code_value = 'RRED' OR PIT.PAYMENT_ITEM_TYPE_ID IN (215,216,219,220)) then&#xD;&#xA;     PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;     &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   ) &gt; 0&#xD;&#xA;&#xD;&#xA;)AS PHD &#xD;&#xA; ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;INNER JOIN SGT_PAYEE_ACCOUNT PA &#xD;&#xA; ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_CALCULATION BC ON &#xD;&#xA; PA.CALCULATION_ID = BC.BENEFIT_CALCULATION_ID &#xD;&#xA;LEFT OUTER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT PAYMENT_HISTORY_HEADER_ID,PAYMENT_METHOD_VALUE,CHECK_NUMBER ,SUM(NET_AMOUNT) AS CHECK_AMOUNT FROM SGT_PAYMENT_HISTORY_DISTRIBUTION&#xD;&#xA;  GROUP BY PAYMENT_HISTORY_HEADER_ID,PAYMENT_METHOD_VALUE,CHECK_NUMBER &#xD;&#xA; ) AS PHDN ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON PER  &#xD;&#xA; ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION O  &#xD;&#xA; ON PHH.ORG_ID = O.ORG_ID&#xD;&#xA;WHERE YEAR(PHH.PAYMENT_DATE) = @TAXYEAR&#xD;&#xA; AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBDC','DBTT','DBCT','DTCT','SPEL')  &#xD;&#xA; AND NOT (PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')   &#xD;&#xA;    AND (PHH.PAYMENT_DATE &lt;= @PERSLINKGOLIVEDATE OR PHH.PLAN_ID = 7))  &#xD;&#xA; AND PHH.STATUS_VALUE &lt;&gt; 'CNLD' &#xD;&#xA;------------------------------- END OF QUERY 1  ----------------------------------&#xD;&#xA;&#xD;&#xA;-------------------------------- QUERY 2  ----------------------------------------&#xD;&#xA;&#xD;&#xA;-- QUERY TO REDUCE  RECOVERIES , HAVE IT AT DETAILED LEVEL SO THAT LINK TABLE CAN BE CREATED&#xD;&#xA;INSERT INTO TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;SELECT PR.PAYEE_ACCOUNT_ID,&#xD;&#xA;  NULL,&#xD;&#xA;  OP.BENEFIT_OVERPAYMENT_ID,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,  &#xD;&#xA;  DATE_OF_1099R,&#xD;&#xA;  'N' AS ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;   THEN &#xD;&#xA;    OPD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )&#xD;&#xA;   AS GROSS_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;    AND TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;   -- AND ITEM_TYPE_CODE NOT IN ('ITEM5','ITEM16')&#xD;&#xA;   THEN &#xD;&#xA;    OPD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )&#xD;&#xA;   AS TAXABLE_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PA.BENEFIT_OPTION_VALUE IN  ('AURD','REFD','RGRD')  --('RGRD','AURD')&#xD;&#xA;    AND PIT.ITEM_TYPE_CODE IN ('ITEM5','ITEM16')&#xD;&#xA;   THEN &#xD;&#xA;    OPD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS CAPITAL_GAIN,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;     AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;    AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;   THEN &#xD;&#xA;    OPD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   ) &#xD;&#xA;   AS NON_TAXABLE_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;    AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;    AND VENDOR_FLAG= 'N'  &#xD;&#xA;    AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;   THEN &#xD;&#xA;    OPD.AMOUNT &#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS NON_TAXABLE_ROLLOVER, -- 10009&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.CHECK_COMPONENT_DESCRIPTION = 'FEDERAL TAX'&#xD;&#xA;   THEN &#xD;&#xA;    CASE WHEN OPD.AMOUNT &lt;0 THEN OPD.AMOUNT ELSE 0 END&#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS FED_TAX_AMOUNT,&#xD;&#xA;  SUM(CASE WHEN &#xD;&#xA;    PIT.CHECK_COMPONENT_DESCRIPTION = 'STATE TAX'&#xD;&#xA;   THEN &#xD;&#xA;    CASE WHEN OPD.AMOUNT &lt;0 THEN OPD.AMOUNT ELSE 0 END&#xD;&#xA;   ELSE 0 END&#xD;&#xA;   )  AS STATE_TAX_AMOUNT,&#xD;&#xA;  'N' AS TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  CASE WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;     OR APP.PLSO_REQUESTED_FLAG = 'Y'&#xD;&#xA;    )&#xD;&#xA;    AND &#xD;&#xA;    (&#xD;&#xA;     ((CASE WHEN P.PERSON_ID IS NULL THEN 0 &#xD;&#xA;       ELSE (DATEDIFF(D,P.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;     ) BETWEEN 55 AND 59.5 AND APP.PLAN_ID IN (1,5,6))&#xD;&#xA;     OR&#xD;&#xA;     ((CASE WHEN P.PERSON_ID IS NULL THEN 0 &#xD;&#xA;       ELSE (DATEDIFF(D,P.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;     ) BETWEEN 50 AND 59.5 AND APP.PLAN_ID IN (4,3,2,20,26,29))&#xD;&#xA;    )&#xD;&#xA;    THEN '2'&#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR'&#xD;&#xA;     AND &#xD;&#xA;      (CASE WHEN P.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,P.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;      ) &lt; 59.5 THEN '2'   &#xD;&#xA;    WHEN ( PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;      OR APP.PLSO_REQUESTED_FLAG = 'Y'&#xD;&#xA;     )&#xD;&#xA;     AND &#xD;&#xA;     (&#xD;&#xA;      (CASE WHEN P.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,P.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;      )  &lt; 59.5 &#xD;&#xA;     )&#xD;&#xA;     THEN '1' &#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' THEN '3' &#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('PSTD','DETH') THEN '4'&#xD;&#xA;    WHEN &#xD;&#xA;     PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RFND' ,'RETR')&#xD;&#xA;     AND &#xD;&#xA;      (CASE WHEN P.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,P.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;      ) &gt;= 59.5 THEN '7'&#xD;&#xA;  ELSE '' END AS DISTRIBUTION_CODE,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  CASE WHEN P.PERSON_ID IS NULL THEN 'A' &#xD;&#xA;  WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('PSTD','DETH') THEN 'A'  --PIR 12411(missed out in PIR 10610-12/12/2013)&#xD;&#xA;    ELSE CASE WHEN &#xD;&#xA;      (DATEDIFF(D,P.DATE_OF_BIRTH,DATE_OF_1099R))/365.25 &lt; 59.5&#xD;&#xA;        THEN 'A' &#xD;&#xA;        ELSE CASE WHEN &#xD;&#xA;       PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'  THEN 'A' &#xD;&#xA;       ELSE 'B' END &#xD;&#xA;        END&#xD;&#xA;   END&#xD;&#xA;  AS AGE59_SPLIT_FLAG,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL&#xD;&#xA; FROM SGT_PAYMENT_BENEFIT_OVERPAYMENT_HEADER OP&#xD;&#xA; INNER JOIN SGT_PAYMENT_BENEFIT_OVERPAYMENT_DETAIL OPD&#xD;&#xA;  ON OPD.BENEFIT_OVERPAYMENT_ID = OP.BENEFIT_OVERPAYMENT_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_RECOVERY PR&#xD;&#xA;  ON PR.BENEFIT_OVERPAYMENT_ID = OP.BENEFIT_OVERPAYMENT_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON OPD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  ON PR.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; LEFT OUTER JOIN SGT_PERSON P  &#xD;&#xA;  ON PA.PAYEE_PERSLINK_ID = P.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP&#xD;&#xA;  ON PA.APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA;   WHERE ((PR.STATUS_VALUE IN ('APRD','SATD','INPR','WROF') -- PIR 10626 'WROF'   &#xD;&#xA;   AND PR.REPAYMENT_TYPE_VALUE IN ('RPOT')) OR (PR.STATUS_VALUE IN ('SATD','WROF') AND PR.REPAYMENT_TYPE_VALUE IN ('LUSM'))) -- PIR 10754 --PIR 11849(include 'WROF') &#xD;&#xA;   AND YEAR(DATE_OF_1099R) = @TAXYEAR&#xD;&#xA;&#xD;&#xA; GROUP BY PR.PAYEE_ACCOUNT_ID,OP.BENEFIT_OVERPAYMENT_ID,DATE_OF_1099R,PA.APPLICATION_ID,&#xD;&#xA;   PR.STATUS_VALUE,PIT.ITEM_TYPE_DIRECTION,PAYMENT_1099R_FLAG,VENDOR_FLAG,PR.GROSS_REDUCTION_AMOUNT,&#xD;&#xA;   PA.BENEFIT_ACCOUNT_TYPE_VALUE,APP.PLSO_REQUESTED_FLAG,P.PERSON_ID,P.DATE_OF_BIRTH,APP.PLAN_ID,&#xD;&#xA;   CASE WHEN P.PERSON_ID IS NULL THEN 'A' &#xD;&#xA;    ELSE CASE WHEN &#xD;&#xA;      (DATEDIFF(D,P.DATE_OF_BIRTH,DATE_OF_1099R))/365.25 &lt; 59.5&#xD;&#xA;        THEN 'A' ELSE 'B' END&#xD;&#xA;   END&#xD;&#xA;   &#xD;&#xA;   &#xD;&#xA;-- QUERY TO GET DEDUCTION AMOUNT&#xD;&#xA;INSERT INTO TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;SELECT distinct PR.PAYEE_ACCOUNT_ID,&#xD;&#xA;  NULL,&#xD;&#xA;  OP.BENEFIT_OVERPAYMENT_ID,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,  &#xD;&#xA;  PR.WRITE_OFF_DATE,&#xD;&#xA;  'N' AS ROLLOVER_PAYMENT_FLAG, &#xD;&#xA;PR.GROSS_REDUCTION_AMOUNT * (-1) AS GROSS_AMOUNT,&#xD;&#xA;PR.GROSS_REDUCTION_AMOUNT * (-1) AS TAXABLE_AMOUNT,&#xD;&#xA;  0.00,&#xD;&#xA;  0.00,&#xD;&#xA;  0.00,&#xD;&#xA;  0.00,&#xD;&#xA;  0.00,&#xD;&#xA;  'N' AS TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  CASE WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;     OR APP.PLSO_REQUESTED_FLAG = 'Y'&#xD;&#xA;    )&#xD;&#xA;    AND &#xD;&#xA;    (&#xD;&#xA;     ((CASE WHEN P.PERSON_ID IS NULL THEN 0 &#xD;&#xA;       ELSE (DATEDIFF(D,P.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;     ) BETWEEN 55 AND 59.5 AND APP.PLAN_ID IN (1,5,6))&#xD;&#xA;     OR&#xD;&#xA;     ((CASE WHEN P.PERSON_ID IS NULL THEN 0 &#xD;&#xA;       ELSE (DATEDIFF(D,P.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;     ) BETWEEN 50 AND 59.5 AND APP.PLAN_ID IN (4,3,2,20,26,29))&#xD;&#xA;    )&#xD;&#xA;    THEN '2'&#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR'&#xD;&#xA;     AND &#xD;&#xA;      (CASE WHEN P.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,P.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;      ) &lt; 59.5 THEN '2'   &#xD;&#xA;    WHEN ( PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;      OR APP.PLSO_REQUESTED_FLAG = 'Y'&#xD;&#xA;     )&#xD;&#xA;     AND &#xD;&#xA;     (&#xD;&#xA;      (CASE WHEN P.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,P.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;      )  &lt; 59.5 &#xD;&#xA;     )&#xD;&#xA;     THEN '1' &#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' THEN '3' &#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('PSTD','DETH') THEN '4'&#xD;&#xA;    WHEN &#xD;&#xA;     PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RFND' ,'RETR')&#xD;&#xA;     AND &#xD;&#xA;      (CASE WHEN P.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,P.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;      ) &gt;= 59.5 THEN '7'&#xD;&#xA;  ELSE '' END AS DISTRIBUTION_CODE,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL,&#xD;&#xA;  CASE WHEN P.PERSON_ID IS NULL THEN 'A' &#xD;&#xA;  WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('PSTD','DETH') THEN 'A'  --PIR 12411(missed out in PIR 10610-12/12/2013)&#xD;&#xA;    ELSE CASE WHEN &#xD;&#xA;      (DATEDIFF(D,P.DATE_OF_BIRTH,DATE_OF_1099R))/365.25 &lt; 59.5&#xD;&#xA;        THEN 'A' &#xD;&#xA;        ELSE CASE WHEN &#xD;&#xA;       PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'  THEN 'A' &#xD;&#xA;       ELSE 'B' END &#xD;&#xA;        END&#xD;&#xA;   END&#xD;&#xA;  AS AGE59_SPLIT_FLAG,&#xD;&#xA;  NULL,&#xD;&#xA;  NULL&#xD;&#xA; FROM SGT_PAYMENT_BENEFIT_OVERPAYMENT_HEADER OP&#xD;&#xA; INNER JOIN SGT_PAYMENT_BENEFIT_OVERPAYMENT_DETAIL OPD&#xD;&#xA;  ON OPD.BENEFIT_OVERPAYMENT_ID = OP.BENEFIT_OVERPAYMENT_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_RECOVERY PR&#xD;&#xA;  ON PR.BENEFIT_OVERPAYMENT_ID = OP.BENEFIT_OVERPAYMENT_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;  ON OPD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  ON PR.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; LEFT OUTER JOIN SGT_PERSON P  &#xD;&#xA;  ON PA.PAYEE_PERSLINK_ID = P.PERSON_ID&#xD;&#xA; LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP&#xD;&#xA;  ON PA.APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA;   WHERE PR.STATUS_VALUE IN ('WROF')&#xD;&#xA;   AND YEAR(DATE_OF_1099R) = @TAXYEAR&#xD;&#xA;&#xD;&#xA; ----AS per Maik's comment - if the Distribution Code is G or 4G and Fed Tax = 0 then Taxable Amount should be 0. &#xD;&#xA;UPDATE TEMP_PAYMENT_DETAILS_1099R SET TAXABLE_AMOUNT = 0 WHERE DISTRIBUTION_CODE IN ('G','4G') AND FED_TAX_AMOUNT = 0 AND&#xD;&#xA;ISNULL(TAXABLE_AMOUNT,0) &gt; 0&#xD;&#xA;&#xD;&#xA;UPDATE TEMP_PAYMENT_DETAILS_1099R  &#xD;&#xA; SET TAXABLE_AMOUNT = ISNULL(TAXABLE_AMOUNT,0) - ISNULL(CAPITAL_GAIN,0)&#xD;&#xA;WHERE ISNULL(TAXABLE_AMOUNT,0) &gt; 0 AND ISNULL(CAPITAL_GAIN,0) &lt;&gt; 0 &#xD;&#xA;&#xD;&#xA;----------------------- END OF QUERY 2 -----------------------">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="DropTableFor1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="---Dropping tables created for 1099r&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID('TEMP_PAYMENT_DETAILS_1099R') IS NOT NULL&#xD;&#xA; DROP TABLE TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="Create1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--&quot;entPayment1099r.Create1099r&quot;&#xD;&#xA;IF OBJECT_ID('TEMP_PAYMENT_DETAILS_1099R') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;&#xD;&#xA; ---- Declaration Section ------------------------------&#xD;&#xA; DECLARE @DATEOF1099R DATETIME&#xD;&#xA; SET @DATEOF1099R =  CONVERT(DATETIME,CONVERT(VARCHAR,GETDATE(),101) ,110)&#xD;&#xA;&#xD;&#xA; SELECT  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PHH.PERSON_ID,&#xD;&#xA;    PHH.ORG_ID,&#xD;&#xA;    PHH.[NAME],&#xD;&#xA;    PHH.BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;    PHH.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;    PHH.PLAN_ID,&#xD;&#xA;    PHH.BENEFIT_OPTION_ID,&#xD;&#xA;    PHH.BENEFIT_OPTION_VALUE,&#xD;&#xA;    PHH.DISTRIBUTION_CODE,&#xD;&#xA;    ISNULL(PHH.GROSS_AMOUNT,0)+ISNULL(BEN.GROSS_AMOUNT,0) AS GROSS_AMOUNT,&#xD;&#xA;    ISNULL(PHH.NON_TAXABLE_AMOUNT,0)+ISNULL(BEN.NON_TAXABLE_AMOUNT,0) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;    ISNULL(PHH.NON_TAXABLE_ROLLOVER,0)+ISNULL(BEN.NON_TAXABLE_ROLLOVER,0) AS NON_TAXABLE_ROLLOVER, -- PIR 10509&#xD;&#xA;    ISNULL(PHH.CAPITAL_GAIN,0)+ISNULL(BEN.CAPITAL_GAIN,0) AS CAPITAL_GAIN,&#xD;&#xA;    ISNULL(PHH.TAXABLE_AMOUNT,0)+ISNULL(BEN.TAXABLE_AMOUNT,0) AS TAXABLE_AMOUNT,&#xD;&#xA;    ISNULL(PHH.FED_TAX_AMOUNT,0)+ISNULL(BEN.FED_TAX_AMOUNT,0) AS FED_TAX_AMOUNT,&#xD;&#xA;    ISNULL(PHH.STATE_TAX_AMOUNT,0)+ISNULL(BEN.STATE_TAX_AMOUNT,0) AS STATE_TAX_AMOUNT,&#xD;&#xA;    PHH.TAX_YEAR,&#xD;&#xA;    PHH.CHECK_AMOUNT,&#xD;&#xA;    PHH.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;    PHH.AGE59_SPLIT_FLAG,&#xD;&#xA;    PHH.TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;    PHH.SSN,&#xD;&#xA;    PHH.FEDERAL_ID&#xD;&#xA; INTO  #TEMP&#xD;&#xA; FROM&#xD;&#xA; (&#xD;&#xA;  SELECT  R.PAYEE_ACCOUNT_ID,&#xD;&#xA;     R.PERSON_ID,&#xD;&#xA;     R.ORG_ID,&#xD;&#xA;     [NAME],&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     R.PLAN_ID,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SUM(ISNULL(GROSS_AMOUNT,0)) AS GROSS_AMOUNT,&#xD;&#xA;     SUM(ISNULL(NON_TAXABLE_AMOUNT,0)) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(NON_TAXABLE_ROLLOVER,0)) AS NON_TAXABLE_ROLLOVER, --PIR 10509&#xD;&#xA;     SUM(ISNULL(CAPITAL_GAIN,0)) AS CAPITAL_GAIN,&#xD;&#xA;     SUM(ISNULL(TAXABLE_AMOUNT,0)) AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(ISNULL(STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,&#xD;&#xA;     YEAR(R.PAYMENT_DATE) AS TAX_YEAR,&#xD;&#xA;     SUM(ISNULL(CHECK_AMOUNT,0)) AS CHECK_AMOUNT,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     AGE59_SPLIT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID&#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_1099R R&#xD;&#xA;  JOIN SGT_PAYMENT_HISTORY_HEADER H ON R.PAYMENT_HISTORY_HEADER_ID = H.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  WHERE  R.PAYMENT_HISTORY_HEADER_ID IS NOT NULL&#xD;&#xA;  AND H.OLD_PAYMENT_HISTORY_HEADER_ID IS NULL&#xD;&#xA;  GROUP BY R.PAYEE_ACCOUNT_ID,&#xD;&#xA;     R.PLAN_ID,&#xD;&#xA;     R.BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     R.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     R.BENEFIT_OPTION_ID,&#xD;&#xA;     R.BENEFIT_OPTION_VALUE,&#xD;&#xA;     R.PERSON_ID,&#xD;&#xA;     R.ORG_ID,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     [NAME],&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     AGE59_SPLIT_FLAG,     &#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     YEAR(R.PAYMENT_DATE)&#xD;&#xA; ) PHH&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; (&#xD;&#xA;  SELECT  PAYEE_ACCOUNT_ID,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     [NAME],&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SUM(isnull(GROSS_AMOUNT,0))*-1 AS GROSS_AMOUNT,&#xD;&#xA;     SUM(isnull(NON_TAXABLE_AMOUNT,0))*-1 AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(NON_TAXABLE_ROLLOVER,0)) AS NON_TAXABLE_ROLLOVER, --PIR 10509&#xD;&#xA;     SUM(isnull(CAPITAL_GAIN,0))*-1 AS CAPITAL_GAIN,&#xD;&#xA;     SUM(isnull(TAXABLE_AMOUNT,0))*-1 AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(isnull(FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(isnull(STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,&#xD;&#xA;     YEAR(PAYMENT_DATE) AS TAX_YEAR,&#xD;&#xA;     SUM(CHECK_AMOUNT) AS CHECK_AMOUNT,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     AGE59_SPLIT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID&#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;  WHERE  BENEFIT_OVERPAYMENT_ID IS NOT NULL &#xD;&#xA;  GROUP BY PAYEE_ACCOUNT_ID,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     [NAME],&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     AGE59_SPLIT_FLAG,     &#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     YEAR(PAYMENT_DATE)&#xD;&#xA; ) BEN ON PHH.PAYEE_ACCOUNT_ID = BEN.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PHH.ROLLOVER_PAYMENT_FLAG = BEN.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;   AND PHH.DISTRIBUTION_CODE = BEN.DISTRIBUTION_CODE&#xD;&#xA;   AND PHH.AGE59_SPLIT_FLAG = BEN.AGE59_SPLIT_FLAG&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  --QUERY TO CREATE 1099R&#xD;&#xA; INSERT INTO SGT_PAYMENT_1099R (PAYEE_ACCOUNT_ID, TAX_YEAR, CORRECTED_FLAG, TOTAL_DISTRIBUTION_FLAG, DISTRIBUTION_CODE, &#xD;&#xA;      OLD_PAYMENT_1099R_ID, DIST_PERCENTAGE, GROSS_BENEFIT_AMOUNT, TAXABLE_AMOUNT, NON_TAXABLE_AMOUNT, CAPITAL_GAIN, &#xD;&#xA;      FED_TAX_AMOUNT, STATE_TAX_AMOUNT, SSN, FEDERAL_ID, PERSON_ID, ORG_ID, NAME, ADDR_LINE_1, ADDR_LINE_2, ADDR_CITY, &#xD;&#xA;      ADDR_STATE_ID, ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, &#xD;&#xA;      FOREIGN_POSTAL_CODE, ROLLOVER_PAYMENT_FLAG, AGE59_SPLIT_FLAG, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ,ID_SUFFIX)&#xD;&#xA;  SELECT &#xD;&#xA;  PAYEE_ACCOUNT_ID,TAX_YEAR,CORRECTED_FLAG,TOTAL_DISTRIBUTION_FLAG,DISTRIBUTION_CODE,OLD_PAYMENT_1099R_ID,DIST_PERCENTAGE,GROSS_AMOUNT,TAXABLE_AMOUNT,NON_TAXABLE_AMOUNT,CAPITAL_GAIN,FED_TAX_AMOUNT,STATE_TAX_AMOUNT,SSN,FEDERAL_ID,PERSON_ID,ORG_ID,NAME,ADDR_LINE_1,ADDR_LINE_2,CITY,STATE_ID,STATE_VALUE,COUNTRY_ID,COUNTRY_VALUE,ZIP_CODE,ZIP_4_CODE,FOREIGN_PROVINCE,FOREIGN_POSTAL_CODE,ROLLOVER_PAYMENT_FLAG,AGE59_SPLIT_FLAG,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ,ID_SUFFIX &#xD;&#xA;  FROM &#xD;&#xA;  (&#xD;&#xA;   SELECT  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;     PHH.TAX_YEAR,&#xD;&#xA;     'N' AS CORRECTED_FLAG,&#xD;&#xA;     PHH.TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     PHH.DISTRIBUTION_CODE,&#xD;&#xA;     NULL AS OLD_PAYMENT_1099R_ID,&#xD;&#xA;     (SELECT TOP 1 &#xD;&#xA;       CASE WHEN PA.ACCOUNT_RELATION_VALUE = 'BENE' THEN BENEFIT_PERCENTAGE ELSE 0 END&#xD;&#xA;       FROM SGT_BENEFIT_CALCULATION_PAYEE BCP&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT PA ON BCP.PAYEE_ACCOUNT_ID =PA.PAYEE_ACCOUNT_ID &#xD;&#xA;       AND BCP.BENEFIT_CALCULATION_ID = PA.CALCULATION_ID&#xD;&#xA;      WHERE PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;     )&#xD;&#xA;     AS DIST_PERCENTAGE,&#xD;&#xA;     PHH.GROSS_AMOUNT,&#xD;&#xA;     PHH.TAXABLE_AMOUNT,&#xD;&#xA;     --(PHH.NON_TAXABLE_AMOUNT + PHH.NON_TAXABLE_ROLLOVER) AS NON_TAXABLE_AMOUNT, -- PIR 10509&#xD;&#xA;     PHH.NON_TAXABLE_AMOUNT, -- PIR 10509(12/11/2013)&#xD;&#xA;     PHH.CAPITAL_GAIN,&#xD;&#xA;     PHH.FED_TAX_AMOUNT,&#xD;&#xA;     PHH.STATE_TAX_AMOUNT,&#xD;&#xA;     PHH.SSN,&#xD;&#xA;     PHH.FEDERAL_ID,     &#xD;&#xA;     PHH.PERSON_ID,&#xD;&#xA;     PHH.ORG_ID,&#xD;&#xA;     PHH.[NAME],&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_1 ELSE OCA.ADDR_LINE_1 END AS ADDR_LINE_1,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_2 ELSE OCA.ADDR_LINE_2 END AS ADDR_LINE_2,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_CITY ELSE OCA.CITY END AS CITY,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_ID ELSE OCA.STATE_ID END AS STATE_ID,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_VALUE ELSE OCA.STATE_VALUE END AS STATE_VALUE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_ID ELSE OCA.COUNTRY_ID END AS COUNTRY_ID,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_VALUE ELSE OCA.COUNTRY_VALUE END AS COUNTRY_VALUE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_CODE ELSE OCA.ZIP_CODE END AS ZIP_CODE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_4_CODE ELSE OCA.ZIP_4_CODE END AS ZIP_4_CODE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_PROVINCE ELSE OCA.FOREIGN_PROVINCE END AS FOREIGN_PROVINCE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_POSTAL_CODE ELSE OCA.FOREIGN_POSTAL_CODE END AS FOREIGN_POSTAL_CODE,&#xD;&#xA;     PHH.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     PHH.AGE59_SPLIT_FLAG,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 AS UPDATE_SEQ&#xD;&#xA;     ,ID_SUFFIX = NULL &#xD;&#xA;     ,ROW_NUMBER() OVER (PARTITION BY PHH.PAYEE_ACCOUNT_ID,PHH.GROSS_AMOUNT, PHH.AGE59_SPLIT_FLAG &#xD;&#xA;           ORDER BY ROLLOVER_PAYMENT_FLAG DESC) as ROWNUM  -- PIR 10509&#xD;&#xA;           &#xD;&#xA;   FROM&#xD;&#xA;     #TEMP AS PHH&#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON P  &#xD;&#xA;      ON PHH.PERSON_ID = P.PERSON_ID&#xD;&#xA;     LEFT OUTER JOIN SGT_ORGANIZATION O  &#xD;&#xA;      ON PHH.ORG_ID = O.ORG_ID&#xD;&#xA;     LEFT OUTER JOIN SGT_ORG_CONTACT_ADDRESS OCA  &#xD;&#xA;      ON O.PRIMARY_ADDRESS_ID=OCA.CONTACT_ORG_ADDRESS_ID&#xD;&#xA;     LEFT OUTER JOIN &#xD;&#xA;     (&#xD;&#xA;     SELECT  P.PERSON_ID, &#xD;&#xA;      PA.ADDR_LINE_1 as ADDR_LINE_1,&#xD;&#xA;  PA.ADDR_LINE_2 as ADDR_LINE_2,&#xD;&#xA;  PA.ADDR_CITY as ADDR_CITY,&#xD;&#xA;  PA.ADDR_STATE_ID as ADDR_STATE_ID,&#xD;&#xA;  PA.ADDR_STATE_VALUE as ADDR_STATE_VALUE,&#xD;&#xA;  PA.ADDR_COUNTRY_ID as ADDR_COUNTRY_ID,&#xD;&#xA;  PA.ADDR_COUNTRY_VALUE as ADDR_COUNTRY_VALUE,&#xD;&#xA;  PA.ADDR_ZIP_CODE as ADDR_ZIP_CODE,&#xD;&#xA;  PA.ADDR_ZIP_4_CODE as ADDR_ZIP_4_CODE,&#xD;&#xA;  PA.FOREIGN_PROVINCE as FOREIGN_PROVINCE,&#xD;&#xA;  PA.FOREIGN_POSTAL_CODE as FOREIGN_POSTAL_CODE,&#xD;&#xA;      ROW_NUMBER() OVER ( PARTITION BY p.person_id ORDER BY ISNULL(PA.END_DATE,'99991231') desc) as NUMBER&#xD;&#xA;     FROM SGT_PERSON P &#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON_ADDRESS PA   ON P.PERSON_ID  = PA.PERSON_ID                 &#xD;&#xA;    ) AS PERADDR &#xD;&#xA;    ON PERADDR.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;    WHERE PERADDR.NUMBER IS NULL OR NUMBER =1 &#xD;&#xA;  ) AS temp&#xD;&#xA;  WHERE ROWNUM = 1 -- PIR 10509&#xD;&#xA;  ORDER BY CASE WHEN FOREIGN_PROVINCE IS NOT NULL then 'A' ELSE 'B' END ,Name  &#xD;&#xA;&#xD;&#xA;  INSERT INTO SGT_1099R_PAYMENT_HISTORY_LINK&#xD;&#xA; (PAYMENT_1099R_ID, PAYMENT_HISTORY_HEADER_ID, BENEFIT_OVERPAYMENT_ID, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ)&#xD;&#xA; SELECT  A.PAYMENT_1099R_ID,B.PAYMENT_HISTORY_HEADER_ID,B.BENEFIT_OVERPAYMENT_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY, GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY, GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ&#xD;&#xA; FROM  SGT_PAYMENT_1099R A&#xD;&#xA; INNER JOIN TEMP_PAYMENT_DETAILS_1099R B&#xD;&#xA;   ON A.PAYEE_ACCOUNT_ID = B.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND A.ROLLOVER_PAYMENT_FLAG = B.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;   AND A.DISTRIBUTION_CODE = B.DISTRIBUTION_CODE&#xD;&#xA;   AND A.AGE59_SPLIT_FLAG = B.AGE59_SPLIT_FLAG&#xD;&#xA; WHERE  A.TAX_YEAR = @TAXYEAR&#xD;&#xA; &#xD;&#xA; --Part to update ER - Disability payee accounts as per BR - 091 - 22&#xD;&#xA; UPDATE  ANN1099R&#xD;&#xA;  SET   ANN1099R.TAXABLE_AMOUNT = ANN1099R.GROSS_BENEFIT_AMOUNT,   -- UPDATE THE PREVIOUS YEAR’S BOX 2A = THE SAME YEAR’S BOX 1 AMOUNT &#xD;&#xA;     ANN1099R.CAPITAL_GAIN = 0,  -- UPDATE BOX 3 = $0&#xD;&#xA;     ANN1099R.NON_TAXABLE_AMOUNT = 0,  -- UPDATE BOX 5 = $0&#xD;&#xA;     ANN1099R.DISTRIBUTION_CODE = '3'&#xD;&#xA;  FROM  SGT_PAYMENT_1099R ANN1099R&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT ER&#xD;&#xA;   ON  ANN1099R.PAYEE_ACCOUNT_ID = ER.PAYEE_ACCOUNT_ID AND ER.BENEFIT_ACCOUNT_SUB_TYPE_VALUE = 'ERTR'&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON  PAS.PAYEE_ACCOUNT_ID = ER.PAYEE_ACCOUNT_ID  &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON  PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT DISA&#xD;&#xA;   ON  ANN1099R.PERSON_ID = DISA.PAYEE_PERSLINK_ID AND DISA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PASR &#xD;&#xA;   ON  PASR.PAYEE_ACCOUNT_ID = DISA.PAYEE_ACCOUNT_ID  &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV1 &#xD;&#xA;   ON  PASR.STATUS_ID= CV1.CODE_ID AND PASR.STATUS_VALUE = CV1.CODE_VALUE&#xD;&#xA;  WHERE   ANN1099R.TAX_YEAR = @TAXYEAR &#xD;&#xA;    AND ANN1099R.TAX_YEAR &gt;= YEAR(DISA.BENEFIT_BEGIN_DATE)&#xD;&#xA;    AND (CV.DATA2 = 'CNLD')&#xD;&#xA;    AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (&#xD;&#xA;      SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = ER.PAYEE_ACCOUNT_ID&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )  -- ‘Payee Status’ for the payee with ‘Benefit Account Sub Type’ of ‘Early Retirement’ = ‘Cancelled’&#xD;&#xA;    AND ( CV1.DATA2 = 'APRD' ) &#xD;&#xA;    AND PASR.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (&#xD;&#xA;      SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = DISA.PAYEE_ACCOUNT_ID&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )  -- AND ‘Benefit account type’ is ‘Disability’ and Payee Account Status is in ‘Approved’ with ‘Status Effective after the last Correction&#xD;&#xA; &#xD;&#xA; DROP TABLE #TEMP&#xD;&#xA; &#xD;&#xA;DELETE &#xD;&#xA;FROM SGT_1099R_PAYMENT_HISTORY_LINK WHERE PAYMENT_1099R_ID IN &#xD;&#xA;( &#xD;&#xA;SELECT PAYMENT_1099R_ID FROM SGT_PAYMENT_1099R WHERE &#xD;&#xA;ISNULL(GROSS_BENEFIT_AMOUNT,0) = 0 &#xD;&#xA;AND ISNULL(TAXABLE_AMOUNT,0) = 0 &#xD;&#xA;AND ISNULL(NON_TAXABLE_AMOUNT,0) = 0 &#xD;&#xA;AND ISNULL(CAPITAL_GAIN,0) = 0 &#xD;&#xA;AND TAX_YEAR = @TAXYEAR &#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;DELETE &#xD;&#xA;FROM SGT_PAYMENT_1099R WHERE &#xD;&#xA;ISNULL(GROSS_BENEFIT_AMOUNT,0) = 0 &#xD;&#xA;AND ISNULL(TAXABLE_AMOUNT,0) = 0 &#xD;&#xA;AND ISNULL(NON_TAXABLE_AMOUNT,0) = 0 &#xD;&#xA;AND ISNULL(CAPITAL_GAIN,0) = 0 &#xD;&#xA;AND TAX_YEAR = @TAXYEAR &#xD;&#xA;&#xD;&#xA;END">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rpt945" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--CHECKING WHETHER THE MASTER TABLE IS AVAILABLE&#xD;&#xA;IF OBJECT_ID('TEMP_PAYMENT_DETAILS_1099R') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA; SELECT  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PHH.PERSON_ID,&#xD;&#xA;    PHH.ORG_ID,&#xD;&#xA;    PHH.[NAME],&#xD;&#xA;    PHH.BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;    PHH.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;    PHH.PLAN_ID,&#xD;&#xA;    PHH.BENEFIT_OPTION_ID,&#xD;&#xA;    PHH.BENEFIT_OPTION_VALUE,&#xD;&#xA;    PHH.DISTRIBUTION_CODE,&#xD;&#xA;    SUM(ISNULL(PHH.GROSS_AMOUNT,0)) AS GROSS_AMOUNT,&#xD;&#xA;    SUM(ISNULL(PHH.NON_TAXABLE_AMOUNT,0)) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;    SUM(ISNULL(PHH.CAPITAL_GAIN,0)) AS CAPITAL_GAIN,&#xD;&#xA;    SUM(ISNULL(PHH.TAXABLE_AMOUNT,0)) AS TAXABLE_AMOUNT,&#xD;&#xA;    SUM(ISNULL(PHH.FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;    SUM(ISNULL(PHH.STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,&#xD;&#xA;    PHH.PAYMENT_DATE,&#xD;&#xA;    PHH.CHECK_AMOUNT,&#xD;&#xA;    PHH.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;    PHH.AGE59_SPLIT_FLAG&#xD;&#xA; INTO  #TEMP&#xD;&#xA; FROM&#xD;&#xA; (&#xD;&#xA;  SELECT  PAYEE_ACCOUNT_ID,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     [NAME],&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SUM(ISNULL(GROSS_AMOUNT,0)) AS GROSS_AMOUNT,&#xD;&#xA;     SUM(ISNULL(NON_TAXABLE_AMOUNT,0)) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(CAPITAL_GAIN,0)) AS CAPITAL_GAIN,&#xD;&#xA;     SUM(ISNULL(TAXABLE_AMOUNT,0)) AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(ISNULL(STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,&#xD;&#xA;     PAYMENT_DATE,&#xD;&#xA;     SUM(ISNULL(CHECK_AMOUNT,0)) AS CHECK_AMOUNT,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     AGE59_SPLIT_FLAG&#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;  WHERE  PAYMENT_HISTORY_HEADER_ID IS NOT NULL&#xD;&#xA;  GROUP BY PAYEE_ACCOUNT_ID,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     [NAME],&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     AGE59_SPLIT_FLAG,     &#xD;&#xA;     PAYMENT_DATE&#xD;&#xA; UNION ALL&#xD;&#xA;  SELECT  PAYEE_ACCOUNT_ID,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     [NAME],&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SUM(isnull(GROSS_AMOUNT,0))*-1 AS GROSS_AMOUNT,&#xD;&#xA;     SUM(isnull(NON_TAXABLE_AMOUNT,0))*-1 AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(isnull(CAPITAL_GAIN,0))*-1 AS CAPITAL_GAIN,&#xD;&#xA;     SUM(isnull(TAXABLE_AMOUNT,0))*-1 AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(isnull(FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(isnull(STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,&#xD;&#xA;     PAYMENT_DATE,&#xD;&#xA;     SUM(isnull(CHECK_AMOUNT,0)) AS CHECK_AMOUNT,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     AGE59_SPLIT_FLAG&#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;  WHERE  BENEFIT_OVERPAYMENT_ID IS NOT NULL &#xD;&#xA;  GROUP BY PAYEE_ACCOUNT_ID,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     [NAME],&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     AGE59_SPLIT_FLAG,&#xD;&#xA;     PAYMENT_DATE&#xD;&#xA; ) PHH &#xD;&#xA; GROUP BY PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PHH.PERSON_ID,&#xD;&#xA;    PHH.ORG_ID,&#xD;&#xA;    PHH.[NAME],&#xD;&#xA;    PHH.BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;    PHH.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;    PHH.PLAN_ID,&#xD;&#xA;    PHH.BENEFIT_OPTION_ID,&#xD;&#xA;    PHH.BENEFIT_OPTION_VALUE,&#xD;&#xA;    PHH.DISTRIBUTION_CODE,&#xD;&#xA;    PHH.PAYMENT_DATE,&#xD;&#xA;    PHH.CHECK_AMOUNT,&#xD;&#xA;    PHH.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;    PHH.AGE59_SPLIT_FLAG&#xD;&#xA;-------------------------- Query for 945 Report ------------------------------------&#xD;&#xA;&#xD;&#xA; DECLARE @IRSORGID INT&#xD;&#xA; DECLARE @STATETAXORGID INT &#xD;&#xA; SELECT @IRSORGID = ORG_ID FROM SGT_ORGANIZATION WHERE ORG_CODE IN&#xD;&#xA; (SELECT DATA1 FROM SGS_CODE_VALUE WHERE CODE_ID = 52 AND CODE_VALUE = 'FTVN')&#xD;&#xA;&#xD;&#xA; SELECT @STATETAXORGID = ORG_ID FROM SGT_ORGANIZATION WHERE ORG_CODE IN&#xD;&#xA; (SELECT DATA1 FROM SGS_CODE_VALUE WHERE CODE_ID = 52 AND CODE_VALUE = 'STCM')&#xD;&#xA; SELECT * FROM&#xD;&#xA; (&#xD;&#xA; SELECT PHH.PAYMENT_DATE,&#xD;&#xA;   DATENAME(MONTH,PHH.PAYMENT_DATE)+'-'+CAST(YEAR(PHH.PAYMENT_DATE) AS VARCHAR(4)) AS MONT_YEAR,&#xD;&#xA;   CAST(YEAR(PHH.PAYMENT_DATE) AS VARCHAR(4))+RIGHT('0'+CAST(MONTH(PHH.PAYMENT_DATE) AS VARCHAR(2)),2) AS MONTH_YEAR_NUM,&#xD;&#xA;   'A' AS INDICATOR,&#xD;&#xA;   'Taxes Paid' as DESCR,&#xD;&#xA;   SUM(CASE WHEN PIT.ITEM_TYPE_CODE = 'ITEM622' THEN AMOUNT ELSE 0 END)  AS FED_TAX,&#xD;&#xA;   SUM(CASE WHEN PIT.ITEM_TYPE_CODE = 'ITEM624' THEN AMOUNT ELSE 0 END)  AS STATE_TAX&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA; INNER JOIN  SGT_PAYMENT_HISTORY_DETAIL PHD &#xD;&#xA;   ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_SCHEDULE PS&#xD;&#xA;   ON PHH.PAYMENT_SCHEDULE_ID = PS.PAYMENT_SCHEDULE_ID &#xD;&#xA; INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;   ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; WHERE  YEAR(PHH.PAYMENT_DATE)=  @TaxYear&#xD;&#xA; AND   PHH.STATUS_VALUE &lt;&gt; 'CNLD' &#xD;&#xA; AND   PHH.ORG_ID IN (@STATETAXORGID,@IRSORGID)&#xD;&#xA; AND   PS.SCHEDULE_TYPE_VALUE = 'VNPM'&#xD;&#xA; GROUP BY PHH.PAYMENT_DATE&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT &#xD;&#xA;    PAYMENT_DATE,&#xD;&#xA;    DATENAME(MONTH,PAYMENT_DATE)+'-'+CAST(YEAR(PAYMENT_DATE) AS VARCHAR(4)) AS MONT_YEAR,&#xD;&#xA;    CAST(YEAR(PAYMENT_DATE) AS VARCHAR(4))+RIGHT('0'+CAST(MONTH(PAYMENT_DATE) AS VARCHAR(2)),2) AS MONTH_YEAR_NUM,&#xD;&#xA;    'B' AS INDICATOR,&#xD;&#xA;    'Taxes Withheld' as DESCR,&#xD;&#xA;    SUM(FED_TAX_AMOUNT) AS FED_TAX,&#xD;&#xA;    SUM(STATE_TAX_AMOUNT) AS STATE_TAX&#xD;&#xA; FROM  #TEMP &#xD;&#xA; GROUP BY  PAYMENT_DATE&#xD;&#xA; ) FINAL&#xD;&#xA; ORDER BY INDICATOR,PAYMENT_DATE &#xD;&#xA; DROP TABLE #TEMP&#xD;&#xA;END">
      <parameters>
        <parameter ID="@TaxYear" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptCreate1099rDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT   CAST(PAY1099R.PAYEE_ACCOUNT_ID AS VARCHAR(50)) AS ACCT_NUM,&#xD;&#xA;    ISNULL(PAY1099R.PERSON_ID,PAY1099R.ORG_ID) AS PERSON_ID,&#xD;&#xA;    PAY1099R.[NAME] AS MEMBER_NAME,&#xD;&#xA;    PAY1099R.GROSS_BENEFIT_AMOUNT AS GROSS_DIST,&#xD;&#xA;    PAY1099R.TAXABLE_AMOUNT AS TAXABLE_AMT,&#xD;&#xA;    PAY1099R.NON_TAXABLE_AMOUNT AS NON_TAXABLE,&#xD;&#xA;    PAY1099R.CAPITAL_GAIN AS CAPITAL_GAIN,&#xD;&#xA;    PAY1099R.FED_TAX_AMOUNT AS FED_INCOME_TAX_WH,&#xD;&#xA;    PAY1099R.STATE_TAX_AMOUNT AS STATE_TAX_WH,&#xD;&#xA;    PAY1099R.DISTRIBUTION_CODE AS DIST_CD,&#xD;&#xA;    PA.NONTAXABLE_BEGINNING_BALANCE AS BEG_NON_TAXABLE&#xD;&#xA;FROM   SGT_PAYMENT_1099R PAY1099R WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;   ON PAY1099R.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN &#xD;&#xA;   (&#xD;&#xA;    SELECT PAYEE_ACCOUNT_ID,TOTAL_DISTRIBUTION_FLAG, DISTRIBUTION_CODE, ROLLOVER_PAYMENT_FLAG, AGE59_SPLIT_FLAG ,PAYMENT_1099R_ID AS PAYMENT_1099R_ID&#xD;&#xA;     FROM SGT_PAYMENT_1099R&#xD;&#xA;     WHERE TAX_YEAR = @TAXYEAR&#xD;&#xA;     --GROUP BY PAYEE_ACCOUNT_ID,TOTAL_DISTRIBUTION_FLAG, DISTRIBUTION_CODE, ROLLOVER_PAYMENT_FLAG, AGE59_SPLIT_FLAG &#xD;&#xA;   ) LATEST1099R&#xD;&#xA;   ON PAY1099R.PAYMENT_1099R_ID = LATEST1099R.PAYMENT_1099R_ID&#xD;&#xA;WHERE   PAY1099R.TAX_YEAR = @TAXYEAR&#xD;&#xA;">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptMonthlyAnnuitant1099R" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--CHECKING WHETHER THE MASTER TABLE IS AVAILABLE&#xD;&#xA;IF OBJECT_ID('TEMP_PAYMENT_DETAILS_1099R') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA; SELECT  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PHH.PERSON_ID,&#xD;&#xA;    PHH.ORG_ID,&#xD;&#xA;    PHH.[NAME],&#xD;&#xA;    PHH.BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;    PHH.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;    PHH.PLAN_ID,&#xD;&#xA;    PHH.BENEFIT_OPTION_ID,&#xD;&#xA;    PHH.BENEFIT_OPTION_VALUE,&#xD;&#xA;    PHH.DISTRIBUTION_CODE,&#xD;&#xA;    ISNULL(PHH.GROSS_AMOUNT,0)+ISNULL(BEN.GROSS_AMOUNT,0) AS GROSS_AMOUNT,&#xD;&#xA;    ISNULL(PHH.NON_TAXABLE_AMOUNT,0)+ISNULL(BEN.NON_TAXABLE_AMOUNT,0) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;    ISNULL(PHH.CAPITAL_GAIN,0)+ISNULL(BEN.CAPITAL_GAIN,0) AS CAPITAL_GAIN,&#xD;&#xA;    ISNULL(PHH.TAXABLE_AMOUNT,0)+ISNULL(BEN.TAXABLE_AMOUNT,0) AS TAXABLE_AMOUNT,&#xD;&#xA;    ISNULL(PHH.FED_TAX_AMOUNT,0)+ISNULL(BEN.FED_TAX_AMOUNT,0) AS FED_TAX_AMOUNT,&#xD;&#xA;    ISNULL(PHH.STATE_TAX_AMOUNT,0)+ISNULL(BEN.STATE_TAX_AMOUNT,0) AS STATE_TAX_AMOUNT,    &#xD;&#xA;    PHH.CHECK_AMOUNT,&#xD;&#xA;    PHH.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;    PHH.AGE59_SPLIT_FLAG&#xD;&#xA; INTO  #TEMP&#xD;&#xA; FROM&#xD;&#xA; (&#xD;&#xA;  SELECT  PAYEE_ACCOUNT_ID,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     [NAME],&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SUM(ISNULL(GROSS_AMOUNT,0)) AS GROSS_AMOUNT,&#xD;&#xA;     SUM(ISNULL(NON_TAXABLE_AMOUNT,0)) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(CAPITAL_GAIN,0)) AS CAPITAL_GAIN,&#xD;&#xA;     SUM(ISNULL(TAXABLE_AMOUNT,0)) AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(ISNULL(STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,     &#xD;&#xA;     SUM(ISNULL(CHECK_AMOUNT,0)) AS CHECK_AMOUNT,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     AGE59_SPLIT_FLAG&#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;  WHERE  PAYMENT_HISTORY_HEADER_ID IS NOT NULL&#xD;&#xA;  GROUP BY PAYEE_ACCOUNT_ID,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     [NAME],&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     AGE59_SPLIT_FLAG&#xD;&#xA; ) PHH&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; (&#xD;&#xA;  SELECT  PAYEE_ACCOUNT_ID,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     [NAME],&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SUM(isnull(GROSS_AMOUNT,0))*-1 AS GROSS_AMOUNT,&#xD;&#xA;     SUM(isnull(NON_TAXABLE_AMOUNT,0))*-1 AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(isnull(CAPITAL_GAIN,0))*-1 AS CAPITAL_GAIN,&#xD;&#xA;     SUM(isnull(TAXABLE_AMOUNT,0))*-1 AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(isnull(FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(isnull(STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,    &#xD;&#xA;     SUM(isnull(CHECK_AMOUNT,0)) AS CHECK_AMOUNT,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     AGE59_SPLIT_FLAG&#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;  WHERE  BENEFIT_OVERPAYMENT_ID IS NOT NULL &#xD;&#xA;  GROUP BY PAYEE_ACCOUNT_ID,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     [NAME],&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     AGE59_SPLIT_FLAG    &#xD;&#xA; ) BEN ON PHH.PAYEE_ACCOUNT_ID = BEN.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PHH.ROLLOVER_PAYMENT_FLAG = BEN.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;   AND PHH.DISTRIBUTION_CODE = BEN.DISTRIBUTION_CODE&#xD;&#xA;   AND PHH.AGE59_SPLIT_FLAG = BEN.AGE59_SPLIT_FLAG&#xD;&#xA;--SELECTING DATA FOR REPORT &#xD;&#xA; SELECT   &#xD;&#xA;    CAST(A.PAYEE_ACCOUNT_ID AS VARCHAR(50)) AS ACCT_NUM,&#xD;&#xA;    ISNULL(A.PERSON_ID,A.ORG_ID) AS PERSON_ID,&#xD;&#xA;    A.[NAME] AS PAYEE_NAME,&#xD;&#xA;    CV2.[DESCRIPTION] AS PAYEE_STATUS,&#xD;&#xA;    PL.PLAN_NAME AS PLAN_NAME,&#xD;&#xA;    CV1.[DESCRIPTION] AS BENEFIT_OPTION,&#xD;&#xA;    A.DISTRIBUTION_CODE AS DIST_CD,&#xD;&#xA;    A.GROSS_AMOUNT AS PAID_YTD,&#xD;&#xA;    A.NON_TAXABLE_AMOUNT AS NON_TAXABLE_YTD,&#xD;&#xA;    A.CAPITAL_GAIN AS CAPITAL_GAINS,&#xD;&#xA;    A.TAXABLE_AMOUNT AS TAXABLE_YTD,&#xD;&#xA;    A.FED_TAX_AMOUNT AS FED_TAX_YTD,&#xD;&#xA;    A.STATE_TAX_AMOUNT AS STATE_TAX_YTD,       &#xD;&#xA;    NULL AS DIST_PER   &#xD;&#xA; FROM  #TEMP A&#xD;&#xA;  INNER JOIN SGT_PLAN PL ON A.PLAN_ID = PL.PLAN_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV1 ON A.BENEFIT_OPTION_ID = CV1.CODE_ID AND A.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS ON PAS.PAYEE_ACCOUNT_ID = A.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV2 ON PAS.STATUS_ID = CV2.CODE_ID AND PAS.STATUS_VALUE = CV2.CODE_VALUE  &#xD;&#xA; Where (A.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;    OR (A.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') &#xD;&#xA;    AND A.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD')))&#xD;&#xA;    AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = A.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;    AND PAS.STATUS_EFFECTIVE_DATE &lt;=  @PAYMENTDATE&#xD;&#xA; &#xD;&#xA;--DROPPING THE TEMP TABLE  &#xD;&#xA; DROP TABLE #TEMP&#xD;&#xA;END">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptMonthlyRefund1099R" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--CHECKING WHETHER THE MASTER TABLE IS AVAILABLE&#xD;&#xA;IF OBJECT_ID('TEMP_PAYMENT_DETAILS_1099R') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA; SELECT  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PHH.PERSON_ID,&#xD;&#xA;    PHH.ORG_ID,&#xD;&#xA;    PHH.[NAME],&#xD;&#xA;    PHH.BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;    PHH.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;    PHH.PLAN_ID,&#xD;&#xA;    PHH.BENEFIT_OPTION_ID,&#xD;&#xA;    PHH.BENEFIT_OPTION_VALUE,&#xD;&#xA;    PHH.DISTRIBUTION_CODE,&#xD;&#xA;    ISNULL(PHH.GROSS_AMOUNT,0)+ISNULL(BEN.GROSS_AMOUNT,0) AS GROSS_AMOUNT,&#xD;&#xA;    ISNULL(PHH.NON_TAXABLE_AMOUNT,0)+ISNULL(BEN.NON_TAXABLE_AMOUNT,0) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;    ISNULL(PHH.NON_TAXABLE_ROLLOVER,0)+ISNULL(BEN.NON_TAXABLE_ROLLOVER,0) AS NON_TAXABLE_ROLLOVER, -- 10009&#xD;&#xA;    ISNULL(PHH.CAPITAL_GAIN,0)+ISNULL(BEN.CAPITAL_GAIN,0) AS CAPITAL_GAIN,&#xD;&#xA;    ISNULL(PHH.TAXABLE_AMOUNT,0)+ISNULL(BEN.TAXABLE_AMOUNT,0) AS TAXABLE_AMOUNT,&#xD;&#xA;    ISNULL(PHH.FED_TAX_AMOUNT,0)+ISNULL(BEN.FED_TAX_AMOUNT,0) AS FED_TAX_AMOUNT,&#xD;&#xA;    ISNULL(PHH.STATE_TAX_AMOUNT,0)+ISNULL(BEN.STATE_TAX_AMOUNT,0) AS STATE_TAX_AMOUNT,&#xD;&#xA;    PHH.PAYMENT_DATE,&#xD;&#xA;    PHH.CHECK_AMOUNT,&#xD;&#xA;    PHH.CHECK_NUMBER,&#xD;&#xA;    PHH.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;    CAST(YEAR(PHH.PAYMENT_DATE) AS VARCHAR(4))+RIGHT('0'+CAST(MONTH(PHH.PAYMENT_DATE) AS VARCHAR(2)),2) AS MONTH_YEAR,&#xD;&#xA;    PHH.AGE59_SPLIT_FLAG&#xD;&#xA; INTO  #TEMP&#xD;&#xA; FROM&#xD;&#xA; (&#xD;&#xA;  SELECT  PAYEE_ACCOUNT_ID,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     [NAME],&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     CHECK_NUMBER,&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SUM(ISNULL(GROSS_AMOUNT,0)) AS GROSS_AMOUNT,&#xD;&#xA;     SUM(ISNULL(NON_TAXABLE_AMOUNT,0)) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(NON_TAXABLE_ROLLOVER,0)) AS NON_TAXABLE_ROLLOVER, --10009&#xD;&#xA;     SUM(ISNULL(CAPITAL_GAIN,0)) AS CAPITAL_GAIN,&#xD;&#xA;     SUM(ISNULL(TAXABLE_AMOUNT,0)) AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(ISNULL(STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,&#xD;&#xA;     PAYMENT_DATE,&#xD;&#xA;     SUM(ISNULL(CHECK_AMOUNT,0)) AS CHECK_AMOUNT,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     AGE59_SPLIT_FLAG&#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;  WHERE  PAYMENT_HISTORY_HEADER_ID IS NOT NULL&#xD;&#xA;  GROUP BY PAYEE_ACCOUNT_ID,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     [NAME],&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SSN,&#xD;&#xA;     CHECK_NUMBER,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     AGE59_SPLIT_FLAG,     &#xD;&#xA;     PAYMENT_DATE&#xD;&#xA; ) PHH&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; (&#xD;&#xA;  SELECT  PAYEE_ACCOUNT_ID,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     [NAME],&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SUM(isnull(GROSS_AMOUNT,0))*-1 AS GROSS_AMOUNT,&#xD;&#xA;     SUM(isnull(NON_TAXABLE_AMOUNT,0))*-1 AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(isnull(NON_TAXABLE_ROLLOVER,0))*-1 AS NON_TAXABLE_ROLLOVER, -- 10009&#xD;&#xA;     SUM(isnull(CAPITAL_GAIN,0))*-1 AS CAPITAL_GAIN,&#xD;&#xA;     SUM(isnull(TAXABLE_AMOUNT,0))*-1 AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(isnull(FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(isnull(STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,&#xD;&#xA;     PAYMENT_DATE,&#xD;&#xA;     SUM(isnull(CHECK_AMOUNT,0)) AS CHECK_AMOUNT,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     CHECK_NUMBER,&#xD;&#xA;     AGE59_SPLIT_FLAG&#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;  WHERE  BENEFIT_OVERPAYMENT_ID IS NOT NULL &#xD;&#xA;  GROUP BY PAYEE_ACCOUNT_ID,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     [NAME],&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     AGE59_SPLIT_FLAG,&#xD;&#xA;     PAYMENT_DATE,&#xD;&#xA;     CHECK_NUMBER&#xD;&#xA; ) BEN ON PHH.PAYEE_ACCOUNT_ID = BEN.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PHH.ROLLOVER_PAYMENT_FLAG = BEN.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;   AND PHH.DISTRIBUTION_CODE = BEN.DISTRIBUTION_CODE&#xD;&#xA;   AND PHH.AGE59_SPLIT_FLAG = BEN.AGE59_SPLIT_FLAG&#xD;&#xA;--SELECTING DATA FOR REPORT &#xD;&#xA;;WITH PARENT AS&#xD;&#xA;(&#xD;&#xA; SELECT   &#xD;&#xA;    CAST(A.PAYEE_ACCOUNT_ID AS VARCHAR(50)) AS ACCT_NUM,&#xD;&#xA;    ISNULL(A.PERSON_ID,A.ORG_ID) AS PERSON_ID,&#xD;&#xA;    A.[NAME] AS PAYEE_NAME,&#xD;&#xA;    CV2.[DESCRIPTION] AS PAYEE_STATUS,&#xD;&#xA;    PL.PLAN_NAME AS PLAN_NAME,&#xD;&#xA;    CV1.[DESCRIPTION] AS BENEFIT_OPTION,&#xD;&#xA;    A.DISTRIBUTION_CODE AS DIST_CD,&#xD;&#xA;    A.GROSS_AMOUNT AS TOTAL_PAID,&#xD;&#xA;    A.NON_TAXABLE_AMOUNT AS NON_TAX,    &#xD;&#xA;    A.TAXABLE_AMOUNT AS TAXABLE,&#xD;&#xA;    A.NON_TAXABLE_ROLLOVER AS NON_TAX_ROLLOVER, -- 10009&#xD;&#xA;    A.FED_TAX_AMOUNT AS FED_TAX,&#xD;&#xA;    A.STATE_TAX_AMOUNT AS STATE_TAX,  &#xD;&#xA;    A.CHECK_NUMBER AS CHECK_NUM,  &#xD;&#xA;    A.MONTH_YEAR,&#xD;&#xA;    (SELECT TOP 1 &#xD;&#xA;       CASE WHEN PA.ACCOUNT_RELATION_VALUE = 'BENE' THEN BENEFIT_PERCENTAGE ELSE 0 END&#xD;&#xA;       FROM SGT_BENEFIT_CALCULATION_PAYEE BCP&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT PA ON BCP.PAYEE_ACCOUNT_ID =PA.PAYEE_ACCOUNT_ID &#xD;&#xA;       AND BCP.BENEFIT_CALCULATION_ID = PA.CALCULATION_ID&#xD;&#xA;      WHERE PA.PAYEE_ACCOUNT_ID = A.PAYEE_ACCOUNT_ID&#xD;&#xA;    )&#xD;&#xA;    AS DIST_PER,&#xD;&#xA;    A.PAYMENT_DATE AS CHECK_DATE,&#xD;&#xA;    A.CHECK_AMOUNT AS CHECK_AMOUNT,&#xD;&#xA;    A.CAPITAL_GAIN AS CAPITAL_GAINS&#xD;&#xA;    ,ROW_NUMBER() OVER (PARTITION BY A.PAYEE_ACCOUNT_ID,A.GROSS_AMOUNT ORDER BY A.PAYMENT_DATE DESC) as ROWNUM  -- PIR 10509&#xD;&#xA; FROM  #TEMP A&#xD;&#xA;  INNER JOIN SGT_PLAN PL ON A.PLAN_ID = PL.PLAN_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV1 ON A.BENEFIT_OPTION_ID = CV1.CODE_ID AND A.BENEFIT_OPTION_VALUE = CV1.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS ON PAS.PAYEE_ACCOUNT_ID = A.PAYEE_ACCOUNT_ID&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV2 ON PAS.STATUS_ID = CV2.CODE_ID AND PAS.STATUS_VALUE = CV2.CODE_VALUE  &#xD;&#xA; Where NOT (A.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RETR', 'DISA') &#xD;&#xA;    OR (A.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH', 'PSTD') &#xD;&#xA;    AND A.BENEFIT_OPTION_VALUE NOT IN  ('REFD','AURD','RGRD')))&#xD;&#xA;    AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = A.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= A.PAYMENT_DATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;    AND PAS.STATUS_EFFECTIVE_DATE &lt;= A.PAYMENT_DATE&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT * FROM PARENT WHERE ROWNUM = 1 --PIR 10509 &#xD;&#xA;AND CHECK_AMOUNT != 0&#xD;&#xA;--DROPPING THE TEMP TABLE  &#xD;&#xA; DROP TABLE #TEMP&#xD;&#xA;END&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="rpt1099rForm" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--&quot;entPayment1099r.rpt1099rForm&quot;&#xD;&#xA;SELECT   TAX_YEAR AS RUN_YEAR,&#xD;&#xA;    PAY1099R.GROSS_BENEFIT_AMOUNT AS GROSS_DIST_AMOUNT,&#xD;&#xA;    PAY1099R.TAXABLE_AMOUNT AS TAXABLE_AMOUNT,&#xD;&#xA;    '' AS TAXABLE_AMT_NOT_DETERMINED_FLAG,&#xD;&#xA;    ISNULL(PAY1099R.TOTAL_DISTRIBUTION_FLAG,'') AS TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;    PAY1099R.CAPITAL_GAIN AS CAPITAL_GAIN,&#xD;&#xA;    PAY1099R.FED_TAX_AMOUNT AS FEDERAL_TAX,&#xD;&#xA;    PAY1099R.NON_TAXABLE_AMOUNT AS EMPLOYEE_CONTRIBUTION_AMT,&#xD;&#xA;    (PAY1099R.TAXABLE_AMOUNT + PAY1099R.NON_TAXABLE_AMOUNT + PAY1099R.CAPITAL_GAIN - PAY1099R.FED_TAX_AMOUNT - PAY1099R.STATE_TAX_AMOUNT) AS NET_AMOUNT,&#xD;&#xA;    PAY1099R.DISTRIBUTION_CODE,&#xD;&#xA;    NULL AS COMMENTS,&#xD;&#xA;    NULL AS OTHER_AMOUNTS,&#xD;&#xA;    0 AS OTHER_PERCENTAGE,&#xD;&#xA;    PAY1099R.DIST_PERCENTAGE AS TOTAL_DIST_PERCENTAGE,&#xD;&#xA;    CASE WHEN PAY1099R.TAX_YEAR = YEAR(PA.BENEFIT_BEGIN_DATE)&#xD;&#xA;      THEN PA.NONTAXABLE_BEGINNING_BALANCE &#xD;&#xA;      ELSE NULL END AS TOTAL_EMPLOYEE_CONTRIB_AMT,&#xD;&#xA;    PAY1099R.STATE_TAX_AMOUNT AS STATE_TAX,&#xD;&#xA;    NULL AS STATE_DISTRIBUTION,&#xD;&#xA;    NULL AS LOCAL_TAX,&#xD;&#xA;    NULL AS LOCALITY,&#xD;&#xA;    NULL AS LOCAL_DISTRIBUTION,&#xD;&#xA;    PAY1099R.PAYEE_ACCOUNT_ID,&#xD;&#xA;    UPPER(PAY1099R.[NAME]) AS PAYEE_NAME,&#xD;&#xA;    PAY1099R.SSN AS SSN_TIN,&#xD;&#xA;    ADDR_LINE_1,    &#xD;&#xA;    UPPER(ISNULL(ADDR_LINE_2,'')) AS ADDR_LINE_2,&#xD;&#xA;    UPPER(ISNULL(ADDR_CITY,'')) AS ADDR_CITY,&#xD;&#xA;    UPPER(ISNULL(PAY1099R.ADDR_STATE_VALUE,'')) AS ADDR_STATE_VALUE,&#xD;&#xA;    ISNULL(ADDR_ZIP_CODE,'') AS ADDR_ZIP_CODE,&#xD;&#xA;    UPPER(ISNULL(FOREIGN_PROVINCE,'')) + ' ' +ISNULL(FOREIGN_POSTAL_CODE,'') AS ADDR_LINE_3,&#xD;&#xA;    ISNULL(CORRECTED_FLAG,'') AS CORRECTED_FLAG,&#xD;&#xA;    AGE59_SPLIT_FLAG,&#xD;&#xA;    --PAY1099R.*,&#xD;&#xA;    PAY1099R.ADDR_STATE_VALUE as addr_state,&#xD;&#xA;    CHAR(64+ROW_NUMBER() OVER (PARTITION BY PAY1099R.PAYEE_ACCOUNT_ID  ORDER BY PAY1099R.PAYEE_ACCOUNT_ID , PAY1099R.PAYMENT_1099R_ID )) AS ID_SUFFIX &#xD;&#xA;    ,PAYMENT_1099R_ID&#xD;&#xA;    ,NAME&#xD;&#xA;    --PIR 12370 start&#xD;&#xA;    ,PAY1099R.PERSON_ID&#xD;&#xA;&#x9;,PAY1099R.TAX_YEAR&#xD;&#xA;&#x9;,PAY1099R.SSN&#xD;&#xA;&#x9;,PAY1099R.GROSS_BENEFIT_AMOUNT&#xD;&#xA;&#x9;,PAY1099R.FED_TAX_AMOUNT&#xD;&#xA;&#x9;,PAY1099R.NON_TAXABLE_AMOUNT&#xD;&#xA;&#x9;,PAY1099R.DIST_PERCENTAGE&#xD;&#xA;&#x9;,PAY1099R.STATE_TAX_AMOUNT&#xD;&#xA;&#x9;,PAY1099R.FEDERAL_ID&#xD;&#xA;&#x9;,PAY1099R.ORG_ID&#xD;&#xA;&#x9;--PIR 12370 end&#xD;&#xA;    INTO #FINAL&#xD;&#xA;FROM   SGT_PAYMENT_1099R PAY1099R WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;   ON PAY1099R.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK) &#xD;&#xA;   ON PAY1099R.ADDR_STATE_ID = CV1.CODE_ID &#xD;&#xA;   AND PAY1099R.ADDR_STATE_VALUE = CV1.CODE_VALUE&#xD;&#xA;WHERE   PAY1099R.TAX_YEAR = @TAXYEAR&#xD;&#xA;ORDER BY PAY1099R.PAYMENT_1099R_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE PAY1099R    &#xD;&#xA;SET ID_SUFFIX = F.ID_SUFFIX &#xD;&#xA;FROM   SGT_PAYMENT_1099R PAY1099R WITH(NOLOCK)&#xD;&#xA; INNER JOIN #FINAL F WITH(NOLOCK)&#xD;&#xA;   ON PAY1099R.PAYMENT_1099R_ID = F.PAYMENT_1099R_ID&#xD;&#xA;WHERE PAY1099R.TAX_YEAR = @TAXYEAR&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT * FROM #FINAL &#xD;&#xA;&#xD;&#xA;DROP TABLE #FINAL ">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreateTableForCorrected1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--&quot;entPayment1099r.CreateTableForCorrected1099r&quot;&#xD;&#xA;DECLARE @PROCESSDATE DATETIME&#xD;&#xA;DECLARE @STATUSEFFECTIVEDATE DATETIME&#xD;&#xA;&#xD;&#xA;DECLARE @PERSLINKGOLIVEDATE AS DATETIME &#xD;&#xA;SELECT @PERSLINKGOLIVEDATE = CAST(DATA1 AS DATETIME) &#xD;&#xA;FROM SGS_CODE_VALUE WHERE CODE_ID = 52 AND CODE_VALUE = 'PGLD'&#xD;&#xA;&#xD;&#xA;SELECT @PROCESSDATE = MAX(PROCESS_DATE) &#xD;&#xA; FROM SGT_PAYMENT_1099R_REQUEST &#xD;&#xA; WHERE STATUS_VALUE = 'PRSD' &#xD;&#xA;  AND REQUEST_TYPE_VALUE = 'CORR'&#xD;&#xA;  AND YEAR(PROCESS_DATE) = @TaxYear&#xD;&#xA;&#xD;&#xA;If @PROCESSDATE is Null Begin&#xD;&#xA; SELECT @PROCESSDATE = MAX(PROCESS_DATE) &#xD;&#xA;  FROM SGT_PAYMENT_1099R_REQUEST &#xD;&#xA;  WHERE STATUS_VALUE = 'PRSD' &#xD;&#xA;   AND REQUEST_TYPE_VALUE = 'ANNB'&#xD;&#xA;   AND YEAR(PROCESS_DATE) &lt;= @TaxYear &#xD;&#xA;   --AND TAX_YEAR = (CAST(@TAXYEAR AS INT) -1)&#xD;&#xA;End&#xD;&#xA;&#xD;&#xA;SET @STATUSEFFECTIVEDATE = CONVERT(DATETIME,CONVERT(VARCHAR,@PROCESSDATE,101) ,110)&#xD;&#xA;---------------End of Query to get Process Date -------------------------------&#xD;&#xA;---If @PROCESSDATE is null  exit the batch with the message as described in TDD&#xD;&#xA;-------------------------------------------------------------------------------&#xD;&#xA;IF @PROCESSDATE IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;&#xD;&#xA; ---------------CREATING TEMP TABLE FOR 1099R TO STORE PAYMENT DETAILS---------&#xD;&#xA;&#xD;&#xA; CREATE TABLE [DBO].[TEMP_CORRECTED_PAYMENT_DETAILS_1099R](&#xD;&#xA;  [PAYMENT_DETAILS_1099R_ID] [INT] IDENTITY(1,1) NOT NULL,&#xD;&#xA;  [PAYEE_ACCOUNT_ID] [INT] NULL,&#xD;&#xA;  [DISA_PAYEE_ACCOUNT_ID] [INT] NULL,&#xD;&#xA;  [PAYMENT_HISTORY_HEADER_ID] [INT] NULL,&#xD;&#xA;  [BENEFIT_OVERPAYMENT_ID] [INT] NULL,&#xD;&#xA;  [PLAN_ID] [INT] NULL,&#xD;&#xA;  [BENEFIT_ACCOUNT_TYPE_ID] [INT] NULL,&#xD;&#xA;  [BENEFIT_ACCOUNT_TYPE_VALUE] [VARCHAR](4) NULL,&#xD;&#xA;  [BENEFIT_OPTION_ID] [INT] NULL,&#xD;&#xA;  [BENEFIT_OPTION_VALUE] [VARCHAR](4) NULL,&#xD;&#xA;  [PERSON_ID] [INT] NULL,&#xD;&#xA;  [ORG_ID] [INT] NULL,&#xD;&#xA;  [DATE_OF_1099R] [DATETIME] NULL,&#xD;&#xA;  [ROLLOVER_PAYMENT_FLAG] [VARCHAR](1) NULL,&#xD;&#xA;  [GROSS_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA;  [TAXABLE_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA;  [CAPITAL_GAIN] [DECIMAL](38, 2) NULL,&#xD;&#xA;  [NON_TAXABLE_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA;  [FED_TAX_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA;  [STATE_TAX_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA;  [TOTAL_DISTRIBUTION_FLAG] [VARCHAR](1) NULL,&#xD;&#xA;  [NAME] [VARCHAR](153) NULL,&#xD;&#xA;  [AGE_ON_BENEFIT_BEGIN_DATE] [NUMERIC](18, 6) NULL,&#xD;&#xA;  [AGE_ON_PAYMENT_DATE] [NUMERIC](18, 6) NULL,&#xD;&#xA;  [DISTRIBUTION_CODE] [VARCHAR](2) NULL,&#xD;&#xA;  [SSN] [VARCHAR](9) NULL,&#xD;&#xA;  [FEDERAL_ID] [VARCHAR](9) NULL,&#xD;&#xA;  [AGE59_SPLIT_FLAG] [VARCHAR](1) NULL,&#xD;&#xA;  [CHECK_NUMBER] [VARCHAR](15) NULL,&#xD;&#xA;  [CHECK_AMOUNT] [DECIMAL](38, 2) NULL,&#xD;&#xA;  [INDICATOR] [CHAR](2) NULL&#xD;&#xA; ) ON [PRIMARY]&#xD;&#xA;-- --------- All the queries below to be moved to cdoPayment1099R --------------&#xD;&#xA;-- ------------------ Query to Pick Approved Recoveries  -----------------------&#xD;&#xA; INSERT INTO TEMP_CORRECTED_PAYMENT_DETAILS_1099R&#xD;&#xA; ([PAYEE_ACCOUNT_ID],[DISA_PAYEE_ACCOUNT_ID],[PAYMENT_HISTORY_HEADER_ID],[BENEFIT_OVERPAYMENT_ID],[PLAN_ID],[BENEFIT_ACCOUNT_TYPE_ID],[BENEFIT_ACCOUNT_TYPE_VALUE],&#xD;&#xA; [BENEFIT_OPTION_ID],[BENEFIT_OPTION_VALUE],[PERSON_ID],[ORG_ID],[DATE_OF_1099R],[ROLLOVER_PAYMENT_FLAG],[GROSS_AMOUNT],[TAXABLE_AMOUNT],&#xD;&#xA; [CAPITAL_GAIN],[NON_TAXABLE_AMOUNT],[FED_TAX_AMOUNT],[STATE_TAX_AMOUNT],[TOTAL_DISTRIBUTION_FLAG],&#xD;&#xA; [NAME],[AGE_ON_BENEFIT_BEGIN_DATE],[AGE_ON_PAYMENT_DATE],[DISTRIBUTION_CODE],[SSN],[FEDERAL_ID],[AGE59_SPLIT_FLAG],[CHECK_NUMBER],&#xD;&#xA; [CHECK_AMOUNT],[INDICATOR])&#xD;&#xA; SELECT OP.PAYEE_ACCOUNT_ID,&#xD;&#xA;   NULL AS DISA_PAYEE_ACCOUNT_ID,&#xD;&#xA;   NULL,&#xD;&#xA;   OP.BENEFIT_OVERPAYMENT_ID,&#xD;&#xA;   NULL,&#xD;&#xA;   NULL,&#xD;&#xA;   NULL,&#xD;&#xA;   NULL,&#xD;&#xA;   NULL,&#xD;&#xA;   PA.PAYEE_PERSLINK_ID,&#xD;&#xA;   NULL,   &#xD;&#xA;   DATE_OF_1099R,&#xD;&#xA;   'N' AS ROLLOVER_PAYMENT_FLAG,   &#xD;&#xA;      (SUM(CASE WHEN (PR.STATUS_VALUE='WROF' AND PR.REPAYMENT_TYPE_VALUE='LUSM')&#xD;&#xA;    THEN OPD.AMOUNT    &#xD;&#xA;    ELSE     &#xD;&#xA;     (CASE&#xD;&#xA;        WHEN  PIT.ITEM_TYPE_DIRECTION = 1 and PAYMENT_1099R_FLAG = 'Y' and VENDOR_FLAG= 'N' THEN OPD.AMOUNT &#xD;&#xA;      ELSE&#xD;&#xA;       (CASE when allow_rollover_code_value = 'RRED' then OPD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION ELSE 0 END)&#xD;&#xA;      END) &#xD;&#xA;   END) - (CASE WHEN (PR.STATUS_VALUE='WROF' AND PR.REPAYMENT_TYPE_VALUE='LUSM') THEN PR.GROSS_REDUCTION_AMOUNT ELSE 0.00 END))&#xD;&#xA;&#x9;AS GROSS_AMOUNT,&#xD;&#xA;   (SUM(CASE WHEN (PR.STATUS_VALUE='WROF' AND PR.REPAYMENT_TYPE_VALUE='LUSM')&#xD;&#xA;    THEN OPD.AMOUNT    &#xD;&#xA;    ELSE     &#xD;&#xA;     (CASE&#xD;&#xA;        WHEN  PIT.ITEM_TYPE_DIRECTION = 1 and PAYMENT_1099R_FLAG = 'Y' and VENDOR_FLAG= 'N' and TAXABLE_ITEM_FLAG = 'Y'  THEN OPD.AMOUNT &#xD;&#xA;      ELSE&#xD;&#xA;       (CASE when allow_rollover_code_value = 'RRED' AND TAXABLE_ITEM_FLAG = 'Y' then OPD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION ELSE 0 END)&#xD;&#xA;      END) &#xD;&#xA;   END) - (CASE WHEN (PR.STATUS_VALUE='WROF' AND PR.REPAYMENT_TYPE_VALUE='LUSM') THEN PR.GROSS_REDUCTION_AMOUNT ELSE 0.00 END))&#xD;&#xA;&#x9; AS TAXABLE_AMOUNT, &#xD;&#xA;   SUM(CASE WHEN &#xD;&#xA;     PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')&#xD;&#xA;     and PIT.ITEM_TYPE_CODE in ('ITEM5','ITEM16')&#xD;&#xA;    THEN &#xD;&#xA;     OPD.AMOUNT &#xD;&#xA;    ELSE 0 END&#xD;&#xA;    )  AS CAPITAL_GAIN,&#xD;&#xA;   SUM(CASE WHEN &#xD;&#xA;     PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;     and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;     and VENDOR_FLAG= 'N'  &#xD;&#xA;      and TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;     --and ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;    THEN &#xD;&#xA;     OPD.AMOUNT &#xD;&#xA;    when allow_rollover_code_value = 'RRED' &#xD;&#xA;     AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y'&#xD;&#xA;     then&#xD;&#xA;     OPD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION      &#xD;&#xA;    ELSE 0 END&#xD;&#xA;    )  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;   SUM(CASE WHEN &#xD;&#xA;     PIT.CHECK_COMPONENT_DESCRIPTION = 'Federal Tax'&#xD;&#xA;    THEN &#xD;&#xA;     CASE WHEN OPD.AMOUNT &lt;0 then OPD.AMOUNT ELSE 0 END&#xD;&#xA;    ELSE 0 END&#xD;&#xA;    )  AS FED_TAX_AMOUNT,&#xD;&#xA;   SUM(CASE WHEN &#xD;&#xA;     PIT.CHECK_COMPONENT_DESCRIPTION = 'State Tax'&#xD;&#xA;    THEN &#xD;&#xA;     CASE WHEN OPD.AMOUNT &lt;0 then OPD.AMOUNT ELSE 0 END&#xD;&#xA;    ELSE 0 END&#xD;&#xA;    )  AS STATE_TAX_AMOUNT,&#xD;&#xA;   CASE WHEN PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;   THEN 'Y'ELSE 'N' END AS TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;   CASE WHEN PA.PAYEE_PERSLINK_ID IS NOT NULL THEN &#xD;&#xA;     ISNULL(PER.LAST_NAME,'') +' '+     &#xD;&#xA;     ISNULL(PER.FIRST_NAME,'') +' '+ &#xD;&#xA;     ISNULL(PER.MIDDLE_NAME,'')      &#xD;&#xA;    ELSE NULL END AS NAME,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    CASE WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;      OR APP.PLSO_REQUESTED_FLAG = 'Y'&#xD;&#xA;     )&#xD;&#xA;     AND &#xD;&#xA;     (&#xD;&#xA;      ((CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;      ) BETWEEN 55 AND 59.5 AND APP.PLAN_ID IN (1,5,6,27))&#xD;&#xA;      OR&#xD;&#xA;      ((CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;      ) BETWEEN 50 AND 59.5 AND APP.PLAN_ID IN (4,3,2,20,26,29))&#xD;&#xA;     )&#xD;&#xA;     THEN '2'&#xD;&#xA;     WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR'&#xD;&#xA;      AND &#xD;&#xA;       (CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;         ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;       ) &lt; 59.5 THEN '2'   &#xD;&#xA;     WHEN ( PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;       OR APP.PLSO_REQUESTED_FLAG = 'Y'&#xD;&#xA;      )&#xD;&#xA;      AND &#xD;&#xA;      (&#xD;&#xA;       (CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;         ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;       )  &lt; 59.5 &#xD;&#xA;      )&#xD;&#xA;      THEN '1' &#xD;&#xA;     WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' THEN '3' &#xD;&#xA;     WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('PSTD','DETH') THEN '4'&#xD;&#xA;     WHEN &#xD;&#xA;      PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RFND' ,'RETR')&#xD;&#xA;      AND &#xD;&#xA;       (CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;         ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;       ) &gt;= 59.5 THEN '7'&#xD;&#xA;   ELSE '' END AS DISTRIBUTION_CODE,&#xD;&#xA;   PER.SSN,&#xD;&#xA;   NULL,   &#xD;&#xA;   CASE WHEN PA.PAYEE_PERSLINK_ID is NULL THEN 'A' &#xD;&#xA;     ELSE CASE WHEN &#xD;&#xA;       (DateDiff(d,PER.date_of_Birth,DATE_OF_1099R))/365.25 &lt; 59.5&#xD;&#xA;        THEN 'A' &#xD;&#xA;        ELSE CASE WHEN &#xD;&#xA;       PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'  THEN 'A' &#xD;&#xA;       ELSE 'B' END &#xD;&#xA;        END &#xD;&#xA;    END&#xD;&#xA;   AS AGE59_SPLIT_FLAG,&#xD;&#xA;   NULL,&#xD;&#xA;   NULL,&#xD;&#xA;   'R'&#xD;&#xA;  FROM SGT_PAYMENT_BENEFIT_OVERPAYMENT_HEADER OP&#xD;&#xA;  INNER JOIN SGT_PAYMENT_BENEFIT_OVERPAYMENT_DETAIL OPD&#xD;&#xA;   ON OPD.BENEFIT_OVERPAYMENT_ID = OP.BENEFIT_OVERPAYMENT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_RECOVERY PR&#xD;&#xA;   ON PR.BENEFIT_OVERPAYMENT_ID = OP.BENEFIT_OVERPAYMENT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;   ON OPD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   ON OP.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PAR&#xD;&#xA;   ON PR.PAYEE_ACCOUNT_ID = PAR.PAYEE_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PERSON PER &#xD;&#xA;   ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID &#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP&#xD;&#xA;  ON PA.APPLICATION_ID = APP.BENEFIT_APPLICATION_ID&#xD;&#xA;  --LEFT OUTER JOIN SGT_PAYMENT_RECOVERY_HISTORY RECH1 ON RECH1.PAYMENT_RECOVERY_ID=PR.PAYMENT_RECOVERY_ID &#xD;&#xA; WHERE ((PR.STATUS_VALUE IN ('APRD','SATD')  -- ‘Recovery Status’ =  ‘Approved’ or statisfied - PIR 9018&#xD;&#xA;   AND PR.REPAYMENT_TYPE_VALUE IN ('RPOT') OR  (PR.STATUS_VALUE IN ('SATD','WROF')) AND PR.REPAYMENT_TYPE_VALUE IN ('LUSM'))) -- AND ‘Repayment Option’ = ‘Re-Pay over time‘ or ‘Lump sum’&#xD;&#xA;   AND PR.APPROVED_DATE &gt; @PROCESSDATE  -- AND ‘Approved Date’ is after last correction batch run&#xD;&#xA;   AND YEAR(DATE_OF_1099R) &gt;= (@TaxYear-3)   -- AND ‘(1099r date)Payment Date’ of the items under the Benefit Overpayment is less than current year   &#xD;&#xA;   AND PAR.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'DISA'&#xD;&#xA; GROUP BY OP.PAYEE_ACCOUNT_ID,OP.BENEFIT_OVERPAYMENT_ID,DATE_OF_1099R,PA.PAYEE_PERSLINK_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,PA.BENEFIT_OPTION_VALUE,&#xD;&#xA;   PER.LAST_NAME,PER.MIDDLE_NAME,PER.FIRST_NAME,PER.DATE_OF_BIRTH,APP.PLSO_REQUESTED_FLAG,APP.PLAN_ID,PER.PERSON_ID,PER.SSN,&#xD;&#xA;   PR.STATUS_VALUE,PR.REPAYMENT_TYPE_VALUE,PR.GROSS_REDUCTION_AMOUNT,&#xD;&#xA;   CASE WHEN PER.PERSON_ID is NULL THEN 'A' &#xD;&#xA;    ELSE CASE WHEN &#xD;&#xA;      (DateDiff(d,PER.date_of_Birth,DATE_OF_1099R))/365.25 &lt; 59.5&#xD;&#xA;        THEN 'A' ELSE 'B' END&#xD;&#xA;   END&#xD;&#xA; HAVING &#xD;&#xA;   SUM(CASE WHEN &#xD;&#xA;     PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;     and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;     and VENDOR_FLAG= 'N'  &#xD;&#xA;    THEN &#xD;&#xA;     OPD.AMOUNT &#xD;&#xA;    when allow_rollover_code_value = 'RRED' then&#xD;&#xA;     OPD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;    ELSE 0 END&#xD;&#xA;    ) &gt; 0  -- ‘Benefit Overpayment’ has ‘Gross Items’&#xD;&#xA;&#xD;&#xA; --------------End of Query to Pick Approved Recoveries  -----------------------&#xD;&#xA;UNION ALL&#xD;&#xA; -------------------------- Pick Cancelled Payments ----------------------------&#xD;&#xA; SELECT PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;   NULL AS DISA_PAYEE_ACCOUNT_ID,&#xD;&#xA;   PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;   NULL,&#xD;&#xA;   NULL,&#xD;&#xA;   NULL,&#xD;&#xA;   NULL,&#xD;&#xA;   NULL,&#xD;&#xA;   NULL,&#xD;&#xA;   PA.PAYEE_PERSLINK_ID,&#xD;&#xA;   O.ORG_ID,&#xD;&#xA;   PHH.PAYMENT_DATE,&#xD;&#xA;   PHD.ROLLOVER_FLAG AS ROLLOVER_PAYMENT_FLAG,   &#xD;&#xA;   PHD.GROSS_AMOUNT,&#xD;&#xA;   PHD.TAXABLE_AMOUNT,&#xD;&#xA;   PHD.CAPITAL_GAIN,&#xD;&#xA;   PHD.NON_TAXABLE_AMOUNT,&#xD;&#xA;   PHD.FED_TAX_AMOUNT,&#xD;&#xA;   PHD.STATE_TAX_AMOUNT,&#xD;&#xA;   CASE WHEN PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;   THEN 'Y'ELSE 'N' END AS TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;   CASE WHEN PA.PAYEE_PERSLINK_ID IS NOT NULL THEN      &#xD;&#xA;     ISNULL(PER.LAST_NAME,'') +' '+     &#xD;&#xA;     ISNULL(PER.FIRST_NAME,'') +' '+ &#xD;&#xA;     ISNULL(PER.MIDDLE_NAME,'') &#xD;&#xA;   ELSE O.ORG_NAME END AS NAME,&#xD;&#xA;   NULL,&#xD;&#xA;   NULL,   &#xD;&#xA;   CASE WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;     OR&#xD;&#xA;     EXISTS(SELECT '0' FROM SGT_PAYMENT_HISTORY_DETAIL PHD1 &#xD;&#xA;        INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 ON PHD1.PAYMENT_ITEM_TYPE_ID = PIT1.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;        WHERE PHD1.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;        AND PIT1.PLSO_FLAG = 'Y'&#xD;&#xA;        )&#xD;&#xA;    )&#xD;&#xA;    AND &#xD;&#xA;    (&#xD;&#xA;     ((CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;       ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 END&#xD;&#xA;     ) BETWEEN 55 AND 59.5 AND PHH.PLAN_ID IN (1,5,6,27))&#xD;&#xA;     OR&#xD;&#xA;     ((CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;       ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 END&#xD;&#xA;     ) BETWEEN 50 AND 59.5 AND PHH.PLAN_ID IN (4,3,2,20,26,29))&#xD;&#xA;    )&#xD;&#xA;    and isnull(PHD.ROLLOVER_FLAG,'N') = 'N' THEN '2' &#xD;&#xA;    when  PHD.ROLLOVER_FLAG = 'Y'&#xD;&#xA;    and (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;     OR&#xD;&#xA;     EXISTS(SELECT '0' FROM SGT_PAYMENT_HISTORY_DETAIL PHD1 &#xD;&#xA;        INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 ON PHD1.PAYMENT_ITEM_TYPE_ID = PIT1.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;        WHERE PHD1.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;        AND PIT1.PLSO_FLAG = 'Y'&#xD;&#xA;        )&#xD;&#xA;     ) THEN 'G'  &#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR'&#xD;&#xA;     AND &#xD;&#xA;      (CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 END&#xD;&#xA;      ) &lt; 59.5 THEN '2'   &#xD;&#xA;    WHEN ( PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;      OR&#xD;&#xA;      EXISTS(SELECT '0' FROM SGT_PAYMENT_HISTORY_DETAIL PHD1 &#xD;&#xA;         INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT1 ON PHD1.PAYMENT_ITEM_TYPE_ID = PIT1.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;         WHERE PHD1.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;         AND PIT1.PLSO_FLAG = 'Y'&#xD;&#xA;         )&#xD;&#xA;     )&#xD;&#xA;     AND &#xD;&#xA;     (&#xD;&#xA;      (CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 END&#xD;&#xA;      )  &lt; 59.5 &#xD;&#xA;     )&#xD;&#xA;     THEN CASE WHEN PHD.ROLLOVER_FLAG = 'Y' THEN 'G' ELSE '1' END   &#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' THEN '3' &#xD;&#xA;    WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('PSTD','DETH') THEN '4' +&#xD;&#xA;     CASE WHEN PHD.ROLLOVER_FLAG = 'Y' THEN 'G' ELSE &#xD;&#xA;     CASE WHEN PA.BENEFIT_OPTION_VALUE = 'REFD' &#xD;&#xA;     AND PER.DATE_OF_BIRTH &lt; '01/02/1936' THEN 'A' ELSE '' END&#xD;&#xA;     END&#xD;&#xA;    WHEN &#xD;&#xA;     PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RFND' ,'RETR')&#xD;&#xA;     AND &#xD;&#xA;      (CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;        ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 END&#xD;&#xA;      ) &gt;= 59.5  AND isnull(PHD.ROLLOVER_FLAG,'N') = 'N' THEN '7' &#xD;&#xA;     WHEN PA.BENEFIT_OPTION_VALUE IN ('AURD','RGRD')&#xD;&#xA;     AND PER.DATE_OF_BIRTH &lt; '01/02/1936' THEN 'A'  &#xD;&#xA;     WHEN PHD.ROLLOVER_FLAG = 'Y' THEN 'G' &#xD;&#xA;  ELSE '' END AS DISTRIBUTION_CODE,&#xD;&#xA;   PER.SSN,&#xD;&#xA;   O.FEDERAL_ID,&#xD;&#xA;   CASE WHEN PER.PERSON_ID IS NULL THEN 'A'&#xD;&#xA;   ELSE CASE WHEN &#xD;&#xA;       (DATEDIFF(D,PER.DATE_OF_BIRTH,PHH.PAYMENT_DATE))/365.25 &lt; 59.5&#xD;&#xA;        THEN 'A' &#xD;&#xA;        ELSE CASE WHEN &#xD;&#xA;       PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'  THEN 'A' &#xD;&#xA;       ELSE 'B' END &#xD;&#xA;        END  &#xD;&#xA;   END&#xD;&#xA;   AS AGE59_SPLIT_FLAG,&#xD;&#xA;   NULL,&#xD;&#xA;   NULL,&#xD;&#xA;   'C'&#xD;&#xA;  FROM &#xD;&#xA;  (&#xD;&#xA;   SELECT  PHH.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;      and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;      and VENDOR_FLAG= 'N'  &#xD;&#xA;     THEN &#xD;&#xA;      PHD.AMOUNT &#xD;&#xA;     when allow_rollover_code_value = 'RRED' then&#xD;&#xA;      PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS GROSS_AMOUNT,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;      and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;      and VENDOR_FLAG= 'N'  &#xD;&#xA;      and TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;      --AND ITEM_TYPE_CODE Not in ('ITEM5','ITEM16')&#xD;&#xA;     THEN &#xD;&#xA;      CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;        THEN &#xD;&#xA;        CASE WHEN ROLLOVER_TYPE_VALUE IN ('EPLA','TIRA') THEN 0.00&#xD;&#xA;          WHEN (ROLLOVER_TYPE_VALUE = 'RIRA' &#xD;&#xA;            OR ROLLOVER_TYPE_VALUE IS NULL) THEN PHD.AMOUNT END&#xD;&#xA;        ELSE PHD.AMOUNT END  &#xD;&#xA;     when allow_rollover_code_value = 'RRED' &#xD;&#xA;      AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;     then&#xD;&#xA;      PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS TAXABLE_AMOUNT,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')&#xD;&#xA;      and PIT.ITEM_TYPE_CODE in ('ITEM5','ITEM16')&#xD;&#xA;     THEN &#xD;&#xA;      PHD.AMOUNT &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS CAPITAL_GAIN,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;      and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;      and VENDOR_FLAG= 'N'  &#xD;&#xA;       and TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;      --and ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;     THEN &#xD;&#xA;      PHD.AMOUNT &#xD;&#xA;     when allow_rollover_code_value = 'RRED' &#xD;&#xA;      AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y'&#xD;&#xA;     then&#xD;&#xA;      PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;--    SUM(CASE WHEN &#xD;&#xA;--      PIT.CHECK_COMPONENT_DESCRIPTION = 'Federal Tax'&#xD;&#xA;--     THEN &#xD;&#xA;--      PHD.AMOUNT &#xD;&#xA;--     ELSE 0 END&#xD;&#xA;--     )  &#xD;&#xA;    0.0 AS FED_TAX_AMOUNT,&#xD;&#xA;--    SUM(CASE WHEN &#xD;&#xA;--      PIT.CHECK_COMPONENT_DESCRIPTION = 'State Tax'&#xD;&#xA;--     THEN &#xD;&#xA;--      PHD.AMOUNT &#xD;&#xA;--     ELSE 0 END&#xD;&#xA;--     )  &#xD;&#xA;    0.0 AS STATE_TAX_AMOUNT,&#xD;&#xA;    CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END AS ROLLOVER_FLAG&#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DETAIL PHD    &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;    ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;  GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID,CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END&#xD;&#xA;  &#xD;&#xA;  Union All&#xD;&#xA;  &#xD;&#xA;  SELECT  PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;      AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;      AND VENDOR_FLAG= 'N'  &#xD;&#xA;     THEN &#xD;&#xA;      PHD.AMOUNT &#xD;&#xA;     WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' THEN&#xD;&#xA;      PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS GROSS_AMOUNT,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;      AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;      AND VENDOR_FLAG= 'N'  &#xD;&#xA;      AND TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;      --AND ITEM_TYPE_CODE NOT IN ('ITEM5','ITEM16')&#xD;&#xA;     THEN &#xD;&#xA;      CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET'&#xD;&#xA;       THEN &#xD;&#xA;        CASE WHEN ROLLOVER_TYPE_VALUE IN ('EPLA','TIRA') THEN 0.00&#xD;&#xA;           WHEN (ROLLOVER_TYPE_VALUE = 'RIRA' &#xD;&#xA;           OR ROLLOVER_TYPE_VALUE IS NULL) THEN PHD.AMOUNT END&#xD;&#xA;       ELSE PHD.AMOUNT END &#xD;&#xA;     WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' &#xD;&#xA;      AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;     THEN&#xD;&#xA;      PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS TAXABLE_AMOUNT,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')&#xD;&#xA;      AND PIT.ITEM_TYPE_CODE IN ('ITEM5','ITEM16')&#xD;&#xA;     THEN &#xD;&#xA;      PHD.AMOUNT &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS CAPITAL_GAIN,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;      AND PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;      AND VENDOR_FLAG= 'N'  &#xD;&#xA;       AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;      --AND ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;     THEN &#xD;&#xA;      PHD.AMOUNT &#xD;&#xA;     WHEN ALLOW_ROLLOVER_CODE_VALUE = 'RRED' &#xD;&#xA;      AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y'&#xD;&#xA;     THEN&#xD;&#xA;      PHD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;--    SUM(CASE WHEN &#xD;&#xA;--      PIT.CHECK_COMPONENT_DESCRIPTION = 'FEDERAL TAX'&#xD;&#xA;--     THEN &#xD;&#xA;--      PHD.AMOUNT &#xD;&#xA;--     ELSE 0 END&#xD;&#xA;--     )  &#xD;&#xA;    0.0 AS FED_TAX_AMOUNT,&#xD;&#xA;--    SUM(CASE WHEN &#xD;&#xA;--      PIT.CHECK_COMPONENT_DESCRIPTION = 'STATE TAX'&#xD;&#xA;--     THEN &#xD;&#xA;--      PHD.AMOUNT &#xD;&#xA;--     ELSE 0 END&#xD;&#xA;--     )  &#xD;&#xA;    0.0 AS STATE_TAX_AMOUNT,&#xD;&#xA;   CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END AS ROLLOVER_FLAG&#xD;&#xA;   FROM SGT_PAYMENT_HISTORY_DETAIL PHD    &#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;    ON PHD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;    ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND EXISTS ( SELECT 1 FROM SGT_PAYMENT_HISTORY_DETAIL X&#xD;&#xA;   WHERE X.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;    AND X.PAYMENT_ITEM_TYPE_ID = 162)&#xD;&#xA;   AND EXISTS ( SELECT 1 FROM SGT_PAYMENT_HISTORY_DETAIL Y&#xD;&#xA;       INNER JOIN SGT_PAYMENT_ITEM_TYPE YPIT &#xD;&#xA;        ON Y.PAYMENT_ITEM_TYPE_ID = YPIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA;      WHERE Y.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;    AND YPIT.ALLOW_ROLLOVER_CODE_VALUE ='RRED')&#xD;&#xA;   GROUP BY PHD.PAYMENT_HISTORY_HEADER_ID,&#xD;&#xA;   CASE WHEN ALLOW_ROLLOVER_CODE_VALUE = 'CRET' THEN 'Y' ELSE 'N' END&#xD;&#xA;  ) PHD&#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHDN&#xD;&#xA;   ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID -- Inner Join with Payee account will exelude exeess contributions&#xD;&#xA;  LEFT OUTER JOIN SGT_PERSON PER  &#xD;&#xA;   ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_ORGANIZATION O  &#xD;&#xA;   ON PHH.ORG_ID = O.ORG_ID&#xD;&#xA;  WHERE YEAR(PHH.PAYMENT_DATE) = cast(@TaxYear as int) -1 -- ‘Payment Date’ on ‘Payment History Header’ is in previous calendar year &#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN ('DBDC','DBTT','DBCT','DTCT','SPEL')  -- Exclude transfers&#xD;&#xA;  AND NOT (PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')   &#xD;&#xA;    AND (PHH.PAYMENT_DATE &lt;= @PERSLINKGOLIVEDATE OR (PHH.PLAN_ID = 7 OR PHH.PLAN_ID = 28)))  -- EXCLUDE BENEFIT OPTION IS ‘REGULAR REFUND’ AND PLAN IS ‘DC’&#xD;&#xA;  AND PHH.STATUS_VALUE IN ('CPYP','CNLD') -- Payment History Header with ‘Payment Status’ = ‘Cancelled’&#xD;&#xA;  AND NOT EXISTS&#xD;&#xA;   (&#xD;&#xA;    SELECT '0' FROM SGT_BENEFIT_APPLICATION BA &#xD;&#xA;    WHERE STATUS_VALUE = 'VALD' &#xD;&#xA;     AND ACTION_STATUS_VALUE = 'VERF'&#xD;&#xA;     AND BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' &#xD;&#xA;     AND BA.MEMBER_PERSON_ID = PER.PERSON_ID &#xD;&#xA;     AND BA.PLAN_ID = PHH.PLAN_ID&#xD;&#xA;   ) -- AND there is no valid Disability Benefit Application for the Payee Account&#xD;&#xA;  AND  @PROCESSDATE &lt; ( SELECT TOP 1 TRANSACTION_DATE FROM &#xD;&#xA;        SGT_PAYMENT_HISTORY_DISTRIBUTION_STATUS_HISTORY PHDSH&#xD;&#xA;        WHERE PHDSH.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;        AND DISTRIBUTION_STATUS_VALUE IN ('ACLD','RCLD','CNLD','RRCD')&#xD;&#xA;       ) -- AND ‘Transaction Date’ for ‘Payment History Status’ of ‘Cancelled’ after the last corrected batch run &#xD;&#xA;  AND NOT EXISTS&#xD;&#xA;    (&#xD;&#xA;     SELECT '0' FROM SGT_PAYMENT_HISTORY_DISTRIBUTION PHDN &#xD;&#xA;      WHERE PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      AND DISTRIBUTION_STATUS_VALUE NOT IN ('ACLD','RCLD','CNLD','RRCD')&#xD;&#xA;    ) --AND all the ‘Payment History Distribution’ are with ‘Payment Distribution Status’ of ‘Cancelled’ &#xD;&#xA;  GROUP BY PHH.PAYMENT_HISTORY_HEADER_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,PA.PAYEE_PERSLINK_ID,PER.PERSON_ID,&#xD;&#xA;  PHH.PAYEE_ACCOUNT_ID,PHH.PAYMENT_HISTORY_HEADER_ID,O.ORG_ID,PHH.PAYMENT_DATE,PHD.ROLLOVER_FLAG,&#xD;&#xA;  PHD.GROSS_AMOUNT,PHD.TAXABLE_AMOUNT,PHD.CAPITAL_GAIN,PHD.NON_TAXABLE_AMOUNT,PHD.FED_TAX_AMOUNT,&#xD;&#xA;  PHD.STATE_TAX_AMOUNT,PA.BENEFIT_OPTION_VALUE,PER.LAST_NAME,PER.MIDDLE_NAME,PER.FIRST_NAME,PER.DATE_OF_BIRTH,O.ORG_NAME,&#xD;&#xA;  PHH.PLAN_ID,PER.SSN,O.FEDERAL_ID&#xD;&#xA;&#xD;&#xA; -------------------End of Pick Cancelled Payments -----------------------------&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; UNION ALL&#xD;&#xA; -------------- Query to Pick Cancelled Payments for Early Retirement-----------&#xD;&#xA; --------------------------to Disability Conversion ----------------------------&#xD;&#xA; SELECT  OP.PAYEE_ACCOUNT_ID,&#xD;&#xA;    NULL AS DISA_PAYEE_ACCOUNT_ID,&#xD;&#xA;    NULL,&#xD;&#xA;    OP.BENEFIT_OVERPAYMENT_ID,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    PA.PAYEE_PERSLINK_ID,&#xD;&#xA;    NULL,   &#xD;&#xA;    DATE_OF_1099R,&#xD;&#xA;    'N' AS ROLLOVER_PAYMENT_FLAG,   &#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;      and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;      and VENDOR_FLAG= 'N'  &#xD;&#xA;     THEN &#xD;&#xA;      OPD.AMOUNT &#xD;&#xA;     when allow_rollover_code_value = 'RRED' then&#xD;&#xA;      OPD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION  &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS GROSS_AMOUNT,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;      and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;      and VENDOR_FLAG= 'N'  &#xD;&#xA;      and TAXABLE_ITEM_FLAG = 'Y' &#xD;&#xA;      --AND ITEM_TYPE_CODE  Not in  ('ITEM5','ITEM16')&#xD;&#xA;     THEN &#xD;&#xA;      OPD.AMOUNT &#xD;&#xA;     when allow_rollover_code_value = 'RRED' &#xD;&#xA;      AND TAXABLE_ITEM_FLAG = 'Y'&#xD;&#xA;     then&#xD;&#xA;      opd.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS TAXABLE_AMOUNT,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PA.BENEFIT_OPTION_VALUE IN ('AURD','REFD','RGRD')&#xD;&#xA;      and PIT.ITEM_TYPE_CODE in ('ITEM5','ITEM16')&#xD;&#xA;     THEN &#xD;&#xA;      OPD.AMOUNT &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS CAPITAL_GAIN,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PIT.ITEM_TYPE_DIRECTION = 1 &#xD;&#xA;      and PAYMENT_1099R_FLAG = 'Y' &#xD;&#xA;      and VENDOR_FLAG= 'N'  &#xD;&#xA;       and TAXABLE_ITEM_FLAG &lt;&gt; 'Y' &#xD;&#xA;      --and ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'&#xD;&#xA;     THEN &#xD;&#xA;      OPD.AMOUNT &#xD;&#xA;     when allow_rollover_code_value = 'RRED' &#xD;&#xA;      AND TAXABLE_ITEM_FLAG &lt;&gt; 'Y'&#xD;&#xA;     then&#xD;&#xA;      OPD.AMOUNT *  PIT.ITEM_TYPE_DIRECTION &#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PIT.CHECK_COMPONENT_DESCRIPTION = 'Federal Tax'&#xD;&#xA;     THEN &#xD;&#xA;      CASE WHEN OPD.AMOUNT &lt;0 then OPD.AMOUNT ELSE 0 END&#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS FED_TAX_AMOUNT,&#xD;&#xA;    SUM(CASE WHEN &#xD;&#xA;      PIT.CHECK_COMPONENT_DESCRIPTION = 'State Tax'&#xD;&#xA;     THEN &#xD;&#xA;      CASE WHEN OPD.AMOUNT &lt;0 then OPD.AMOUNT ELSE 0 END&#xD;&#xA;     ELSE 0 END&#xD;&#xA;     )  AS STATE_TAX_AMOUNT,&#xD;&#xA;    CASE WHEN PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD')&#xD;&#xA;    THEN 'Y'ELSE 'N' END AS TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;    CASE WHEN PA.PAYEE_PERSLINK_ID IS NOT NULL THEN       &#xD;&#xA;      ISNULL(PER.LAST_NAME,'') +' '+     &#xD;&#xA;      ISNULL(PER.FIRST_NAME,'') +' '+ &#xD;&#xA;      ISNULL(PER.MIDDLE_NAME,'') &#xD;&#xA;     ELSE NULL END AS NAME,&#xD;&#xA;     NULL,&#xD;&#xA;     NULL,&#xD;&#xA;     CASE WHEN (PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;       OR APP.PLSO_REQUESTED_FLAG = 'Y'&#xD;&#xA;      )&#xD;&#xA;      AND &#xD;&#xA;      (&#xD;&#xA;       ((CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;         ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;       ) BETWEEN 55 AND 59.5 AND APP.PLAN_ID IN (1,5,6,27))&#xD;&#xA;       OR&#xD;&#xA;       ((CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;         ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;       ) BETWEEN 50 AND 59.5 AND APP.PLAN_ID IN (4,3,2,20,26,29))&#xD;&#xA;      )&#xD;&#xA;      THEN '2'&#xD;&#xA;      WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR'&#xD;&#xA;       AND &#xD;&#xA;        (CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;          ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;        ) &lt; 59.5 THEN '2'   &#xD;&#xA;      WHEN ( PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND'&#xD;&#xA;        OR APP.PLSO_REQUESTED_FLAG = 'Y'&#xD;&#xA;       )&#xD;&#xA;       AND &#xD;&#xA;       (&#xD;&#xA;        (CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;          ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;        )  &lt; 59.5 &#xD;&#xA;       )&#xD;&#xA;       THEN '1' &#xD;&#xA;      WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' THEN '3' &#xD;&#xA;      WHEN PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('PSTD','DETH') THEN '4'&#xD;&#xA;      WHEN &#xD;&#xA;       PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('RFND' ,'RETR')&#xD;&#xA;       AND &#xD;&#xA;        (CASE WHEN PER.PERSON_ID IS NULL THEN 0 &#xD;&#xA;          ELSE (DATEDIFF(D,PER.DATE_OF_BIRTH,OPD.DATE_OF_1099R))/365.25 END&#xD;&#xA;        ) &gt;= 59.5 THEN '7'&#xD;&#xA;    ELSE '' END AS DISTRIBUTION_CODE,&#xD;&#xA;    PER.SSN,&#xD;&#xA;    NULL,   &#xD;&#xA;    CASE WHEN PA.PAYEE_PERSLINK_ID is NULL THEN 'A' &#xD;&#xA;      ELSE CASE WHEN &#xD;&#xA;        (DateDiff(d,PER.date_of_Birth,DATE_OF_1099R))/365.25 &lt; 59.5&#xD;&#xA;       THEN 'A' &#xD;&#xA;       ELSE CASE WHEN &#xD;&#xA;        PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'  THEN 'A' &#xD;&#xA;       ELSE 'B' END &#xD;&#xA;        END &#xD;&#xA;     END&#xD;&#xA;    AS AGE59_SPLIT_FLAG,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    'D'  &#xD;&#xA;  FROM SGT_PAYMENT_BENEFIT_OVERPAYMENT_HEADER OP&#xD;&#xA;  INNER JOIN SGT_PAYMENT_BENEFIT_OVERPAYMENT_DETAIL OPD&#xD;&#xA;   ON OPD.BENEFIT_OVERPAYMENT_ID = OP.BENEFIT_OVERPAYMENT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_RECOVERY PR&#xD;&#xA;   ON PR.BENEFIT_OVERPAYMENT_ID = OP.BENEFIT_OVERPAYMENT_ID&#xD;&#xA;  INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT &#xD;&#xA;   ON OPD.PAYMENT_ITEM_TYPE_ID = PIT.PAYMENT_ITEM_TYPE_ID &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   ON OP.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID  &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT PAR&#xD;&#xA;   ON PR.PAYEE_ACCOUNT_ID = PAR.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PASR &#xD;&#xA;   ON PASR.PAYEE_ACCOUNT_ID = PAR.PAYEE_ACCOUNT_ID  &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV1 &#xD;&#xA;   ON PASR.STATUS_ID= CV1.CODE_ID AND PASR.STATUS_VALUE = CV1.CODE_VALUE&#xD;&#xA;  LEFT OUTER JOIN SGT_PERSON PER  &#xD;&#xA;   ON PA.PAYEE_PERSLINK_ID = PER.PERSON_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_BENEFIT_APPLICATION APP&#xD;&#xA;   ON PA.APPLICATION_ID = APP.BENEFIT_APPLICATION_ID &#xD;&#xA; WHERE PR.STATUS_VALUE IN ('APRD','SATD')  -- ‘Recovery Status’ =  ‘Approved’ or satisfied - PIR 9018&#xD;&#xA;   AND PR.APPROVED_DATE &gt; @PROCESSDATE  -- AND ‘Approved Date’ is after last correction batch run &#xD;&#xA;    -- To check with satya on whether we need the above condition&#xD;&#xA;   AND PA.PAYEE_PERSLINK_ID = PAR.PAYEE_PERSLINK_ID -- better to check it safely&#xD;&#xA;   AND PA.BENEFIT_ACCOUNT_SUB_TYPE_VALUE = 'ERTR'&#xD;&#xA;   AND (CV.DATA2 = 'CNLD')&#xD;&#xA;   AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (&#xD;&#xA;     SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )  -- ‘Payee Status’ for the payee with ‘Benefit Account Sub Type’ of ‘Early Retirement’ = ‘Cancelled’&#xD;&#xA;   AND PAR.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'&#xD;&#xA;   AND ( CV1.DATA2 = 'APRD' )  -- OR CV1.DATA2 = 'RECV'  -- To check with satya on whether it is needed&#xD;&#xA; -- check ucs-79 flow and disablity conversion ucs&#xD;&#xA;   AND PASR.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (&#xD;&#xA;     SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PAR.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &gt;= @STATUSEFFECTIVEDATE&#xD;&#xA;     AND PAS1.MODIFIED_DATE &gt; @PROCESSDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )  -- AND ‘Benefit account type’ is ‘Disability’ and Payee Account Status is in ‘Approved’ with ‘Status Effective after the last Correction &#xD;&#xA;   AND YEAR(DATE_OF_1099R) &lt;= Year(PASR.STATUS_EFFECTIVE_DATE)&#xD;&#xA;   AND YEAR(DATE_OF_1099R) &gt;= (Year(@ProcessDate) - 3)&#xD;&#xA;    -- Correction to be for the year the disability application is approve and any year after up to the current year, not to exceed 3 years prior to the year the actions are taken.&#xD;&#xA; GROUP BY OP.PAYEE_ACCOUNT_ID,OP.BENEFIT_OVERPAYMENT_ID,DATE_OF_1099R,PA.PAYEE_PERSLINK_ID,&#xD;&#xA;    PA.BENEFIT_OPTION_VALUE,APP.PLAN_ID,APP.PLSO_REQUESTED_FLAG,PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;    PER.LAST_NAME,PER.MIDDLE_NAME,PER.FIRST_NAME,PER.SSN,PER.DATE_OF_BIRTH,PER.PERSON_ID,&#xD;&#xA;   CASE WHEN PER.PERSON_ID is NULL THEN 'A' &#xD;&#xA;    ELSE CASE WHEN &#xD;&#xA;      (DateDiff(d,PER.date_of_Birth,DATE_OF_1099R))/365.25 &lt; 59.5&#xD;&#xA;        THEN 'A' ELSE 'B' END&#xD;&#xA;   END&#xD;&#xA;&#xD;&#xA; --------End of Query to Pick Cancelled Payments for Early Retirement-----------&#xD;&#xA; --------------------------to Disability Conversion ----------------------------&#xD;&#xA; &#xD;&#xA; UNION ALL&#xD;&#xA;&#xD;&#xA; SELECT ER.PAYEE_ACCOUNT_ID,&#xD;&#xA;    DISA.PAYEE_ACCOUNT_ID,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    ER.PAYEE_PERSLINK_ID,&#xD;&#xA;    NULL,   &#xD;&#xA;    NULL,&#xD;&#xA;    'N' AS ROLLOVER_PAYMENT_FLAG,   &#xD;&#xA;    0.0  AS GROSS_AMOUNT,&#xD;&#xA;    0.0  AS TAXABLE_AMOUNT,&#xD;&#xA;    0.0  AS CAPITAL_GAIN,&#xD;&#xA;    0.0  AS NON_TAXABLE_AMOUNT,&#xD;&#xA;    0.0  AS FED_TAX_AMOUNT,&#xD;&#xA;    0.0  AS STATE_TAX_AMOUNT,&#xD;&#xA;    NULL AS TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;    NULL AS NAME,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL AS DISTRIBUTION_CODE,&#xD;&#xA;    NULL AS SSN,&#xD;&#xA;    NULL,   &#xD;&#xA;    NULL AS AGE59_SPLIT_FLAG,&#xD;&#xA;    NULL,&#xD;&#xA;    NULL,&#xD;&#xA;    'DU'&#xD;&#xA; FROM  SGT_PAYMENT_1099R ANN1099R&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT ER&#xD;&#xA;  ON  ANN1099R.PAYEE_ACCOUNT_ID = ER.PAYEE_ACCOUNT_ID AND ER.BENEFIT_ACCOUNT_SUB_TYPE_VALUE = 'ERTR'&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;  ON  PAS.PAYEE_ACCOUNT_ID = ER.PAYEE_ACCOUNT_ID  &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;  ON  PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT DISA&#xD;&#xA;  ON  ANN1099R.PERSON_ID = DISA.PAYEE_PERSLINK_ID AND DISA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PASR &#xD;&#xA;  ON  PASR.PAYEE_ACCOUNT_ID = DISA.PAYEE_ACCOUNT_ID  &#xD;&#xA; INNER JOIN SGS_CODE_VALUE CV1 &#xD;&#xA;  ON  PASR.STATUS_ID= CV1.CODE_ID AND PASR.STATUS_VALUE = CV1.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN SGT_PAYMENT_BENEFIT_OVERPAYMENT_HEADER OVERPAY&#xD;&#xA;  ON  OVERPAY.PAYEE_ACCOUNT_ID = ER.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE  ANN1099R.TAX_YEAR &gt;= YEAR(DISA.BENEFIT_BEGIN_DATE)&#xD;&#xA;   AND (CV.DATA2 = 'CNLD')&#xD;&#xA;   AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (&#xD;&#xA;     SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = ER.PAYEE_ACCOUNT_ID&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )  -- ‘Payee Status’ for the payee with ‘Benefit Account Sub Type’ of ‘Early Retirement’ = ‘Cancelled’&#xD;&#xA;   AND ( CV1.DATA2 = 'APRD' ) &#xD;&#xA;   AND PASR.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (&#xD;&#xA;     SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = DISA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &gt;= @STATUSEFFECTIVEDATE&#xD;&#xA;     AND PAS1.MODIFIED_DATE &gt; @PROCESSDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND OVERPAY.BENEFIT_OVERPAYMENT_ID IS NULL&#xD;&#xA;&#xD;&#xA;UPDATE TEMP_CORRECTED_PAYMENT_DETAILS_1099R  &#xD;&#xA; SET TAXABLE_AMOUNT = ISNULL(TAXABLE_AMOUNT,0) - ISNULL(CAPITAL_GAIN,0)&#xD;&#xA;WHERE ISNULL(TAXABLE_AMOUNT,0) &gt; 0 AND ISNULL(CAPITAL_GAIN,0) &lt;&gt; 0 &#xD;&#xA;&#xD;&#xA;END">
      <parameters>
        <parameter ID="@TaxYear" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="DropTableForCorrected1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="---Dropping tables created for 1099r&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID('TEMP_CORRECTED_PAYMENT_DETAILS_1099R') IS NOT NULL&#xD;&#xA; DROP TABLE TEMP_CORRECTED_PAYMENT_DETAILS_1099R&#xD;&#xA; &#xD;&#xA; &#xD;&#xA; IF OBJECT_ID('FINALCR') IS NOT NULL&#xD;&#xA; DROP TABLE FINALCR&#xD;&#xA; &#xD;&#xA; ">
      <parameters />
    </query>
    <query ID="CreateCorrected1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--&quot;entPayment1099r.CreateCorrected1099r&quot;&#xD;&#xA;IF OBJECT_ID('TEMP_CORRECTED_PAYMENT_DETAILS_1099R') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;DECLARE @PROCESS_START_DATE DATETIME&#xD;&#xA; SET @PROCESS_START_DATE = GETDATE()&#xD;&#xA; ---- Declaration Section ------------------------------&#xD;&#xA; DECLARE @DATEOF1099R DATETIME&#xD;&#xA; SET @DATEOF1099R =  CONVERT(DATETIME,CONVERT(VARCHAR,GETDATE(),101) ,110)&#xD;&#xA;&#xD;&#xA;--DISABILITY SECTION&#xD;&#xA; SELECT  R.*,&#xD;&#xA;    isnull(CORR.GROSS_AMOUNT,0) * -1 AS ADJUSTED_GROSS_AMOUNT,&#xD;&#xA;    isnull(CORR.TAXABLE_AMOUNT,0) * -1 AS ADJUSTED_TAXABLE_AMOUNT,&#xD;&#xA;    isnull(CORR.CAPITAL_GAIN,0) * -1 AS ADJUSTED_CAPITAL_GAIN,&#xD;&#xA;    isnull(CORR.NON_TAXABLE_AMOUNT,0) * -1 AS ADJUSTED_NON_TAXABLE_AMOUNT,&#xD;&#xA;    isnull(CORR.FED_TAX_AMOUNT,0) as ADJUSTED_FED_TAX_AMOUNT,&#xD;&#xA;    isnull(CORR.STATE_TAX_AMOUNT,0) as ADJUSTED_STATE_TAX_AMOUNT&#xD;&#xA;  INTO #TEMPDISA&#xD;&#xA; FROM  SGT_PAYMENT_1099R R&#xD;&#xA; INNER JOIN TEMP_CORRECTED_PAYMENT_DETAILS_1099R CORR &#xD;&#xA;   ON CORR.PAYEE_ACCOUNT_ID = R.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;   ON CORR.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYMENT_RECOVERY PR&#xD;&#xA;   ON PR.BENEFIT_OVERPAYMENT_ID = CORR.BENEFIT_OVERPAYMENT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PAR&#xD;&#xA;   ON PR.PAYEE_ACCOUNT_ID = PAR.PAYEE_ACCOUNT_ID&#xD;&#xA; WHERE  R.TAX_YEAR &gt;= YEAR(GETDATE()) - 3&#xD;&#xA;   AND CORR.INDICATOR = 'D'&#xD;&#xA;   AND R.TAX_YEAR &gt;= YEAR(PAR.BENEFIT_BEGIN_DATE)&#xD;&#xA;   AND ISNULL(R.OLD_PAYMENT_1099R_ID,0) = ISNULL((SELECT MAX(PAYMENT_1099R_ID) FROM SGT_PAYMENT_1099R&#xD;&#xA;          WHERE PAYMENT_1099R_ID &lt;&gt; R.PAYMENT_1099R_ID&#xD;&#xA;          AND PAYEE_ACCOUNT_ID = R.PAYEE_ACCOUNT_ID &#xD;&#xA;          AND ROLLOVER_PAYMENT_FLAG = R.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;          AND AGE59_SPLIT_FLAG = R.AGE59_SPLIT_FLAG&#xD;&#xA;          AND DISTRIBUTION_CODE = R.DISTRIBUTION_CODE&#xD;&#xA;          AND TAX_YEAR = R.TAX_YEAR),0)&#xD;&#xA; &#xD;&#xA; UPDATE #TEMPDISA&#xD;&#xA; SET GROSS_BENEFIT_AMOUNT  = (ISNULL(GROSS_BENEFIT_AMOUNT,0)+ISNULL(ADJUSTED_GROSS_AMOUNT,0))  ,&#xD;&#xA;  TAXABLE_AMOUNT = (ISNULL(TAXABLE_AMOUNT,0)+ISNULL(ADJUSTED_TAXABLE_AMOUNT,0))  ,&#xD;&#xA;  CAPITAL_GAIN = (ISNULL(CAPITAL_GAIN,0)+ISNULL(ADJUSTED_CAPITAL_GAIN,0))  ,&#xD;&#xA;  NON_TAXABLE_AMOUNT = (ISNULL(NON_TAXABLE_AMOUNT,0)+ISNULL(ADJUSTED_NON_TAXABLE_AMOUNT,0))   ,&#xD;&#xA;  FED_TAX_AMOUNT = (ISNULL(FED_TAX_AMOUNT ,0)+ISNULL( ADJUSTED_FED_TAX_AMOUNT,0))  ,&#xD;&#xA;  STATE_TAX_AMOUNT = (ISNULL(STATE_TAX_AMOUNT,0)+ISNULL(ADJUSTED_STATE_TAX_AMOUNT,0))&#xD;&#xA; &#xD;&#xA; UPDATE #TEMPDISA&#xD;&#xA; SET&#xD;&#xA;  TAXABLE_AMOUNT = GROSS_BENEFIT_AMOUNT,   -- UPDATE THE PREVIOUS YEAR’S BOX 2A = THE SAME YEAR’S BOX 1 AMOUNT &#xD;&#xA;  CAPITAL_GAIN = 0,  -- UPDATE BOX 3 = $0&#xD;&#xA;  NON_TAXABLE_AMOUNT = 0,  -- UPDATE BOX 5 = $0&#xD;&#xA;  DISTRIBUTION_CODE = '3',  -- UPDATE BOX 7 = DIST CODE ‘3’&#xD;&#xA;  CORRECTED_FLAG = 'Y',&#xD;&#xA;  OLD_PAYMENT_1099R_ID = PAYMENT_1099R_ID&#xD;&#xA; --------------------------------------------------------------------------------------------------------------&#xD;&#xA;--Disability section when an under payment or no benefit change happens&#xD;&#xA; --DISABILITY SECTION&#xD;&#xA; SELECT  R.*,&#xD;&#xA;    isnull(CORR.GROSS_AMOUNT,0) * -1 AS ADJUSTED_GROSS_AMOUNT,&#xD;&#xA;    isnull(CORR.TAXABLE_AMOUNT,0) * -1 AS ADJUSTED_TAXABLE_AMOUNT,&#xD;&#xA;    isnull(CORR.CAPITAL_GAIN,0) * -1 AS ADJUSTED_CAPITAL_GAIN,&#xD;&#xA;    isnull(CORR.NON_TAXABLE_AMOUNT,0) * -1 AS ADJUSTED_NON_TAXABLE_AMOUNT,&#xD;&#xA;    isnull(CORR.FED_TAX_AMOUNT,0) as ADJUSTED_FED_TAX_AMOUNT,&#xD;&#xA;    isnull(CORR.STATE_TAX_AMOUNT,0) as ADJUSTED_STATE_TAX_AMOUNT&#xD;&#xA;  INTO #TEMPDISA_WITHOUT_OVERPAYMENT&#xD;&#xA; FROM  SGT_PAYMENT_1099R R&#xD;&#xA; INNER JOIN TEMP_CORRECTED_PAYMENT_DETAILS_1099R CORR &#xD;&#xA;   ON CORR.PAYEE_ACCOUNT_ID = R.PAYEE_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA&#xD;&#xA;   ON CORR.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PAR&#xD;&#xA;   ON CORR.DISA_PAYEE_ACCOUNT_ID = PAR.PAYEE_ACCOUNT_ID AND PAR.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'&#xD;&#xA; WHERE  R.TAX_YEAR &gt;= YEAR(GETDATE()) - 3&#xD;&#xA;   AND CORR.INDICATOR = 'DU'&#xD;&#xA;   AND R.TAX_YEAR &gt;= YEAR(PAR.BENEFIT_BEGIN_DATE)&#xD;&#xA;   AND ISNULL(R.OLD_PAYMENT_1099R_ID,0) = ISNULL((SELECT MAX(PAYMENT_1099R_ID) FROM SGT_PAYMENT_1099R&#xD;&#xA;          WHERE PAYMENT_1099R_ID &lt;&gt; R.PAYMENT_1099R_ID&#xD;&#xA;          AND PAYEE_ACCOUNT_ID = R.PAYEE_ACCOUNT_ID &#xD;&#xA;          AND ROLLOVER_PAYMENT_FLAG = R.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;          AND AGE59_SPLIT_FLAG = R.AGE59_SPLIT_FLAG&#xD;&#xA;          AND DISTRIBUTION_CODE = R.DISTRIBUTION_CODE&#xD;&#xA;          AND TAX_YEAR = R.TAX_YEAR),0)&#xD;&#xA; &#xD;&#xA; UPDATE #TEMPDISA_WITHOUT_OVERPAYMENT&#xD;&#xA; SET&#xD;&#xA;  TAXABLE_AMOUNT = GROSS_BENEFIT_AMOUNT,   -- UPDATE THE PREVIOUS YEAR’S BOX 2A = THE SAME YEAR’S BOX 1 AMOUNT &#xD;&#xA;  CAPITAL_GAIN = 0,  -- UPDATE BOX 3 = $0&#xD;&#xA;  NON_TAXABLE_AMOUNT = 0,  -- UPDATE BOX 5 = $0&#xD;&#xA;  DISTRIBUTION_CODE = '3',  -- UPDATE BOX 7 = DIST CODE ‘3’&#xD;&#xA;  CORRECTED_FLAG = 'Y',&#xD;&#xA;  OLD_PAYMENT_1099R_ID = PAYMENT_1099R_ID&#xD;&#xA;&#xD;&#xA;------------------------------------------------------------------------------------------------------------------&#xD;&#xA; --APPROVED RECOVERIES&#xD;&#xA; ---- Summarize the data on Payee Account id , rollover payment flag and age split flag&#xD;&#xA; SELECT PAYEE_ACCOUNT_ID,&#xD;&#xA;   YEAR(DATE_OF_1099R) AS TAX_YEAR,&#xD;&#xA;   ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;   AGE59_SPLIT_FLAG,&#xD;&#xA;   DISTRIBUTION_CODE,&#xD;&#xA;   SUM(isnull(GROSS_AMOUNT,0) * -1) AS ADJUSTED_GROSS_AMOUNT,&#xD;&#xA;   SUM(isnull(TAXABLE_AMOUNT,0) * -1) AS ADJUSTED_TAXABLE_AMOUNT,&#xD;&#xA;   SUM(isnull(CAPITAL_GAIN,0) * -1) AS ADJUSTED_CAPITAL_GAIN,&#xD;&#xA;   SUM(isnull(NON_TAXABLE_AMOUNT,0) * -1) AS ADJUSTED_NON_TAXABLE_AMOUNT,&#xD;&#xA;   SUM(isnull(FED_TAX_AMOUNT,0)) as ADJUSTED_FED_TAX_AMOUNT,&#xD;&#xA;   SUM(isnull(STATE_TAX_AMOUNT,0)) as ADJUSTED_STATE_TAX_AMOUNT&#xD;&#xA;  INTO #TEMP&#xD;&#xA;  FROM TEMP_CORRECTED_PAYMENT_DETAILS_1099R CORR&#xD;&#xA;  WHERE CORR.INDICATOR = 'R'&#xD;&#xA;  GROUP BY PAYEE_ACCOUNT_ID,ROLLOVER_PAYMENT_FLAG,AGE59_SPLIT_FLAG,YEAR(DATE_OF_1099R),DISTRIBUTION_CODE&#xD;&#xA;&#xD;&#xA;-- Find the 1099R record and adjust the amounts&#xD;&#xA;&#xD;&#xA; SELECT R.PAYMENT_1099r_ID,&#xD;&#xA;  T.PAYEE_ACCOUNT_ID,&#xD;&#xA;  T.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;  T.AGE59_SPLIT_FLAG,&#xD;&#xA;  T.TAX_YEAR,&#xD;&#xA;  T.DISTRIBUTION_CODE,&#xD;&#xA;  ADJUSTED_GROSS_AMOUNT,&#xD;&#xA;  ADJUSTED_TAXABLE_AMOUNT,&#xD;&#xA;  ADJUSTED_CAPITAL_GAIN,&#xD;&#xA;  ADJUSTED_NON_TAXABLE_AMOUNT,&#xD;&#xA;  ADJUSTED_FED_TAX_AMOUNT,&#xD;&#xA;  ADJUSTED_STATE_TAX_AMOUNT&#xD;&#xA;  INTO #TEMP_REC_CANC&#xD;&#xA;  FROM SGT_PAYMENT_1099R R&#xD;&#xA;   INNER JOIN #TEMP T &#xD;&#xA;    ON T.PAYEE_ACCOUNT_ID = R.PAYEE_ACCOUNT_ID &#xD;&#xA;    AND T.ROLLOVER_PAYMENT_FLAG = R.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;    AND T.AGE59_SPLIT_FLAG = R.AGE59_SPLIT_FLAG&#xD;&#xA;    AND T.TAX_YEAR = R.TAX_YEAR   &#xD;&#xA;  WHERE ISNULL(R.OLD_PAYMENT_1099R_ID,0) = ISNULL((SELECT MAX(PAYMENT_1099R_ID) FROM SGT_PAYMENT_1099R&#xD;&#xA;          WHERE PAYMENT_1099R_ID &lt;&gt; R.PAYMENT_1099R_ID&#xD;&#xA;          AND PAYEE_ACCOUNT_ID = R.PAYEE_ACCOUNT_ID &#xD;&#xA;          AND ROLLOVER_PAYMENT_FLAG = R.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;          AND AGE59_SPLIT_FLAG = R.AGE59_SPLIT_FLAG&#xD;&#xA;          AND TAX_YEAR = R.TAX_YEAR&#xD;&#xA;          AND DISTRIBUTION_CODE = R.DISTRIBUTION_CODE),0)&#xD;&#xA; ------------------------------------------------------------------------------------------------------&#xD;&#xA; UNION ALL&#xD;&#xA; -- check on early to disablity conversion on the status of payment history and and distribution&#xD;&#xA; SELECT R.PAYMENT_1099r_ID,&#xD;&#xA;  ADJ.PAYEE_ACCOUNT_ID,&#xD;&#xA;  ADJ.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;  ADJ.AGE59_SPLIT_FLAG,&#xD;&#xA;  ADJ.TAX_YEAR,&#xD;&#xA;  ADJ.DISTRIBUTION_CODE,&#xD;&#xA;  ADJUSTED_GROSS_AMOUNT,&#xD;&#xA;  ADJUSTED_TAXABLE_AMOUNT,&#xD;&#xA;  ADJUSTED_CAPITAL_GAIN,&#xD;&#xA;  ADJUSTED_NON_TAXABLE_AMOUNT,&#xD;&#xA;  ADJUSTED_FED_TAX_AMOUNT,&#xD;&#xA;  ADJUSTED_STATE_TAX_AMOUNT&#xD;&#xA; FROM SGT_PAYMENT_1099R R&#xD;&#xA; INNER JOIN &#xD;&#xA;  (&#xD;&#xA;   SELECT PAYMENT_1099R_ID,&#xD;&#xA;     TEMP.PAYEE_ACCOUNT_ID,&#xD;&#xA;     TEMP.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     TEMP.AGE59_SPLIT_FLAG,&#xD;&#xA;     YEAR(TEMP.DATE_OF_1099R) AS TAX_YEAR,&#xD;&#xA;     TEMP.DISTRIBUTION_CODE,&#xD;&#xA;     SUM(isnull(GROSS_AMOUNT,0) * -1) AS ADJUSTED_GROSS_AMOUNT,&#xD;&#xA;     SUM(isnull(TAXABLE_AMOUNT,0) * -1) AS ADJUSTED_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(isnull(CAPITAL_GAIN,0) * -1) AS ADJUSTED_CAPITAL_GAIN,&#xD;&#xA;     SUM(isnull(NON_TAXABLE_AMOUNT,0) * -1) AS ADJUSTED_NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(isnull(FED_TAX_AMOUNT,0)) as ADJUSTED_FED_TAX_AMOUNT,&#xD;&#xA;     SUM(isnull(STATE_TAX_AMOUNT,0)) as ADJUSTED_STATE_TAX_AMOUNT&#xD;&#xA;&#xD;&#xA;   FROM &#xD;&#xA;    (&#xD;&#xA;     SELECT CORR.*,PHL.PAYMENT_1099R_ID&#xD;&#xA;      FROM TEMP_CORRECTED_PAYMENT_DETAILS_1099R CORR&#xD;&#xA;      INNER JOIN SGT_1099R_PAYMENT_HISTORY_LINK PHL&#xD;&#xA;       ON CORR.PAYMENT_HISTORY_HEADER_ID = PHL.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;      INNER JOIN SGT_PAYMENT_1099R PTR&#xD;&#xA;       ON PHL.PAYMENT_1099R_ID = PTR.PAYMENT_1099R_ID&#xD;&#xA;      WHERE ISNULL(PTR.OLD_PAYMENT_1099R_ID,0) = ISNULL((SELECT MAX(PAYMENT_1099R_ID) FROM SGT_PAYMENT_1099R&#xD;&#xA;          WHERE PAYMENT_1099R_ID &lt;&gt; PTR.PAYMENT_1099R_ID&#xD;&#xA;          AND PAYEE_ACCOUNT_ID = PTR.PAYEE_ACCOUNT_ID &#xD;&#xA;          AND ROLLOVER_PAYMENT_FLAG = PTR.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;          AND AGE59_SPLIT_FLAG = PTR.AGE59_SPLIT_FLAG&#xD;&#xA;          AND TAX_YEAR = PTR.TAX_YEAR),0)&#xD;&#xA;      AND CORR.INDICATOR = 'C'&#xD;&#xA;    ) AS TEMP&#xD;&#xA;   GROUP BY PAYMENT_1099R_ID,TEMP.PAYEE_ACCOUNT_ID,TEMP.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     TEMP.AGE59_SPLIT_FLAG,&#xD;&#xA;     YEAR(TEMP.DATE_OF_1099R),&#xD;&#xA;     TEMP.DISTRIBUTION_CODE&#xD;&#xA;  ) AS ADJ &#xD;&#xA;  ON  ADJ.PAYMENT_1099R_ID = R.PAYMENT_1099R_ID&#xD;&#xA;  &#xD;&#xA; SELECT PAYMENT_1099r_ID,&#xD;&#xA;  PAYEE_ACCOUNT_ID,&#xD;&#xA;  ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;  AGE59_SPLIT_FLAG,&#xD;&#xA;  TAX_YEAR,&#xD;&#xA;  DISTRIBUTION_CODE,&#xD;&#xA;  SUM(ADJUSTED_GROSS_AMOUNT) AS ADJUSTED_GROSS_AMOUNT,&#xD;&#xA;  SUM(ADJUSTED_TAXABLE_AMOUNT) AS ADJUSTED_TAXABLE_AMOUNT,&#xD;&#xA;  SUM(ADJUSTED_CAPITAL_GAIN) AS ADJUSTED_CAPITAL_GAIN,&#xD;&#xA;  SUM(ADJUSTED_NON_TAXABLE_AMOUNT) AS ADJUSTED_NON_TAXABLE_AMOUNT,&#xD;&#xA;  SUM(ADJUSTED_FED_TAX_AMOUNT) AS ADJUSTED_FED_TAX_AMOUNT,&#xD;&#xA;  SUM(ADJUSTED_STATE_TAX_AMOUNT) AS ADJUSTED_STATE_TAX_AMOUNT&#xD;&#xA; INTO #TEMP_REC_CANC_FINAL&#xD;&#xA; FROM #TEMP_REC_CANC&#xD;&#xA; GROUP BY PAYMENT_1099r_ID,&#xD;&#xA;   PAYEE_ACCOUNT_ID,&#xD;&#xA;   ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;   AGE59_SPLIT_FLAG,&#xD;&#xA;   TAX_YEAR,&#xD;&#xA;   DISTRIBUTION_CODE&#xD;&#xA;&#xD;&#xA; SELECT R.*,  &#xD;&#xA;  ADJUSTED_GROSS_AMOUNT,&#xD;&#xA;  ADJUSTED_TAXABLE_AMOUNT,&#xD;&#xA;  ADJUSTED_CAPITAL_GAIN,&#xD;&#xA;  ADJUSTED_NON_TAXABLE_AMOUNT,&#xD;&#xA;  ADJUSTED_FED_TAX_AMOUNT,&#xD;&#xA;  ADJUSTED_STATE_TAX_AMOUNT&#xD;&#xA;  INTO #FINAL&#xD;&#xA;  FROM SGT_PAYMENT_1099R R&#xD;&#xA;   INNER JOIN #TEMP_REC_CANC_FINAL T &#xD;&#xA;    ON T.PAYEE_ACCOUNT_ID = R.PAYEE_ACCOUNT_ID &#xD;&#xA;    AND T.ROLLOVER_PAYMENT_FLAG = R.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;    AND T.AGE59_SPLIT_FLAG = R.AGE59_SPLIT_FLAG&#xD;&#xA;    AND T.TAX_YEAR = R.TAX_YEAR   &#xD;&#xA;  WHERE ISNULL(R.OLD_PAYMENT_1099R_ID,0) = ISNULL((SELECT MAX(PAYMENT_1099R_ID) FROM SGT_PAYMENT_1099R&#xD;&#xA;          WHERE PAYMENT_1099R_ID &lt;&gt; R.PAYMENT_1099R_ID&#xD;&#xA;          AND PAYEE_ACCOUNT_ID = R.PAYEE_ACCOUNT_ID &#xD;&#xA;          AND ROLLOVER_PAYMENT_FLAG = R.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;          AND AGE59_SPLIT_FLAG = R.AGE59_SPLIT_FLAG&#xD;&#xA;          AND DISTRIBUTION_CODE = R.DISTRIBUTION_CODE&#xD;&#xA;          AND TAX_YEAR = R.TAX_YEAR),0)&#xD;&#xA; UPDATE #FINAL&#xD;&#xA; SET GROSS_BENEFIT_AMOUNT  = (ISNULL(GROSS_BENEFIT_AMOUNT,0)+ISNULL(ADJUSTED_GROSS_AMOUNT,0))  ,&#xD;&#xA;  TAXABLE_AMOUNT = (ISNULL(TAXABLE_AMOUNT,0)+ISNULL(ADJUSTED_TAXABLE_AMOUNT,0))  ,&#xD;&#xA;  CAPITAL_GAIN = (ISNULL(CAPITAL_GAIN,0)+ISNULL(ADJUSTED_CAPITAL_GAIN,0))  ,&#xD;&#xA;  NON_TAXABLE_AMOUNT = (ISNULL(NON_TAXABLE_AMOUNT,0)+ISNULL(ADJUSTED_NON_TAXABLE_AMOUNT,0))   ,&#xD;&#xA;  FED_TAX_AMOUNT = (ISNULL(FED_TAX_AMOUNT ,0)+ISNULL( ADJUSTED_FED_TAX_AMOUNT,0))  ,&#xD;&#xA;  STATE_TAX_AMOUNT = (ISNULL(STATE_TAX_AMOUNT,0)+ISNULL(ADJUSTED_STATE_TAX_AMOUNT,0)),&#xD;&#xA;  CORRECTED_FLAG = 'Y',&#xD;&#xA;  OLD_PAYMENT_1099R_ID = PAYMENT_1099R_ID&#xD;&#xA;  &#xD;&#xA; INSERT INTO #FINAL&#xD;&#xA; SELECT * FROM #TEMPDISA&#xD;&#xA;&#xD;&#xA; INSERT INTO #FINAL&#xD;&#xA; SELECT * FROM #TEMPDISA_WITHOUT_OVERPAYMENT&#xD;&#xA; WHERE PAYEE_ACCOUNT_ID NOT IN (SELECT PAYEE_ACCOUNT_ID FROM #FINAL)&#xD;&#xA;&#xD;&#xA;  --QUERY TO CREATE 1099R&#xD;&#xA; INSERT INTO SGT_PAYMENT_1099R (PAYEE_ACCOUNT_ID, TAX_YEAR, CORRECTED_FLAG, TOTAL_DISTRIBUTION_FLAG, DISTRIBUTION_CODE, &#xD;&#xA;      OLD_PAYMENT_1099R_ID, DIST_PERCENTAGE, GROSS_BENEFIT_AMOUNT, TAXABLE_AMOUNT, NON_TAXABLE_AMOUNT, CAPITAL_GAIN, &#xD;&#xA;      FED_TAX_AMOUNT, STATE_TAX_AMOUNT, SSN, FEDERAL_ID, PERSON_ID, ORG_ID, NAME, ADDR_LINE_1, ADDR_LINE_2, ADDR_CITY, &#xD;&#xA;      ADDR_STATE_ID, ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, &#xD;&#xA;      FOREIGN_POSTAL_CODE, ROLLOVER_PAYMENT_FLAG, AGE59_SPLIT_FLAG, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ,ID_SUFFIX)&#xD;&#xA;  SELECT &#xD;&#xA;PAYEE_ACCOUNT_ID,TAX_YEAR,CORRECTED_FLAG,TOTAL_DISTRIBUTION_FLAG,DISTRIBUTION_CODE,OLD_PAYMENT_1099R_ID,DIST_PERCENTAGE,GROSS_BENEFIT_AMOUNT,TAXABLE_AMOUNT,NON_TAXABLE_AMOUNT,CAPITAL_GAIN,FED_TAX_AMOUNT,STATE_TAX_AMOUNT,SSN,FEDERAL_ID,PERSON_ID,ORG_ID,NAME,ADDR_LINE_1,ADDR_LINE_2,CITY,STATE_ID,STATE_VALUE,COUNTRY_ID,COUNTRY_VALUE,ZIP_CODE,ZIP_4_CODE,FOREIGN_PROVINCE,FOREIGN_POSTAL_CODE,ROLLOVER_PAYMENT_FLAG,AGE59_SPLIT_FLAG,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ,ID_SUFFIX  &#xD;&#xA;  FROM &#xD;&#xA;  (&#xD;&#xA;   SELECT  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;     PHH.TAX_YEAR,&#xD;&#xA;     'Y' AS CORRECTED_FLAG,&#xD;&#xA;     PHH.TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     PHH.DISTRIBUTION_CODE,&#xD;&#xA;     PHH.OLD_PAYMENT_1099R_ID,&#xD;&#xA;     PHH.DIST_PERCENTAGE,&#xD;&#xA;     PHH.GROSS_BENEFIT_AMOUNT,&#xD;&#xA;     PHH.TAXABLE_AMOUNT,&#xD;&#xA;     PHH.NON_TAXABLE_AMOUNT,&#xD;&#xA;     PHH.CAPITAL_GAIN,&#xD;&#xA;     PHH.FED_TAX_AMOUNT,&#xD;&#xA;     PHH.STATE_TAX_AMOUNT,&#xD;&#xA;     PHH.SSN,&#xD;&#xA;     PHH.FEDERAL_ID,     &#xD;&#xA;     PHH.PERSON_ID,&#xD;&#xA;     PHH.ORG_ID,&#xD;&#xA;     PHH.[NAME],&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_1 ELSE OCA.ADDR_LINE_1 END AS ADDR_LINE_1,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_2 ELSE OCA.ADDR_LINE_2 END AS ADDR_LINE_2,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_CITY ELSE OCA.CITY END AS CITY,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_ID ELSE OCA.STATE_ID END AS STATE_ID,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_VALUE ELSE OCA.STATE_VALUE END AS STATE_VALUE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_ID ELSE OCA.COUNTRY_ID END AS COUNTRY_ID,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_VALUE ELSE OCA.COUNTRY_VALUE END AS COUNTRY_VALUE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_CODE ELSE OCA.ZIP_CODE END AS ZIP_CODE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_4_CODE ELSE OCA.ZIP_4_CODE END AS ZIP_4_CODE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_PROVINCE ELSE OCA.FOREIGN_PROVINCE END AS FOREIGN_PROVINCE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_POSTAL_CODE ELSE OCA.FOREIGN_POSTAL_CODE END AS FOREIGN_POSTAL_CODE,&#xD;&#xA;     PHH.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     PHH.AGE59_SPLIT_FLAG,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 AS UPDATE_SEQ,&#xD;&#xA;     ID_SUFFIX = NULL      &#xD;&#xA;   FROM&#xD;&#xA;     #FINAL AS PHH&#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON P  &#xD;&#xA;      ON PHH.PERSON_ID = P.PERSON_ID&#xD;&#xA;     LEFT OUTER JOIN SGT_ORGANIZATION O  &#xD;&#xA;      ON PHH.ORG_ID = O.ORG_ID&#xD;&#xA;     LEFT OUTER JOIN SGT_ORG_CONTACT_ADDRESS OCA  &#xD;&#xA;      ON O.PRIMARY_ADDRESS_ID=OCA.CONTACT_ORG_ADDRESS_ID&#xD;&#xA;     LEFT OUTER JOIN &#xD;&#xA;     (&#xD;&#xA;     SELECT  P.PERSON_ID, &#xD;&#xA;      PA.ADDR_LINE_1 as ADDR_LINE_1,&#xD;&#xA;  PA.ADDR_LINE_2 as ADDR_LINE_2,&#xD;&#xA;  PA.ADDR_CITY as ADDR_CITY,&#xD;&#xA;  PA.ADDR_STATE_ID as ADDR_STATE_ID,&#xD;&#xA;  PA.ADDR_STATE_VALUE as ADDR_STATE_VALUE,&#xD;&#xA;  PA.ADDR_COUNTRY_ID as ADDR_COUNTRY_ID,&#xD;&#xA;  PA.ADDR_COUNTRY_VALUE as ADDR_COUNTRY_VALUE,&#xD;&#xA;  PA.ADDR_ZIP_CODE as ADDR_ZIP_CODE,&#xD;&#xA;  PA.ADDR_ZIP_4_CODE as ADDR_ZIP_4_CODE,&#xD;&#xA;  PA.FOREIGN_PROVINCE as FOREIGN_PROVINCE,&#xD;&#xA;  PA.FOREIGN_POSTAL_CODE as FOREIGN_POSTAL_CODE,&#xD;&#xA;  ROW_NUMBER() OVER ( PARTITION BY p.person_id ORDER BY ISNULL(PA.END_DATE,'99991231') desc) as NUMBER&#xD;&#xA;     FROM SGT_PERSON P &#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON_ADDRESS PA   ON P.PERSON_ID  = PA.PERSON_ID&#x9;&#x9;&#xD;&#xA;    ) AS PERADDR &#xD;&#xA;    ON PERADDR.PERSON_ID=PHH.PERSON_ID&#xD;&#xA;&#x9; WHERE NUMBER =1     &#xD;&#xA;  ) AS TEMP&#xD;&#xA;  ORDER BY CASE WHEN FOREIGN_PROVINCE IS NOT NULL then 'A' ELSE 'B' END ,Name&#xD;&#xA;&#xD;&#xA;  INSERT INTO SGT_1099R_PAYMENT_HISTORY_LINK&#xD;&#xA; (PAYMENT_1099R_ID, PAYMENT_HISTORY_HEADER_ID, BENEFIT_OVERPAYMENT_ID, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ)&#xD;&#xA; SELECT  A.PAYMENT_1099R_ID,B.PAYMENT_HISTORY_HEADER_ID,B.BENEFIT_OVERPAYMENT_ID,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY, GETDATE() AS CREATED_DATE,&#xD;&#xA;    'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY, GETDATE() AS MODIFIED_DATE,0 AS UPDATE_SEQ&#xD;&#xA; FROM  SGT_PAYMENT_1099R A&#xD;&#xA; INNER JOIN TEMP_CORRECTED_PAYMENT_DETAILS_1099R B&#xD;&#xA;   ON A.PAYEE_ACCOUNT_ID = B.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND A.ROLLOVER_PAYMENT_FLAG = B.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;   AND A.DISTRIBUTION_CODE = B.DISTRIBUTION_CODE&#xD;&#xA;   AND A.AGE59_SPLIT_FLAG = B.AGE59_SPLIT_FLAG&#xD;&#xA; WHERE  A.TAX_YEAR = YEAR(B.DATE_OF_1099R)&#xD;&#xA;   AND A.CORRECTED_FLAG = 'Y'&#xD;&#xA;   AND A.CREATED_DATE &gt;= @PROCESS_START_DATE&#xD;&#xA; &#xD;&#xA; DROP TABLE #FINAL&#xD;&#xA; DROP TABLE #TEMPDISA&#xD;&#xA; DROP TABLE #TEMPDISA_WITHOUT_OVERPAYMENT&#xD;&#xA; DROP TABLE #TEMP&#xD;&#xA; DROP TABLE #TEMP_REC_CANC&#xD;&#xA; DROP TABLE #TEMP_REC_CANC_FINAL&#xD;&#xA;END">
      <parameters>
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptCorrected1099rForm" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--&quot;entPayment1099r.rptCorrected1099rForm&quot;&#xD;&#xA;SELECT   TAX_YEAR AS RUN_YEAR,&#xD;&#xA;    PAY1099R.GROSS_BENEFIT_AMOUNT AS GROSS_DIST_AMOUNT,&#xD;&#xA;    PAY1099R.TAXABLE_AMOUNT AS TAXABLE_AMOUNT,&#xD;&#xA;    '' AS TAXABLE_AMT_NOT_DETERMINED_FLAG,&#xD;&#xA;    ISNULL(PAY1099R.TOTAL_DISTRIBUTION_FLAG,'') AS TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;    PAY1099R.CAPITAL_GAIN AS CAPITAL_GAIN,&#xD;&#xA;    PAY1099R.FED_TAX_AMOUNT AS FEDERAL_TAX,&#xD;&#xA;    PAY1099R.NON_TAXABLE_AMOUNT AS EMPLOYEE_CONTRIBUTION_AMT,&#xD;&#xA;    (PAY1099R.TAXABLE_AMOUNT + PAY1099R.NON_TAXABLE_AMOUNT + PAY1099R.CAPITAL_GAIN - PAY1099R.FED_TAX_AMOUNT - PAY1099R.STATE_TAX_AMOUNT) AS NET_AMOUNT,&#xD;&#xA;    PAY1099R.DISTRIBUTION_CODE,&#xD;&#xA;    NULL AS COMMENTS,&#xD;&#xA;    NULL AS OTHER_AMOUNTS,&#xD;&#xA;    NULL AS OTHER_PERCENTAGE,&#xD;&#xA;    PAY1099R.DIST_PERCENTAGE AS TOTAL_DIST_PERCENTAGE,&#xD;&#xA;    CASE WHEN PAY1099R.TAX_YEAR = YEAR(PA.BENEFIT_BEGIN_DATE)&#xD;&#xA;      THEN PA.NONTAXABLE_BEGINNING_BALANCE &#xD;&#xA;      ELSE NULL END AS TOTAL_EMPLOYEE_CONTRIB_AMT,&#xD;&#xA;    PAY1099R.STATE_TAX_AMOUNT AS STATE_TAX,&#xD;&#xA;    NULL AS STATE_DISTRIBUTION,&#xD;&#xA;    NULL AS LOCAL_TAX,&#xD;&#xA;    NULL AS LOCALITY,&#xD;&#xA;    NULL AS LOCAL_DISTRIBUTION,&#xD;&#xA;    PAY1099R.PAYEE_ACCOUNT_ID,&#xD;&#xA;    UPPER(PAY1099R.[NAME]) AS PAYEE_NAME,&#xD;&#xA;    PAY1099R.SSN AS SSN_TIN,&#xD;&#xA;    ADDR_LINE_1,    &#xD;&#xA;    UPPER(ISNULL(ADDR_LINE_2,'')) AS ADDR_LINE_2,&#xD;&#xA;    UPPER(ISNULL(ADDR_CITY,'')) AS ADDR_CITY,&#xD;&#xA;    UPPER(ISNULL(PAY1099R.ADDR_STATE_VALUE,'')) AS ADDR_STATE_VALUE,&#xD;&#xA;    ISNULL(ADDR_ZIP_CODE,'') AS ADDR_ZIP_CODE,&#xD;&#xA;    UPPER(ISNULL(FOREIGN_PROVINCE,'')) + ' ' +ISNULL(FOREIGN_POSTAL_CODE,'') AS ADDR_LINE_3,&#xD;&#xA;    ISNULL(CORRECTED_FLAG,'') AS CORRECTED_FLAG,&#xD;&#xA;    AGE59_SPLIT_FLAG,&#xD;&#xA;    --PAY1099R.*,&#xD;&#xA;    PAY1099R.ADDR_STATE_VALUE as addr_state,&#xD;&#xA;    --,CHAR(64+ROW_NUMBER() &#xD;&#xA;    --OVER (PARTITION BY PAY1099R.PAYEE_ACCOUNT_ID &#xD;&#xA;    --ORDER BY PAY1099R.PAYEE_ACCOUNT_ID , &#xD;&#xA;    --PAY1099R.PAYMENT_1099R_ID )) AS ID_SUFFIX,&#xD;&#xA;    ID_SUFFIX=(SELECT ID_SUFFIX from SGT_PAYMENT_1099R where PAYMENT_1099R_ID=PAY1099R.OLD_PAYMENT_1099R_ID),&#xD;&#xA;    PAYMENT_1099R_ID,&#xD;&#xA;    NAME,&#xD;&#xA;    PAY1099R.PERSON_ID,&#xD;&#xA;&#x9;PAY1099R.SSN,&#xD;&#xA;&#x9;PAY1099R.GROSS_BENEFIT_AMOUNT,&#xD;&#xA;    TAX_YEAR&#xD;&#xA;    INTO FINALCR  &#xD;&#xA;FROM   SGT_PAYMENT_1099R PAY1099R WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;   ON PAY1099R.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK) &#xD;&#xA;   ON PAY1099R.ADDR_STATE_ID = CV1.CODE_ID &#xD;&#xA;   AND PAY1099R.ADDR_STATE_VALUE = CV1.CODE_VALUE&#xD;&#xA;WHERE   (PAY1099R.CREATED_DATE &gt; @CREATEDDATE&#xD;&#xA;   AND PAY1099R.CORRECTED_FLAG = 'Y') OR (PAY1099R.CORRECTED_FLAG = 'Y' AND PAY1099R.CREATED_ANNUAL_1099R_FORM = 'N' AND PAY1099R.CORRECTIONS_1099R ='Y')&#xD;&#xA;ORDER BY PAY1099R.PAYMENT_1099R_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE PAY1099R    &#xD;&#xA;SET ID_SUFFIX = F.ID_SUFFIX &#xD;&#xA;FROM   SGT_PAYMENT_1099R PAY1099R WITH(NOLOCK)&#xD;&#xA; INNER JOIN FINALCR F WITH(NOLOCK)&#xD;&#xA;   ON PAY1099R.PAYMENT_1099R_ID = F.PAYMENT_1099R_ID&#xD;&#xA;WHERE PAY1099R.TAX_YEAR = F.RUN_YEAR&#xD;&#xA;&#xD;&#xA;UPDATE PAY    &#xD;&#xA;SET CREATED_ANNUAL_1099R_FORM = 'Y'&#xD;&#xA;FROM   SGT_PAYMENT_1099R PAY WITH(NOLOCK)&#xD;&#xA; INNER JOIN FINALCR F WITH(NOLOCK)&#xD;&#xA;   ON PAY.PAYMENT_1099R_ID = F.PAYMENT_1099R_ID&#xD;&#xA;WHERE PAY.TAX_YEAR = F.RUN_YEAR&#xD;&#xA;AND PAY.CORRECTED_FLAG = 'Y' AND PAY.CREATED_ANNUAL_1099R_FORM = 'N' AND PAY.CORRECTIONS_1099R ='Y'&#xD;&#xA;&#xD;&#xA;SELECT * FROM FINALCR">
      <parameters>
        <parameter ID="@CREATEDDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="fle1099rFileOut" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select a.*,b.nontaxable_beginning_balance,&#xD;&#xA;CHAR(64+ROW_NUMBER() OVER (PARTITION BY A.PAYEE_ACCOUNT_ID &#xD;&#xA;ORDER BY A.PAYEE_ACCOUNT_ID , &#xD;&#xA;A.PAYMENT_1099R_ID )) AS ID_SUFFIX &#xD;&#xA;from SGT_PAYMENT_1099R a &#xD;&#xA; inner join SGT_PAYEE_ACCOUNT b &#xD;&#xA;  on a.payee_account_id=b.payee_Account_id&#xD;&#xA; inner join sgt_person c&#xD;&#xA;  on a.person_id=c.person_id&#xD;&#xA;where a.tax_year=@taxyear">
      <parameters>
        <parameter ID="@taxyear" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CreateTrial1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('TEMP_PAYMENT_DETAILS_1099R') IS NOT NULL&#xD;&#xA;BEGIN&#xD;&#xA;&#xD;&#xA; ---- Declaration Section ------------------------------&#xD;&#xA; DECLARE @DATEOF1099R DATETIME&#xD;&#xA; SET @DATEOF1099R =  CONVERT(DATETIME,CONVERT(VARCHAR,GETDATE(),101) ,110)&#xD;&#xA;&#xD;&#xA; SELECT  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;    PHH.PERSON_ID,&#xD;&#xA;    PHH.ORG_ID,&#xD;&#xA;    PHH.[NAME],&#xD;&#xA;    PHH.BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;    PHH.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;    PHH.PLAN_ID,&#xD;&#xA;    PHH.BENEFIT_OPTION_ID,&#xD;&#xA;    PHH.BENEFIT_OPTION_VALUE,&#xD;&#xA;    PHH.DISTRIBUTION_CODE,&#xD;&#xA;    ISNULL(PHH.GROSS_AMOUNT,0)+ISNULL(BEN.GROSS_AMOUNT,0) AS GROSS_AMOUNT,&#xD;&#xA;    ISNULL(PHH.NON_TAXABLE_AMOUNT,0)+ISNULL(BEN.NON_TAXABLE_AMOUNT,0) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;    ISNULL(PHH.CAPITAL_GAIN,0)+ISNULL(BEN.CAPITAL_GAIN,0) AS CAPITAL_GAIN,&#xD;&#xA;    ISNULL(PHH.TAXABLE_AMOUNT,0)+ISNULL(BEN.TAXABLE_AMOUNT,0) AS TAXABLE_AMOUNT,&#xD;&#xA;    ISNULL(PHH.FED_TAX_AMOUNT,0)+ISNULL(BEN.FED_TAX_AMOUNT,0) AS FED_TAX_AMOUNT,&#xD;&#xA;    ISNULL(PHH.STATE_TAX_AMOUNT,0)+ISNULL(BEN.STATE_TAX_AMOUNT,0) AS STATE_TAX_AMOUNT,&#xD;&#xA;    PHH.TAX_YEAR,&#xD;&#xA;    PHH.CHECK_AMOUNT,&#xD;&#xA;    PHH.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;    PHH.AGE59_SPLIT_FLAG,&#xD;&#xA;    PHH.TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;    PHH.SSN,&#xD;&#xA;    PHH.FEDERAL_ID&#xD;&#xA; INTO  #TEMP&#xD;&#xA; FROM&#xD;&#xA; (&#xD;&#xA;  SELECT  PAYEE_ACCOUNT_ID,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     [NAME],&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SUM(ISNULL(GROSS_AMOUNT,0)) AS GROSS_AMOUNT,&#xD;&#xA;     SUM(ISNULL(NON_TAXABLE_AMOUNT,0)) AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(CAPITAL_GAIN,0)) AS CAPITAL_GAIN,&#xD;&#xA;     SUM(ISNULL(TAXABLE_AMOUNT,0)) AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(ISNULL(FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(ISNULL(STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,&#xD;&#xA;     YEAR(PAYMENT_DATE) AS TAX_YEAR,&#xD;&#xA;     SUM(ISNULL(CHECK_AMOUNT,0)) AS CHECK_AMOUNT,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     AGE59_SPLIT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID&#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;  WHERE  PAYMENT_HISTORY_HEADER_ID IS NOT NULL&#xD;&#xA;  GROUP BY PAYEE_ACCOUNT_ID,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     [NAME],&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     AGE59_SPLIT_FLAG,     &#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     YEAR(PAYMENT_DATE)&#xD;&#xA; ) PHH&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; (&#xD;&#xA;  SELECT  PAYEE_ACCOUNT_ID,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     [NAME],&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SUM(isnull(GROSS_AMOUNT,0))*-1 AS GROSS_AMOUNT,&#xD;&#xA;     SUM(isnull(NON_TAXABLE_AMOUNT,0))*-1 AS NON_TAXABLE_AMOUNT,&#xD;&#xA;     SUM(isnull(CAPITAL_GAIN,0))*-1 AS CAPITAL_GAIN,&#xD;&#xA;     SUM(isnull(TAXABLE_AMOUNT,0))*-1 AS TAXABLE_AMOUNT,&#xD;&#xA;     SUM(isnull(FED_TAX_AMOUNT,0)) AS FED_TAX_AMOUNT,&#xD;&#xA;     SUM(isnull(STATE_TAX_AMOUNT,0)) AS STATE_TAX_AMOUNT,&#xD;&#xA;     YEAR(PAYMENT_DATE) AS TAX_YEAR,&#xD;&#xA;     SUM(CHECK_AMOUNT) AS CHECK_AMOUNT,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     AGE59_SPLIT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID&#xD;&#xA;  FROM  TEMP_PAYMENT_DETAILS_1099R&#xD;&#xA;  WHERE  BENEFIT_OVERPAYMENT_ID IS NOT NULL &#xD;&#xA;  GROUP BY PAYEE_ACCOUNT_ID,&#xD;&#xA;     PLAN_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_ID,&#xD;&#xA;     BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;     BENEFIT_OPTION_ID,&#xD;&#xA;     BENEFIT_OPTION_VALUE,&#xD;&#xA;     PERSON_ID,&#xD;&#xA;     ORG_ID,&#xD;&#xA;     ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     [NAME],&#xD;&#xA;     DISTRIBUTION_CODE,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     AGE59_SPLIT_FLAG,     &#xD;&#xA;     TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     SSN,&#xD;&#xA;     FEDERAL_ID,&#xD;&#xA;     YEAR(PAYMENT_DATE)&#xD;&#xA; ) BEN ON PHH.PAYEE_ACCOUNT_ID = BEN.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PHH.ROLLOVER_PAYMENT_FLAG = BEN.ROLLOVER_PAYMENT_FLAG&#xD;&#xA;   AND PHH.DISTRIBUTION_CODE = BEN.DISTRIBUTION_CODE&#xD;&#xA;   AND PHH.AGE59_SPLIT_FLAG = BEN.AGE59_SPLIT_FLAG&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID('TEMP_SGT_PAYMENT_1099R') IS NOT NULL&#xD;&#xA; DROP TABLE TEMP_SGT_PAYMENT_1099R&#xD;&#xA;&#xD;&#xA;Select * into TEMP_SGT_PAYMENT_1099R&#xD;&#xA;from SGT_PAYMENT_1099R where 1 = 2&#xD;&#xA;&#xD;&#xA;  --QUERY TO CREATE 1099R&#xD;&#xA; INSERT INTO TEMP_SGT_PAYMENT_1099R (PAYEE_ACCOUNT_ID, TAX_YEAR, CORRECTED_FLAG, TOTAL_DISTRIBUTION_FLAG, DISTRIBUTION_CODE, &#xD;&#xA;      OLD_PAYMENT_1099R_ID, DIST_PERCENTAGE, GROSS_BENEFIT_AMOUNT, TAXABLE_AMOUNT, NON_TAXABLE_AMOUNT, CAPITAL_GAIN, &#xD;&#xA;      FED_TAX_AMOUNT, STATE_TAX_AMOUNT, SSN, FEDERAL_ID, PERSON_ID, ORG_ID, NAME, ADDR_LINE_1, ADDR_LINE_2, ADDR_CITY, &#xD;&#xA;      ADDR_STATE_ID, ADDR_STATE_VALUE, ADDR_COUNTRY_ID, ADDR_COUNTRY_VALUE, ADDR_ZIP_CODE, ADDR_ZIP_4_CODE, FOREIGN_PROVINCE, &#xD;&#xA;      FOREIGN_POSTAL_CODE, ROLLOVER_PAYMENT_FLAG, AGE59_SPLIT_FLAG, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ)&#xD;&#xA;  SELECT * &#xD;&#xA;  FROM &#xD;&#xA;  (&#xD;&#xA;   SELECT  PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;     PHH.TAX_YEAR,&#xD;&#xA;     'N' AS CORRECTED_FLAG,&#xD;&#xA;     PHH.TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;     PHH.DISTRIBUTION_CODE,&#xD;&#xA;     NULL AS OLD_PAYMENT_1099R_ID,&#xD;&#xA;     (SELECT TOP 1 &#xD;&#xA;       CASE WHEN PA.ACCOUNT_RELATION_VALUE = 'BENE' THEN BENEFIT_PERCENTAGE ELSE 0 END&#xD;&#xA;       FROM SGT_BENEFIT_CALCULATION_PAYEE BCP&#xD;&#xA;      INNER JOIN SGT_PAYEE_ACCOUNT PA ON BCP.PAYEE_ACCOUNT_ID =PA.PAYEE_ACCOUNT_ID &#xD;&#xA;       AND BCP.BENEFIT_CALCULATION_ID = PA.CALCULATION_ID&#xD;&#xA;      WHERE PA.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID&#xD;&#xA;     )&#xD;&#xA;     AS DIST_PERCENTAGE,&#xD;&#xA;     PHH.GROSS_AMOUNT,&#xD;&#xA;     PHH.TAXABLE_AMOUNT,&#xD;&#xA;     PHH.NON_TAXABLE_AMOUNT,&#xD;&#xA;     PHH.CAPITAL_GAIN,&#xD;&#xA;     PHH.FED_TAX_AMOUNT,&#xD;&#xA;     PHH.STATE_TAX_AMOUNT,&#xD;&#xA;     PHH.SSN,&#xD;&#xA;     PHH.FEDERAL_ID,     &#xD;&#xA;     PHH.PERSON_ID,&#xD;&#xA;     PHH.ORG_ID,&#xD;&#xA;     PHH.[NAME],&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_1 ELSE OCA.ADDR_LINE_1 END AS ADDR_LINE_1,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_LINE_2 ELSE OCA.ADDR_LINE_2 END AS ADDR_LINE_2,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_CITY ELSE OCA.CITY END AS CITY,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_ID ELSE OCA.STATE_ID END AS STATE_ID,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_STATE_VALUE ELSE OCA.STATE_VALUE END AS STATE_VALUE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_ID ELSE OCA.COUNTRY_ID END AS COUNTRY_ID,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_COUNTRY_VALUE ELSE OCA.COUNTRY_VALUE END AS COUNTRY_VALUE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_CODE ELSE OCA.ZIP_CODE END AS ZIP_CODE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.ADDR_ZIP_4_CODE ELSE OCA.ZIP_4_CODE END AS ZIP_4_CODE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_PROVINCE ELSE OCA.FOREIGN_PROVINCE END AS FOREIGN_PROVINCE,&#xD;&#xA;     CASE WHEN PHH.PERSON_ID IS NOT NULL THEN PERADDR.FOREIGN_POSTAL_CODE ELSE OCA.FOREIGN_POSTAL_CODE END AS FOREIGN_POSTAL_CODE,&#xD;&#xA;     PHH.ROLLOVER_PAYMENT_FLAG,&#xD;&#xA;     PHH.AGE59_SPLIT_FLAG,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS CREATED_BY,&#xD;&#xA;     GETDATE() AS CREATED_DATE,&#xD;&#xA;     'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) AS MODIFIED_BY,&#xD;&#xA;     GETDATE() AS MODIFIED_DATE,&#xD;&#xA;     0 AS UPDATE_SEQ     &#xD;&#xA;   FROM&#xD;&#xA;     #TEMP AS PHH&#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON P  &#xD;&#xA;      ON PHH.PERSON_ID = P.PERSON_ID&#xD;&#xA;     LEFT OUTER JOIN SGT_ORGANIZATION O  &#xD;&#xA;      ON PHH.ORG_ID = O.ORG_ID&#xD;&#xA;     LEFT OUTER JOIN SGT_ORG_CONTACT_ADDRESS OCA  &#xD;&#xA;      ON O.PRIMARY_ADDRESS_ID=OCA.CONTACT_ORG_ADDRESS_ID&#xD;&#xA;     LEFT OUTER JOIN &#xD;&#xA;     (&#xD;&#xA;     SELECT  P.PERSON_ID, &#xD;&#xA;     CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;         CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;           THEN PA2.ADDR_LINE_1  &#xD;&#xA;           WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;           THEN PA1.ADDR_LINE_1  END&#xD;&#xA;         ELSE  PA3.ADDR_LINE_1 END&#xD;&#xA;        AS ADDR_LINE_1,&#xD;&#xA;     CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;         CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;           THEN PA2.ADDR_LINE_2  &#xD;&#xA;           WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;           THEN PA1.ADDR_LINE_2  END&#xD;&#xA;         ELSE  PA3.ADDR_LINE_2 END&#xD;&#xA;        AS ADDR_LINE_2,&#xD;&#xA;     CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;         CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;           THEN PA2.ADDR_CITY  &#xD;&#xA;           WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;           THEN PA1.ADDR_CITY  END&#xD;&#xA;         ELSE  PA3.ADDR_CITY END&#xD;&#xA;        AS ADDR_CITY,&#xD;&#xA;     CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;         CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;           THEN PA2.ADDR_STATE_ID  &#xD;&#xA;           WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;           THEN PA1.ADDR_STATE_ID  END&#xD;&#xA;         ELSE  PA3.ADDR_STATE_ID END&#xD;&#xA;        AS ADDR_STATE_ID,&#xD;&#xA;     CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;         CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;           THEN PA2.ADDR_STATE_VALUE  &#xD;&#xA;           WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;           THEN PA1.ADDR_STATE_VALUE  END&#xD;&#xA;         ELSE  PA3.ADDR_STATE_VALUE END&#xD;&#xA;        AS ADDR_STATE_VALUE,&#xD;&#xA;     CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;         CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;           THEN PA2.ADDR_COUNTRY_ID &#xD;&#xA;           WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;           THEN PA1.ADDR_COUNTRY_ID  END&#xD;&#xA;         ELSE  PA3.ADDR_COUNTRY_ID END&#xD;&#xA;        AS ADDR_COUNTRY_ID,&#xD;&#xA;     CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;         CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;           THEN PA2.ADDR_COUNTRY_VALUE  &#xD;&#xA;           WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;           THEN PA1.ADDR_COUNTRY_VALUE  END&#xD;&#xA;         ELSE  PA3.ADDR_COUNTRY_VALUE END&#xD;&#xA;        AS ADDR_COUNTRY_VALUE,&#xD;&#xA;     CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;         CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;           THEN PA2.ADDR_ZIP_CODE &#xD;&#xA;           WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;           THEN PA1.ADDR_ZIP_CODE  END&#xD;&#xA;         ELSE  PA3.ADDR_ZIP_CODE END&#xD;&#xA;        AS ADDR_ZIP_CODE,&#xD;&#xA;     CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;         CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;           THEN PA2.ADDR_ZIP_4_CODE  &#xD;&#xA;           WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;           THEN PA1.ADDR_ZIP_4_CODE  END&#xD;&#xA;         ELSE  PA3.ADDR_ZIP_4_CODE END&#xD;&#xA;        AS ADDR_ZIP_4_CODE,&#xD;&#xA;     CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;         CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;           THEN PA2.FOREIGN_PROVINCE  &#xD;&#xA;           WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;           THEN PA1.FOREIGN_PROVINCE  END&#xD;&#xA;         ELSE  PA3.FOREIGN_PROVINCE END&#xD;&#xA;        AS FOREIGN_PROVINCE,&#xD;&#xA;     CASE WHEN PA3.PERSON_ID IS NULL THEN &#xD;&#xA;         CASE WHEN PA2.PERSON_ID IS NOT NULL &#xD;&#xA;           THEN PA2.FOREIGN_POSTAL_CODE  &#xD;&#xA;           WHEN PA1.PERSON_ID IS NOT NULL&#xD;&#xA;           THEN PA1.FOREIGN_POSTAL_CODE  END&#xD;&#xA;         ELSE  PA3.FOREIGN_POSTAL_CODE END&#xD;&#xA;        AS FOREIGN_POSTAL_CODE&#xD;&#xA;     FROM SGT_PERSON P &#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON_ADDRESS PA1   ON P.PERSON_ID  = PA1.PERSON_ID  AND PA1.ADDRESS_TYPE_VALUE = 'PERM'  AND &#xD;&#xA;           @DateOf1099R BETWEEN PA1.START_DATE AND &#xD;&#xA;           (CASE WHEN PA1.END_DATE IS NULL &#xD;&#xA;             THEN '99991231' ELSE PA1.END_DATE END)&#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON_ADDRESS PA2  ON P.PERSON_ID  = PA2.PERSON_ID AND PA2.ADDRESS_TYPE_VALUE = 'TEMP' AND&#xD;&#xA;           @DateOf1099R BETWEEN PA2.START_DATE AND &#xD;&#xA;           (CASE WHEN PA2.END_DATE IS NULL &#xD;&#xA;             THEN '99991231' ELSE PA2.END_DATE END)&#xD;&#xA;     LEFT OUTER JOIN SGT_PERSON_ADDRESS PA3  ON P.PERSON_ID  = PA3.PERSON_ID AND PA3.ADDRESS_TYPE_VALUE = 'PAYM' AND&#xD;&#xA;           @DateOf1099R BETWEEN PA3.START_DATE AND &#xD;&#xA;           (CASE WHEN PA3.END_DATE IS NULL &#xD;&#xA;             THEN '99991231' ELSE PA3.END_DATE END)&#xD;&#xA;    ) AS PERADDR &#xD;&#xA;    ON PERADDR.PERSON_ID=PHH.PERSON_ID    &#xD;&#xA;  ) AS temp&#xD;&#xA;  ORDER BY CASE WHEN FOREIGN_PROVINCE IS NOT NULL then 'A' ELSE 'B' END ,Name  &#xD;&#xA;&#xD;&#xA; &#xD;&#xA; --Part to update ER - Disability payee accounts as per BR - 091 - 22&#xD;&#xA; UPDATE  ANN1099R&#xD;&#xA;  SET   ANN1099R.TAXABLE_AMOUNT = ANN1099R.GROSS_BENEFIT_AMOUNT,   -- UPDATE THE PREVIOUS YEAR’S BOX 2A = THE SAME YEAR’S BOX 1 AMOUNT &#xD;&#xA;     ANN1099R.CAPITAL_GAIN = 0,  -- UPDATE BOX 3 = $0&#xD;&#xA;     ANN1099R.NON_TAXABLE_AMOUNT = 0,  -- UPDATE BOX 5 = $0&#xD;&#xA;     ANN1099R.DISTRIBUTION_CODE = '3'&#xD;&#xA;  FROM  TEMP_SGT_PAYMENT_1099R ANN1099R&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT ER&#xD;&#xA;   ON  ANN1099R.PAYEE_ACCOUNT_ID = ER.PAYEE_ACCOUNT_ID AND ER.BENEFIT_ACCOUNT_SUB_TYPE_VALUE = 'ERTR'&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS &#xD;&#xA;   ON  PAS.PAYEE_ACCOUNT_ID = ER.PAYEE_ACCOUNT_ID  &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV &#xD;&#xA;   ON  PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT DISA&#xD;&#xA;   ON  ANN1099R.PERSON_ID = DISA.PAYEE_PERSLINK_ID AND DISA.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA'&#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PASR &#xD;&#xA;   ON  PASR.PAYEE_ACCOUNT_ID = DISA.PAYEE_ACCOUNT_ID  &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV1 &#xD;&#xA;   ON  PASR.STATUS_ID= CV1.CODE_ID AND PASR.STATUS_VALUE = CV1.CODE_VALUE&#xD;&#xA;  WHERE   ANN1099R.TAX_YEAR = @TAXYEAR &#xD;&#xA;    AND ANN1099R.TAX_YEAR &gt;= YEAR(DISA.BENEFIT_BEGIN_DATE)&#xD;&#xA;    AND (CV.DATA2 = 'CNLD')&#xD;&#xA;    AND PAS.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (&#xD;&#xA;      SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = ER.PAYEE_ACCOUNT_ID&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )  -- ‘Payee Status’ for the payee with ‘Benefit Account Sub Type’ of ‘Early Retirement’ = ‘Cancelled’&#xD;&#xA;    AND ( CV1.DATA2 = 'APRD' ) &#xD;&#xA;    AND PASR.PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (&#xD;&#xA;      SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = DISA.PAYEE_ACCOUNT_ID&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )  -- AND ‘Benefit account type’ is ‘Disability’ and Payee Account Status is in ‘Approved’ with ‘Status Effective after the last Correction&#xD;&#xA; &#xD;&#xA; DROP TABLE #TEMP&#xD;&#xA; &#xD;&#xA; DELETE &#xD;&#xA; FROM TEMP_SGT_PAYMENT_1099R WHERE &#xD;&#xA; ISNULL(GROSS_BENEFIT_AMOUNT,0) = 0 &#xD;&#xA; AND ISNULL(TAXABLE_AMOUNT,0) = 0 &#xD;&#xA; AND ISNULL(NON_TAXABLE_AMOUNT,0) = 0 &#xD;&#xA; AND ISNULL(CAPITAL_GAIN,0) = 0 &#xD;&#xA; AND TAX_YEAR = @TAXYEAR &#xD;&#xA; &#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID('TEMP_PAYMENT_DETAILS_1099R') IS NOT NULL&#xD;&#xA; DROP TABLE TEMP_PAYMENT_DETAILS_1099R">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptTrial1099rForm" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 100   TAX_YEAR AS RUN_YEAR,&#xD;&#xA;    PAY1099R.GROSS_BENEFIT_AMOUNT AS GROSS_DIST_AMOUNT,&#xD;&#xA;    PAY1099R.TAXABLE_AMOUNT AS TAXABLE_AMOUNT,&#xD;&#xA;    '' AS TAXABLE_AMT_NOT_DETERMINED_FLAG,&#xD;&#xA;    ISNULL(PAY1099R.TOTAL_DISTRIBUTION_FLAG,'') AS TOTAL_DISTRIBUTION_FLAG,&#xD;&#xA;    PAY1099R.CAPITAL_GAIN AS CAPITAL_GAIN,&#xD;&#xA;    PAY1099R.FED_TAX_AMOUNT AS FEDERAL_TAX,&#xD;&#xA;    PAY1099R.NON_TAXABLE_AMOUNT AS EMPLOYEE_CONTRIBUTION_AMT,&#xD;&#xA;    (PAY1099R.TAXABLE_AMOUNT + PAY1099R.NON_TAXABLE_AMOUNT + PAY1099R.CAPITAL_GAIN - PAY1099R.FED_TAX_AMOUNT - PAY1099R.STATE_TAX_AMOUNT) AS NET_AMOUNT,&#xD;&#xA;    PAY1099R.DISTRIBUTION_CODE,&#xD;&#xA;    NULL AS COMMENTS,&#xD;&#xA;    NULL AS OTHER_AMOUNTS,&#xD;&#xA;    NULL AS OTHER_PERCENTAGE,&#xD;&#xA;    PAY1099R.DIST_PERCENTAGE AS TOTAL_DIST_PERCENTAGE,&#xD;&#xA;    CASE WHEN PAY1099R.TAX_YEAR = YEAR(PA.BENEFIT_BEGIN_DATE)&#xD;&#xA;      THEN PA.NONTAXABLE_BEGINNING_BALANCE &#xD;&#xA;      ELSE NULL END AS TOTAL_EMPLOYEE_CONTRIB_AMT,&#xD;&#xA;    PAY1099R.STATE_TAX_AMOUNT AS STATE_TAX,&#xD;&#xA;    NULL AS STATE_DISTRIBUTION,&#xD;&#xA;    NULL AS LOCAL_TAX,&#xD;&#xA;    NULL AS LOCALITY,&#xD;&#xA;    NULL AS LOCAL_DISTRIBUTION,&#xD;&#xA;    PAY1099R.PAYEE_ACCOUNT_ID,&#xD;&#xA;    UPPER(PAY1099R.[NAME]) AS PAYEE_NAME,&#xD;&#xA;    PAY1099R.SSN AS SSN_TIN,&#xD;&#xA;    ADDR_LINE_1,    &#xD;&#xA;    UPPER(ISNULL(ADDR_LINE_2,'')) AS ADDR_LINE_2,&#xD;&#xA;    UPPER(ISNULL(ADDR_CITY,'')) AS ADDR_CITY,&#xD;&#xA;    UPPER(ISNULL(PAY1099R.ADDR_STATE_VALUE,'')) AS ADDR_STATE_VALUE,&#xD;&#xA;    ISNULL(ADDR_ZIP_CODE,'') AS ADDR_ZIP_CODE,&#xD;&#xA;    UPPER(ISNULL(FOREIGN_PROVINCE,'')) + ' ' +ISNULL(FOREIGN_POSTAL_CODE,'') AS ADDR_LINE_3,&#xD;&#xA;    ISNULL(CORRECTED_FLAG,'') AS CORRECTED_FLAG,&#xD;&#xA;    --PAY1099R.*,&#xD;&#xA;    PAY1099R.age59_split_flag,&#xD;&#xA;    PAY1099R.ADDR_STATE_VALUE as addr_state&#xD;&#xA;    ,CHAR(64+ROW_NUMBER() &#xD;&#xA;    OVER (PARTITION BY PAY1099R.PAYEE_ACCOUNT_ID &#xD;&#xA;    ORDER BY PAY1099R.PAYEE_ACCOUNT_ID , &#xD;&#xA;    PAY1099R.PAYMENT_1099R_ID )) AS ID_SUFFIX &#xD;&#xA;FROM   TEMP_SGT_PAYMENT_1099R PAY1099R WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PAYEE_ACCOUNT PA WITH(NOLOCK)&#xD;&#xA;   ON PAY1099R.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK) &#xD;&#xA;   ON PAY1099R.ADDR_STATE_ID = CV1.CODE_ID &#xD;&#xA;   AND PAY1099R.ADDR_STATE_VALUE = CV1.CODE_VALUE&#xD;&#xA;WHERE   PAY1099R.TAX_YEAR = @TAXYEAR&#xD;&#xA;ORDER BY PAY1099R.PAYMENT_1099R_ID">
      <parameters>
        <parameter ID="@TAXYEAR" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="DropTempTableForPayment1099r" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('TEMP_SGT_PAYMENT_1099R') IS NOT NULL&#xD;&#xA; DROP TABLE TEMP_SGT_PAYMENT_1099R">
      <parameters />
    </query>
    <query ID="1099rGetIDSuffix" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT ID_SUFFIX  FROM &#xD;&#xA;( &#xD;&#xA;        SELECT PAYMENT_1099R_ID, CHAR(64+ROW_NUMBER() &#xD;&#xA;        OVER (PARTITION BY PAY1099R.PAYEE_ACCOUNT_ID &#xD;&#xA;        ORDER BY PAY1099R.PAYEE_ACCOUNT_ID , &#xD;&#xA;        PAY1099R.PAYMENT_1099R_ID )) AS ID_SUFFIX &#xD;&#xA;        FROM SGT_PAYMENT_1099R PAY1099R WITH(NOLOCK) &#xD;&#xA;        WHERE PAYEE_ACCOUNT_ID = @PAYEE_ACCOUNT_ID &#xD;&#xA;        AND TAX_YEAR = @TAXYEAR &#xD;&#xA;) T &#xD;&#xA;WHERE PAYMENT_1099R_ID  = @PAYMENT_1099R_ID">
      <parameters>
        <parameter ID="@PAYEE_ACCOUNT_ID" sfwDataType="int" />
        <parameter ID="@TAXYEAR" sfwDataType="int" />
        <parameter ID="@PAYMENT_1099R_ID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="Payment1099rId" sfwType="Column" sfwValue="payment_1099r_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="True" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PayeeAccountId" sfwType="Column" sfwValue="payee_account_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="TaxYear" sfwType="Column" sfwValue="tax_year" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="CorrectedFlag" sfwType="Column" sfwValue="corrected_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="TotalDistributionFlag" sfwType="Column" sfwValue="total_distribution_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DistributionCode" sfwType="Column" sfwValue="distribution_code" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="2" />
    <attribute ID="OldPayment1099rId" sfwType="Column" sfwValue="old_payment_1099r_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="DistPercentage" sfwType="Column" sfwValue="dist_percentage" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="9,2" />
    <attribute ID="GrossBenefitAmount" sfwType="Column" sfwValue="gross_benefit_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="TaxableAmount" sfwType="Column" sfwValue="taxable_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="NonTaxableAmount" sfwType="Column" sfwValue="non_taxable_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="CapitalGain" sfwType="Column" sfwValue="capital_gain" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="FedTaxAmount" sfwType="Column" sfwValue="fed_tax_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="StateTaxAmount" sfwType="Column" sfwValue="state_tax_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="Ssn" sfwType="Column" sfwValue="ssn" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="9" />
    <attribute ID="FederalId" sfwType="Column" sfwValue="federal_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="9" />
    <attribute ID="PersonId" sfwType="Column" sfwValue="person_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="OrgId" sfwType="Column" sfwValue="org_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="Name" sfwType="Column" sfwValue="name" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="100" />
    <attribute ID="AddrLine1" sfwType="Column" sfwValue="addr_line_1" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="60" />
    <attribute ID="AddrLine2" sfwType="Column" sfwValue="addr_line_2" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="60" />
    <attribute ID="AddrCity" sfwType="Column" sfwValue="addr_city" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="AddrStateDescription" sfwType="Description" sfwValue="addr_state_description" />
    <attribute ID="AddrStateId" sfwType="Column" sfwValue="addr_state_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="150" sfwDataType="int" sfwRequired="False" />
    <attribute ID="AddrStateValue" sfwType="Column" sfwValue="addr_state_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="AddrCountryDescription" sfwType="Description" sfwValue="addr_country_description" />
    <attribute ID="AddrCountryId" sfwType="Column" sfwValue="addr_country_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="151" sfwDataType="int" sfwRequired="False" />
    <attribute ID="AddrCountryValue" sfwType="Column" sfwValue="addr_country_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="AddrZipCode" sfwType="Column" sfwValue="addr_zip_code" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="5" />
    <attribute ID="AddrZip4Code" sfwType="Column" sfwValue="addr_zip_4_code" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="ForeignProvince" sfwType="Column" sfwValue="foreign_province" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ForeignPostalCode" sfwType="Column" sfwValue="foreign_postal_code" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="10" />
    <attribute ID="RolloverPaymentFlag" sfwType="Column" sfwValue="rollover_payment_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="Age59SplitFlag" sfwType="Column" sfwValue="age59_split_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="IdSuffix" sfwType="Column" sfwValue="id_suffix" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="CreatedAnnual1099rForm" sfwType="Column" sfwValue="created_annual_1099r_form" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="NetAmount" sfwValue="icdoPayment1099r.net_amount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrCorrected1099R" sfwValue="istrCorrected1099R" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPlanName" sfwValue="istrPlanName" />
    <attribute ID="IstrReportTemplateName" sfwDataType="string" sfwPrivate="False" sfwValue="istrReportTemplateName" sfwType="Property" />
    <attribute ID="objPayeeAccount" sfwType="Object" sfwEntity="entPayeeAccount" sfwPrivate="False" sfwValue="ibusPayeeAccount" />
  </attributes>
</entity>