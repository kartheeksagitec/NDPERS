<entity ID="entPerson" sfwActive="True" sfwStatus="Review" sfwRemoteObject="srvPerson" sfwType="BusinessRule" sfwMainCDO="icdoPerson" sfwReadOnlyRule="RuleIsPersonRecordDeleted" sfwObjectID="busPerson" sfwTableName="sgt_person" sfwParentEntity="entPersonBase">
  <rules>
    <rule ID="DentalButtonVisiblity" sfwExpression="(this.iblnDental == True)" sfwObjectBased="True" />
    <rule ID="ESS Visible Rule Coverage Code" sfwExpression="!(this.ibusESSPersonAccountGhdv == null) &amp;&amp; &#xA;((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccountGhdv.ibusPlan.icdoPlan.plan_id&quot;) == RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccountGhdv.ibusPerson.iintPlanIdGroupHealth&quot;)) || &#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccountGhdv.ibusPlan.icdoPlan.plan_id&quot;) == RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccountGhdv.ibusPerson.iintPlanidMedicare&quot;)))" sfwObjectBased="True" />
    <rule ID="ESS Visible Rule for DB" sfwExpression="!(this.ibusESSPersonAccount == null) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusESSPersonAccount.ibusPlan.icdoPlan.retirement_type_value&quot;) == &quot;DB&quot;)" sfwObjectBased="True" />
    <rule ID="ESS Visible Rule for DefComp" sfwExpression="!(this.ibusESSPersonAccount == null) &amp;&amp; &#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccount.ibusPlan.icdoPlan.plan_id&quot;) == 19)" sfwObjectBased="True" />
    <rule ID="ESS Visible Rule for EAP" sfwExpression="!(this.ibusESSPersonAccountEAP == null) &amp;&amp; &#xA;(this.iblnEAP == True)" sfwObjectBased="True" />
    <rule ID="ESS Visible Rule for Employment Panel" sfwExpression="!(this.ibusESSPersonAccount == null) &amp;&amp; &#xA;(this.IsESSEmploymentPanelVisible() == True)" sfwObjectBased="True" />
    <rule ID="ESS Visible Rule for GHDV" sfwExpression="!(this.ibusESSPersonAccountGhdv == null) &amp;&amp; &#xA;(this.iblnGHDV == True)" sfwObjectBased="True" />
    <rule ID="ESS Visible Rule Level of Coverage" sfwExpression="!(this.ibusESSPersonAccountGhdv == null) &amp;&amp; &#xA;((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccountGhdv.ibusPlan.icdoPlan.plan_id&quot;) == RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccountGhdv.ibusPerson.iintPlanIDDental&quot;)) || &#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccountGhdv.ibusPlan.icdoPlan.plan_id&quot;) == RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccountGhdv.ibusPerson.iintPlanIdHMO&quot;)) || &#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccountGhdv.ibusPlan.icdoPlan.plan_id&quot;) == RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccountGhdv.ibusPerson.iintPlanIdVision&quot;)))" sfwObjectBased="True" />
    <rule ID="FlexCompButtonVisiblity" sfwExpression="(this.iblnFlex == True) &amp;&amp; &#xA;!(this.ibusESSPersonAccountFlexComp == null)" sfwObjectBased="True" />
    <rule ID="GroupHealthButtonVisiblity" sfwExpression="(this.iblnHealth == True)" sfwObjectBased="True" />
    <rule ID="GroupLifeButtonVisiblity" sfwExpression="(this.iblnLife == True)" sfwObjectBased="True" />
    <rule ID="IsEnrollin457Applicable" sfwExpression="(this.IsEnrollin457ApplicableESS() == True)" sfwObjectBased="True" />
    <rule ID="IsESSNewEmploymentChangebuttonVisible" sfwExpression="(this.iblnEmploymwntChangeRequestExists == False)" sfwObjectBased="True" />
    <rule ID="IsESSNewTerminateEmploymentbuttonVisible" sfwExpression="(this.iintTermEmploymentChangeRequestID == 0)" sfwObjectBased="True" />
    <rule ID="IsESSOpenEmploymentChangebuttonVisible" sfwExpression="(this.iblnEmploymwntChangeRequestExists == True)" sfwObjectBased="True" />
    <rule ID="IsESSOpenTerminateEmploymentbuttonVisible" sfwExpression="(this.iintTermEmploymentChangeRequestID &gt; 0)" sfwObjectBased="True" />
    <rule ID="IsExcessContributionExist" sfwExpression="(this.icdoPerson.person_id &gt; 0) &amp;&amp; &#xA;(this.IsExcessContribitionPaid() == True)" sfwObjectBased="True" />
    <rule ID="IsMemberHavingWSSAccess" sfwExpression="!(string.IsNullOrEmpty(this.icdoPerson.ndpers_login_id))" sfwObjectBased="True" />
    <rule ID="IsMSChangeDateNull" sfwMessageId="1174" sfwExpression="(this.IsMSChangeDateNeeded() == True)" sfwObjectBased="True" />
    <rule ID="IsPersonDuplicated" sfwMessageId="1152" sfwExpression="!(this.icdoPerson.suppress_ssn_flag == &quot;Y&quot;) &amp;&amp; &#xA;(this.IsPersonDuplicated() == True)" sfwObjectBased="True" />
    <rule ID="IsPremiumConversionTextVisible" sfwExpression="(this.IsESSPremiumConversionTextVisible() == True)" sfwObjectBased="True" />
    <rule ID="IsRestrictFlagcheckedAndRestrictReasonnotSelected" sfwMessageId="7502" sfwExpression="(this.icdoPerson.restriction_flag == &quot;Y&quot;) &amp;&amp; &#xA;(string.IsNullOrEmpty(this.icdoPerson.restriction_reason_value))" sfwObjectBased="True" />
    <rule ID="IsRestrictFlagNotCheckedAndRestrictReasonSelected" sfwMessageId="7501" sfwExpression="!(string.IsNullOrEmpty(this.icdoPerson.restriction_reason_value)) &amp;&amp; &#xA;!(this.icdoPerson.restriction_flag == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="LTCButtonVisiblity" sfwExpression="(this.iblnLTC == True)" sfwObjectBased="True" />
    <rule ID="MedicarePartDButtionVisibility" sfwExpression="(this.iblnMedicarePartD == True)" sfwObjectBased="True" />
    <rule ID="RULE CHECK CELL PHONE IS NUMERIC" sfwMessageId="1040" sfwExpression="!(string.IsNullOrEmpty(this.icdoPerson.cell_phone_no)) &amp;&amp; &#xA;(!RFunc.IsNumeric(this.icdoPerson.cell_phone_no))" sfwObjectBased="True" />
    <rule ID="RULE CHECK CELL PHONE LENGTH" sfwMessageId="1053" sfwExpression="!(string.IsNullOrEmpty(this.icdoPerson.cell_phone_no)) &amp;&amp; &#xA;(RFunc.Length(this.icdoPerson.cell_phone_no) &lt; 10)" sfwObjectBased="True" />
    <rule ID="RULE CHECK COMM PREF IS EMAIL AND EMAIL IS NULL" sfwMessageId="1009" sfwExpression="((this.icdoPerson.communication_preference_value == &quot;EMIL&quot;) &amp;&amp; &#xA;(string.IsNullOrEmpty(this.icdoPerson.email_address)))" sfwObjectBased="True" />
    <rule ID="Rule check correspondence generated related to person" sfwMessageId="183" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.CheckCorrespondenceGeneratedRelatedPerson&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="RULE CHECK DATE OF BIRTH IS NOT NULL  AND FUTURE DATE" sfwMessageId="1042" sfwExpression="!(this.icdoPerson.date_of_birth == DateTime.MinValue) &amp;&amp; &#xA;(this.icdoPerson.date_of_birth &gt; RFunc.CurrentDate())" sfwObjectBased="True" />
    <rule ID="RULE CHECK DATE OF BIRTH IS NULL" sfwMessageId="153" sfwExpression="(this.icdoPerson.date_of_birth == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="RULE CHECK DATE OF DEATH IS LESS THAN DATE OF BIRTH DATE" sfwMessageId="1041" sfwExpression="(this.icdoPerson.date_of_death &lt; this.icdoPerson.date_of_birth) &amp;&amp; &#xA;!(this.icdoPerson.date_of_birth == DateTime.MinValue) &amp;&amp; &#xA;(this.icdoPerson.date_of_death != DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="RULE CHECK DATE OF DEATH IS NOT NULL  AND FUTURE DATE" sfwMessageId="1043" sfwExpression="(this.icdoPerson.date_of_death != DateTime.MinValue) &amp;&amp; &#xA;(this.icdoPerson.date_of_death &gt; RFunc.CurrentDate())" sfwObjectBased="True" />
    <rule ID="RULE CHECK DATE_OF_BIRTH IS NULL" sfwMessageId="1002" sfwExpression="(this.icdoPerson.date_of_birth == DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="RULE CHECK EMAIL IS NOT NULL AND NOT VALID" sfwMessageId="10343" sfwExpression="(!string.IsNullOrEmpty(this.icdoPerson.email_address)) &amp;&amp; &#xA;(this.ValidateEmail() == False)" sfwObjectBased="True" />
    <rule ID="RULE CHECK FAX NUMBER LENGTH" sfwMessageId="1054" sfwExpression="!(string.IsNullOrEmpty(this.icdoPerson.fax_no)) || &#xA;(RFunc.Length(this.icdoPerson.fax_no) &lt; 10)" sfwObjectBased="True" />
    <rule ID="RULE CHECK FIRST NAME AND LAST NAME IS BLANK" sfwMessageId="1001" sfwExpression="((string.IsNullOrEmpty(this.icdoPerson.first_name)) || &#xA;(string.IsNullOrEmpty(this.icdoPerson.last_name)))" sfwObjectBased="True" />
    <rule ID="RULE CHECK GENDER AND PREFIX" sfwMessageId="1045" sfwExpression="(this.CheckGenderNamePrefix() == True) &amp;&amp; &#xA;(!string.IsNullOrEmpty(this.icdoPerson.name_prefix_value)) &amp;&amp; &#xA;(!string.IsNullOrEmpty(this.icdoPerson.gender_value))" sfwObjectBased="True" />
    <rule ID="RULE CHECK GENDER IS NULL" sfwMessageId="1003" sfwExpression="(string.IsNullOrEmpty(this.icdoPerson.gender_value))" sfwObjectBased="True" />
    <rule ID="RULE CHECK HOME PHONE IS NUMERIC" sfwMessageId="1040" sfwExpression="!(string.IsNullOrEmpty(this.icdoPerson.home_phone_no)) &amp;&amp; &#xA;(!RFunc.IsNumeric(this.icdoPerson.home_phone_no))" sfwObjectBased="True" />
    <rule ID="RULE CHECK HOME PHONE LENGTH" sfwMessageId="1052" sfwExpression="!(string.IsNullOrEmpty(this.icdoPerson.home_phone_no)) &amp;&amp; &#xA;(RFunc.Length(this.icdoPerson.home_phone_no) &lt; 10)" sfwObjectBased="True" />
    <rule ID="Rule Check if current person id same as logged in user person id" sfwMessageId="5024" sfwExpression="(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusUser.icdoUser.person_id&quot;) == this.icdoPerson.person_id)" sfwObjectBased="True" />
    <rule ID="Rule Check if First Name Length greater than 40" sfwMessageId="1078" sfwExpression="(RFunc.Length(this.icdoPerson.first_name) &gt; 40)" sfwObjectBased="True" />
    <rule ID="Rule check if Last Name Length is greater than 40" sfwMessageId="1079" sfwExpression="(RFunc.Length(this.icdoPerson.last_name) &gt; 40)" sfwObjectBased="True" />
    <rule ID="RULE CHECK MARITAL STATUS IS NULL" sfwMessageId="1004" sfwExpression="(string.IsNullOrEmpty(this.icdoPerson.marital_status_value))" sfwObjectBased="True" />
    <rule ID="Rule check Middle Name Length greater than 40" sfwMessageId="1080" sfwExpression="(RFunc.Length(this.icdoPerson.middle_name) &gt; 40)" sfwObjectBased="True" />
    <rule ID="Rule Check Person Got Address" sfwMessageId="178" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.CheckPersonGotAddress&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="Rule Check Person Got Beneficiary" sfwMessageId="179" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.CheckPersonGotBeneficiary&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="Rule Check Person Got Contact" sfwMessageId="177" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.CheckPersonGotContact&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="Rule Check Person Got Dependent" sfwMessageId="180" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.CheckPersonGotDependent&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="Rule Check Person is Beneficiary" sfwMessageId="173" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.CheckPersonIdIsBeneficiary&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="Rule Check Person is Contact" sfwMessageId="174" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.CheckPersonIdIsContact&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="Rule Check Person is Dependent" sfwMessageId="175" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.CheckPersonIsDependent&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="RULE CHECK SSN DIGITS" sfwMessageId="1055" sfwExpression="(!string.IsNullOrEmpty(this.icdoPerson.ssn)) &amp;&amp; &#xA;(RFunc.Length(this.icdoPerson.ssn) != 9)" sfwObjectBased="True" />
    <rule ID="RULE CHECK SSN EXISTS WHILE CREATING NEW" sfwMessageId="157" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.VALIDATE_DUPLICATE_SSN&quot;, this.icdoPerson.ssn) &gt; 0)" sfwObjectBased="True" />
    <rule ID="RULE CHECK SSN EXISTS WHILE UPDATE PERSON" sfwMessageId="157" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.VALIDATE_DUPLICATE_SSN_UPDATE&quot;, this.icdoPerson.person_id ,this.icdoPerson.temp_ssn) &gt; 0)" sfwObjectBased="True" />
    <rule ID="RULE CHECK SSN IS NULL" sfwMessageId="152" sfwExpression="((this.icdoPerson.person_id == 0) &amp;&amp; (string.IsNullOrEmpty(this.icdoPerson.ssn))) || &#xA;((this.icdoPerson.person_id &gt; 0) &amp;&amp; (string.IsNullOrEmpty(this.icdoPerson.temp_ssn)))" sfwObjectBased="True" />
    <rule ID="RULE CHECK SSN IS NUMERIC" sfwMessageId="1037" sfwExpression="(!string.IsNullOrEmpty(this.icdoPerson.ssn)) &amp;&amp; &#xA;(!RFunc.IsNumeric(this.icdoPerson.ssn))" sfwObjectBased="True" />
    <rule ID="RULE CHECK VALIDATE DELETE PERSON" sfwMessageId="1067" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.VALIDATE DELETE&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="RULE CHECK WORK PHONE IS NUMERIC" sfwMessageId="1038" sfwExpression="!(string.IsNullOrEmpty(this.icdoPerson.work_phone_no)) &amp;&amp; &#xA;(!RFunc.IsNumeric(this.icdoPerson.work_phone_no))" sfwObjectBased="True" />
    <rule ID="Rule check workflow initiated for person" sfwMessageId="182" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.CheckWorkflowRelatedToPerson&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="RULE CHECK WORKPHONE LENGTH" sfwMessageId="1051" sfwExpression="!(string.IsNullOrEmpty(this.icdoPerson.work_phone_no)) &amp;&amp; &#xA;(RFunc.Length(this.icdoPerson.work_phone_no) &lt; 10)" sfwObjectBased="True" />
    <rule ID="RuleIsPersonRecordDeleted" sfwExpression="(this.icdoPerson.is_person_deleted_flag == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="RuleIsPersonsApplicationActive" sfwMessageId="1153" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.GetPersonsApplicationStatus&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="RuleIsPersonsContributionExists" sfwMessageId="1155" sfwExpression="(RFunc.ExecuteQuery&lt;Decimal&gt;(&quot;entPerson.GetPersonContributionStatus&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="RuleIsPersonsDROApplcationActive" sfwMessageId="1154" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.GetPersonsDROApplicationStatus&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="RuleIsPersonsPayeeAccountActive" sfwMessageId="1156" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.GetPersonsPayeeAccountStatus&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="RuleIsPersonsRHICStatusActive" sfwMessageId="1157" sfwExpression="(RFunc.ExecuteQuery&lt;Int32&gt;(&quot;entPerson.GetPersonsRHICCombineStatus&quot;, this.icdoPerson.person_id) &gt; 0)" sfwObjectBased="True" />
    <rule ID="VisionButtonVisiblity" sfwExpression="(this.iblnVision == True)" sfwObjectBased="True" />
    <rule ID="IsESSProviderTabVisible" sfwExpression="((RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccount.ibusPlan.icdoPlan.plan_id&quot;) == 19) || &#xA;(RFunc.GetValue&lt;Int32&gt;(this, &quot;ibusESSPersonAccount.ibusPlan.icdoPlan.plan_id&quot;) == 8)) &amp;&amp; &#xA;!(this.ibusESSPersonAccountDeffComp == null)" sfwObjectBased="True" />
    <rule ID="ESS ReadOnly Rule For Employee Address" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPersonCurrentAddress.icdoPersonCurrentAddress.peoplesoft_flag&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="EnableSaveButtonOnEmpMaint" sfwExpression="!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPersonCurrentAddress.icdoPersonCurrentAddress.peoplesoft_flag&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="VisibleRuleEmpEnrInDBorDCPlan" sfwExpression="!(this.ibusESSPersonAccountRetirement == null) &amp;&amp; &#xA;(this.iblnRetirement == True)" sfwObjectBased="True" />
    <rule ID="EssHealthPanelVisibility" sfwExpression="!(this.ibusESSPersonAccountHealthGhdv == null) &amp;&amp; &#xA;(this.iblnHealth == True)" sfwObjectBased="True" />
    <rule ID="EssDentalPanelVisibility" sfwExpression="!(this.ibusESSPersonAccountDentalGhdv == null) &amp;&amp; &#xA;(this.iblnDental == True)" sfwObjectBased="True" />
    <rule ID="EssVisionPanelVisibility" sfwExpression="!(this.ibusESSPersonAccountVisionGhdv == null) &amp;&amp; &#xA;(this.iblnVision == True)" sfwObjectBased="True" />
    <rule ID="IsDefCompPanelVisible" sfwExpression="!(this.ibusESSPersonAccountDeffComp == null) &amp;&amp; &#xA;(this.iblnDefComp == True)" sfwObjectBased="True" />
    <rule ID="Is457LimitDesCatchUp" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusESSPersonAccountDeffComp.icdoPersonAccountDeferredComp.limit_457_description&quot;) == &quot;Catch - up&quot;)" sfwObjectBased="True" />
    <rule ID="IsOfficialListVisible" sfwExpression="(!string.IsNullOrEmpty(RFunc.GetValue&lt;String&gt;(this, &quot;ibusESSPersonEmployment.ibusESSLatestPersonEmploymentDetail.icdoPersonEmploymentDetail.official_list_description&quot;)))" sfwObjectBased="True" />
    <rule ID="IsTermBeginDateVisible" sfwExpression="(RFunc.GetValue&lt;DateTime&gt;(this, &quot;ibusESSPersonEmployment.ibusESSLatestPersonEmploymentDetail.icdoPersonEmploymentDetail.term_begin_date&quot;) != DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="IsRecertifiedDateVisible" sfwExpression="(RFunc.GetValue&lt;DateTime&gt;(this, &quot;ibusESSPersonEmployment.ibusESSLatestPersonEmploymentDetail.icdoPersonEmploymentDetail.recertified_date&quot;) != DateTime.MinValue)" sfwObjectBased="True" />
    <rule ID="IsOth457PlanPanelVisible" sfwExpression="!(this.ibusESSPersonAccountDeffCompOther457 == null) &amp;&amp; &#xA;(this.iblnOth457Plan == True)" sfwObjectBased="True" />
    <rule ID="VISIBLE RULE PREMIUM CONVERSION" sfwExpression="(RFunc.GetValue&lt;String&gt;(this, &quot;ibusESSPersonEmployment.ibusOrganization.icdoOrganization.emp_category_value&quot;) == &quot;STAT&quot;)" sfwObjectBased="True" />
    <rule ID="IsSupplementalCoverageAmountGreaterThanZero" sfwExpression="(this.IsSupplementalLifeOptionAmountGreaterThanZero() == True) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusESSPersonEmployment.ibusOrganization.icdoOrganization.emp_category_value&quot;) == &quot;STAT&quot;)" sfwObjectBased="True" />
    <rule ID="ESS ReadOnly Rule For Employee PO Box label" sfwExpression="(this.iblnIsUpdateAddressClicked == True) &amp;&amp; &#xA;!(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPersonCurrentAddress.icdoPersonCurrentAddress.peoplesoft_flag&quot;) == &quot;Y&quot;)" sfwObjectBased="True" />
    <rule ID="Peoplesoft Org group Rule for PERM" sfwExpression="((RFunc.GetValue&lt;String&gt;(this, &quot;ibusESSPersonEmployment.ibusOrganization.icdoOrganization.peoplesoft_org_group_value&quot;) == &quot;STAT&quot;) || &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusESSPersonEmployment.ibusOrganization.icdoOrganization.peoplesoft_org_group_value&quot;) == &quot;BND&quot;)) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusESSPersonEmployment.ibusESSLatestPersonEmploymentDetail.icdoPersonEmploymentDetail.type_value&quot;) == &quot;PERM&quot;)" sfwObjectBased="True" />
    <rule ID="Peoplesoft Org group Rule for TEMP" sfwExpression="((RFunc.GetValue&lt;String&gt;(this, &quot;ibusESSPersonEmployment.ibusOrganization.icdoOrganization.peoplesoft_org_group_value&quot;) == &quot;STAT&quot;) || &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusESSPersonEmployment.ibusOrganization.icdoOrganization.peoplesoft_org_group_value&quot;) == &quot;BND&quot;)) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusESSPersonEmployment.ibusESSLatestPersonEmploymentDetail.icdoPersonEmploymentDetail.type_value&quot;) == &quot;TEMP&quot;) &amp;&amp; &#xA;!(this.IsContactPrimaryAuthOrAuthAgent() == True)" sfwObjectBased="True" />
    <rule ID="Rule check address is valid" sfwMessageId="127" sfwExpression="(this.iblnIsFromESS == True) &amp;&amp; &#xA;(this.iblnIsUpdateAddressClicked == True) &amp;&amp; &#xA;(RFunc.GetValue&lt;String&gt;(this, &quot;ibusPersonCurrentAddress.icdoPersonAddress.address_validate_flag&quot;) == &quot;N&quot;)" sfwObjectBased="True" />
    <rule ID="Rule Check Contact is PAAG or AUTH" sfwExpression="(this.IsUpdateAddressVisible() == True) &amp;&amp; &#xA;!(this.iblnIsUpdateAddressClicked == True)" sfwObjectBased="True" />
    <rule ID="Rule Enable Control after Update Address Click" sfwExpression="!(this.iblnIsUpdateAddressClicked == True)" sfwObjectBased="True" />
    <rule ID="Rule Save button Visibility" sfwExpression="(this.iblnIsUpdateAddressClicked == True)" sfwObjectBased="True" />
    <rule ID="RULE CHECK IF START DATE IS PAST DATE UPDATE" sfwMessageId="126" sfwExpression="(this.iblnIsFromESS == True) &amp;&amp; &#xA;(RFunc.GetValue&lt;DateTime&gt;(this, &quot;ibusPersonCurrentAddress.icdoPersonAddress.start_date&quot;) != DateTime.MinValue) &amp;&amp; &#xA;(this.IsValidStartDateESS() == False)" sfwObjectBased="True" />
    <rule ID="IsStartDateInValidForAddressType" sfwMessageId="137" sfwExpression="(this.iblnIsFromESS == True) &amp;&amp; &#xA;(this.IsStartDateInValidForAddressType() == True)" sfwObjectBased="True" />
    <rule ID="IsDateOverlap" sfwMessageId="125" sfwExpression="(this.iblnIsFromESS == True) &amp;&amp; &#xA;(RFunc.GetValue&lt;DateTime&gt;(this, &quot;ibusPersonCurrentAddress.icdoPersonAddress.start_date&quot;) != DateTime.MinValue) &amp;&amp; &#xA;(this.IsDatesOverlapping() == True)" sfwObjectBased="True" />
    <rule ID="ESS Visible Rule For GH HDHP HSA" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.IsHealthAltStructureCodeHDHP()" />
    <rule ID="UnlockWSSAccountButtonVisibility" sfwRuleType="Validation" sfwObjectBased="False" sfwExpression="this.IsUserLocked==&quot;Y&quot;" />
    <rule ID="VisibilityRuleFor1901Resource" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.Is1901ResourceForUser()==false)" />
    <rule ID="IsACAEligibilityCertificationButtonVisible" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(this.IsACAEligibilityCertificationButtonVisible())" />
    <rule ID="IsACAEligibilityCertificationButtonVisibleForUpdate" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="(RFunc.GetValue&lt;Int32&gt;(this,&quot;ibusWssEmploymentAcaCert.icdoWssEmploymentAcaCert.wss_employment_aca_cert_id&quot;) &gt; 0 &amp;&amp; this.IsACAEligibilityCertificationButtonVisible())" />
    <rule ID="IsACACertPresentForEmployee" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.iclbWssEmploymentAcaCert != null &amp;&amp; &#xA;this.iclbWssEmploymentAcaCert.Count &gt; 0" />
    <rule ID="IsLookBackMeasureNull" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="this.IsLookBackMeasureIsNull()" />
    <rule ID="IsLookBackMeasureNotNull" sfwRuleType="Validation" sfwObjectBased="True" sfwExpression="!(this.IsLookBackMeasureIsNull())" />
    <rule ID="VRADECAmount" sfwRuleType="Validation" sfwObjectBased="False" sfwExpression="iblnESSShowAddlEEContributionPercent &amp;&amp; IintESSAddlEEContributionPercent == 0" />
    <rule ID="VRADECAmountGreaterThanZero" sfwRuleType="Validation" sfwObjectBased="False" sfwExpression="iblnESSShowAddlEEContributionPercent &amp;&amp; IintESSAddlEEContributionPercent &gt; 0" />
    <rule ID="VisibilityRuleForTFFRRequest" sfwRuleType="Validation" sfwObjectBased="False" sfwExpression="!(this.icdoPerson.tffr_request == &quot;Y&quot;)" />
  </rules>
  <delete />
  <checklist />
  <initialload>
    <item ID="GroupHealthButtonVisiblity" sfwMode="All" sfwStatus="Active" />
    <item ID="VisionButtonVisiblity" sfwMode="All" sfwStatus="Active" />
    <item ID="DentalButtonVisiblity" sfwMode="All" sfwStatus="Active" />
    <item ID="GroupLifeButtonVisiblity" sfwMode="All" sfwStatus="Active" />
    <item ID="FlexCompButtonVisiblity" sfwMode="All" sfwStatus="Active" />
    <item ID="LTCButtonVisiblity" sfwMode="All" sfwStatus="Active" />
    <item ID="MedicarePartDButtionVisibility" sfwMode="All" sfwStatus="Active" />
    <item ID="IsExcessContributionExist" sfwMode="All" sfwStatus="Active" />
    <item ID="IsMemberHavingWSSAccess" sfwMode="All" sfwStatus="Active" />
    <item ID="ESS Visible Rule for GHDV" sfwMode="All" sfwStatus="Active" />
    <item ID="ESS Visible Rule for DB" sfwMode="All" sfwStatus="Active" />
    <item ID="ESS Visible Rule for DefComp" sfwMode="All" sfwStatus="Active" />
    <item ID="ESS Visible Rule for EAP" sfwMode="All" sfwStatus="Active" />
    <item ID="ESS Visible Rule Coverage Code" sfwMode="All" sfwStatus="Active" />
    <item ID="ESS Visible Rule Level of Coverage" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPremiumConversionTextVisible" sfwMode="All" sfwStatus="Inactive" />
    <item ID="IsEnrollin457Applicable" sfwMode="All" sfwStatus="Active" />
    <item ID="IsESSNewEmploymentChangebuttonVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="IsESSOpenEmploymentChangebuttonVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="IsESSNewTerminateEmploymentbuttonVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="IsESSOpenTerminateEmploymentbuttonVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="ESS Visible Rule for Employment Panel" sfwMode="All" sfwStatus="Active" />
    <item ID="IsESSProviderTabVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="ESS ReadOnly Rule For Employee Address" sfwStatus="Active" sfwMode="All" />
    <item ID="EnableSaveButtonOnEmpMaint" sfwStatus="Active" sfwMode="All" />
    <item ID="VisibleRuleEmpEnrInDBorDCPlan" sfwStatus="Active" sfwMode="All" />
    <item ID="EssHealthPanelVisibility" sfwStatus="Active" sfwMode="All" />
    <item ID="EssDentalPanelVisibility" sfwStatus="Active" sfwMode="All" />
    <item ID="EssVisionPanelVisibility" sfwStatus="Active" sfwMode="All" />
    <item ID="IsDefCompPanelVisible" sfwStatus="Active" sfwMode="All" />
    <item ID="Is457LimitDesCatchUp" sfwStatus="Active" sfwMode="All" />
    <item ID="IsOfficialListVisible" sfwStatus="Active" sfwMode="All" />
    <item ID="IsTermBeginDateVisible" sfwStatus="Active" sfwMode="All" />
    <item ID="IsRecertifiedDateVisible" sfwStatus="Active" sfwMode="All" />
    <item ID="IsOth457PlanPanelVisible" sfwStatus="Active" sfwMode="All" />
    <item ID="VISIBLE RULE PREMIUM CONVERSION" sfwStatus="Active" sfwMode="All" />
    <item ID="IsSupplementalCoverageAmountGreaterThanZero" sfwStatus="Active" sfwMode="All" />
    <item ID="ESS ReadOnly Rule For Employee PO Box label" sfwStatus="Active" sfwMode="All" />
    <item ID="Peoplesoft Org group Rule for PERM" sfwStatus="Active" sfwMode="All" />
    <item ID="Peoplesoft Org group Rule for TEMP" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule Check Contact is PAAG or AUTH" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule Enable Control after Update Address Click" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule Save button Visibility" sfwStatus="Active" sfwMode="All" />
    <item ID="Rule check address is valid" sfwStatus="Active" sfwMode="All" />
    <item ID="ESS Visible Rule For GH HDHP HSA" sfwMode="All" sfwStatus="Active" />
    <item ID="UnlockWSSAccountButtonVisibility" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibilityRuleFor1901Resource" sfwMode="All" sfwStatus="Active" />
    <item ID="IsACAEligibilityCertificationButtonVisible" sfwMode="All" sfwStatus="Active" />
    <item ID="IsACAEligibilityCertificationButtonVisibleForUpdate" sfwMode="All" sfwStatus="Active" />
    <item ID="IsACACertPresentForEmployee" sfwMode="All" sfwStatus="Active" />
    <item ID="IsLookBackMeasureNull" sfwMode="All" sfwStatus="Active" />
    <item ID="IsLookBackMeasureNotNull" sfwMode="All" sfwStatus="Active" />
    <item ID="VRADECAmount" sfwMode="All" sfwStatus="Active" />
    <item ID="VRADECAmountGreaterThanZero" sfwMode="All" sfwStatus="Active" />
    <item ID="VisibilityRuleForTFFRRequest" sfwMode="All" sfwStatus="Active" />
  </initialload>
  <softerror />
  <harderror>
    <item ID="RULE CHECK FIRST NAME AND LAST NAME IS BLANK" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK GENDER IS NULL" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK MARITAL STATUS IS NULL" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK COMM PREF IS EMAIL AND EMAIL IS NULL" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK EMAIL IS NOT NULL AND NOT VALID" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK DATE OF DEATH IS NOT NULL  AND FUTURE DATE" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK DATE OF BIRTH IS NOT NULL  AND FUTURE DATE" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK DATE OF DEATH IS LESS THAN DATE OF BIRTH DATE" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK SSN IS NUMERIC" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK WORK PHONE IS NUMERIC" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK HOME PHONE IS NUMERIC" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK CELL PHONE IS NUMERIC" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK SSN EXISTS WHILE CREATING NEW" sfwMode="New" sfwStatus="Active" />
    <item ID="RULE CHECK SSN EXISTS WHILE UPDATE PERSON" sfwMode="Update" sfwStatus="Active" />
    <item ID="RULE CHECK GENDER AND PREFIX" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK SSN DIGITS " sfwMode="New" sfwStatus="Active" />
    <item ID="RULE CHECK SSN IS NULL" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK DATE OF BIRTH IS NULL" sfwMode="All" sfwStatus="Active" />
    <item ID="RULE CHECK WORKPHONE LENGTH" sfwMode="All" sfwStatus="Inactive" />
    <item ID="RULE CHECK FAX NUMBER LENGTH" sfwMode="All" sfwStatus="Inactive" />
    <item ID="RULE CHECK CELL PHONE LENGTH" sfwMode="All" sfwStatus="Inactive" />
    <item ID="RULE CHECK HOME PHONE LENGTH" sfwMode="All" sfwStatus="Inactive" />
    <item ID="Rule Check if current person id same as logged in user person id" sfwMode="Update" sfwStatus="Active" />
    <item ID="IsRestrictFlagcheckedAndRestrictReasonnotSelected" sfwMode="All" sfwStatus="Active" />
    <item ID="IsRestrictFlagNotCheckedAndRestrictReasonSelected" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsPersonRecordDeleted" sfwMode="All" sfwStatus="Active" />
    <item ID="IsPersonDuplicated" sfwMode="All" sfwStatus="Active" />
    <item ID="IsMSChangeDateNull" sfwMode="Update" sfwStatus="Active" />
    <item ID="Rule check address is valid" sfwStatus="Active" sfwMode="All" />
    <item ID="RULE CHECK IF START DATE IS PAST DATE UPDATE" sfwStatus="Active" sfwMode="All" />
    <item ID="IsStartDateInValidForAddressType" sfwStatus="Active" sfwMode="All" />
    <item ID="IsDateOverlap" sfwStatus="Active" sfwMode="All" />
  </harderror>
  <validatedelete>
    <item ID="RULE CHECK VALIDATE DELETE PERSON" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check Person is Beneficiary" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check Person is Contact" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check Person is Dependent" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check Person Got Address" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check Person Got Contact" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check Person Got Beneficiary" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule Check Person Got Dependent" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule check workflow initiated for person" sfwMode="All" sfwStatus="Active" />
    <item ID="Rule check correspondence generated related to person" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsPersonsContributionExists" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsPersonsApplicationActive" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsPersonsDROApplcationActive" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsPersonsPayeeAccountActive" sfwMode="All" sfwStatus="Active" />
    <item ID="RuleIsPersonsRHICStatusActive" sfwMode="All" sfwStatus="Active" />
  </validatedelete>
  <groupslist />
  <updateablecdo />
  <commonproperties>
    <item ID="person_id" sfwDescription="Person ID" sfwObjectField="icdoPerson.person_id" />
  </commonproperties>
  <expressionfields />
  <queries>
    <query ID="Lookup" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select P.* from sgt_person P(nolock)&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="VALIDATE_DUPLICATE_SSN" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PERSON WHERE SSN=@SSN">
      <parameters>
        <parameter ID="@SSN" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GET_COUNT_OF_EMPLOYMENT_HISTORY_FOR_PERSON" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PERSON_EMPLOYMENT WHERE PERSON_ID=@PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="CHECK_LOGGED_USER_ID_EXISTS_IN_USER_TABLE" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGS_USER WHERE USER_ID=@USER_ID">
      <parameters>
        <parameter ID="@USER_ID" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="VALIDATE_DUPLICATE_SSN_UPDATE" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from sgt_person where person_id != @person_id and ssn = @ssn&#xD;&#xA;">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
        <parameter ID="@ssn" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="rptMaritalStatusChange" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('tempdb..#TEMPDTLS') IS NOT NULL&#xD;&#xA;DROP TABLE #TEMPDTLS;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;WITH OldValueTable (Person_id, Old_value, audit_log_id,modified_date)  &#xD;&#xA;AS  &#xD;&#xA;(  &#xD;&#xA;    SELECT p.person_id, a.StringValue,audit_log_id,AL.modified_date from sgt_person P &#xD;&#xA;&#x9;INNER JOIN sgs_Audit_Log AL on P.person_id=AL.person_id&#xD;&#xA;&#x9;cross apply parseJSON(AL.AUDIT_DETAILS) a&#xD;&#xA;&#x9;cross apply parseJSON(AL.AUDIT_DETAILS) b&#xD;&#xA;&#xD;&#xA;&#x9;where AL.AUDIT_DETAILS like '%marital_status_value%' &#xD;&#xA;&#x9;and (isnull(b.Stringvalue, 'xxx')='marital_status_value' or isnull(b.Name, 'xxx')='marital_status_value')&#xD;&#xA;&#x9;and ((a.parent_id =b.parent_id and a.Name ='old_value') or (isnull(a.parent_id,0) =isnull(b.Object_ID,0) and a.Name ='old_value'))&#xD;&#xA;&#x9;and dateadd(dd,0, datediff(dd,0,AL.modified_date)) between dateadd(dd,0, datediff(dd,0,@Week_Start_Date)) and dateadd(dd,0, datediff(dd,0,@Week_End_Date))&#xD;&#xA;),&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;NewValueTable (Person_id, Old_value, audit_log_id,modified_date)  &#xD;&#xA;AS  &#xD;&#xA;(  &#xD;&#xA;    SELECT p.person_id, a.StringValue,audit_log_id,AL.modified_date from sgt_person P &#xD;&#xA;&#x9;INNER JOIN sgs_Audit_Log AL on P.person_id=AL.person_id&#xD;&#xA;&#x9;cross apply parseJSON(AL.AUDIT_DETAILS) a&#xD;&#xA;&#x9;cross apply parseJSON(AL.AUDIT_DETAILS) b&#xD;&#xA;&#xD;&#xA;&#x9;where AL.AUDIT_DETAILS like '%marital_status_value%' &#xD;&#xA;&#x9;and (isnull(b.Stringvalue, 'xxx')='marital_status_value' or isnull(b.Name, 'xxx')='marital_status_value')&#xD;&#xA;&#x9;and (a.parent_id =b.parent_id and a.Name ='new_value' or (isnull(a.parent_id,0) =isnull(b.Object_ID,0) and a.Name ='old_value'))&#xD;&#xA;&#x9;and dateadd(dd,0, datediff(dd,0,AL.modified_date)) between dateadd(dd,0, datediff(dd,0,@Week_Start_Date)) and dateadd(dd,0, datediff(dd,0,@Week_End_Date))&#xD;&#xA;)&#xD;&#xA;select a.Person_id, a.Old_value as OldValue, b.Old_value as NewValue, a.audit_log_id, a.modified_date into #TEMPDTLS from OldValueTable a&#xD;&#xA;&#xD;&#xA;inner join NewValueTable b on a.audit_log_id=b.audit_log_id and a.old_value!=b.old_value&#xD;&#xA;&#xD;&#xA;Select distinct pl.plan_name as PlanName, AL.modified_date,P.person_id,P.first_name as FirstName,P.last_name LastName,CV1.Description as PriorMaritalStatus,&#xD;&#xA;CV2.Description as CurrentMaritalStatus  From sgt_person P &#xD;&#xA;INNER JOIN #TEMPDTLS AL on P.person_id=AL.person_id&#xD;&#xA;inner join sgt_person_account pa on pa.person_id = p.person_id&#xD;&#xA;inner join sgt_plan pl on pl.plan_id = pa.plan_id&#xD;&#xA;LEFT JOIN SGS_CODE_VALUE CV1 ON P.Marital_Status_ID=CV1.CODE_ID AND AL.OldValue=CV1.CODE_VALUE&#xD;&#xA;LEFT JOIN SGS_CODE_VALUE CV2 ON P.Marital_Status_ID=CV2.CODE_ID AND AL.NewValue=CV2.CODE_VALUE&#xD;&#xA;group by CV1.Description , pl.plan_name, AL.modified_date,P.person_id,P.first_name ,P.last_name ,&#xD;&#xA;CV2.Description order by P.last_name">
      <parameters>
        <parameter ID="@Week_Start_Date" sfwDataType="DateTime" />
        <parameter ID="@Week_End_Date" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LOAD_CONTACT_TICKET" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SCT.*, sas.*,sai.activity_instance_id as iintContactTicketActivityInstanceID,&#xD;&#xA;SP.DESCRIPTION as Process_Description,&#xD;&#xA;SA.NAME as istrActivityDisplayName,u.*,cou.last_name as counselor_last_name,&#xD;&#xA;cou.first_name as counselor_first_name&#xD;&#xA;FROM SGT_CONTACT_TICKET SCT&#xD;&#xA;left outer join sgt_appointment_schedule SAS on SAS.contact_ticket_id =SCT.contact_ticket_id and sct.contact_type_value = 'APP' &#xD;&#xA;left outer join sgs_user cou on sas.counselor_user_id = cou.user_serial_id&#xD;&#xA;left outer join sgt_seminar_schedule SSS on SSS.contact_ticket_id =SCT.contact_ticket_id and sct.contact_type_value = 'SEM' &#xD;&#xA;LEFT JOIN SGW_BPM_CASE_INST_PARAMETER P ON P.PARAMETER_NAME = 'contact_ticket_id' AND CONVERT(INT,ISNULL(P.PARAMETER_VALUE, '0')) = SCT.CONTACT_TICKET_ID&#xD;&#xA;LEFT JOIN SGW_BPM_CASE_INSTANCE CI on CI.case_instance_id = P.CASE_INSTANCE_ID&#xD;&#xA;LEFT JOIN SGW_BPM_PROCESS_INSTANCE SPI ON SPI.CASE_INSTANCE_ID = CI.CASE_INSTANCE_ID&#xD;&#xA;left outer join SGW_BPM_ACTIVITY_INSTANCE SAI on SPI.PROCESS_INSTANCE_ID = SAI.PROCESS_INSTANCE_ID&#xD;&#xA;left outer join SGW_BPM_ACTIVITY SA on SAI.ACTIVITY_ID = SA.ACTIVITY_ID&#xD;&#xA;left outer join SGW_BPM_PROCESS SP ON SPI.PROCESS_ID = SP.PROCESS_ID&#xD;&#xA;left outer join sgs_user u ON sct.assign_to_user_id = u.user_serial_id&#xD;&#xA;WHERE SCT.PERSON_ID=@PERSON_ID and (SAS.Appointment_Cancel_Flag &lt;&gt; 'Y' OR SAS.Appointment_Cancel_Flag IS NULL)&#xD;&#xA;and (SSS.Seminar_Cancel_Flag &lt;&gt; 'Y' OR SSS.Seminar_Cancel_Flag IS NULL)&#xD;&#xA;order by SCT.created_date desc">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LOAD_SEMINAR_ATTENDANCE" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_SEMINAR_ATTENDEE_DETAIL A&#xD;&#xA;INNER JOIN SGT_SEMINAR_SCHEDULE B ON A.SEMINAR_SCHEDULE_ID = B.SEMINAR_SCHEDULE_ID&#xD;&#xA;INNER JOIN SGT_CONTACT_TICKET C ON B.CONTACT_TICKET_ID = C.CONTACT_TICKET_ID&#xD;&#xA;AND A.PERSON_ID=@PERSON_ID&#xD;&#xA;where (b.Seminar_Cancel_Flag &lt;&gt; 'Y' OR b.Seminar_Cancel_Flag IS NULL)&#xD;&#xA;ORDER BY B.SEMINAR_DATE1 DESC">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LOAD_APPOINTMENT_SCHEDULE" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_APPOINTMENT_SCHEDULE &#xD;&#xA;WHERE CONTACT_TICKET_ID=@CONTACT_TICKET_ID">
      <parameters>
        <parameter ID="@CONTACT_TICKET_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="VALIDATE_PERSLINK_ID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PERSON&#xD;&#xA;WHERE PERSON_ID=@PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="VALIDATE DELETE" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_PERSON_EMPLOYMENT WHERE PERSON_ID=@PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPersonBySSN" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON WHERE SSN=@SSN">
      <parameters>
        <parameter ID="@SSN" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="CheckPersonIdIsBeneficiary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from  sgt_Person_beneficiary where BENEFICIARY_PERSON_ID = @Person_id">
      <parameters>
        <parameter ID="@Person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckPersonIdIsContact" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from sgt_Person_contact where contact_person_id = @Person_id">
      <parameters>
        <parameter ID="@Person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckPersonIsDependent" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from sgt_Person_dependent where dependent_Perslink_id = @Person_id">
      <parameters>
        <parameter ID="@Person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckPersonGotContact" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from sgt_person_contact where person_id = @person_id">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckPersonGotAddress" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from sgt_person_address where person_id = @person_id">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckPersonGotBeneficiary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from sgt_person_beneficiary where person_id = @person_id">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckPersonGotDependent" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select count(*) from sgt_person_dependent where person_id =@person_id">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckCorrespondenceGeneratedRelatedPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select count(*) from sgs_cor_tracking where person_id = @person_id and cor_status_value = 'GENR'">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CheckWorkflowRelatedToPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select count(1) from sgw_bpm_activity_instance  a&#xD;&#xA;inner join SGW_BPM_PROCESS_INSTANCE b on a.process_instance_id = b.process_instance_id&#xD;&#xA;inner join SGW_BPM_CASE_INSTANCE c on b.CASE_INSTANCE_ID=c.CASE_INSTANCE_ID&#xD;&#xA;where person_id = @person_id">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPersonAsBeneficiary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON PER WITH(NOLOCK)&#xD;&#xA;inner join SGT_PERSON_BENEFICIARY ben WITH(NOLOCK) on ben.PERSON_ID= per.person_id&#xD;&#xA;and ben.beneficiary_person_id = @PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPersonAsContact" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON WHERE PERSON_ID IN(SELECT PERSON_ID FROM SGT_PERSON_CONTACT&#xD;&#xA;WHERE CONTACT_PERSON_ID=@PERSON_ID)">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPersonAsDependent" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON WHERE PERSON_ID IN(SELECT PERSON_ID FROM SGT_PERSON_DEPENDENT&#xD;&#xA;WHERE DEPENDENT_PERSLINK_ID=@PERSON_ID)">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadBeneficiaries" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;PLN.PLAN_NAME AS ISTRPLANNAME,&#xD;&#xA;SPA.START_DATE as idtInitialPlanStartDate,&#xD;&#xA;cv.description as istrPlanParticipationStatus,&#xD;&#xA;p.person_id as benes_person_name,&#xD;&#xA;o.*,SPB.*,SPAB.*&#xD;&#xA;FROM SGT_PERSON_BENEFICIARY SPB WITH(NOLOCK)&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT_BENEFICIARY SPAB WITH(NOLOCK) ON SPAB.BENEFICIARY_ID=SPB.BENEFICIARY_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID=SPAB.PERSON_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN PLN WITH(NOLOCK) ON PLN.PLAN_ID=SPA.PLAN_ID&#xD;&#xA;left outer join sgs_code_value cv WITH(NOLOCK) on cv.code_id =PLAN_PARTICIPATION_STATUS_ID &#xD;&#xA;and code_value =  PLAN_PARTICIPATION_STATUS_VALUE&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON SPB.beneficiary_person_id = p.person_id&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION O ON SPB.benificiary_org_id = o.org_id&#xD;&#xA;WHERE SPB.PERSON_ID=@PERSON_ID AND ISNULL(SPA.PLAN_PARTICIPATION_STATUS_VALUE, '') NOT LIKE '%CAN%'">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadDependents" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SPD.*,SPAD.*,PLN.PLAN_NAME AS ISTRPLANNAME FROM SGT_PERSON_DEPENDENT SPD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_DEPENDENT SPAD WITH(NOLOCK) ON SPAD.PERSON_DEPENDENT_ID=SPD.PERSON_DEPENDENT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID=SPAD.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON PLN.PLAN_ID=SPA.PLAN_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON SPD.DEPENDENT_PERSLINK_ID = P.PERSON_ID &#xD;&#xA;WHERE SPD.PERSON_ID=@PERSON_ID&#xD;&#xA;ORDER BY ISNULL(SPAD.END_DATE,'12/31/9999') DESC">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="SubQueryByOrg" sfwQueryType="SubSelectQuery" sfwSql="select emp.*,org.* from sgt_person_employment emp&#xD;&#xA;inner join sgt_organization org on org.org_id = emp.org_id&#xD;&#xA;where emp.end_date is null&#xD;&#xA;and emp.person_id = P.person_id">
      <parameters />
    </query>
    <query ID="SubQueryByPlan" sfwQueryType="SubSelectQuery" sfwSql="select SPA.* from sgt_person_account SPA &#xD;&#xA;where SPA.person_id = P.person_id">
      <parameters />
    </query>
    <query ID="MemberSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--Select B.person_id,&#xD;&#xA;--Sum(isnull(DUE_PREMIUM_AMOUNT,0)) idecMemberSummaryNetPremiumAmt,&#xD;&#xA;--Sum(isnull(OTHR_RHIC_AMOUNT,0)) idecMemberSummaryRhicAmt,&#xD;&#xA;--Sum(isnull(JS_RHIC_AMOUNT,0)) idecMemberSummaryJSRhicAmount,&#xD;&#xA;--Sum(isnull(DUE_PREMIUM_AMOUNT,0)) + Sum(isnull(RHIC_BENEFIT_AMOUNT,0)) idecMemberSummaryCurrentPremiumAmt&#xD;&#xA;--from SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION A inner join &#xD;&#xA;--sgt_person_account b on A.person_account_id=b.person_account_id&#xD;&#xA;--where B.person_id=@personid and&#xD;&#xA;--effective_date=(Select max(effective_date) &#xD;&#xA;--from SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION A inner join &#xD;&#xA;--sgt_person_account b WITH(NOLOCK) on A.person_account_id=b.person_account_id&#xD;&#xA;--where B.person_id=@personid)&#xD;&#xA;--group by B.person_id&#xD;&#xA;&#xD;&#xA;DECLARE @MAXRUNDATE DATETIME&#xD;&#xA;SELECT @MAXRUNDATE = MAX(RUN_DATE) FROM SGT_IBS_HEADER &#xD;&#xA;WHERE REPORT_TYPE_VALUE = 'REG' AND REPORT_STATUS_VALUE = 'PSTD'&#xD;&#xA;&#xD;&#xA;SELECT DETL.PERSON_ID,&#xD;&#xA;SUM(ISNULL(DETL.MEMBER_PREMIUM_AMOUNT,0)) idecMemberSummaryNetPremiumAmt,&#xD;&#xA;SUM(ISNULL(DETL.OTHR_RHIC_AMOUNT,0)) idecMemberSummaryRhicAmt,&#xD;&#xA;SUM(ISNULL(DETL.JS_RHIC_AMOUNT,0)) idecMemberSummaryJSRhicAmount,&#xD;&#xA;SUM(ISNULL(DETL.TOTAL_PREMIUM_AMOUNT,0)) idecMemberSummaryCurrentPremiumAmt&#xD;&#xA;FROM SGT_IBS_DETAIL DETL WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_IBS_HEADER HED WITH(NOLOCK)&#xD;&#xA;ON DETL.IBS_HEADER_ID = HED.IBS_HEADER_ID&#xD;&#xA;WHERE DETL.PERSON_ID = @PERSONID&#xD;&#xA;AND HED.RUN_DATE = @MAXRUNDATE&#xD;&#xA;AND HED.REPORT_TYPE_VALUE = 'REG' AND ISNULL(DETL.DETAIL_STATUS_VALUE, '') &lt;&gt; 'IGNR'&#xD;&#xA;GROUP BY DETL.PERSON_ID">
      <parameters>
        <parameter ID="@PERSONID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="MemberSummaryPaymentRecieved" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select rem.* from sgt_remittance rem &#xD;&#xA;inner join sgt_deposit dep on dep.deposit_id = rem.deposit_id&#xD;&#xA;where dep.status_value = 'APLD' and remittance_type_value='IBSD' and rem.person_id=@personid">
      <parameters>
        <parameter ID="@personid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetIBSMemberAccounts" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select * from SGT_PERSON_ACCOUNT_PAYMENT_ELECTION A&#xD;&#xA;inner join SGT_PERSON_ACCOUNT B on A.PERSON_ACCOUNT_ID=B.PERSON_ACCOUNT_ID&#xD;&#xA;where person_id=@personid">
      <parameters>
        <parameter ID="@personid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadOverviewBeneficiaries" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SPB.*,SPAB.*,PLN.PLAN_NAME AS ISTRPLANNAME,o.* FROM SGT_PERSON_BENEFICIARY SPB&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT_BENEFICIARY SPAB ON SPAB.BENEFICIARY_ID=SPB.BENEFICIARY_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT SPA ON SPA.PERSON_ACCOUNT_ID=SPAB.PERSON_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PLAN PLN ON PLN.PLAN_ID=SPA.PLAN_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON SPB.beneficiary_person_id = p.person_id&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION O ON SPB.benificiary_org_id = o.org_id&#xD;&#xA;WHERE SPB.PERSON_ID=@PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadOverviewDependents" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SPD.*,SPAD.*,PLN.PLAN_NAME AS ISTRPLANNAME FROM SGT_PERSON_DEPENDENT SPD&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_DEPENDENT SPAD ON SPAD.PERSON_DEPENDENT_ID=SPD.PERSON_DEPENDENT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA ON SPA.PERSON_ACCOUNT_ID=SPAD.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN PLN ON PLN.PLAN_ID=SPA.PLAN_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P ON SPD.DEPENDENT_PERSLINK_ID = P.PERSON_ID &#xD;&#xA;WHERE SPD.PERSON_ID=@PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="MemberSummaryBalanceForward" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @MAXRUNDATE DATETIME&#xD;&#xA;SELECT @MAXRUNDATE = MAX(RUN_DATE) FROM SGT_IBS_HEADER WITH(NOLOCK) &#xD;&#xA;WHERE REPORT_TYPE_VALUE = 'REG' AND REPORT_STATUS_VALUE = 'PSTD'&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT DETL.PERSON_ID,BALANCE_FORWARD AS idecMemberSummaryBalanceForward&#xD;&#xA;FROM SGT_IBS_PERSON_SUMMARY DETL&#xD;&#xA;INNER JOIN SGT_IBS_HEADER HED&#xD;&#xA;ON DETL.IBS_HEADER_ID = HED.IBS_HEADER_ID&#xD;&#xA;WHERE DETL.PERSON_ID = @PERSONID AND &#xD;&#xA;HED.RUN_DATE = @MAXRUNDATE">
      <parameters>
        <parameter ID="@PERSONID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadEnrolledEmploymentDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select b.* from&#xD;&#xA;dbo.SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL B &#xD;&#xA;inner join dbo.SGT_PERSON_EMPLOYMENT_DETAIL C on B.PERSON_EMPLOYMENT_DTL_ID=C.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;inner join dbo.SGT_PERSON_EMPLOYMENT D on C.PERSON_EMPLOYMENT_ID=D.PERSON_EMPLOYMENT_ID&#xD;&#xA;where D.person_id=@personid and B.election_value='ENLD'">
      <parameters>
        <parameter ID="@personid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="sqLoadPersonAccount" sfwQueryType="SubSelectQuery" sfwSql="SELECT&#xA;&#x9; * &#xA;FROM&#xA;&#x9; sgt_person_account spa WITH(NOLOCK) &#xA;&#x9;INNER &#xA;&#x9; JOIN sgs_code_value cv WITH(NOLOCK)&#xA;&#x9; ON cv.code_value = spa.plan_participation_status_value AND&#xA;&#x9; cv.code_id = 337 left &#xA;&#x9; join sgt_person_account_retirement par WITH(NOLOCK)&#xA;&#x9; ON spa.person_account_id = par.person_account_id left &#xA;&#x9; join SGS_CODE_VALUE cv1 WITH(NOLOCK)   &#xA;&#x9; ON cv1.CODE_VALUE =  par.BENEFIT_TIER_VALUE AND&#xA;&#x9;   cv1.CODE_ID = 7003 &#xA;WHERE&#xA;&#x9; p.person_id = spa.person_id">
      <parameters />
    </query>
    <query ID="LoadMaritalStatusPersonRelatedScreens" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select * from sgs_code_value where code_id=306 and data3='Y'">
      <parameters />
    </query>
    <query ID="LoadPersonAccountBeneficiary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select A.*,P.PLAN_NAME AS istrPlanName,D.PLAN_ID from SGT_PERSON_ACCOUNT_BENEFICIARY A&#xD;&#xA;INNER JOIN SGT_PERSON_BENEFICIARY B ON A.BENEFICIARY_ID =  b.BENEFICIARY_ID&#xD;&#xA;INNER JOIN SGT_PERSON C ON C.PERSON_ID = B.BENEFICIARY_PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT D ON D.PERSON_ACCOUNT_ID = A.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN P ON P.PLAN_ID = D.PLAN_ID&#xD;&#xA;WHERE B.BENEFICIARY_PERSON_ID = @person_id&#xD;&#xA;ORDER BY ISNULL(A.END_DATE,'12/31/9999') DESC">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPersonAccountDependent" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select *,P.PLAN_NAME AS istrPlanName from SGT_PERSON_ACCOUNT_DEPENDENT A&#xD;&#xA;INNER JOIN SGT_PERSON_DEPENDENT B ON A.PERSON_DEPENDENT_ID =  b.PERSON_DEPENDENT_ID&#xD;&#xA;INNER JOIN SGT_PERSON C ON C.PERSON_ID = B.DEPENDENT_PERSLINK_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT D ON D.PERSON_ACCOUNT_ID = A.PERSON_ACCOUNT_ID&#xD;&#xA;INNER JOIN SGT_PLAN P ON P.PLAN_ID = D.PLAN_ID&#xD;&#xA;WHERE B.DEPENDENT_PERSLINK_ID = @person_id&#xD;&#xA;ORDER BY ISNULL(A.END_DATE,'12/31/9999') DESC">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadMemberAndPAEmpDetailsForAutoRefundBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="-- Query name : entPerson.LoadMemberAndPAEmpDetailsForAutoRefundBatch&#xD;&#xA;&#xD;&#xA;-- Run date is the parameter ( it is the only Parameter for this query)&#xD;&#xA;--, Remove it before placing in the cdo , it is required only for testing the query&#xD;&#xA;&#xD;&#xA;--DECLARE @RUNDATE DATETIME&#xD;&#xA;--SET @RUNDATE = '2012-08-24'&#xD;&#xA;&#xD;&#xA;DECLARE @GOLIVEDATE DATETIME&#xD;&#xA;SELECT @GOLIVEDATE = CAST(DATA1 AS DATETIME) FROM SGS_CODE_VALUE WITH(NOLOCK)&#xD;&#xA;WHERE CODE_ID = 52 AND CODE_VALUE = 'PGLD'&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT A.*, B.*, C.* , D.*, &#xD;&#xA; D.START_DATE AS PE_START_DATE,D.END_DATE AS PE_END_DATE,D.ORG_ID AS PE_ORG_ID&#xD;&#xA;FROM (&#xD;&#xA;SELECT PAED.PERSON_ACCOUNT_ID,PAED.PERSON_EMPLOYMENT_ID FROM &#xD;&#xA;(&#xD;&#xA; SELECT PAED.*,PE.PERSON_EMPLOYMENT_ID,PE.END_DATE,&#xD;&#xA; RANK() OVER (PARTITION BY PE.PERSON_ID ORDER BY &#xD;&#xA; ISNULL(PED.END_DATE,'01/01/2900') DESC,ISNULL(PE.END_DATE,'01/01/2900') DESC,&#xD;&#xA; PED.START_DATE DESC , PE.START_DATE DESC,  PED.PERSON_EMPLOYMENT_DTL_ID DESC)&#xD;&#xA; --,PAED.PERSON_ACCOUNT_EMPLOYMENT_DTL_ID DESC---- PIR 11046&#xD;&#xA; AS RANK_NUMBER  &#xD;&#xA; FROM SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED WITH(NOLOCK)&#xD;&#xA; INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK) &#xD;&#xA;  ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA; INNER JOIN SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK) &#xD;&#xA;  ON PE.PERSON_EMPLOYMENT_ID = PED.PERSON_EMPLOYMENT_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK)  &#xD;&#xA;  ON PA.PERSON_ACCOUNT_ID = PAED.PERSON_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PLAN P WITH(NOLOCK)  ON P.PLAN_ID = PA.PLAN_ID&#xD;&#xA; WHERE ISNULL(PE.END_DATE,'01/01/2900') &gt; @GOLIVEDATE&#xD;&#xA;  AND PAED.ELECTION_VALUE = 'ENLD' &#xD;&#xA;  AND P.BENEFIT_TYPE_VALUE = 'RETR' &#xD;&#xA;  AND P.PLAN_ID NOT IN (7, 28, 30)&#xD;&#xA;  AND PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1', 'SUS2')&#xD;&#xA;)PAED&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PX WITH(NOLOCK)  &#xD;&#xA; ON PX.PERSON_ACCOUNT_ID = PAED.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE DATEDIFF(D,PAED.END_DATE,@RUNDATE)&gt;30 &#xD;&#xA; AND PAED.RANK_NUMBER = 1&#xD;&#xA;GROUP BY PAED.PERSON_ACCOUNT_ID,PAED.PERSON_EMPLOYMENT_ID&#xD;&#xA;HAVING &#xD;&#xA; SUM(&#xD;&#xA; ISNULL(POST_TAX_EE_AMOUNT,0.00) + &#xD;&#xA; ISNULL(PRE_TAX_EE_AMOUNT,0.00) + &#xD;&#xA; ISNULL(EE_RHIC_AMOUNT,0.00) + &#xD;&#xA; ISNULL(EE_ER_PICKUP_AMOUNT,0.00) + &#xD;&#xA; ISNULL(ER_VESTED_AMOUNT,0.00) + &#xD;&#xA; ISNULL(INTEREST_AMOUNT,0.00)) &lt; 1000&#xD;&#xA;) MYQUERY, SGT_PERSON A WITH(NOLOCK), SGT_PERSON_ACCOUNT B WITH(NOLOCK), SGT_PLAN C  WITH(NOLOCK), SGT_PERSON_EMPLOYMENT D WITH(NOLOCK)&#xD;&#xA;WHERE MYQUERY.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID&#xD;&#xA;AND A.PERSON_ID = B.PERSON_ID&#xD;&#xA;AND B.PLAN_ID = C.PLAN_ID&#xD;&#xA;AND MYQUERY.PERSON_EMPLOYMENT_ID = D.PERSON_EMPLOYMENT_ID">
      <parameters>
        <parameter ID="@RUNDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadWelcomeBatchLetterMembers" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="-- Same query is used in LoadAllRefundedEndedEmployment. &#xD;&#xA;-- Any change in this query needs to be done there too.&#xD;&#xA;&#xD;&#xA;select PE1.*,PE.* from&#xD;&#xA;(&#xD;&#xA;SELECT *,&#xD;&#xA;PERSON_EMPLOYMENT_ID = (SELECT MAX(PERSON_EMPLOYMENT_ID) FROM SGT_PERSON_EMPLOYMENT &#xD;&#xA;where PERSON_ID = PER.PERSON_ID&#xD;&#xA;group by PERSON_ID) FROM SGT_PERSON PER WHERE (WELCOME_BATCH_LETTER_SENT_FLAG IS NULL OR &#xD;&#xA;WELCOME_BATCH_LETTER_SENT_FLAG = 'N') &#xD;&#xA;AND EXISTS(SELECT * FROM SGT_PERSON_EMPLOYMENT EMP WHERE EMP.PERSON_ID=PER.PERSON_ID&#xD;&#xA;AND EMP.ORG_ID NOT IN (SELECT ORG.ORG_ID FROM SGT_ORGANIZATION ORG &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGS_CODE_VALUE CV ON ORG.ORG_CODE = CV.DATA1 AND CV.CODE_ID = 7022 )&#xD;&#xA;)&#xD;&#xA;) PE &#xD;&#xA;inner join sgt_person_employment PE1 on PE.person_employment_id=PE1.person_employment_id&#xD;&#xA;WHERE ((DATEPART(WEEKDAY, @BATCHDATE)  = 6 AND PE1.START_DATE &lt;= DATEADD(DAY, 3, @BATCHDATE)) OR &#xD;&#xA; ((DATEPART(WEEKDAY, @BATCHDATE)  &lt;&gt; 6 and (DATEPART(WEEKDAY, @BATCHDATE)  &lt;&gt; 7) and (DATEPART(WEEKDAY, @BATCHDATE) &lt;&gt; 8))&#xD;&#xA;   AND PE1.START_DATE &lt;= DATEADD(DAY, 1, @BATCHDATE)))&#xD;&#xA;order by pe.person_id">
      <parameters>
        <parameter ID="@BATCHDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="UpdateBeneficiaryRequiredFlag" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @EFFECTIVE_DATE DATETIME&#xD;&#xA;SELECT @EFFECTIVE_DATE=EFFECTIVE_DATE FROM SGT_PAYMENT_SCHEDULE WHERE PAYMENT_SCHEDULE_ID = @PAYMENTSCHEDULEID&#xD;&#xA;&#xD;&#xA;UPDATE P SET BENEFICIARY_REQUIRED_FLAG = 'N',MODIFIED_BY='PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),MODIFIED_DATE=GETDATE(),&#xD;&#xA;   UPDATE_SEQ = UPDATE_SEQ+1&#xD;&#xA;FROM SGT_PERSON P&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA; SELECT PHH.PERSON_ID, PHH.PAYEE_ACCOUNT_ID,&#xD;&#xA;  PAYEE.MINIMUM_GUARANTEE_AMOUNT,&#xD;&#xA;  SUM(PHD.AMOUNT) AS AMOUNT&#xD;&#xA; FROM SGT_PAYMENT_HISTORY_HEADER PHH(NOLOCK)&#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_DETAIL PHD(NOLOCK) &#xD;&#xA;    ON PHH.PAYMENT_HISTORY_HEADER_ID = PHD.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   INNER JOIN &#xD;&#xA;   ( SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;     FROM SGT_PAYMENT_HISTORY_DISTRIBUTION &#xD;&#xA;     WHERE PAYMENT_METHOD_VALUE IN ('ACH','CHK')&#xD;&#xA;   ) AS PHDN &#xD;&#xA;    ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   INNER JOIN SGT_PAYMENT_ITEM_TYPE PIT(NOLOCK) &#xD;&#xA;    ON PHD.PAYMENT_ITEM_TYPE_ID =  PIT.PAYMENT_ITEM_TYPE_ID&#xD;&#xA; INNER JOIN  &#xD;&#xA;  (SELECT &#xD;&#xA;   PA.PAYEE_ACCOUNT_ID , PA.MINIMUM_GUARANTEE_AMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   INNER JOIN &#xD;&#xA;   ( SELECT DISTINCT PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;     FROM SGT_PAYMENT_HISTORY_DISTRIBUTION &#xD;&#xA;     WHERE PAYMENT_METHOD_VALUE IN ('ACH','CHK')&#xD;&#xA;   ) AS PHDN &#xD;&#xA;   ON PHDN.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID&#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  WHERE (CV.DATA2 = 'RPCD' or CV.DATA2 = 'RECV' OR CV.DATA2 = 'APRD' OR CV.DATA2 = 'REVW' OR CV.DATA2 = 'SPND')&#xD;&#xA;   and benefit_account_type_value &lt;&gt; 'DISA'&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;     FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;     WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;     AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;     ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND BENEFIT_BEGIN_DATE &lt;=  @PAYMENTDATE&#xD;&#xA;   AND (BENEFIT_END_DATE IS NULL OR BENEFIT_END_DATE &gt; @PAYMENTDATE)&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;   AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;  ) AS PAYEE&#xD;&#xA;  ON PAYEE.PAYEE_ACCOUNT_ID = PHH.PAYEE_ACCOUNT_ID &#xD;&#xA; WHERE PHH.PAYMENT_DATE &lt;= @EFFECTIVE_DATE AND PHH.PERSON_ID IS NOT NULL&#xD;&#xA;     AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  AND PIT.ITEM_TYPE_DIRECTION = 1   AND PIT.ALLOW_ROLLOVER_CODE_VALUE &lt;&gt; 'CRET'  &#xD;&#xA; GROUP BY PHH.PERSON_ID, PHH.PAYEE_ACCOUNT_ID,PAYEE.MINIMUM_GUARANTEE_AMOUNT &#xD;&#xA; HAVING   PAYEE.MINIMUM_GUARANTEE_AMOUNT  - SUM(PHD.AMOUNT) &lt;= 0) &#xD;&#xA; AS TT&#xD;&#xA;ON P.PERSON_ID = TT.PERSON_ID">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPersonContributionStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(TOTSUM) FROM&#xD;&#xA;(&#xD;&#xA;SELECT ISNULL(SUM( &#xD;&#xA;ISNULL(SALARY_AMOUNT,0) + &#xD;&#xA;ISNULL(POST_TAX_ER_AMOUNT,0) + &#xD;&#xA;ISNULL(POST_TAX_EE_AMOUNT,0) + &#xD;&#xA;ISNULL(PRE_TAX_ER_AMOUNT,0) + &#xD;&#xA;ISNULL(PRE_TAX_EE_AMOUNT,0) + &#xD;&#xA;ISNULL(EE_RHIC_AMOUNT,0) + &#xD;&#xA;ISNULL(ER_RHIC_AMOUNT,0) + &#xD;&#xA;ISNULL(EE_ER_PICKUP_AMOUNT,0) + &#xD;&#xA;ISNULL(ER_VESTED_AMOUNT,0) + &#xD;&#xA;ISNULL(INTEREST_AMOUNT,0) + &#xD;&#xA;ISNULL(EMPLOYER_INTEREST,0) ),0) AS TOTSUM&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION(NOLOCK) ACCON &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT(NOLOCK) AC ON ACCON.PERSON_ACCOUNT_ID=AC.PERSON_ACCOUNT_ID AND &#xD;&#xA;AC.PERSON_ID=@PERSON_ID&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT SUM(ISNULL(PAY_PERIOD_CONTRIBUTION_AMOUNT,0)) &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_DEFERRED_COMP_CONTRIBUTION(NOLOCK) DEFCON INNER JOIN&#xD;&#xA;SGT_PERSON_ACCOUNT(NOLOCK) AC ON DEFCON.PERSON_ACCOUNT_ID=DEFCON.PERSON_ACCOUNT_ID AND &#xD;&#xA;AC.PERSON_ID=@PERSON_ID&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT ISNULL(SUM(ISNULL(PAID_PREMIUM_AMOUNT,0)+ ISNULL(DUE_PREMIUM_AMOUNT,0)),0)&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_INSURANCE_CONTRIBUTION(NOLOCK) INSCON &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT(NOLOCK) AC ON INSCON.PERSON_ACCOUNT_ID=AC.PERSON_ACCOUNT_ID&#xD;&#xA;AND AC.PERSON_ID=@PERSON_ID&#xD;&#xA;) AS MAINTAB">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPersonsPayeeAccountStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM &#xD;&#xA;(SELECT PAYEE_ACCOUNT_ID,&#xD;&#xA;(SELECT TOP 1 STATUS_VALUE &#xD;&#xA;FROM SGT_PAYEE_ACCOUNT_STATUS(NOLOCK) STAT &#xD;&#xA;INNER JOIN SGS_CODE_VALUE(NOLOCK) CODE ON STAT.STATUS_ID=CODE.CODE_ID AND STAT.STATUS_VALUE=CODE.CODE_VALUE&#xD;&#xA;WHERE STAT.PAYEE_ACCOUNT_ID=P.PAYEE_ACCOUNT_ID ORDER BY STATUS_EFFECTIVE_DATE DESC) STAT&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT(NOLOCK) P WHERE P.PAYEE_PERSLINK_ID=@PERSON_ID) AS PAYEE&#xD;&#xA;WHERE PAYEE.STAT &lt;&gt; 'CNLD'">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPersonsApplicationStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_BENEFIT_APPLICATION(NOLOCK) WHERE (MEMBER_PERSON_ID=@PERSON_ID&#xD;&#xA;OR RECIPIENT_PERSON_ID=@PERSON_ID)&#xD;&#xA;AND ACTION_STATUS_VALUE NOT IN ('CANC','DENI')">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPersonsDROApplicationStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*) FROM SGT_BENEFIT_DRO_APPLICATION(NOLOCK) WHERE (MEMBER_PERSLINK_ID=@PERSON_ID&#xD;&#xA;OR ALTERNATE_PAYEE_PERSLINK_ID=@PERSON_ID) AND DRO_STATUS_VALUE NOT IN ('CNLD','NLFD')">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPersonsRHICCombineStatus" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT COUNT(*)FROM SGT_BENEFIT_RHIC_COMBINE(NOLOCK) WHERE PERSON_ID=@PERSON_ID&#xD;&#xA;AND ACTION_STATUS_VALUE &lt;&gt; 'DEND'">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPersonDetailsByPersonId" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;  SP.FIRST_NAME + ' ' + SP.LAST_NAME  AS PersonName,&#xA;  isnull(SP.FIRST_NAME,'')+' '+isnull(SP.MIDDLE_NAME,'') +' '+isnull(SP.LAST_NAME,'') AS FULL_NAME,PERSON_ID  &#xA;FROM&#xA;  sgt_person SP WITH(NOLOCK)  &#xA;WHERE&#xA;  SP.person_id = @person_id" sfwOracle="SELECT&#xD;&#xA;  SP.FIRST_NAME || ' ' || SP.LAST_NAME  AS PersonName,&#xD;&#xA;  COALESCE(SP.FIRST_NAME,'')||' '||COALESCE(SP.MIDDLE_NAME,'') ||' '||COALESCE(SP.LAST_NAME,'') AS FULL_NAME,&#xD;&#xA;  PRIMARY_EMAIL_ADDRESS AS PRIMARY_EMAIL,PERSON_ID  &#xD;&#xA;FROM&#xD;&#xA;  sgt_person SP &#xD;&#xA;WHERE&#xD;&#xA;  SP.person_id = @person_id" sfwPostgre="SELECT&#xD;&#xA;  SP.FIRST_NAME || ' ' || SP.LAST_NAME  AS PersonName,&#xD;&#xA;  COALESCE(SP.FIRST_NAME,'')||' '||COALESCE(SP.MIDDLE_NAME,'') ||' '||COALESCE(SP.LAST_NAME,'') AS FULL_NAME,&#xD;&#xA;  PRIMARY_EMAIL_ADDRESS AS PRIMARY_EMAIL,PERSON_ID  &#xD;&#xA;FROM&#xD;&#xA;  sgt_person SP &#xD;&#xA;WHERE&#xD;&#xA;  SP.person_id = @person_id">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetAllMemberContributions" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SPARC.*,SPA.* FROM SGT_PERSON SP&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT SPA ON SP.PERSON_ID=SPA.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PLAN SPN ON SPN.PLAN_ID=SPA.PLAN_ID AND SPN.PLAN_ID IN (1,2,20,4,5,6,3,26,27,29)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION SPARC ON SPARC.PERSON_ACCOUNT_ID=SPA.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE SP.PERSON_ID=@PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetPossibleDuplicatePersons" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select * from &#xD;&#xA;SGT_PERSON(NOLOCK) PER WHERE PER.PERSON_ID in&#xD;&#xA;(SELECT PERSON_ID FROM&#xD;&#xA;(&#xD;&#xA;SELECT PER.PERSON_ID FROM SGT_PERSON(NOLOCK)PER&#xD;&#xA;WHERE PERSON_ID &lt;&gt; @PERSON_ID&#xD;&#xA;AND LAST_NAME LIKE '%' + ISNULL(@LAST_NAME,'') + '%'&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PER.PERSON_ID FROM SGT_PERSON(NOLOCK)PER&#xD;&#xA;WHERE PERSON_ID &lt;&gt; @PERSON_ID&#xD;&#xA;AND DATE_OF_BIRTH=@DOB&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PER.PERSON_ID FROM SGT_PERSON(NOLOCK)PER&#xD;&#xA;WHERE PERSON_ID &lt;&gt; @PERSON_ID&#xD;&#xA;AND GENDER_VALUE =@GENDER&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PER.PERSON_ID FROM SGT_PERSON_ADDRESS PERSONADD (NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID=PERSONADD.PERSON_ID&#xD;&#xA;WHERE PERSONADD.PERSON_ID &lt;&gt; @PERSON_ID&#xD;&#xA;AND ADDR_ZIP_CODE IN (SELECT ADDR_ZIP_CODE FROM SGT_PERSON_ADDRESS(NOLOCK) WHERE PERSON_ID=@PERSON_ID)&#xD;&#xA;AND 2=@QUERY_IDENTIFIER&#xD;&#xA;GROUP BY PER.PERSON_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT PER.PERSON_ID FROM SGT_PERSON_EMPLOYMENT PEREMP(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON(NOLOCK) PER ON PER.PERSON_ID=PEREMP.PERSON_ID&#xD;&#xA;WHERE PEREMP.PERSON_ID &lt;&gt; @PERSON_ID&#xD;&#xA;AND PEREMP.ORG_ID =@ORG_ID&#xD;&#xA;AND 2=@QUERY_IDENTIFIER&#xD;&#xA;GROUP BY PER.PERSON_ID&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT  PER.PERSON_ID FROM SGT_PERSON(NOLOCK)PER WHERE (SSN LIKE '%' + @SSN1 + '%'&#xD;&#xA;OR SSN LIKE '%' + @SSN2 + '%'&#xD;&#xA;OR SSN LIKE '%' + @SSN3 + '%')&#xD;&#xA;and PERSON_ID &lt;&gt; @PERSON_ID&#xD;&#xA;GROUP BY PER.PERSON_ID&#xD;&#xA;&#xD;&#xA;) AS MAINTAB&#xD;&#xA;GROUP BY MAINTAB.PERSON_ID&#xD;&#xA;HAVING COUNT(*) &gt;= @RETCOUNT)">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
        <parameter ID="@LAST_NAME" sfwDataType="string" />
        <parameter ID="@DOB" sfwDataType="DateTime" />
        <parameter ID="@GENDER" sfwDataType="string" />
        <parameter ID="@QUERY_IDENTIFIER" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@SSN1" sfwDataType="string" />
        <parameter ID="@SSN2" sfwDataType="string" />
        <parameter ID="@SSN3" sfwDataType="string" />
        <parameter ID="@RETCOUNT" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadApplicationBeneficiary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SPB.*,SBDB.* FROM SGT_PERSON_BENEFICIARY SPB WITH(NOLOCK)&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_BENEFICIARY SBDB WITH(NOLOCK) ON SBDB.BENEFICIARY_ID=SPB.BENEFICIARY_ID&#xD;&#xA;WHERE SPB.PERSON_ID=@PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetSecurityBasedOnPersonID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  P.PERSON_ID,R.RESOURCE_ID,R.RESOURCE_DESCRIPTION,5 AS SECURITY_LEVEL&#xD;&#xA;FROM  SGT_PERSON P WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGS_RESOURCES R WITH(NOLOCK)ON R.RESOURCE_ID = 2001&#xD;&#xA;WHERE P.PERSON_ID = @personID">
      <parameters>
        <parameter ID="@personID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRecentNetBenefitAmount" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP 1 NETPAYMENT FROM&#xD;&#xA;(&#xD;&#xA;      SELECT PAYMENT_DATE,SUM(NET_AMOUNT) AS NETPAYMENT &#xD;&#xA;            FROM SGT_PAYMENT_HISTORY_HEADER PHH&#xD;&#xA;            INNER JOIN SGT_PAYMENT_HISTORY_DISTRIBUTION PHD  &#xD;&#xA;                  ON PHD.PAYMENT_HISTORY_HEADER_ID = PHH.PAYMENT_HISTORY_HEADER_ID &#xD;&#xA;            WHERE PHH.PERSON_ID= @PERSON_ID&#xD;&#xA;                  AND PHH.PERSON_ID IS NOT NULL -- EXCLUDE ROLLOVER CHECKS &#xD;&#xA;            GROUP BY PAYMENT_DATE&#xD;&#xA;) AS PAYMENT&#xD;&#xA;ORDER BY PAYMENT_DATE DESC&#xD;&#xA;">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadContribtuionSummaryForDB" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;*,&#xD;&#xA; (&#xD;&#xA;  SELECT TOP 1 ER_VESTED_PERCENTAGE FROM SGT_VESTED_ER_PERCENTAGE_REF WITH(NOLOCK) WHERE RETIREMENT_TYPE_VALUE=&#xD;&#xA;  (CASE WHEN MAINTABLE.iintMSSPlanId=7 THEN 'DC' ELSE 'DB' END) AND EFFECTIVE_DATE &lt; = @EFFECTIVE_DATE AND &#xD;&#xA;  (MAINTABLE.TVSC_IN_YEAR_MONTHS + MAINTABLE.TFFR_SERVICE + MAINTABLE.TIAA_CREF_SERVICE + MAINTABLE.JOBSERVICE_SICK_LEAVE) BETWEEN VSC_FROM AND VSC_TO&#xD;&#xA;  ORDER BY EFFECTIVE_DATE DESC&#xD;&#xA; ) AS 'VESTED_EMPLOYER_CONT_PERCENT'&#xD;&#xA;&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT    &#xD;&#xA;ACC.person_id as 'person_id', &#xD;&#xA;ACC.PLAN_ID AS 'iintMSSPlanId',&#xD;&#xA;PLN.PLAN_NAME AS 'istrMSSPlanName', &#xD;&#xA;ISNULL(SUM (MABPREV.POST_TAX_EE_AMOUNT_LTD + MABPREV.POST_TAX_EE_SER_PUR_CONT_LTD  &#xD;&#xA; + RET.CAPITAL_GAIN + MABPREV.ER_VESTED_AMOUNT_LTD + MABPREV.INTEREST_AMOUNT_LTD + MABPREV.PRE_TAX_EE_AMOUNT_LTD + MABPREV.EE_ER_PICKUP_AMOUNT_LTD + MABPREV.  PRE_TAX_EE_SER_PUR_CONT_LTD),0) AS 'PREVIOUS_MEMBER_ACCOUNT_BALANCE_LTD',&#xD;&#xA;SUM(MAB.VESTED_SERVICE_CREDIT_LTD) 'TVSC_IN_YEAR_MONTHS' ,&#xD;&#xA;SUM(MAB.PENSION_SERVICE_CREDIT_LTD) 'PSC_IN_YEAR_MONTHS',&#xD;&#xA;MAX(CASE WHEN TFFR_SERVICE_STATUS_VALUE ='TNTV' THEN ISNULL(TFFR_SERVICE,0) ELSE 0 END ) 'TFFR_SERVICE',&#xD;&#xA;MAX(CASE WHEN TIAA_SERVICE_STATUS_VALUE ='TNTV' THEN ISNULL(TIAA_SERVICE,0) ELSE 0 END ) 'TIAA_CREF_SERVICE',&#xD;&#xA;(CASE WHEN ACC.PLAN_ID = 6 THEN MAX(PER.JOB_SERVICE_SICK_LEAVE) ELSE 0 END) 'JOBSERVICE_SICK_LEAVE',&#xD;&#xA;SUM (FYTD.POST_TAX_EE_AMOUNT + FYTD.POST_TAX_EE_SER_PUR_CONT + FYTD.PRE_TAX_EE_AMOUNT + FYTD.EE_ER_PICKUP_AMOUNT) AS 'idecMSSMemberContribution', --PROD PIR ID 6194&#xD;&#xA;SUM(FYTD.ER_VESTED_AMOUNT) AS 'idecMSSVestedEmployerContribution',&#xD;&#xA;SUM(FYTD.INTEREST_AMOUNT) AS 'idecMSSInterest',&#xD;&#xA;SUM (MAB.POST_TAX_EE_AMOUNT_LTD + MAB.POST_TAX_EE_SER_PUR_CONT_LTD + RET.CAPITAL_GAIN + MAB.ER_VESTED_AMOUNT_LTD + MAB.INTEREST_AMOUNT_LTD + MAB.PRE_TAX_EE_AMOUNT_LTD + MAB.EE_ER_PICKUP_AMOUNT_LTD + MAB.PRE_TAX_EE_SER_PUR_CONT_LTD) AS 'MEMBER_ACCOUNT_BALANCE_LTD',&#xD;&#xA;SUM (MAB.POST_TAX_EE_AMOUNT_LTD + MAB.POST_TAX_EE_SER_PUR_CONT_LTD) AS 'idecMSSTotalNonTaxable',&#xD;&#xA;SUM (RET.CAPITAL_GAIN + MAB.ER_VESTED_AMOUNT_LTD +MAB.INTEREST_AMOUNT_LTD + MAB.PRE_TAX_EE_AMOUNT_LTD + &#xD;&#xA; MAB.EE_ER_PICKUP_AMOUNT_LTD + MAB.PRE_TAX_EE_SER_PUR_CONT_LTD) AS 'idecMSSTotalTaxable',&#xD;&#xA;SUM(MAB.POST_TAX_EE_AMOUNT_LTD + MAB.POST_TAX_EE_SER_PUR_CONT_LTD + RET.CAPITAL_GAIN + MAB.ER_VESTED_AMOUNT_LTD +&#xD;&#xA; MAB.INTEREST_AMOUNT_LTD + MAB.PRE_TAX_EE_AMOUNT_LTD + MAB.EE_ER_PICKUP_AMOUNT_LTD + MAB.PRE_TAX_EE_SER_PUR_CONT_LTD) AS 'LTD_MEMBER_CONTRIBUTIONS',&#xD;&#xA;SUM(FYTD.POST_TAX_EE_AMOUNT + FYTD.POST_TAX_EE_SER_PUR_CONT+ RET.CAPITAL_GAIN + FYTD.ER_VESTED_AMOUNT +&#xD;&#xA; FYTD.INTEREST_AMOUNT + FYTD.PRE_TAX_EE_AMOUNT + FYTD.EE_ER_PICKUP_AMOUNT +FYTD.PRE_TAX_EE_SER_PUR_CONT) AS 'YTD_MEMBER_CONTRIBUTIONS',&#xD;&#xA;SUM(FYTD.ER_RHIC_AMOUNT + FYTD.ER_RHIC_SER_PUR_CONT + FYTD.PRE_TAX_ER_AMOUNT +&#xD;&#xA; FYTD.PRE_TAX_ER_SER_PUR_CONT + FYTD.EMPLOYER_INTEREST)AS 'YTD_EMPLOYER_CONTRIBUTIONS',&#xD;&#xA;SUM(MAB.ER_RHIC_AMOUNT_LTD + MAB.ER_RHIC_SER_PUR_CONT_LTD + MAB.PRE_TAX_ER_AMOUNT_LTD +&#xD;&#xA;    MAB.PRE_TAX_ER_SER_PUR_CONT_LTD + MAB.EMPLOYER_INTEREST_LTD)AS 'LTD_EMPLOYER_CONTRIBUTIONS',&#xD;&#xA;SUM(MAB.EE_RHIC_AMOUNT_LTD) AS 'idecMSSRHICEEContribution',&#xD;&#xA; SUM(MAB.EE_RHIC_SER_PUR_CONT_LTD ) AS 'idecMSSRHICServiceCreditContribution'&#xD;&#xA;,&#xD;&#xA;(&#xD;&#xA; SELECT TOP  1  MULTIPIER_PERCENTAGE FROM SGT_BENEFIT_PROVISION_MULTIPLIER WITH(NOLOCK) WHERE &#xD;&#xA; EFFECTIVE_DATE &lt;= @EFFECTIVE_DATE AND TIER_NUMBER=1 AND BENEFIT_ACCOUNT_TYPE_VALUE='RETR' AND BENEFIT_PROVISION_ID=PLN.BENEFIT_PROVISION_ID&#xD;&#xA; ORDER BY EFFECTIVE_DATE DESC&#xD;&#xA;) AS 'TIER1',&#xD;&#xA;(&#xD;&#xA; SELECT TOP  1  MULTIPIER_PERCENTAGE FROM SGT_BENEFIT_PROVISION_MULTIPLIER WITH(NOLOCK) WHERE &#xD;&#xA; EFFECTIVE_DATE &lt;= @EFFECTIVE_DATE AND TIER_NUMBER=2 AND BENEFIT_ACCOUNT_TYPE_VALUE='RETR' AND BENEFIT_PROVISION_ID=PLN.BENEFIT_PROVISION_ID&#xD;&#xA; ORDER BY EFFECTIVE_DATE DESC&#xD;&#xA;) AS 'TIER2',&#xD;&#xA;(&#xD;&#xA; SELECT TOP  1  MULTIPIER_PERCENTAGE FROM SGT_BENEFIT_PROVISION_MULTIPLIER WITH(NOLOCK) WHERE &#xD;&#xA; EFFECTIVE_DATE &lt;= @EFFECTIVE_DATE AND TIER_NUMBER=3 AND BENEFIT_ACCOUNT_TYPE_VALUE='RETR' AND BENEFIT_PROVISION_ID=PLN.BENEFIT_PROVISION_ID&#xD;&#xA; ORDER BY EFFECTIVE_DATE DESC&#xD;&#xA;) AS 'TIER3'&#xD;&#xA;FROM &#xD;&#xA;SGT_PERSON_ACCOUNT ACC WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_PERSON PER WITH(NOLOCK) ON ACC.PERSON_ID=PER.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT RET WITH(NOLOCK) ON ACC.PERSON_ACCOUNT_ID=RET.PERSON_ACCOUNT_ID &#xD;&#xA;INNER JOIN SGT_PLAN PLN WITH(NOLOCK) ON ACC.PLAN_ID=PLN.PLAN_ID AND PLN.BENEFIT_TYPE_VALUE='RETR'&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_TFFR_TIAA_SERVICE TFFR WITH(NOLOCK) ON PER.PERSON_ID=TFFR.PERSON_ID&#xD;&#xA;INNER JOIN &#xD;&#xA;(&#xD;&#xA; SELECT PERSON_ACCOUNT_ID,&#xD;&#xA; SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA; SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT_LTD,&#xD;&#xA; SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT_LTD,&#xD;&#xA; SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT_LTD,&#xD;&#xA; SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST_LTD,&#xD;&#xA; SUM(ISNULL(EE_RHIC_SER_PUR_CONT,0)) AS EE_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA; SUM(ISNULL(ER_RHIC_SER_PUR_CONT,0)) AS ER_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA; SUM(ISNULL(POST_TAX_EE_SER_PUR_CONT,0)) AS POST_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA; SUM(ISNULL(PRE_TAX_EE_SER_PUR_CONT,0)) AS PRE_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA; SUM(ISNULL(PRE_TAX_ER_SER_PUR_CONT,0)) AS PRE_TAX_ER_SER_PUR_CONT_LTD&#xD;&#xA; FROM&#xD;&#xA; (&#xD;&#xA;  SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;  SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;  SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;  SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;  SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;  SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;  SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;  SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;  SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;  0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;  0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;  0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;  0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;  0 AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;  FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;  WHERE  TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC' AND&#xD;&#xA;  EFFECTIVE_DATE &lt; = @EFFECTIVE_DATE &#xD;&#xA;  GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;  UNION ALL&#xD;&#xA;&#xD;&#xA;  SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;  0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;  0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;  0 AS EE_RHIC_AMOUNT,&#xD;&#xA;  0 AS ER_RHIC_AMOUNT,&#xD;&#xA;  0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;  SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;  SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;  SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;  SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;  SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;  SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;  SUM(ISNULL(EE_RHIC_AMOUNT,0)) AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(ER_RHIC_AMOUNT,0)) AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;  FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;  WHERE  TRANSACTION_TYPE_VALUE = 'PURC' AND&#xD;&#xA;  EFFECTIVE_DATE &lt; = @EFFECTIVE_DATE &#xD;&#xA;  GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA; ) AS TEMP&#xD;&#xA; GROUP BY PERSON_ACCOUNT_ID) AS MAB ON MAB.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA; LEFT OUTER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;  SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;  SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT_LTD,&#xD;&#xA;  SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT_LTD,&#xD;&#xA;  SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT_LTD,&#xD;&#xA;  SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST_LTD,&#xD;&#xA;  SUM(ISNULL(EE_RHIC_SER_PUR_CONT,0)) AS EE_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA;  SUM(ISNULL(ER_RHIC_SER_PUR_CONT,0)) AS ER_RHIC_SER_PUR_CONT_LTD,&#xD;&#xA;  SUM(ISNULL(POST_TAX_EE_SER_PUR_CONT,0)) AS POST_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_EE_SER_PUR_CONT,0)) AS PRE_TAX_EE_SER_PUR_CONT_LTD,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_ER_SER_PUR_CONT,0)) AS PRE_TAX_ER_SER_PUR_CONT_LTD&#xD;&#xA;  FROM&#xD;&#xA;  (&#xD;&#xA;   SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;   SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;   SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;   SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;   SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;   SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;   0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;   0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;   0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   0 AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;   FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;   WHERE  TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC' AND&#xD;&#xA;   EFFECTIVE_DATE &lt; = DATEADD(&quot;YY&quot;,-1,@EFFECTIVE_DATE)&#xD;&#xA;   GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;   UNION ALL&#xD;&#xA;&#xD;&#xA;   SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;   0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;   0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;   0 AS EE_RHIC_AMOUNT,&#xD;&#xA;   0 AS ER_RHIC_AMOUNT,&#xD;&#xA;   0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;   SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;   SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;   SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;   SUM(ISNULL(EE_RHIC_AMOUNT,0)) AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(ER_RHIC_AMOUNT,0)) AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;   FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;   WHERE  TRANSACTION_TYPE_VALUE = 'PURC' AND&#xD;&#xA;   EFFECTIVE_DATE &lt; = DATEADD(&quot;YY&quot;,-1,@EFFECTIVE_DATE) &#xD;&#xA;   GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;  ) AS TEMP1&#xD;&#xA;  GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA; ) AS MABPREV ON MABPREV.PERSON_ACCOUNT_ID=ACC.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA; LEFT OUTER JOIN&#xD;&#xA; (&#xD;&#xA;  SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;  SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;  SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;  SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;  SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;  SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;  SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;  SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;  SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;  SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;  SUM(ISNULL(EE_RHIC_SER_PUR_CONT,0)) AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(ER_RHIC_SER_PUR_CONT,0)) AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(POST_TAX_EE_SER_PUR_CONT,0)) AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_EE_SER_PUR_CONT,0)) AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;  SUM(ISNULL(PRE_TAX_ER_SER_PUR_CONT,0)) AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;  FROM&#xD;&#xA;  (&#xD;&#xA;   SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;   SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;   SUM(ISNULL(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;   SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;   SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;   SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;   0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;   0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;   0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   0 AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   0 AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;   FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;   WHERE &#xD;&#xA;   (CAST(YEAR(TRANSACTION_DATE) AS VARCHAR(4))+ RIGHT('00' + CAST(MONTH(TRANSACTION_DATE) AS VARCHAR(2)),2)) &gt;= (CASE WHEN MONTH(@EFFECTIVE_DATE) &gt;= 7 THEN    CAST(YEAR(@EFFECTIVE_DATE) AS VARCHAR(4)) + '07' &#xD;&#xA;   ELSE CAST(YEAR(@EFFECTIVE_DATE)-1 AS VARCHAR(4)) + '07' END) AND&#xD;&#xA;   (CAST(YEAR(TRANSACTION_DATE) AS VARCHAR(4))+ RIGHT('00' + CAST(MONTH(TRANSACTION_DATE) AS VARCHAR(2)),2)) &lt;= (CASE WHEN MONTH(@EFFECTIVE_DATE) &gt;= 7 THEN    CAST(YEAR(@EFFECTIVE_DATE)+1 AS VARCHAR(4)) + '06' &#xD;&#xA;   ELSE CAST(YEAR(@EFFECTIVE_DATE) AS VARCHAR(4)) + '06' END) AND&#xD;&#xA;   TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC' GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;   UNION ALL&#xD;&#xA;&#xD;&#xA;   SELECT PERSON_ACCOUNT_ID,&#xD;&#xA;   0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;   0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;   0 AS EE_RHIC_AMOUNT,&#xD;&#xA;   0 AS ER_RHIC_AMOUNT,&#xD;&#xA;   0 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;   SUM(ISNULL(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;   SUM(ISNULL(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;   SUM(ISNULL(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;   SUM(ISNULL(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;   SUM(ISNULL(EMPLOYER_INTEREST,0)) EMPLOYER_INTEREST,&#xD;&#xA;   SUM(ISNULL(EE_RHIC_AMOUNT,0)) AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(ER_RHIC_AMOUNT,0)) AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(POST_TAX_EE_AMOUNT,0)) AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) AS PRE_TAX_EE_SER_PUR_CONT,&#xD;&#xA;   SUM(ISNULL(PRE_TAX_ER_AMOUNT,0)) AS PRE_TAX_ER_SER_PUR_CONT&#xD;&#xA;   FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)&#xD;&#xA;   WHERE &#xD;&#xA;   (CAST(YEAR(EFFECTIVE_DATE) AS VARCHAR(4))+ RIGHT('00' + CAST(MONTH(EFFECTIVE_DATE) AS VARCHAR(2)),2)) &gt;= (CASE WHEN MONTH(@EFFECTIVE_DATE) &gt;= 7 THEN CAST    (YEAR(@EFFECTIVE_DATE) AS VARCHAR(4)) + '07' &#xD;&#xA;   ELSE CAST(YEAR(@EFFECTIVE_DATE)-1 AS VARCHAR(4)) + '07' END) AND&#xD;&#xA;   (CAST(YEAR(EFFECTIVE_DATE) AS VARCHAR(4))+ RIGHT('00' + CAST(MONTH(EFFECTIVE_DATE) AS VARCHAR(2)),2)) &lt;= (CASE WHEN MONTH(@EFFECTIVE_DATE) &gt;= 7 THEN CAST    (YEAR(@EFFECTIVE_DATE)+1 AS VARCHAR(4)) + '06' &#xD;&#xA;   ELSE CAST(YEAR(@EFFECTIVE_DATE) AS VARCHAR(4)) + '06' END) AND&#xD;&#xA;   TRANSACTION_TYPE_VALUE = 'PURC'&#xD;&#xA;   GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA;  ) AS TEMP&#xD;&#xA;  GROUP BY PERSON_ACCOUNT_ID&#xD;&#xA; ) AS FYTD ON FYTD.PERSON_ACCOUNT_ID= ACC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE ACC.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1','SUS2') &#xD;&#xA;GROUP BY ACC.PERSON_ID, ACC.PLAN_ID,PLN.BENEFIT_PROVISION_ID, PLN.PLAN_NAME&#xD;&#xA;) AS MAINTABLE &#xD;&#xA;where person_id = @PersonId and   iintMSSPlanId  = @planId&#xD;&#xA;ORDER BY MAINTABLE.iintMSSPlanId, MAINTABLE.istrMSSplanName">
      <parameters>
        <parameter ID="@EFFECTIVE_DATE" sfwDataType="DateTime" />
        <parameter ID="@PersonId" sfwDataType="int" />
        <parameter ID="@planId" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRetContributionForJobService" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select a.* from sgt_person_account_retirement_contribution a WITH(NOLOCK)&#xD;&#xA;inner join sgt_person_account b WITH(NOLOCK) on b.person_account_id = a.person_account_id &#xD;&#xA;where plan_id = 6 and person_id = @PersonId  and &#xD;&#xA;b.plan_participation_Status_Value NOT IN ('WTN1','CAN1')">
      <parameters>
        <parameter ID="@PersonId" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRetContributionExcludeJobService" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select a.* from sgt_person_account_retirement_contribution a WITH(NOLOCK)&#xD;&#xA;inner join sgt_person_account b WITH(NOLOCK) on b.person_account_id = a.person_account_id &#xD;&#xA;where plan_id != 6 and person_id = @PersonId and &#xD;&#xA;b.plan_participation_Status_Value NOT IN ('WTN1','CAN1', 'TICR',&#xD;&#xA;'TRDB', 'TRDC', 'TRTF')">
      <parameters>
        <parameter ID="@PersonId" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="ESSGetEmployeeList" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT P.* FROM SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK) &#xD;&#xA; INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK) &#xD;&#xA;  ON PE.PERSON_EMPLOYMENT_ID = PED.PERSON_EMPLOYMENT_ID &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED WITH(NOLOCK) &#xD;&#xA;  ON PAED.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT PAC WITH(NOLOCK) &#xD;&#xA;  ON PAED.PERSON_ACCOUNT_ID = PAC.PERSON_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_ORG_CONTACT OC WITH(NOLOCK) &#xD;&#xA;  ON PE.ORG_ID = OC.ORG_ID AND PE.ORG_ID = @ORG_ID&#xD;&#xA; INNER JOIN SGT_ORG_CONTACT_ROLE OCR WITH(NOLOCK)&#xD;&#xA;  ON OCR.ORG_CONTACT_ID = OC.ORG_CONTACT_ID&#xD;&#xA; INNER JOIN SGT_PERSON P WITH(NOLOCK) &#xD;&#xA;  ON PE.PERSON_ID = P.PERSON_ID&#xD;&#xA; WHERE PE.START_DATE &lt;= GETDATE() &#xD;&#xA;  AND (PE.END_DATE  IS NULL OR PE.END_DATE &gt;= GETDATE())&#xD;&#xA;  AND PED.START_DATE &lt;= GETDATE() &#xD;&#xA; AND (PED.END_DATE  IS NULL OR PED.END_DATE &gt;= GETDATE())&#xD;&#xA; AND PAED.ELECTION_VALUE = 'ENLD'&#xD;&#xA; AND PAED.PLAN_ID = @PLAN_ID &#xD;&#xA; AND OC.CONTACT_ID =  @CONTACT_ID&#xD;&#xA; AND PAED.PLAN_ID = &#xD;&#xA;   CASE WHEN OCR.CONTACT_ROLE_VALUE = 'PAAG' THEN PAED.PLAN_ID &#xD;&#xA;    ELSE OC.PLAN_ID END &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT  DISTINCT P.*&#xD;&#xA;FROM  SGT_PERSON_ACCOUNT_PAYMENT_ELECTION PE&#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT PACC&#xD;&#xA;  ON PE.PERSON_ACCOUNT_ID = PACC.PERSON_ACCOUNT_ID AND PACC.PLAN_ID = CASE WHEN @PLAN_ID IN (12,13,15,16,17) THEN @PLAN_ID ELSE -99 END&#xD;&#xA; INNER JOIN SGT_PERSON P&#xD;&#xA;  ON PACC.PERSON_ID = P.PERSON_ID&#xD;&#xA; INNER JOIN SGT_ORG_CONTACT OC WITH(NOLOCK) &#xD;&#xA;  ON PACC.PLAN_ID = ISNULL(OC.PLAN_ID,PACC.PLAN_ID) AND OC.CONTACT_ID = @CONTACT_ID AND OC.ORG_ID = @ORG_ID&#xD;&#xA;WHERE PE.IBS_ORG_ID = @ORG_ID OR PE.IBS_SUPPLEMENTAL_ORG_ID = @ORG_ID&#xD;&#xA;ORDER BY PERSON_ID">
      <parameters>
        <parameter ID="@PLAN_ID" sfwDataType="int" />
        <parameter ID="@CONTACT_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadCases" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT CAS.*,USR.LAST_NAME + ', ' + USR.FIRST_NAME AS ACTION_BY_USER FROM SGT_CASE CAS&#xD;&#xA;LEFT JOIN SGS_USER USR ON USR.USER_SERIAL_ID=CAS.ACTION_BY&#xD;&#xA;WHERE CAS.PERSON_ID=@PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadAllRefundedEndedEmployment" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT SPE.*, ORG.* FROM SGT_PAYEE_ACCOUNT PAY WITH(NOLOCK) &#xA;INNER JOIN SGS_CODE_VALUE CV WITH(NOLOCK) ON PAY.BENEFIT_OPTION_ID = CV.CODE_ID AND CV.DATA2='RFND'&#xA;INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA WITH(NOLOCK) ON PAY.APPLICATION_ID=BAPA.BENEFIT_APPLICATION_ID AND BAPA.IS_APPLICATION_PERSON_ACCOUNT_FLAG='Y'&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED WITH(NOLOCK) ON BAPA.PERSON_ACCOUNT_ID=PAED.PERSON_ACCOUNT_ID&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK) ON PAED.PERSON_EMPLOYMENT_DTL_ID=PED.PERSON_EMPLOYMENT_DTL_ID&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT SPE WITH(NOLOCK) ON PED.PERSON_EMPLOYMENT_ID=SPE.PERSON_EMPLOYMENT_ID&#xA;INNER JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON SPE.ORG_ID=ORG.ORG_ID&#xA;WHERE &#xA;PAY.PAYEE_PERSLINK_ID IN &#xA;(&#xA;SELECT PER.PERSON_ID FROM SGT_PERSON PER WITH(NOLOCK) WHERE (WELCOME_BATCH_LETTER_SENT_FLAG IS NULL OR &#xA;WELCOME_BATCH_LETTER_SENT_FLAG = 'N') &#xA;AND EXISTS(SELECT * FROM SGT_PERSON_EMPLOYMENT EMP WITH(NOLOCK) WHERE EMP.PERSON_ID=PER.PERSON_ID)&#xA;AND SPE.ORG_ID NOT IN (SELECT ORG.ORG_ID FROM SGT_ORGANIZATION ORG &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGS_CODE_VALUE CV ON ORG.ORG_CODE = CV.DATA1 AND CV.CODE_ID = 7022 )&#xA;) AND&#xA;SPE.END_DATE IS NOT NULL AND&#xA;((DATEPART(WEEKDAY, @BATCHDATE)  = 6 AND SPE.START_DATE &lt;= DATEADD(DAY, 3,@BATCHDATE)) OR &#xA; ((DATEPART(WEEKDAY, @BATCHDATE)  &lt;&gt; 6 and (DATEPART(WEEKDAY, @BATCHDATE)  &lt;&gt; 7) and (DATEPART(WEEKDAY, @BATCHDATE) &lt;&gt; 8))&#xA;   AND SPE.START_DATE &lt;= DATEADD(DAY, 1, @BATCHDATE)))&#xA;ORDER BY SPE.PERSON_ID">
      <parameters>
        <parameter ID="@BATCHDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="MaritalStatusChangeBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgt_person WITH(NOLOCK) where &#xD;&#xA;MS_Change_batch_flag = 'Y'&#xD;&#xA;AND MARITAL_STATUS_VALUE != 'DVRC'">
      <parameters />
    </query>
    <query ID="GetPersonID" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select person_id,ISNULL(PeopleSoft_id,'') as PeopleSoft_id from sgt_person&#xD;&#xA;where ssn = @ssn">
      <parameters>
        <parameter ID="@ssn" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="CreateASIEligibilityFile" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="---FOR NON JOB SERVICE PLANS&#xA;SELECT * FROM &#xA;(&#xA;SELECT &#xA;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY SGT_BENEFIT_RHIC_COMBINE.PERSON_ID ORDER BY SGT_BENEFIT_RHIC_COMBINE.PERSON_ID,&#xA;&#x9;&#x9;CASE WHEN ADDRESS_TYPE_VALUE = 'TEMP' AND (SGT_PERSON_ADDRESS.END_DATE IS NULL OR SGT_PERSON_ADDRESS.END_DATE &gt; GETDATE() ) THEN 0&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND (SGT_PERSON_ADDRESS.END_DATE IS NULL OR SGT_PERSON_ADDRESS.END_DATE &gt; GETDATE() ) THEN 1&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND SGT_PERSON_ADDRESS.END_DATE IS NOT NULL AND UNDELIVERABLE_ADDRESS = 'Y' THEN 2&#xA;&#x9;&#x9;&#x9;ELSE 3 &#xA;&#x9;&#x9;END, SGT_PERSON_ADDRESS.END_DATE) AS SR_NO,&#xA;&#x9;&#x9;SGT_BENEFIT_RHIC_COMBINE.PERSON_ID, sgt_person_base.LAST_NAME, sgt_person_base.FIRST_NAME, sgt_person_base.MIDDLE_NAME, &#xA;        SGT_PERSON_ADDRESS.ADDR_LINE_1, SGT_PERSON_ADDRESS.ADDR_LINE_2, SGT_PERSON_ADDRESS.ADDR_CITY, SGT_PERSON_ADDRESS.ADDR_STATE_VALUE, &#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.ADDR_ZIP_CODE, SGT_PERSON_ADDRESS.ADDR_ZIP_4_CODE, SGS_CODE_VALUE.DESCRIPTION AS Country, SGT_PERSON_ADDRESS.FOREIGN_PROVINCE, &#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.FOREIGN_POSTAL_CODE, &#xA;&#x9;&#x9;CASE WHEN SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE IN ('APPR', 'CANC')&#xA;&#x9;&#x9;&#x9;THEN SGT_BENEFIT_RHIC_COMBINE.START_DATE &#xA;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;CASE WHEN SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE = 'ENDD'&#xA;&#x9;&#x9;&#x9;&#x9;THEN dateadd(d,1,SGT_BENEFIT_RHIC_COMBINE.END_DATE) END&#xA;&#x9;&#x9;END as START_DATE,&#xA;&#x9;&#x9;CASE WHEN SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE = 'APPR'&#xA;&#x9;&#x9;&#x9;&#x9;THEN SUM(SGT_BENEFIT_RHIC_COMBINE_DETAIL.RHIC_AMOUNT) &#xA;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;CASE WHEN SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE IN ('ENDD', 'CANC')&#xA;&#x9;&#x9;&#x9;&#x9;THEN 0 END&#xA;&#x9;&#x9;END as RHIC_AMOUNT,&#xA;&#x9;&#x9;'10' As DIVISION_CODE,&#xA;&#x9;&#x9;ROUTING_NO,&#xA;&#x9;&#x9;ACCOUNT_NUMBER,&#xA;&#x9;&#x9;BANK_ACCOUNT_TYPE_VALUE,&#xA;&#x9;&#x9;sgt_person_base.DATE_OF_DEATH&#xA;FROM&#xA;(SELECT PERSON_ID, max(BENEFIT_RHIC_COMBINE_ID) AS BENEFIT_RHIC_COMBINE_ID&#xA;FROM SGT_BENEFIT_RHIC_COMBINE&#xA;GROUP BY &#xA;&#x9;PERSON_ID) AS A&#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE ON SGT_BENEFIT_RHIC_COMBINE.BENEFIT_RHIC_COMBINE_ID = A.BENEFIT_RHIC_COMBINE_ID&#xA;&#x9;&#x9;INNER JOIN sgt_person_base ON SGT_BENEFIT_RHIC_COMBINE.PERSON_ID = sgt_person_base.PERSON_ID INNER JOIN&#xA;        SGT_PERSON_ADDRESS ON sgt_person_base.PERSON_ID = SGT_PERSON_ADDRESS.PERSON_ID INNER JOIN&#xA;        SGS_CODE_VALUE ON SGT_PERSON_ADDRESS.ADDR_COUNTRY_ID = SGS_CODE_VALUE.CODE_ID AND &#xA;        SGT_PERSON_ADDRESS.ADDR_COUNTRY_VALUE = SGS_CODE_VALUE.CODE_VALUE &#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL ON &#xA;        SGT_BENEFIT_RHIC_COMBINE.BENEFIT_RHIC_COMBINE_ID = SGT_BENEFIT_RHIC_COMBINE_DETAIL.BENEFIT_RHIC_COMBINE_ID &#xA;&#x9;&#x9;&#xA;&#x9;&#x9;INNER JOIN&#xA;        SGT_PAYEE_ACCOUNT ON SGT_BENEFIT_RHIC_COMBINE_DETAIL.DONAR_PAYEE_ACCOUNT_ID = SGT_PAYEE_ACCOUNT.PAYEE_ACCOUNT_ID INNER JOIN&#xA;        SGT_BENEFIT_APPLICATION ON SGT_PAYEE_ACCOUNT.APPLICATION_ID = SGT_BENEFIT_APPLICATION.BENEFIT_APPLICATION_ID &#xA;&#xA;&#x9;&#x9;LEFT JOIN &#xA;&#x9;&#x9;SGT_PAYEE_ACCOUNT_ACH_DETAIL ON SGT_PAYEE_ACCOUNT_ACH_DETAIL.PAYEE_ACCOUNT_ACH_DETAIL_ID = &#x9;&#x9;&#xA;&#x9;&#x9;&#x9;(SELECT TOP 1&#xA;&#x9;&#x9;&#x9;ACHDETAIL_MEMB.PAYEE_ACCOUNT_ACH_DETAIL_ID&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;SGT_PAYEE_ACCOUNT_ACH_DETAIL PAYEEACCT&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL RHICCOMBINEDETAIL ON PAYEEACCT.PAYEE_ACCOUNT_ID = RHICCOMBINEDETAIL.DONAR_PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;AND ISNULL(RHICCOMBINEDETAIL.COMBINE_FLAG, 'N') = 'Y'&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE RHICCOMBINE ON RHICCOMBINEDETAIL.BENEFIT_RHIC_COMBINE_ID = RHICCOMBINE.BENEFIT_RHIC_COMBINE_ID&#xA;&#x9;&#x9;&#x9;AND A.BENEFIT_RHIC_COMBINE_ID = RHICCOMBINE.BENEFIT_RHIC_COMBINE_ID &#xA;&#x9;&#x9;&#x9;OUTER APPLY&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT PACH.CREATED_DATE,PACH.PAYEE_ACCOUNT_ACH_DETAIL_ID,PACH.PRIMARY_ACCOUNT_FLAG,PA.PAYEE_PERSLINK_ID FROM SGT_PAYEE_ACCOUNT_ACH_DETAIL PACH&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PA ON PA.PAYEE_ACCOUNT_ID = PACH.PAYEE_ACCOUNT_ID AND PA.PAYEE_PERSLINK_ID = SGT_PERSON_BASE.PERSON_ID&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL RHICCOMBINEDETAIL ON PA.PAYEE_ACCOUNT_ID = RHICCOMBINEDETAIL.DONAR_PAYEE_ACCOUNT_ID AND ISNULL(RHICCOMBINEDETAIL.COMBINE_FLAG, 'N') = 'Y'&#xA;&#x9;&#x9;&#x9;&#x9;WHERE PRIMARY_ACCOUNT_FLAG = 'Y' AND ISNULL(ASI_SENT_FLAG,'N')='N'&#xA;&#xA;&#x9;&#x9;&#x9;) ACHDETAIL_MEMB&#xA;&#xA;&#x9;&#x9;&#x9;--OUTER APPLY&#xA;&#x9;&#x9;&#x9;--(&#xA;&#x9;&#x9;&#x9;--&#x9;SELECT PACH.CREATED_DATE,PACH.PAYEE_ACCOUNT_ACH_DETAIL_ID,PACH.PRIMARY_ACCOUNT_FLAG,PA.PAYEE_PERSLINK_ID FROM SGT_PAYEE_ACCOUNT_ACH_DETAIL PACH&#xA;&#x9;&#x9;&#x9;--&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xA;&#x9;&#x9;&#x9;--&#x9;ON PA.PAYEE_ACCOUNT_ID = PACH.PAYEE_ACCOUNT_ID AND PA.PAYEE_PERSLINK_ID != SGT_PERSON_BASE.PERSON_ID&#xA;&#x9;&#x9;&#x9;--&#x9;WHERE PA.PAYEE_ACCOUNT_ID = PAYEEACCT.PAYEE_ACCOUNT_ID AND PRIMARY_ACCOUNT_FLAG = 'Y' AND ISNULL(ASI_SENT_FLAG,'N')='N'&#xA;&#xA;&#x9;&#x9;&#x9;--) ACHDETAIL_CONT -- PIR 24187&#xA;&#x9;&#x9;&#x9;WHERE RHICCOMBINE.PERSON_ID = SGT_PERSON_BASE.PERSON_ID&#xA;&#x9;&#x9;&#x9;ORDER BY ACHDETAIL_MEMB.CREATED_DATE DESC--, ACHDETAIL_CONT.CREATED_DATE DESC -- PIR 24187&#xA;&#x9;&#x9;&#x9;) &#xA;&#x9;&#x9;LEFT JOIN SGT_ORGANIZATION ON ORG_ID = BANK_ORG_ID&#xA;&#xA;WHERE (SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE IN ('APPR','ENDD','CANC')) &#xA;&#x9;&#x9; AND (SGT_BENEFIT_APPLICATION.PLAN_ID in (1,2,3,4,5,7,20,24,25,26,27,28,29,30)) &#xA;&#x9;&#x9; AND (SGT_BENEFIT_RHIC_COMBINE_DETAIL.COMBINE_FLAG = 'Y')&#xA;&#x9;&#x9; AND (SGT_BENEFIT_RHIC_COMBINE.END_DATE IS NULL OR&#xA;&#x9;&#x9;  (SGT_BENEFIT_RHIC_COMBINE.END_DATE IS NOT NULL) AND dateadd(d,30,SGT_BENEFIT_RHIC_COMBINE.MODIFIED_DATE) &gt;= getdate())&#xA;&#x9;&#x9;  &#xA;GROUP BY SGT_BENEFIT_RHIC_COMBINE.PERSON_ID, sgt_person_base.LAST_NAME, sgt_person_base.FIRST_NAME, sgt_person_base.MIDDLE_NAME, &#xA;                      SGT_PERSON_ADDRESS.ADDR_LINE_1, SGT_PERSON_ADDRESS.ADDR_LINE_2, SGT_PERSON_ADDRESS.ADDR_CITY, &#xA;                      SGT_PERSON_ADDRESS.ADDR_STATE_VALUE, SGT_PERSON_ADDRESS.ADDR_ZIP_CODE, SGT_PERSON_ADDRESS.ADDR_ZIP_4_CODE, &#xA;                      SGS_CODE_VALUE.DESCRIPTION, SGT_PERSON_ADDRESS.FOREIGN_PROVINCE, SGT_PERSON_ADDRESS.FOREIGN_POSTAL_CODE, &#xA;                      SGT_BENEFIT_RHIC_COMBINE.START_DATE,SGT_PERSON_ADDRESS.ADDRESS_TYPE_VALUE,SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  SGT_BENEFIT_RHIC_COMBINE.BENEFIT_RHIC_COMBINE_ID,SGT_BENEFIT_RHIC_COMBINE.END_DATE,SGT_PERSON_ADDRESS.END_DATE,SGT_PERSON_ADDRESS.UNDELIVERABLE_ADDRESS,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ROUTING_NO,ACCOUNT_NUMBER,BANK_ACCOUNT_TYPE_VALUE,sgt_person_base.DATE_OF_DEATH&#xA;&#xA;) TEMP&#x9;&#xA;WHERE SR_NO = 1 &#xA;&#xA;UNION&#xA;&#xA;SELECT * FROM &#xA;(&#xA;SELECT &#xA;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY SGT_BENEFIT_RHIC_COMBINE.PERSON_ID ORDER BY SGT_BENEFIT_RHIC_COMBINE.PERSON_ID,&#xA;&#x9;&#x9;CASE WHEN ADDRESS_TYPE_VALUE = 'TEMP' AND (SGT_PERSON_ADDRESS.END_DATE IS NULL OR SGT_PERSON_ADDRESS.END_DATE &gt; GETDATE())  THEN 0&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND (SGT_PERSON_ADDRESS.END_DATE IS NULL OR SGT_PERSON_ADDRESS.END_DATE &gt; GETDATE() ) THEN 1&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND SGT_PERSON_ADDRESS.END_DATE IS NOT NULL AND UNDELIVERABLE_ADDRESS = 'Y' THEN 2&#xA;&#x9;&#x9;&#x9;ELSE 3 &#xA;&#x9;&#x9;END, SGT_PERSON_ADDRESS.END_DATE) AS SR_NO,&#xA;&#x9;&#x9;SGT_BENEFIT_RHIC_COMBINE.PERSON_ID, sgt_person_base.LAST_NAME, sgt_person_base.FIRST_NAME, sgt_person_base.MIDDLE_NAME, &#xA;        SGT_PERSON_ADDRESS.ADDR_LINE_1, SGT_PERSON_ADDRESS.ADDR_LINE_2, SGT_PERSON_ADDRESS.ADDR_CITY, SGT_PERSON_ADDRESS.ADDR_STATE_VALUE, &#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.ADDR_ZIP_CODE, SGT_PERSON_ADDRESS.ADDR_ZIP_4_CODE, SGS_CODE_VALUE.DESCRIPTION AS Country, SGT_PERSON_ADDRESS.FOREIGN_PROVINCE, &#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.FOREIGN_POSTAL_CODE, &#xA;&#x9;&#x9;CASE WHEN SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE IN ('APPR', 'CANC')&#xA;&#x9;&#x9;&#x9;THEN SGT_BENEFIT_RHIC_COMBINE.START_DATE &#xA;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;CASE WHEN SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE = 'ENDD'&#xA;&#x9;&#x9;&#x9;&#x9;THEN dateadd(d,1,SGT_BENEFIT_RHIC_COMBINE.END_DATE) END&#xA;&#x9;&#x9;END as START_DATE,&#xA;&#x9;&#x9;CASE WHEN SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE = 'APPR'&#xA;&#x9;&#x9;&#x9;THEN SUM(SGT_BENEFIT_RHIC_COMBINE_DETAIL.RHIC_AMOUNT)&#xA;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;CASE WHEN SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE IN ('ENDD', 'CANC')&#xA;&#x9;&#x9;&#x9;&#x9;THEN 0 END&#xA;&#x9;&#x9;END as RHIC_AMOUNT,&#xA;&#x9;&#x9;'20' As DIVISION_CODE&#xA;&#x9;&#x9;,&#xA;&#x9;&#x9;ROUTING_NO,&#xA;&#x9;&#x9;ACCOUNT_NUMBER,&#xA;&#x9;&#x9;BANK_ACCOUNT_TYPE_VALUE,&#xA;&#x9;&#x9;sgt_person_base.DATE_OF_DEATH&#xA;FROM&#xA;(SELECT PERSON_ID, max(BENEFIT_RHIC_COMBINE_ID) AS BENEFIT_RHIC_COMBINE_ID&#xA;FROM SGT_BENEFIT_RHIC_COMBINE&#xA;GROUP BY &#xA;&#x9;PERSON_ID) AS A&#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE ON SGT_BENEFIT_RHIC_COMBINE.BENEFIT_RHIC_COMBINE_ID = A.BENEFIT_RHIC_COMBINE_ID&#xA;&#x9;&#x9;INNER JOIN sgt_person_base ON SGT_BENEFIT_RHIC_COMBINE.PERSON_ID = sgt_person_base.PERSON_ID INNER JOIN&#xA;        SGT_PERSON_ADDRESS ON sgt_person_base.PERSON_ID = SGT_PERSON_ADDRESS.PERSON_ID INNER JOIN&#xA;        SGS_CODE_VALUE ON SGT_PERSON_ADDRESS.ADDR_COUNTRY_ID = SGS_CODE_VALUE.CODE_ID AND &#xA;        SGT_PERSON_ADDRESS.ADDR_COUNTRY_VALUE = SGS_CODE_VALUE.CODE_VALUE INNER JOIN&#xA;        SGT_BENEFIT_RHIC_COMBINE_DETAIL ON &#xA;        SGT_BENEFIT_RHIC_COMBINE.BENEFIT_RHIC_COMBINE_ID = SGT_BENEFIT_RHIC_COMBINE_DETAIL.BENEFIT_RHIC_COMBINE_ID INNER JOIN&#xA;        SGT_PAYEE_ACCOUNT ON SGT_BENEFIT_RHIC_COMBINE_DETAIL.DONAR_PAYEE_ACCOUNT_ID = SGT_PAYEE_ACCOUNT.PAYEE_ACCOUNT_ID INNER JOIN&#xA;        SGT_BENEFIT_APPLICATION ON SGT_PAYEE_ACCOUNT.APPLICATION_ID = SGT_BENEFIT_APPLICATION.BENEFIT_APPLICATION_ID&#xA;&#x9;&#x9;LEFT JOIN SGT_PAYEE_ACCOUNT_ACH_DETAIL ON SGT_BENEFIT_RHIC_COMBINE_DETAIL.DONAR_PAYEE_ACCOUNT_ID = SGT_PAYEE_ACCOUNT_ACH_DETAIL.PAYEE_ACCOUNT_ID AND SGT_PAYEE_ACCOUNT_ACH_DETAIL.PAYEE_ACCOUNT_ACH_DETAIL_ID = &#xA;&#x9;&#x9;&#x9;(SELECT TOP 1&#xA;&#x9;&#x9;&#x9;ACHDETAIL_MEMB.PAYEE_ACCOUNT_ACH_DETAIL_ID &#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;SGT_PAYEE_ACCOUNT PAYEEACCT&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL RHICCOMBINEDETAIL ON PAYEEACCT.PAYEE_ACCOUNT_ID = RHICCOMBINEDETAIL.DONAR_PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;AND ISNULL(RHICCOMBINEDETAIL.COMBINE_FLAG, 'N') = 'Y'&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE RHICCOMBINE ON RHICCOMBINEDETAIL.BENEFIT_RHIC_COMBINE_ID = RHICCOMBINE.BENEFIT_RHIC_COMBINE_ID&#xA;&#x9;&#x9;&#x9;AND A.BENEFIT_RHIC_COMBINE_ID = RHICCOMBINE.BENEFIT_RHIC_COMBINE_ID &#xA;&#x9;&#x9;&#x9;OUTER APPLY&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT PACH.CREATED_DATE,PACH.PAYEE_ACCOUNT_ACH_DETAIL_ID,PACH.PRIMARY_ACCOUNT_FLAG,PA.PAYEE_PERSLINK_ID FROM SGT_PAYEE_ACCOUNT_ACH_DETAIL PACH&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PA ON PA.PAYEE_ACCOUNT_ID = PACH.PAYEE_ACCOUNT_ID AND PA.PAYEE_PERSLINK_ID = SGT_PERSON_BASE.PERSON_ID &#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL RHICCOMBINEDETAIL ON PAYEEACCT.PAYEE_ACCOUNT_ID = RHICCOMBINEDETAIL.DONAR_PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;AND ISNULL(RHICCOMBINEDETAIL.COMBINE_FLAG, 'N') = 'Y'&#xA;&#x9;&#x9;&#x9;&#x9;WHERE PA.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PRIMARY_ACCOUNT_FLAG = 'Y' AND ISNULL(ASI_SENT_FLAG,'N')='N'&#xA;&#xA;&#x9;&#x9;&#x9;) ACHDETAIL_MEMB&#xA;&#x9;&#x9;&#x9;--OUTER APPLY&#xA;&#x9;&#x9;&#x9;--(&#xA;&#x9;&#x9;&#x9;--&#x9;SELECT PACH.CREATED_DATE,PACH.PAYEE_ACCOUNT_ACH_DETAIL_ID,PACH.PRIMARY_ACCOUNT_FLAG,PA.PAYEE_PERSLINK_ID FROM SGT_PAYEE_ACCOUNT_ACH_DETAIL PACH&#xA;&#x9;&#x9;&#x9;--&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PA&#xA;&#x9;&#x9;&#x9;--&#x9;ON PA.PAYEE_ACCOUNT_ID = PACH.PAYEE_ACCOUNT_ID AND PA.PAYEE_PERSLINK_ID != SGT_PERSON_BASE.PERSON_ID&#xA;&#x9;&#x9;&#x9;--&#x9;WHERE PA.PAYEE_ACCOUNT_ID = PAYEEACCT.PAYEE_ACCOUNT_ID AND PRIMARY_ACCOUNT_FLAG = 'Y'  AND ISNULL(ASI_SENT_FLAG,'N')='N'&#xA;&#xA;&#x9;&#x9;&#x9;--) ACHDETAIL_CONT -- PIR 24187&#xA;&#x9;&#x9;&#x9;WHERE RHICCOMBINE.PERSON_ID = SGT_PERSON_BASE.PERSON_ID&#xA;&#x9;&#x9;&#x9;ORDER BY ACHDETAIL_MEMB.CREATED_DATE DESC--, ACHDETAIL_CONT.CREATED_DATE DESC -- PIR 24187&#xA;&#x9;&#x9;&#x9;) &#xA;&#x9;&#x9;&#x9;LEFT JOIN SGT_ORGANIZATION ON ORG_ID = BANK_ORG_ID&#xA;WHERE (SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE IN ('APPR','ENDD','CANC')) &#xA;&#x9;&#x9; AND (SGT_BENEFIT_APPLICATION.PLAN_ID in (6,23)) &#xA;&#x9;&#x9; AND (SGT_BENEFIT_RHIC_COMBINE_DETAIL.COMBINE_FLAG = 'Y')&#xA;&#x9;&#x9; AND (SGT_BENEFIT_RHIC_COMBINE.END_DATE IS NULL OR&#xA;&#x9;&#x9;  (SGT_BENEFIT_RHIC_COMBINE.END_DATE IS NOT NULL) AND dateadd(d,30,SGT_BENEFIT_RHIC_COMBINE.MODIFIED_DATE) &gt;= getdate())&#xA;GROUP BY SGT_BENEFIT_RHIC_COMBINE.PERSON_ID, sgt_person_base.LAST_NAME, sgt_person_base.FIRST_NAME, sgt_person_base.MIDDLE_NAME, &#xA;                      SGT_PERSON_ADDRESS.ADDR_LINE_1, SGT_PERSON_ADDRESS.ADDR_LINE_2, SGT_PERSON_ADDRESS.ADDR_CITY, &#xA;                      SGT_PERSON_ADDRESS.ADDR_STATE_VALUE, SGT_PERSON_ADDRESS.ADDR_ZIP_CODE, SGT_PERSON_ADDRESS.ADDR_ZIP_4_CODE, &#xA;                      SGS_CODE_VALUE.DESCRIPTION, SGT_PERSON_ADDRESS.FOREIGN_PROVINCE, SGT_PERSON_ADDRESS.FOREIGN_POSTAL_CODE, &#xA;                      SGT_BENEFIT_RHIC_COMBINE.START_DATE,SGT_PERSON_ADDRESS.ADDRESS_TYPE_VALUE,SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  SGT_BENEFIT_RHIC_COMBINE.BENEFIT_RHIC_COMBINE_ID,SGT_BENEFIT_RHIC_COMBINE.END_DATE,SGT_PERSON_ADDRESS.END_DATE,SGT_PERSON_ADDRESS.UNDELIVERABLE_ADDRESS,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ROUTING_NO,ACCOUNT_NUMBER,BANK_ACCOUNT_TYPE_VALUE, sgt_person_base.DATE_OF_DEATH&#xA;) TEMP&#x9;&#xA;WHERE SR_NO = 1 &#xA;ORDER BY PERSON_ID">
      <parameters />
    </query>
    <query ID="CreateASIClaimsFile" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;SELECT SGT_IBS_DETAIL.PERSON_ID AS PERSON_ID, SGT_IBS_DETAIL.BILLING_MONTH_AND_YEAR, SUM(SGT_IBS_DETAIL.TOTAL_PREMIUM_AMOUNT) AS TOTAL_PREMIUM, &#xD;&#xA;SGT_PERSON_BASE.LAST_NAME, SGT_PERSON_BASE.FIRST_NAME, SGT_PERSON_BASE.MIDDLE_NAME &#xD;&#xA;FROM SGT_IBS_HEADER INNER JOIN&#xD;&#xA;     SGT_IBS_DETAIL ON SGT_IBS_HEADER.IBS_HEADER_ID = SGT_IBS_DETAIL.IBS_HEADER_ID AND ISNULL(SGT_IBS_DETAIL.DETAIL_STATUS_VALUE, '') &lt;&gt; 'IGNR' INNER JOIN&#xD;&#xA;     SGT_PERSON_BASE ON SGT_IBS_DETAIL.PERSON_ID = SGT_PERSON_BASE.PERSON_ID&#xD;&#xA;WHERE (SGT_IBS_DETAIL.CREATED_DATE &lt;= @CURRENTDATETIME) AND (SGT_IBS_DETAIL.RHIC_SENT = 'N') &#xD;&#xA;AND (SGT_IBS_DETAIL.PLAN_ID IN (9, 12, 16, 17)) AND &#xD;&#xA;((SGT_IBS_DETAIL.BILLING_MONTH_AND_YEAR &gt;= CONVERT(DATETIME, '2015-07-01 00:00:00', 102)))&#xD;&#xA;AND &#xD;&#xA;EXISTS (SELECT 'X' &#xD;&#xA;&#x9;FROM SGT_BENEFIT_RHIC_COMBINE &#xD;&#xA;&#x9;WHERE PERSON_ID = SGT_IBS_DETAIL.PERSON_ID AND&#xD;&#xA;&#x9;&#x9;((SGT_IBS_DETAIL.BILLING_MONTH_AND_YEAR BETWEEN SGT_BENEFIT_RHIC_COMBINE.START_DATE AND SGT_BENEFIT_RHIC_COMBINE.END_DATE AND SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE IN ('ENDD','CANC'))&#xD;&#xA;&#x9;&#x9;OR&#xD;&#xA;&#x9;&#x9;(SGT_IBS_DETAIL.BILLING_MONTH_AND_YEAR BETWEEN SGT_BENEFIT_RHIC_COMBINE.START_DATE AND '12/31/2999' AND SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE = 'APPR'))&#xD;&#xA;&#x9;&#x9;)&#xD;&#xA;GROUP BY SGT_IBS_DETAIL.PERSON_ID, SGT_IBS_DETAIL.BILLING_MONTH_AND_YEAR, SGT_PERSON_BASE.LAST_NAME, SGT_PERSON_BASE.FIRST_NAME,SGT_PERSON_BASE.MIDDLE_NAME &#xD;&#xA;ORDER BY SGT_IBS_DETAIL.PERSON_ID">
      <parameters>
        <parameter ID="@CURRENTDATETIME" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="Update_RHIC_SENT_Flag" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Update SGT_IBS_DETAIL SET SGT_IBS_DETAIL.RHIC_SENT='Y' Where (SGT_IBS_DETAIL.CREATED_DATE &lt;= @CURRENTDATETIME) and SGT_IBS_DETAIL.IBS_DETAIL_ID In &#xD;&#xA; (  &#xD;&#xA;    Select distinct IBS_DETAIL_ID from&#xD;&#xA;    ( &#xD;&#xA;&#xD;&#xA;&#x9;&#x9;SELECT SGT_IBS_DETAIL.IBS_DETAIL_ID,SGT_IBS_DETAIL.PERSON_ID AS PERSON_ID, SGT_IBS_DETAIL.BILLING_MONTH_AND_YEAR, SUM(SGT_IBS_DETAIL.TOTAL_PREMIUM_AMOUNT) AS TOTAL_PREMIUM, &#xD;&#xA;&#x9;&#x9;SGT_PERSON_BASE.LAST_NAME, SGT_PERSON_BASE.FIRST_NAME, SGT_PERSON_BASE.MIDDLE_NAME &#xD;&#xA;&#x9;&#x9;FROM SGT_IBS_HEADER INNER JOIN&#xD;&#xA;&#x9;&#x9;&#x9; SGT_IBS_DETAIL ON SGT_IBS_HEADER.IBS_HEADER_ID = SGT_IBS_DETAIL.IBS_HEADER_ID AND ISNULL(SGT_IBS_DETAIL.DETAIL_STATUS_VALUE, '') &lt;&gt; 'IGNR' INNER JOIN&#xD;&#xA;&#x9;&#x9;&#x9; SGT_PERSON_BASE ON SGT_IBS_DETAIL.PERSON_ID = SGT_PERSON_BASE.PERSON_ID&#xD;&#xA;&#x9;&#x9;WHERE (SGT_IBS_DETAIL.CREATED_DATE &lt;= @CURRENTDATETIME) AND (SGT_IBS_DETAIL.RHIC_SENT = 'N') &#xD;&#xA;&#x9;&#x9;AND (SGT_IBS_DETAIL.PLAN_ID IN (9, 12, 16, 17)) AND &#xD;&#xA;&#x9;&#x9;((SGT_IBS_DETAIL.BILLING_MONTH_AND_YEAR &gt;= CONVERT(DATETIME, '2015-07-01 00:00:00', 102)))&#xD;&#xA;&#x9;&#x9;AND EXISTS (SELECT 'X' FROM SGT_BENEFIT_RHIC_COMBINE WHERE PERSON_ID = SGT_IBS_DETAIL.PERSON_ID AND&#xD;&#xA;&#x9;&#x9;((SGT_IBS_DETAIL.BILLING_MONTH_AND_YEAR BETWEEN SGT_BENEFIT_RHIC_COMBINE.START_DATE AND SGT_BENEFIT_RHIC_COMBINE.END_DATE AND SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE IN ('ENDD','CANC'))&#xD;&#xA;&#x9;&#x9;OR&#xD;&#xA;&#x9;&#x9;(SGT_IBS_DETAIL.BILLING_MONTH_AND_YEAR BETWEEN SGT_BENEFIT_RHIC_COMBINE.START_DATE AND '12/31/2999' AND SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE = 'APPR'))&#xD;&#xA;&#x9;&#x9;)&#xD;&#xA;&#x9;&#x9;GROUP BY SGT_IBS_DETAIL.IBS_DETAIL_ID,SGT_IBS_DETAIL.PERSON_ID, SGT_IBS_DETAIL.BILLING_MONTH_AND_YEAR, SGT_PERSON_BASE.LAST_NAME, SGT_PERSON_BASE.FIRST_NAME,SGT_PERSON_BASE.MIDDLE_NAME)temp&#xD;&#xA;  &#xD;&#xA; )&#xD;&#xA;&#xD;&#xA; ">
      <parameters>
        <parameter ID="@CURRENTDATETIME" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="MissingMandatoryPlanEnrollments" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('tempdb..#TEMPRET') IS NOT NULL&#xD;&#xA;    DROP TABLE #TEMPRET&#xD;&#xA;&#xD;&#xA;IF OBJECT_ID('tempdb..#TEMPINS') IS NOT NULL&#xD;&#xA;    DROP TABLE #TEMPINS&#xD;&#xA;&#xD;&#xA;select DISTINCT EM.PERSON_ID &#xD;&#xA;INTO #TEMPRET&#xD;&#xA;from SGT_PERSON_EMPLOYMENT EM&#xD;&#xA;JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMD ON EM.PERSON_EMPLOYMENT_ID= EMD.PERSON_EMPLOYMENT_ID&#xD;&#xA;JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAE ON PAE.PERSON_EMPLOYMENT_DTL_ID = EMD.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;JOIN SGT_PLAN PL ON PL.PLAN_ID = PAE.PLAN_ID&#xD;&#xA;where PL.BENEFIT_TYPE_VALUE = 'RETR'&#xD;&#xA;AND EMD.PERSON_EMPLOYMENT_DTL_ID =&#xD;&#xA;(&#xD;&#xA;&#x9;SELECT MAX(PERSON_EMPLOYMENT_DTL_ID)&#xD;&#xA;&#x9;FROM SGT_PERSON_EMPLOYMENT_DETAIL PED&#xD;&#xA;&#x9;JOIN SGT_PERSON_EMPLOYMENT PE ON PE.PERSON_EMPLOYMENT_ID= PED.PERSON_EMPLOYMENT_ID&#xD;&#xA;&#x9;WHERE PE.PERSON_ID = EM.PERSON_ID&#xD;&#xA;)&#xD;&#xA;GROUP BY EM.PERSON_ID&#xD;&#xA;HAVING COUNT(PAE.PERSON_ACCOUNT_ID) = 0 -- take all persons who are not enrolled in any retirement plan&#xD;&#xA;&#xD;&#xA;select DISTINCT EM.PERSON_ID &#xD;&#xA;INTO #TEMPINS&#xD;&#xA;from SGT_PERSON_EMPLOYMENT EM&#xD;&#xA;JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMD ON EM.PERSON_EMPLOYMENT_ID= EMD.PERSON_EMPLOYMENT_ID&#xD;&#xA;JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAE ON PAE.PERSON_EMPLOYMENT_DTL_ID = EMD.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;JOIN SGT_PLAN PL ON PL.PLAN_ID = PAE.PLAN_ID&#xD;&#xA;where PL.BENEFIT_TYPE_VALUE = 'INSR'&#xD;&#xA;AND PL.PLAN_ID IN (13,14)&#xD;&#xA;AND EMD.PERSON_EMPLOYMENT_DTL_ID =&#xD;&#xA;(&#xD;&#xA;&#x9;SELECT MAX(PERSON_EMPLOYMENT_DTL_ID)&#xD;&#xA;&#x9;FROM SGT_PERSON_EMPLOYMENT_DETAIL PED&#xD;&#xA;&#x9;JOIN SGT_PERSON_EMPLOYMENT PE ON PE.PERSON_EMPLOYMENT_ID= PED.PERSON_EMPLOYMENT_ID&#xD;&#xA;&#x9;WHERE PE.PERSON_ID = EM.PERSON_ID&#xD;&#xA;)&#xD;&#xA;GROUP BY EM.PERSON_ID&#xD;&#xA;HAVING COUNT(PAE.PERSON_ACCOUNT_ID) &gt; 0&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT &#xD;&#xA;&#x9;  sgt_person_base.PERSON_ID, CONCAT(sgt_person_base.LAST_NAME, ', ', sgt_person_base.FIRST_NAME, ' ', sgt_person_base.MIDDLE_NAME) AS Name, &#xD;&#xA;      sgt_organization.ORG_CODE, SGT_PERSON_EMPLOYMENT_DETAIL.START_DATE, SGS_CODE_VALUE.DESCRIPTION AS 'JOB CLASS', &#xD;&#xA;      SGS_CODE_VALUE_1.DESCRIPTION AS 'JOB STATUS', SGT_PLAN.PLAN_NAME AS 'PLAN', SGS_CODE_VALUE_2.DESCRIPTION AS 'JOB TYPE'&#xD;&#xA;FROM  SGS_CODE_VALUE AS SGS_CODE_VALUE_1 INNER JOIN&#xD;&#xA;      SGS_CODE_VALUE INNER JOIN&#xD;&#xA;      SGT_PLAN INNER JOIN&#xD;&#xA;      SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL INNER JOIN&#xD;&#xA;      SGT_PERSON_EMPLOYMENT_DETAIL ON &#xD;&#xA;      SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_DTL_ID = SGT_PERSON_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_DTL_ID INNER JOIN&#xD;&#xA;      SGT_PERSON_EMPLOYMENT ON &#xD;&#xA;      SGT_PERSON_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_ID = SGT_PERSON_EMPLOYMENT.PERSON_EMPLOYMENT_ID INNER JOIN&#xD;&#xA;      sgt_organization ON SGT_PERSON_EMPLOYMENT.ORG_ID = sgt_organization.ORG_ID INNER JOIN&#xD;&#xA;      sgt_person_base ON SGT_PERSON_EMPLOYMENT.PERSON_ID = sgt_person_base.PERSON_ID ON &#xD;&#xA;      SGT_PLAN.PLAN_ID = SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PLAN_ID ON &#xD;&#xA;      SGS_CODE_VALUE.CODE_ID = SGT_PERSON_EMPLOYMENT_DETAIL.JOB_CLASS_ID AND &#xD;&#xA;      SGS_CODE_VALUE.CODE_VALUE = SGT_PERSON_EMPLOYMENT_DETAIL.JOB_CLASS_VALUE ON &#xD;&#xA;      SGS_CODE_VALUE_1.CODE_ID = SGT_PERSON_EMPLOYMENT_DETAIL.STATUS_ID AND &#xD;&#xA;      SGS_CODE_VALUE_1.CODE_VALUE = SGT_PERSON_EMPLOYMENT_DETAIL.STATUS_VALUE INNER JOIN&#xD;&#xA;      SGS_CODE_VALUE AS SGS_CODE_VALUE_2 ON SGT_PERSON_EMPLOYMENT_DETAIL.TYPE_ID = SGS_CODE_VALUE_2.CODE_ID AND &#xD;&#xA;      SGT_PERSON_EMPLOYMENT_DETAIL.TYPE_VALUE = SGS_CODE_VALUE_2.CODE_VALUE&#xD;&#xA;WHERE (SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PERSON_ACCOUNT_ID IS NULL) &#xD;&#xA;&#x9;  AND (SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PLAN_ID IN (1, 2, 3, 4, 5, 6, 20, 26,27,29)) &#xD;&#xA;&#x9; AND (GETDATE() &gt;= DATEADD(DAY, 31, SGT_PERSON_EMPLOYMENT_DETAIL.START_DATE)) &#xD;&#xA;&#x9;  AND (SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.ELECTION_VALUE IS NULL)&#xD;&#xA;&#x9;  AND (SGT_PERSON_EMPLOYMENT_DETAIL.END_DATE IS NULL)&#xD;&#xA;&#x9;  -- AND (SGT_PERSON_EMPLOYMENT_DETAIL.TYPE_VALUE = 'PERM')&#xD;&#xA;&#x9;  AND (SGT_PERSON_EMPLOYMENT_DETAIL.STATUS_VALUE = 'CONT')&#xD;&#xA;&#x9;  AND sgt_person_base.PERSON_ID IN (SELECT PERSON_ID FROM #TEMPRET)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT &#xD;&#xA;&#x9;  sgt_person_base.PERSON_ID, CONCAT(sgt_person_base.LAST_NAME, ', ', sgt_person_base.FIRST_NAME, ' ', sgt_person_base.MIDDLE_NAME) AS Name, &#xD;&#xA;      sgt_organization.ORG_CODE, SGT_PERSON_EMPLOYMENT_DETAIL.START_DATE, SGS_CODE_VALUE.DESCRIPTION AS 'JOB CLASS', &#xD;&#xA;      SGS_CODE_VALUE_1.DESCRIPTION AS 'JOB STATUS', SGT_PLAN.PLAN_NAME AS 'PLAN', SGS_CODE_VALUE_2.DESCRIPTION AS 'JOB TYPE'&#xD;&#xA;FROM  SGS_CODE_VALUE AS SGS_CODE_VALUE_1 INNER JOIN&#xD;&#xA;      SGS_CODE_VALUE INNER JOIN&#xD;&#xA;      SGT_PLAN INNER JOIN&#xD;&#xA;      SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL INNER JOIN&#xD;&#xA;      SGT_PERSON_EMPLOYMENT_DETAIL ON &#xD;&#xA;      SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_DTL_ID = SGT_PERSON_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_DTL_ID INNER JOIN&#xD;&#xA;      SGT_PERSON_EMPLOYMENT ON &#xD;&#xA;      SGT_PERSON_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_ID = SGT_PERSON_EMPLOYMENT.PERSON_EMPLOYMENT_ID INNER JOIN&#xD;&#xA;      sgt_organization ON SGT_PERSON_EMPLOYMENT.ORG_ID = sgt_organization.ORG_ID INNER JOIN&#xD;&#xA;      sgt_person_base ON SGT_PERSON_EMPLOYMENT.PERSON_ID = sgt_person_base.PERSON_ID ON &#xD;&#xA;      SGT_PLAN.PLAN_ID = SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PLAN_ID ON &#xD;&#xA;      SGS_CODE_VALUE.CODE_ID = SGT_PERSON_EMPLOYMENT_DETAIL.JOB_CLASS_ID AND &#xD;&#xA;      SGS_CODE_VALUE.CODE_VALUE = SGT_PERSON_EMPLOYMENT_DETAIL.JOB_CLASS_VALUE ON &#xD;&#xA;      SGS_CODE_VALUE_1.CODE_ID = SGT_PERSON_EMPLOYMENT_DETAIL.STATUS_ID AND &#xD;&#xA;      SGS_CODE_VALUE_1.CODE_VALUE = SGT_PERSON_EMPLOYMENT_DETAIL.STATUS_VALUE INNER JOIN&#xD;&#xA;      SGS_CODE_VALUE AS SGS_CODE_VALUE_2 ON SGT_PERSON_EMPLOYMENT_DETAIL.TYPE_ID = SGS_CODE_VALUE_2.CODE_ID AND &#xD;&#xA;      SGT_PERSON_EMPLOYMENT_DETAIL.TYPE_VALUE = SGS_CODE_VALUE_2.CODE_VALUE&#xD;&#xA;&#xD;&#xA;&#x9;  LEFT JOIN ( SELECT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LIFEACT.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,LIFEPERACTDTL.PLAN_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,LIFEPERACTDTL.PERSON_EMPLOYMENT_DTL_ID FROM SGT_PERSON_ACCOUNT LIFEACT WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL LIFEPERACTDTL WITH(NOLOCK) ON LIFEACT.PERSON_ACCOUNT_ID =  LIFEPERACTDTL.PERSON_ACCOUNT_ID&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  AND LIFEACT.PLAN_ID = 13 AND LIFEPERACTDTL.ELECTION_VALUE = 'ENLD' AND LIFEACT.PLAN_PARTICIPATION_STATUS_VALUE LIKE '%ENL%'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;) LIFEPERACT ON LIFEPERACT.PERSON_ID = sgt_person_base.PERSON_ID AND LIFEPERACT.PERSON_EMPLOYMENT_DTL_ID != SGT_PERSON_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_DTL_ID AND LIFEPERACT.PLAN_ID = 13&#xD;&#xA;&#x9;  LEFT JOIN ( SELECT &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;EAPACT.PERSON_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,EAPPERACTDTL.PLAN_ID&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,EAPPERACTDTL.PERSON_EMPLOYMENT_DTL_ID FROM SGT_PERSON_ACCOUNT EAPACT WITH(NOLOCK)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL EAPPERACTDTL WITH(NOLOCK) ON EAPACT.PERSON_ACCOUNT_ID =  EAPPERACTDTL.PERSON_ACCOUNT_ID&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  AND EAPACT.PLAN_ID = 14 AND EAPPERACTDTL.ELECTION_VALUE = 'ENLD' AND EAPACT.PLAN_PARTICIPATION_STATUS_VALUE LIKE '%ENL%'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;) EAPPERACT ON EAPPERACT.PERSON_ID = sgt_person_base.PERSON_ID AND EAPPERACT.PERSON_EMPLOYMENT_DTL_ID != SGT_PERSON_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_DTL_ID AND EAPPERACT.PLAN_ID = 14&#xD;&#xA;&#xD;&#xA;WHERE (SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PERSON_ACCOUNT_ID IS NULL) &#xD;&#xA;&#x9;  AND (SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PLAN_ID IN (13, 14)) &#xD;&#xA;&#x9;  AND (GETDATE() &gt;= DATEADD(DAY, 31, SGT_PERSON_EMPLOYMENT_DETAIL.START_DATE)) &#xD;&#xA;&#x9;  AND (SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.ELECTION_VALUE IS NULL)&#xD;&#xA;&#x9;  AND (SGT_PERSON_EMPLOYMENT_DETAIL.END_DATE IS NULL)&#xD;&#xA;&#x9;  AND (SGT_PERSON_EMPLOYMENT_DETAIL.TYPE_VALUE = 'PERM')&#xD;&#xA;&#x9;  -- AND (SGT_PERSON_EMPLOYMENT_DETAIL.STATUS_VALUE = 'CONT')&#xD;&#xA;&#x9;  AND sgt_person_base.PERSON_ID NOT IN (SELECT PERSON_ID FROM #TEMPINS)&#xD;&#xA;&#x9;  AND (LIFEPERACT.PERSON_EMPLOYMENT_DTL_ID IS NULL OR EAPPERACT.PERSON_EMPLOYMENT_DTL_ID IS NULL)&#xD;&#xA;&#xD;&#xA;ORDER BY sgt_organization.ORG_CODE,Name">
      <parameters />
    </query>
    <query ID="CreateESIMedicarePartDEnrollmentFile" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT DISTINCT&#xA;&#x9;SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ID,&#xA;&#x9;SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.RECORD_TYPE_FLAG, -- AS RECORD_TYPE,&#xA;&#x9;CONVERT(CHAR(8), SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ID, 0) AS PERSON_ID,&#xA;&#x9;sgt_person_base.FIRST_NAME,  -- AS FIRST_NAME, &#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN sgt_person_base.MIDDLE_NAME IS NOT NULL THEN LEFT(sgt_person_base.MIDDLE_NAME, 1)&#xA;&#x9;&#x9;ELSE ' '&#xA;&#x9;END AS MI,&#xA;&#x9;sgt_person_base.LAST_NAME, -- AS LAST_NAME,&#xA;&#x9;CONVERT(CHAR(8), sgt_person_base.DATE_OF_BIRTH, 112) AS DOB,&#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN sgt_person_base.GENDER_VALUE = 'MALE' THEN 1&#xA;&#x9;&#x9;WHEN sgt_person_base.GENDER_VALUE = 'FEML' THEN 2&#xA;&#x9;END AS GENDER,&#xA;&#x9;sgt_person_base.SSN as SSN, --PIR 24579&#xA;&#x9;SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.MEDICARE_CLAIM_NO, -- AS MEDICARE_CLAIM_NO, &#xA;&#x9;ADDR_LINE_1 'ADDR_LINE_1',&#xA;&#x9;ADDR_LINE_2 'ADDR_LINE_2',&#xA;&#x9;ADDR_CITY 'ADDR_CITY',&#xA;&#x9;TEMP.ADDR_STATE_VALUE 'ADDR_STATE_VALUE',&#xA;&#x9;ADDR_ZIP_CODE 'ADDR_ZIP_CODE',&#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN ADDR_ZIP_4_CODE IS NOT NULL THEN LEFT(LTRIM(ADDR_ZIP_4_CODE) + '    ', 4)&#xA;&#x9;&#x9;ELSE '    '&#xA;&#x9;END AS ADDR_ZIP_4_CODE,&#xA;&#xA;&#x9;sgt_person_base.HOME_PHONE_NO AS HOME_PHONE_NUMBER,&#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.REASON_VALUE = 'DETH' THEN 'M06'&#xA;&#x9;&#x9;WHEN SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.REASON_VALUE = 'LPDP' THEN 'M07'&#xA;&#x9;&#x9;WHEN SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.REASON_VALUE = 'NONP' THEN 'M08'&#xA;&#x9;&#x9;WHEN SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.REASON_VALUE = 'CNLD' THEN 'M09'&#xA;&#x9;&#x9;ELSE '   '&#xA;&#x9;END AS DISENROLLMENT_REASON,&#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.START_DATE &gt; '12/31/2015' AND&#xA;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.REASON_VALUE IN ('DETH', 'LPDP', 'NONP', 'CNLD') THEN CONVERT(CHAR(8), DATEADD(D, -1, SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.START_DATE), 112)&#xA;&#x9;&#x9;WHEN SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.START_DATE &lt;= '1/1/2016' AND&#xA;&#x9;&#x9;&#x9;SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.REASON_VALUE IN ('DETH', 'LPDP', 'NONP', 'CNLD') THEN '20151231'&#xA;&#x9;&#x9;ELSE '        '&#xA;&#x9;END AS DISENROLLMENT_DATE,&#xA;&#x9;CONVERT(CHAR(8), GETDATE(), 112) AS CURRENT_DT,&#xA;&#x9;CONVERT(CHAR(8), SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.INITIAL_ENROLL_DATE, 112) AS INITIAL_ENROLL_DATE,SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID&#xA;&#xA;FROM SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY&#xA;INNER JOIN sgt_person_base&#xA;&#x9;ON SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ID = sgt_person_base.PERSON_ID&#xA;LEFT OUTER JOIN (SELECT&#xA;&#x9;&#x9;ADDR_LINE_1 AS ADDR_LINE_1,&#xA;&#x9;&#x9;ADDR_LINE_2 AS ADDR_LINE_2,&#xA;&#x9;&#x9;ADDR_CITY AS ADDR_CITY,&#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.ADDR_STATE_VALUE AS ADDR_STATE_VALUE,&#xA;&#x9;&#x9;ADDR_ZIP_CODE AS ADDR_ZIP_CODE,&#xA;&#x9;&#x9;ADDR_ZIP_4_CODE AS ADDR_ZIP_4_CODE,&#xA;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY SGT_PERSON_ADDRESS.PERSON_ID ORDER BY&#xA;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'TEMP' AND&#xA;&#x9;&#x9;&#x9;&#x9;(CONVERT(DATETIME, SGT_PERSON_ADDRESS.START_DATE, 101) &lt;= CONVERT(DATETIME, GETDATE(), 101) AND&#xA;&#x9;&#x9;&#x9;&#x9;CONVERT(DATETIME, ISNULL(SGT_PERSON_ADDRESS.END_DATE, '99991231'), 101) &gt;= CONVERT(DATETIME, GETDATE(), 101)) THEN 0&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND&#xA;&#x9;&#x9;&#x9;&#x9;(SGT_PERSON_ADDRESS.END_DATE IS NULL) THEN 1&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND&#xA;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ADDRESS.END_DATE IS NOT NULL THEN 2&#xA;&#x9;&#x9;&#x9;ELSE 3&#xA;&#x9;&#x9;END, SGT_PERSON_ADDRESS.END_DATE DESC) AS SR_NO,&#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.PERSON_ID&#xA;&#xA;&#x9;FROM SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY&#xA;&#x9;JOIN SGT_PERSON_ADDRESS&#xA;&#x9;&#x9;ON SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.MEMBER_PERSON_ID = SGT_PERSON_ADDRESS.PERSON_ID) AS TEMP&#xA;&#x9;ON TEMP.PERSON_ID = SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.MEMBER_PERSON_ID&#xA;INNER JOIN &#xA;(select *,ROW_NUMBER() OVER (PARTITION BY PERSON_ID ORDER BY &#xA;CASE WHEN RECORD_TYPE_FLAG = 'D' THEN 1 &#xA;ELSE 2 END, PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID ASC) AS SERIAL_NUMBER FROM SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY &#xA;WHERE RECORD_TYPE_FLAG is not null and ENROLLMENT_FILE_SENT_FLAG = 'N' and (SEND_AFTER &lt;= GETDATE() OR SEND_AFTER IS NULL) AND START_DATE != ISNULL(END_DATE,'99991231')&#xA;) &#xA;AS TEMP1 ON TEMP1.PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID = SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID&#xA;WHERE SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID IN (SELECT&#xA;&#x9;&#x9;(SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID)&#xA;&#x9;FROM SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY&#xA;&#x9;WHERE SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.ENROLLMENT_FILE_SENT_FLAG = 'N'&#xA;&#x9;AND SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.RECORD_TYPE_FLAG IS NOT NULL&#xA;&#x9;AND (SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.SEND_AFTER &lt;= GETDATE()&#xA;&#x9;OR SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.SEND_AFTER IS NULL)&#xA;&#x9;AND (SR_NO = 1 OR TEMP.SR_NO IS NULL)&#xA;&#x9;AND SERIAL_NUMBER = 1&#xA;&#x9;)&#xA;&#x9;ORDER by SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ID">
      <parameters />
    </query>
    <query ID="UpdateEnrollmentFileSentFlag" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY&#xA;SET ENROLLMENT_FILE_SENT_FLAG = 'Y'&#xA;WHERE PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID IN (&#xA;SELECT DISTINCT&#xA;&#x9;SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID&#xA;&#xA;FROM SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY&#xA;INNER JOIN sgt_person_base&#xA;&#x9;ON SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ID = sgt_person_base.PERSON_ID&#xA;LEFT OUTER JOIN (SELECT&#xA;&#x9;&#x9;ADDR_LINE_1 AS ADDR_LINE_1,&#xA;&#x9;&#x9;ADDR_LINE_2 AS ADDR_LINE_2,&#xA;&#x9;&#x9;ADDR_CITY AS ADDR_CITY,&#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.ADDR_STATE_VALUE AS ADDR_STATE_VALUE,&#xA;&#x9;&#x9;ADDR_ZIP_CODE AS ADDR_ZIP_CODE,&#xA;&#x9;&#x9;ADDR_ZIP_4_CODE AS ADDR_ZIP_4_CODE,&#xA;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY SGT_PERSON_ADDRESS.PERSON_ID ORDER BY&#xA;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'TEMP' AND&#xA;&#x9;&#x9;&#x9;&#x9;(CONVERT(DATETIME, SGT_PERSON_ADDRESS.START_DATE, 101) &lt;= CONVERT(DATETIME, GETDATE(), 101) AND&#xA;&#x9;&#x9;&#x9;&#x9;CONVERT(DATETIME, ISNULL(SGT_PERSON_ADDRESS.END_DATE, '99991231'), 101) &gt;= CONVERT(DATETIME, GETDATE(), 101)) THEN 0&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND&#xA;&#x9;&#x9;&#x9;&#x9;(SGT_PERSON_ADDRESS.END_DATE IS NULL) THEN 1&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND&#xA;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ADDRESS.END_DATE IS NOT NULL THEN 2&#xA;&#x9;&#x9;&#x9;ELSE 3&#xA;&#x9;&#x9;END, SGT_PERSON_ADDRESS.END_DATE DESC) AS SR_NO,&#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.PERSON_ID&#xA;&#x9;FROM SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY&#xA;&#x9;JOIN SGT_PERSON_ADDRESS&#xA;&#x9;&#x9;ON SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.MEMBER_PERSON_ID = SGT_PERSON_ADDRESS.PERSON_ID) AS TEMP&#xA;&#x9;ON TEMP.PERSON_ID = SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.MEMBER_PERSON_ID&#xA;INNER JOIN &#xA;(select *,ROW_NUMBER() OVER (PARTITION BY PERSON_ID ORDER BY &#xA;CASE WHEN RECORD_TYPE_FLAG = 'D' THEN 1 &#xA;ELSE 2 END, PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID ASC) AS SERIAL_NUMBER FROM SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY &#xA;WHERE RECORD_TYPE_FLAG is not null and ENROLLMENT_FILE_SENT_FLAG = 'N' and (SEND_AFTER &lt;= GETDATE() OR SEND_AFTER IS NULL) AND START_DATE != ISNULL(END_DATE,'99991231')&#xA;) &#xA;AS TEMP1 ON TEMP1.PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID = SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID&#xA;WHERE SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID IN (SELECT&#xA;&#x9;&#x9;(SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY_ID)&#xA;&#x9;FROM SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY&#xA;&#x9;WHERE SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.ENROLLMENT_FILE_SENT_FLAG = 'N'&#xA;&#x9;AND SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.RECORD_TYPE_FLAG IS NOT NULL&#xA;&#x9;AND (SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.SEND_AFTER &lt;= GETDATE()&#xA;&#x9;OR SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.SEND_AFTER IS NULL)&#xA;&#x9;AND (SR_NO = 1 OR SR_NO IS NULL)&#xA;&#x9;AND SERIAL_NUMBER = 1))">
      <parameters />
    </query>
    <query ID="PaymentMethodDiscrepanciesForHealth&amp;Medicare" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--***If ACH it has to be the same for all plans with ACH&#xD;&#xA;--***Health &amp; Part D (including Spouse Part D) has to be same Payment Method&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;-- Selecting Heath &amp; Medicare Part D&#xD;&#xA;SELECT&#x9;SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PAYMENT_METHOD_VALUE, SGT_PERSON_ACCOUNT.PLAN_ID, SGT_PERSON_ACCOUNT.PERSON_ID&#xD;&#xA;INTO&#x9;TEMP_PAYMENT_METHOD1&#xD;&#xA;FROM    SGT_PERSON_ACCOUNT_PAYMENT_ELECTION INNER JOIN&#xD;&#xA;        SGT_PERSON_ACCOUNT ON SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE   (SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.IBS_FLAG = 'Y') AND (SGT_PERSON_ACCOUNT.PLAN_ID IN (9, 12)) &#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE LIKE 'ENL%'&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT  SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PAYMENT_METHOD_VALUE, SGT_PERSON_ACCOUNT.PLAN_ID, &#xD;&#xA;        SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.MEMBER_PERSON_ID AS PERSON_ID&#xD;&#xA;FROM    SGT_PERSON_ACCOUNT_PAYMENT_ELECTION INNER JOIN&#xD;&#xA;        SGT_PERSON_ACCOUNT ON SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID INNER JOIN&#xD;&#xA;        SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE   (SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.IBS_FLAG = 'Y') AND (SGT_PERSON_ACCOUNT.PLAN_ID = 9) AND &#xD;&#xA;        (SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.MEMBER_PERSON_ID &lt;&gt; SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ID)&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE LIKE 'ENL%'&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.END_DATE IS NULL&#xD;&#xA;&#xD;&#xA;-- Selecting Person ID where payment method is different for at least one enrollment&#xD;&#xA;SELECT DISTINCT A.PERSON_ID&#xD;&#xA;FROM TEMP_PAYMENT_METHOD1 A&#xD;&#xA;    INNER JOIN TEMP_PAYMENT_METHOD1 B&#xD;&#xA;        ON A.PERSON_ID = B.PERSON_ID AND A.PLAN_ID &lt; B.PLAN_ID&#xD;&#xA;WHERE&#xD;&#xA;    A.PAYMENT_METHOD_VALUE &lt;&gt; B.PAYMENT_METHOD_VALUE&#xD;&#xA;&#xD;&#xA;DROP TABLE TEMP_PAYMENT_METHOD1">
      <parameters />
    </query>
    <query ID="PaymentMethodDiscrepanciesForAllACH" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="-- Selecting all ACH&#xD;&#xA;SELECT&#x9;SGT_PERSON_ACCOUNT.PERSON_ID, SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PAYMENT_METHOD_VALUE, SGT_PERSON_ACCOUNT.PLAN_ID, &#xD;&#xA;&#x9;&#x9;SGT_PERSON_ACCOUNT_ACH_DETAIL.BANK_ACCOUNT_NUMBER, SGT_PERSON_ACCOUNT_ACH_DETAIL.ABA_NUMBER, SGT_PERSON_ACCOUNT_ACH_DETAIL.BANK_ACCOUNT_TYPE_VALUE, SGT_ORGANIZATION.ROUTING_NO&#xD;&#xA;INTO&#x9;TEMP_PAYMENT_METHOD2&#xD;&#xA;FROM&#x9;SGT_PERSON_ACCOUNT_PAYMENT_ELECTION INNER JOIN&#xD;&#xA;        SGT_PERSON_ACCOUNT ON SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID INNER JOIN&#xD;&#xA;        SGT_PERSON_ACCOUNT_ACH_DETAIL ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT_ACH_DETAIL.PERSON_ACCOUNT_ID INNER JOIN&#xD;&#xA;&#x9;&#x9;SGT_ORGANIZATION ON SGT_PERSON_ACCOUNT_ACH_DETAIL.BANK_ORG_ID = SGT_ORGANIZATION.ORG_ID&#xD;&#xA;WHERE   (SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.IBS_FLAG = 'Y') AND (SGT_PERSON_ACCOUNT.PLAN_ID IN (12, 13, 16, 17)) AND &#xD;&#xA;        (SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PAYMENT_METHOD_VALUE = 'ACH') AND (SGT_PERSON_ACCOUNT_ACH_DETAIL.ACH_END_DATE IS NULL)&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE LIKE 'ENL%'&#xD;&#xA;&#xD;&#xA;UNION ALL &#xD;&#xA;&#xD;&#xA;SELECT&#x9;SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.MEMBER_PERSON_ID AS PERSON_ID, SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PAYMENT_METHOD_VALUE, SGT_PERSON_ACCOUNT.PLAN_ID, &#xD;&#xA;&#x9;&#x9;SGT_PERSON_ACCOUNT_ACH_DETAIL.BANK_ACCOUNT_NUMBER, SGT_PERSON_ACCOUNT_ACH_DETAIL.ABA_NUMBER, SGT_PERSON_ACCOUNT_ACH_DETAIL.BANK_ACCOUNT_TYPE_VALUE, SGT_ORGANIZATION.ROUTING_NO&#xD;&#xA;FROM&#x9;SGT_PERSON_ACCOUNT_PAYMENT_ELECTION INNER JOIN&#xD;&#xA;        SGT_PERSON_ACCOUNT ON SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID INNER JOIN&#xD;&#xA;        SGT_PERSON_ACCOUNT_ACH_DETAIL ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT_ACH_DETAIL.PERSON_ACCOUNT_ID INNER JOIN&#xD;&#xA;        SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.PERSON_ACCOUNT_ID INNER JOIN&#xD;&#xA;&#x9;&#x9;SGT_ORGANIZATION ON SGT_PERSON_ACCOUNT_ACH_DETAIL.BANK_ORG_ID = SGT_ORGANIZATION.ORG_ID&#xD;&#xA;WHERE   (SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.IBS_FLAG = 'Y') AND (SGT_PERSON_ACCOUNT.PLAN_ID =9) AND &#xD;&#xA;        (SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PAYMENT_METHOD_VALUE = 'ACH') AND (SGT_PERSON_ACCOUNT_ACH_DETAIL.ACH_END_DATE IS NULL)&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE LIKE 'ENL%'&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY.END_DATE IS NULL &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;-- Selecting Person ID where ACH detail is different for at least one enrollment&#xD;&#xA;SELECT DISTINCT A.PERSON_ID&#xD;&#xA;FROM TEMP_PAYMENT_METHOD2 A&#xD;&#xA;    INNER JOIN TEMP_PAYMENT_METHOD2 B&#xD;&#xA;        ON A.PERSON_ID = B.PERSON_ID AND A.PLAN_ID &lt; B.PLAN_ID&#xD;&#xA;WHERE&#xD;&#xA;    A.BANK_ACCOUNT_TYPE_VALUE &lt;&gt; B.BANK_ACCOUNT_TYPE_VALUE OR&#xD;&#xA;&#x9;A.BANK_ACCOUNT_NUMBER &lt;&gt; B.BANK_ACCOUNT_NUMBER OR&#xD;&#xA;&#x9;A.ROUTING_NO &lt;&gt; B.ROUTING_NO&#xD;&#xA;&#xD;&#xA; DROP TABLE TEMP_PAYMENT_METHOD2">
      <parameters />
    </query>
    <query ID="LoadEmployerWelcomeBenefitPlans" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT 'Retirement' AS istrPlanName, WOBP.YOU_MUST_ENROLL_OR_WAIVE AS istrYouMustEnrollOrWaive, WOBP.IF_YOU_DO_NO_ACTION AS istrIfYouDoNoAction, 1 AS PLAN_ORDER &#xD;&#xA;FROM SGT_WELCOME_ORG_BENEFIT_PLAN WOBP&#xD;&#xA;INNER JOIN SGT_PLAN P ON WOBP.PLAN_ID = P.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED ON P.PLAN_ID = PAED.PLAN_ID AND PAED.PERSON_EMPLOYMENT_DTL_ID = @EMPLOYMENTDTLID AND P.BENEFIT_TYPE_VALUE = 'RETR'&#xD;&#xA;GROUP BY P.BENEFIT_TYPE_VALUE, WOBP.YOU_MUST_ENROLL_OR_WAIVE, WOBP.IF_YOU_DO_NO_ACTION&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT 'Deferred Compensation' AS istrPlanName, WOBP.YOU_MUST_ENROLL_OR_WAIVE as istrYouMustEnrollOrWaive, WOBP.IF_YOU_DO_NO_ACTION as istrIfYouDoNoAction, 2 AS PLAN_ORDER&#xD;&#xA;FROM SGT_WELCOME_ORG_BENEFIT_PLAN WOBP&#xD;&#xA;INNER JOIN SGT_PLAN P ON WOBP.PLAN_ID = P.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED ON P.PLAN_ID = PAED.PLAN_ID AND PAED.PERSON_EMPLOYMENT_DTL_ID = @EMPLOYMENTDTLID AND P.BENEFIT_TYPE_VALUE = 'DEFF'&#xD;&#xA;GROUP BY P.BENEFIT_TYPE_VALUE, WOBP.YOU_MUST_ENROLL_OR_WAIVE, WOBP.IF_YOU_DO_NO_ACTION&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT CASE WHEN P.PLAN_ID = 14 THEN 'Employee Assistance Program (EAP)' &#xD;&#xA;&#x9;&#x9;&#x9;ELSE CASE WHEN P.PLAN_ID = 15 THEN 'Long Term Care (LTC)'&#xD;&#xA;&#x9;&#x9;&#x9;    ELSE P.PLAN_NAME END END AS istrPlanName, WOBP.YOU_MUST_ENROLL_OR_WAIVE as istrYouMustEnrollOrWaive, WOBP.IF_YOU_DO_NO_ACTION as istrIfYouDoNoAction,  &#xD;&#xA;&#x9;   CASE WHEN P.PLAN_ID = 12 THEN 3&#xD;&#xA;&#x9;        ELSE CASE WHEN P.PLAN_ID = 16 THEN 4 &#xD;&#xA;&#x9;&#x9;&#x9;    ELSE CASE WHEN P.PLAN_ID = 17 THEN 5&#xD;&#xA;&#x9;&#x9;&#x9;        ELSE CASE WHEN P.PLAN_ID = 13 THEN 6 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    ELSE CASE WHEN P.PLAN_ID = 14 THEN 7 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    ELSE CASE WHEN P.PLAN_ID = 15 THEN 8 &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END &#xD;&#xA;&#x9;&#x9;&#x9;    END&#xD;&#xA;&#x9;&#x9;&#x9;END&#xD;&#xA;&#x9;&#x9;END AS PLAN_ORDER &#xD;&#xA;FROM SGT_WELCOME_ORG_BENEFIT_PLAN WOBP&#xD;&#xA;INNER JOIN SGT_PLAN P ON WOBP.PLAN_ID = P.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED ON P.PLAN_ID = PAED.PLAN_ID AND PAED.PERSON_EMPLOYMENT_DTL_ID = @EMPLOYMENTDTLID AND P.BENEFIT_TYPE_VALUE = 'INSR'&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT 'Flex Comp' AS istrPlanName, WOBP.YOU_MUST_ENROLL_OR_WAIVE AS istrYouMustEnrollOrWaive, WOBP.IF_YOU_DO_NO_ACTION AS istrIfYouDoNoAction, 9 AS PLAN_ORDER&#xD;&#xA;FROM SGT_WELCOME_ORG_BENEFIT_PLAN WOBP&#xD;&#xA;INNER JOIN SGT_PLAN P ON WOBP.PLAN_ID = P.PLAN_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED ON P.PLAN_ID = PAED.PLAN_ID AND PAED.PERSON_EMPLOYMENT_DTL_ID = @EMPLOYMENTDTLID AND P.BENEFIT_TYPE_VALUE = 'FLEX'&#xD;&#xA;GROUP BY P.BENEFIT_TYPE_VALUE, WOBP.YOU_MUST_ENROLL_OR_WAIVE, WOBP.IF_YOU_DO_NO_ACTION&#xD;&#xA;ORDER BY PLAN_ORDER&#xD;&#xA;">
      <parameters>
        <parameter ID="@EMPLOYMENTDTLID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="NoBeneficiaryLifeRetrBatch" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('TEMP_NO_BENE') IS NOT NULL&#xA;DROP TABLE TEMP_NO_BENE&#xA;&#xA;IF OBJECT_ID('TEMP_NO_BENE_INTER') IS NOT NULL&#xA;DROP TABLE TEMP_NO_BENE_INTER&#xA;&#xA;SELECT&#x9;SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID &#xA;INTO&#x9;TEMP_NO_BENE&#xA;FROM&#x9;SGT_PERSON_ACCOUNT &#xA;WHERE   ((SGT_PERSON_ACCOUNT.PLAN_ID IN (1, 2, 3, 4, 5, 6, 7, 20, 26,27,28,29,30) &#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1','SUS2') &#xA;&#x9;&#x9;AND DATEADD(d,60,SGT_PERSON_ACCOUNT.START_DATE) &lt; GETDATE())&#xA;&#x9;&#x9;OR (SGT_PERSON_ACCOUNT.PLAN_ID = 13 &#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' &#xA;&#x9;&#x9;AND DATEADD(d,30,SGT_PERSON_ACCOUNT.START_DATE) &lt; GETDATE())) --PIR 24889&#xA;&#x9;&#x9;AND (SGT_PERSON_ACCOUNT.NO_BENE_SENT IS NULL OR SGT_PERSON_ACCOUNT.NO_BENE_SENT = 'N')&#xA;&#xA;DELETE&#x9;A&#xA;FROM&#x9;TEMP_NO_BENE A INNER JOIN&#xA;        SGT_PERSON_ACCOUNT_BENEFICIARY B ON A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID&#xA;WHERE B.END_DATE IS NULL&#xA;&#xA;SELECT&#x9;SGT_PERSON_ACCOUNT.PERSON_ID,  &#xA;&#x9;&#x9;SUM(CASE WHEN SGT_PERSON_ACCOUNT.PLAN_ID IN (1, 2, 3, 4, 5, 6, 7, 20, 26, 27,28,29,30) THEN 1 ELSE 0 END) RETR_BENE_COUNT,&#xA;&#x9;&#x9;SUM(CASE SGT_PERSON_ACCOUNT.PLAN_ID WHEN 13 THEN 1 ELSE 0 END) LIFE_BENE_COUNT&#xA;INTO&#x9;TEMP_NO_BENE_INTER&#xA;FROM    TEMP_NO_BENE INNER JOIN &#xA;&#x9;&#x9;SGT_PERSON_ACCOUNT ON TEMP_NO_BENE.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID INNER JOIN&#xA;&#x9;&#x9;SGT_PLAN ON SGT_PERSON_ACCOUNT.PLAN_ID = SGT_PLAN.PLAN_ID INNER JOIN&#xA;&#x9;&#x9;SGT_PERSON ON SGT_PERSON_ACCOUNT.PERSON_ID = SGT_PERSON.PERSON_ID&#xA;WHERE&#x9;SGT_PERSON.DATE_OF_DEATH IS NULL &#xA;GROUP BY SGT_PERSON_ACCOUNT.PERSON_ID&#xA;ORDER BY SGT_PERSON_ACCOUNT.PERSON_ID&#xA;&#xA;SELECT &#xA;     *&#xA;FROM TEMP_NO_BENE_INTER INNER JOIN &#xA;&#x9; SGT_PERSON ON TEMP_NO_BENE_INTER.PERSON_ID = SGT_PERSON.PERSON_ID&#xA;ORDER BY RETR_BENE_COUNT, LIFE_BENE_COUNT&#xA;&#x9;&#xA;&#xA;DROP TABLE TEMP_NO_BENE&#xA;DROP TABLE TEMP_NO_BENE_INTER">
      <parameters />
    </query>
    <query ID="NoBeneficiaryLifeRetrByPerson" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="IF OBJECT_ID('TEMP_NO_BENE1') IS NOT NULL&#xD;&#xA;DROP TABLE TEMP_NO_BENE1&#xD;&#xA;&#xD;&#xA;SELECT&#x9;SGT_PERSON_ACCOUNT.*&#xD;&#xA;INTO&#x9;TEMP_NO_BENE1&#xD;&#xA;FROM&#x9;SGT_PERSON_ACCOUNT &#xD;&#xA;WHERE   ((SGT_PERSON_ACCOUNT.PLAN_ID IN (1, 2, 3, 4, 5, 6, 7, 20, 26, 27, 28,29,30) &#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1','SUS2') &#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.START_DATE &lt; GETDATE())&#xD;&#xA;&#x9;&#x9;OR (SGT_PERSON_ACCOUNT.PLAN_ID = 13 &#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' &#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.START_DATE &lt; GETDATE()))&#xD;&#xA;&#x9;&#x9;AND (SGT_PERSON_ACCOUNT.NO_BENE_SENT IS NULL OR SGT_PERSON_ACCOUNT.NO_BENE_SENT = 'N')&#xD;&#xA;&#xD;&#xA;DELETE&#x9;A&#xD;&#xA;FROM&#x9;TEMP_NO_BENE1 A INNER JOIN&#xD;&#xA;        SGT_PERSON_ACCOUNT_BENEFICIARY B ON A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE B.END_DATE IS NULL&#xD;&#xA;&#xD;&#xA;SELECT * FROM TEMP_NO_BENE1&#xD;&#xA;&#xD;&#xA;DROP TABLE TEMP_NO_BENE1">
      <parameters />
    </query>
    <query ID="LoadLifeInsurancePortability" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--Terminated Members&#xD;&#xA;SELECT DISTINCT &#xD;&#xA;&#x9;&#x9;'&quot;'+PER.SSN+'&quot;' AS SSN,&#xD;&#xA;&#x9;&#x9;SUBSTRING(PER.FIRST_NAME, 1, 31) AS FIRST_NAME, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN PER.MIDDLE_NAME IS NOT NULL THEN SUBSTRING(PER.MIDDLE_NAME, 1, 10)&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS MIDDLE_NAME, &#xD;&#xA;&#x9;&#x9;SUBSTRING(PER.LAST_NAME, 1, 31) AS LAST_NAME, &#xD;&#xA;&#x9;&#x9;CONVERT(VARCHAR(10), PER.DATE_OF_BIRTH, 101) AS DATE_OF_BIRTH, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDR_LINE_1 IS NOT NULL THEN '&quot;'+SUBSTRING(ADDR_LINE_1, 1, 45)+'&quot;'&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS ADDR_LINE_1, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDR_LINE_2 IS NOT NULL THEN '&quot;'+SUBSTRING(ADDR_LINE_2, 1, 45)+'&quot;'&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS ADDR_LINE_2, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDR_CITY IS NOT NULL THEN SUBSTRING(ADDR_CITY, 1, 31)&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS ADDR_CITY, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDR_STATE_VALUE IS NOT NULL THEN ADDR_STATE_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS ADDR_STATE_VALUE, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDR_ZIP_CODE IS NOT NULL THEN ADDR_ZIP_CODE&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS ZIP_CODE, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDR_ZIP_4_CODE IS NOT NULL THEN ADDR_ZIP_4_CODE&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS ZIP_CODE_4, &#xD;&#xA;&#x9;&#x9;CONVERT(VARCHAR(10),TEMP1.START_DATE, 101) AS DATE_OF_HIRE, &#xD;&#xA;&#x9;&#x9;NULL AS ANNUAL_SALARY_AMOUNT,&#xD;&#xA;&#x9;&#x9;'NDPERS ' AS GROUP_NAME,&#xD;&#xA;&#x9;&#x9;'673897 ' AS GROUP_NUMBER,&#xD;&#xA;&#x9;&#x9;'1 ' AS ACCOUNT_NUMBER,&#xD;&#xA;&#x9;&#x9;NULL AS EE_CLASS,&#xD;&#xA;&#x9;&#x9;'NA ' AS TOBACCO_STATUS,&#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN PER.HOME_PHONE_NO IS NOT NULL THEN PER.HOME_PHONE_NO&#xD;&#xA;&#x9;&#x9;&#x9;WHEN PER.CELL_PHONE_NO IS NOT NULL THEN PER.CELL_PHONE_NO&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS HOME_PHONE, &#xD;&#xA;&#x9;&#x9;CONVERT(VARCHAR(10),TEMP1.END_DATE, 101) AS EMPLOYMENT_TERMINATION_DATE, &#xD;&#xA;&#x9;&#x9;CONVERT(VARCHAR(10),SGT_PERSON_ACCOUNT.END_DATE, 101) AS INSURANCE_TERMINATION_DATE, &#xD;&#xA;&#x9;&#x9;NULL AS ADDITIONAL_COMMENT,&#xD;&#xA;&#x9;&#x9;NULL AS REASON_FOR_TERMINATION,&#xD;&#xA;&#x9;&#x9;CONVERT(INT,PALOBA.COVERAGE_AMOUNT) AS EMPLOYEE_BASIC_COVERAGE_AMOUNT, --BASIC COVERAGE AMOUNT&#xD;&#xA;&#x9;&#x9;CONVERT(INT,PALOSU.COVERAGE_AMOUNT) AS EMPLOYEE_SUPPLEMENTAL_COVERAGE_AMOUNT, --SUPPLEMENTAL COVERAGE AMOUNT&#xD;&#xA;&#x9;&#x9;CONVERT(INT,PALOBA.COVERAGE_AMOUNT) AS EMPLOYEE_BASIC_AD_D_COVERAGE_AMOUNT, --BASIC COVERAGE AMOUNT&#xD;&#xA;&#x9;&#x9;CONVERT(INT,PALOSU.COVERAGE_AMOUNT) AS EMPLOYEE_SUPPLEMENTAL_AD_D_COVERAGE_AMOUNT, --SUPPLEMENTAL COVERAGE AMOUNT as SUPPLEMENTAL_COVERAGE_AMOUNT&#xD;&#xA;&#x9;&#x9;NULL AS ADDITIONAL_COVERAGE_AMOUNT_EE,&#xD;&#xA;&#x9;&#x9;NULL AS ADDITIONAL_COVERAGE_AMOUNT_FAM,&#xD;&#xA;&#x9;&#x9;NULL AS SP_LAST_NAME,&#xD;&#xA;&#x9;&#x9;NULL AS SP_FIRST_NAME,&#xD;&#xA;&#x9;&#x9;NULL AS SP_SSN,&#xD;&#xA;&#x9;&#x9;NULL AS SP_DATE_OF_BIRTH,&#xD;&#xA;&#x9;&#x9;NULL AS SP_TOBACCO_STATUS,&#xD;&#xA;&#x9;&#x9;NULL AS SPOUSE_BASIC_COVERAGE_AMOUNT,&#xD;&#xA;&#x9;&#x9;CONVERT(INT,PALOSS.COVERAGE_AMOUNT) AS SPOUSE_SUPPLEMENTAL_COVERAGE_AMOUNT, --SPOUSE SUPPLEMENTAL COVERAGE AMOUNT&#xD;&#xA;&#x9;&#x9;NULL AS SPOUSE_BASIC_AD_D_COVERAGE_AMOUNT,&#xD;&#xA;&#x9;&#x9;NULL AS SPOUSE_SUPPLEMENTAL_AD_D_COVERAGE_AMOUNT,&#xD;&#xA;&#x9;&#x9;NULL AS CHILD_BASIC_COVERAGE_AMOUNT,&#xD;&#xA;&#x9;&#x9;CONVERT(INT,PALODS.COVERAGE_AMOUNT) AS CHILD_SUPPLEMENTAL_COVERAGE_AMOUNT, --DEPENDENT SUPPLEMENTAL COVERAGE AMOUNT&#xD;&#xA;&#x9;&#x9;NULL AS CHILD_BASIC_AD_D_COVERAGE_AMOUNT,&#xD;&#xA;&#x9;&#x9;NULL AS CHILD_SUPPLEMENTAL_AD_D_COVERAGE_AMOUNT,&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;PER.PERSON_ID AS ADDITIONAL_INFO_FIELD_1,&#xD;&#xA;&#x9;&#x9;NULL AS ADDITIONAL_INFO_FIELD_2&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;FROM SGT_PERSON_BASE PER&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT ON PER.PERSON_ID = SGT_PERSON_EMPLOYMENT.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT ON PER.PERSON_ID = SGT_PERSON_ACCOUNT.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_OPTION PALOBA ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALOBA.PERSON_ACCOUNT_ID AND PALOBA.LEVEL_OF_COVERAGE_VALUE IN ('BASC')&#xD;&#xA;&#x9;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_OPTION PALOSU ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALOSU.PERSON_ACCOUNT_ID AND PALOSU.LEVEL_OF_COVERAGE_VALUE IN ('SPML')&#xD;&#xA;&#x9;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_OPTION PALODS ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALODS.PERSON_ACCOUNT_ID AND PALODS.LEVEL_OF_COVERAGE_VALUE IN ('DSPL')&#xD;&#xA;&#x9;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_OPTION PALOSS ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALOSS.PERSON_ACCOUNT_ID AND PALOSS.LEVEL_OF_COVERAGE_VALUE IN ('SPSL')&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT_LIFE.PERSON_ACCOUNT_ID&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL ON SGT_PERSON_EMPLOYMENT.PERSON_EMPLOYMENT_ID = SGT_PERSON_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;INNER JOIN &#xD;&#xA;&#x9;&#x9;(SELECT EMP.PERSON_EMPLOYMENT_ID,&#xD;&#xA;&#x9;&#x9;EMP.START_DATE,EMP.END_DATE, &#xD;&#xA;&#x9;&#x9;PER.PERSON_ID, PAEMPDET.ELECTION_VALUE ,&#xD;&#xA;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY EMP.PERSON_ID ORDER BY EMP.END_DATE DESC) AS RW_NUM&#xD;&#xA;&#x9;&#x9;FROM SGT_PERSON PER&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT PERACCT ON PER.PERSON_ID = PERACCT.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT EMP ON EMP.PERSON_ID = PER.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET ON EMP.PERSON_EMPLOYMENT_ID = EMPDET.PERSON_EMPLOYMENT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAEMPDET ON PAEMPDET.PERSON_ACCOUNT_ID = PERACCT.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;AND EMPDET.PERSON_EMPLOYMENT_DTL_ID = PAEMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;&#x9;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;PERACCT.PLAN_ID = 13&#xD;&#xA;&#x9;&#x9;AND EMP.END_DATE IS NOT NULL&#xD;&#xA;&#x9;&#x9;AND EMP.END_DATE &lt;= GETDATE()&#xD;&#xA;&#x9;&#x9;AND PERACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'SUS3'&#xD;&#xA;&#x9;&#x9;AND ISNULL(EMP.VOYA_SENT, 'N') = 'N'&#xD;&#xA;&#x9;&#x9; ) AS TEMP1&#xD;&#xA;&#x9;&#x9;ON PER.PERSON_ID = TEMP1.PERSON_ID&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;INNER JOIN (SELECT&#xD;&#xA;&#x9;&#x9;ADDR_LINE_1 AS ADDR_LINE_1,&#xD;&#xA;&#x9;&#x9;ADDR_LINE_2 AS ADDR_LINE_2,&#xD;&#xA;&#x9;&#x9;ADDR_CITY AS ADDR_CITY,&#xD;&#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.ADDR_STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;&#x9;&#x9;ADDR_ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;&#x9;&#x9;ADDR_ZIP_4_CODE AS ADDR_ZIP_4_CODE,&#xD;&#xA;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY SGT_PERSON_ADDRESS.PERSON_ID ORDER BY&#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'TEMP' AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(CONVERT(DATETIME, SGT_PERSON_ADDRESS.START_DATE, 101) &lt;= CONVERT(DATETIME, GETDATE(), 101) AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;CONVERT(DATETIME, ISNULL(SGT_PERSON_ADDRESS.END_DATE, '99991231'), 101) &gt;= CONVERT(DATETIME, GETDATE(), 101)) THEN 0&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(SGT_PERSON_ADDRESS.END_DATE IS NULL) THEN 1&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ADDRESS.END_DATE IS NOT NULL THEN 2&#xD;&#xA;&#x9;&#x9;&#x9;ELSE 3&#xD;&#xA;&#x9;&#x9;END, SGT_PERSON_ADDRESS.END_DATE DESC) AS SR_NO,&#xD;&#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.PERSON_ID&#xD;&#xA;&#xD;&#xA;&#x9;FROM SGT_PERSON_BASE JOIN&#xD;&#xA;         SGT_PERSON_ADDRESS ON SGT_PERSON_BASE.PERSON_ID = SGT_PERSON_ADDRESS.PERSON_ID) AS TEMP &#xD;&#xA;&#x9;ON TEMP.PERSON_ID = PER.PERSON_ID&#xD;&#xA;&#x9;&#x9;WHERE SR_NO = 1&#xD;&#xA;&#x9;&#x9;AND TEMP1.RW_NUM = 1&#xD;&#xA;&#x9;&#x9;AND TEMP1.END_DATE IS NOT NULL &#xD;&#xA;&#x9;&#x9;AND TEMP1.END_DATE &lt;= GETDATE() &#xD;&#xA;&#x9;&#x9;AND ISNULL(SGT_PERSON_EMPLOYMENT.VOYA_SENT, 'N') = 'N'&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_ID = 13&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE = 'SUS3'&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT_LIFE.LIFE_INSURANCE_TYPE_VALUE = 'NREM'&#xD;&#xA;&#x9;&#x9;AND TEMP1.ELECTION_VALUE = 'ENLD'&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_EMPLOYMENT.PERSON_EMPLOYMENT_ID = (SELECT TOP 1 PERSON_EMPLOYMENT_ID FROM SGT_PERSON_EMPLOYMENT EMP&#xD;&#xA;&#x9;&#x9;WHERE TEMP.PERSON_ID = EMP.PERSON_ID&#xD;&#xA;&#x9;&#x9;AND  EMP.END_DATE IS NOT NULL&#xD;&#xA;&#x9;&#x9;AND EMP.END_DATE &lt;= GETDATE()&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE = 'SUS3' &#xD;&#xA;&#x9;&#x9;ORDER BY END_DATE DESC)&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;--Retired Members loosing supplemental coverage due to age 65&#xD;&#xA;SELECT DISTINCT &#xD;&#xA;&#x9;&#x9;'&quot;'+PER.SSN+'&quot;' AS SSN,&#xD;&#xA;&#x9;&#x9;SUBSTRING(PER.FIRST_NAME, 1, 31) AS FIRST_NAME, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN PER.MIDDLE_NAME IS NOT NULL THEN SUBSTRING(PER.MIDDLE_NAME, 1, 10)&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS MIDDLE_NAME, &#xD;&#xA;&#x9;&#x9;SUBSTRING(PER.LAST_NAME, 1, 31) AS LAST_NAME, &#xD;&#xA;&#x9;&#x9;CONVERT(VARCHAR(10), PER.DATE_OF_BIRTH, 101) AS DATE_OF_BIRTH, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDR_LINE_1 IS NOT NULL THEN '&quot;'+SUBSTRING(ADDR_LINE_1, 1, 45)+'&quot;'&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS ADDR_LINE_1, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDR_LINE_2 IS NOT NULL THEN '&quot;'+SUBSTRING(ADDR_LINE_2, 1, 45)+'&quot;'&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS ADDR_LINE_2, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDR_CITY IS NOT NULL THEN SUBSTRING(ADDR_CITY, 1, 31)&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS ADDR_CITY, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDR_STATE_VALUE IS NOT NULL THEN ADDR_STATE_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS ADDR_STATE_VALUE, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDR_ZIP_CODE IS NOT NULL THEN ADDR_ZIP_CODE&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS ZIP_CODE, &#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDR_ZIP_4_CODE IS NOT NULL THEN ADDR_ZIP_4_CODE&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS ZIP_CODE_4, &#xD;&#xA;&#x9;&#x9;CONVERT(VARCHAR(10),SGT_PERSON_EMPLOYMENT.START_DATE, 101) AS DATE_OF_HIRE, &#xD;&#xA;&#x9;&#x9;NULL AS ANNUAL_SALARY_AMOUNT,&#xD;&#xA;&#x9;&#x9;'NDPERS ' AS GROUP_NAME,&#xD;&#xA;&#x9;&#x9;'673897 ' AS GROUP_NUMBER,&#xD;&#xA;&#x9;&#x9;'1 ' AS ACCOUNT_NUMBER,&#xD;&#xA;&#x9;&#x9;NULL AS EE_CLASS,&#xD;&#xA;&#x9;&#x9;'NA ' AS TOBACCO_STATUS,&#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN PER.HOME_PHONE_NO IS NOT NULL THEN PER.HOME_PHONE_NO&#xD;&#xA;&#x9;&#x9;&#x9;WHEN PER.CELL_PHONE_NO IS NOT NULL THEN PER.CELL_PHONE_NO&#xD;&#xA;&#x9;&#x9;&#x9;ELSE ''&#xD;&#xA;&#x9;&#x9;END AS HOME_PHONE, &#xD;&#xA;&#x9;&#x9;NULL AS EMPLOYMENT_TERMINATION_DATE, &#xD;&#xA;&#x9;&#x9;CONVERT(VARCHAR(10), DATEADD(DAY, -1, DATEADD(MONTH, DATEDIFF(MONTH, 0, PER.DATE_OF_BIRTH) + 780 , 0)), 101) AS INSURANCE_TERMINATION_DATE, --LAST day of month prior to the member turning 65&#xD;&#xA;&#x9;&#x9;NULL AS ADDITIONAL_COMMENT,&#xD;&#xA;&#x9;&#x9;'Retired' AS REASON_FOR_TERMINATION,&#xD;&#xA;&#x9;&#x9;CONVERT(INT,PALOBA.COVERAGE_AMOUNT) AS EMPLOYEE_BASIC_COVERAGE_AMOUNT, --BASIC COVERAGE AMOUNT&#xD;&#xA;&#x9;&#x9;CONVERT(INT,PALHSU.COVERAGE_AMOUNT) AS EMPLOYEE_SUPPLEMENTAL_COVERAGE_AMOUNT, --SUPPLEMENTAL COVERAGE AMOUNT&#xD;&#xA;&#x9;&#x9;CONVERT(INT,PALOBA.COVERAGE_AMOUNT) AS EMPLOYEE_BASIC_AD_D_COVERAGE_AMOUNT, --BASIC COVERAGE AMOUNT&#xD;&#xA;&#x9;&#x9;CONVERT(INT,PALHSU.COVERAGE_AMOUNT) AS EMPLOYEE_SUPPLEMENTAL_AD_D_COVERAGE_AMOUNT, --SUPPLEMENTAL COVERAGE AMOUNT as SUPPLEMENTAL_COVERAGE_AMOUNT&#xD;&#xA;&#x9;&#x9;NULL AS ADDITIONAL_COVERAGE_AMOUNT_EE,&#xD;&#xA;&#x9;&#x9;NULL AS ADDITIONAL_COVERAGE_AMOUNT_FAM,&#xD;&#xA;&#x9;&#x9;NULL AS SP_LAST_NAME,&#xD;&#xA;&#x9;&#x9;NULL AS SP_FIRST_NAME,&#xD;&#xA;&#x9;&#x9;NULL AS SP_SSN,&#xD;&#xA;&#x9;&#x9;NULL AS SP_DATE_OF_BIRTH,&#xD;&#xA;&#x9;&#x9;NULL AS SP_TOBACCO_STATUS,&#xD;&#xA;&#x9;&#x9;NULL AS SPOUSE_BASIC_COVERAGE_AMOUNT,&#xD;&#xA;&#x9;&#x9;CONVERT(INT,PALHSS.COVERAGE_AMOUNT) AS SPOUSE_SUPPLEMENTAL_COVERAGE_AMOUNT, --SPOUSE SUPPLEMENTAL COVERAGE AMOUNT&#xD;&#xA;&#x9;&#x9;NULL AS SPOUSE_BASIC_AD_D_COVERAGE_AMOUNT,&#xD;&#xA;&#x9;&#x9;NULL AS SPOUSE_SUPPLEMENTAL_AD_D_COVERAGE_AMOUNT,&#xD;&#xA;&#x9;&#x9;NULL AS CHILD_BASIC_COVERAGE_AMOUNT,&#xD;&#xA;&#x9;&#x9;CONVERT(INT,PALHDS.COVERAGE_AMOUNT) AS CHILD_SUPPLEMENTAL_COVERAGE_AMOUNT, --DEPENDENT SUPPLEMENTAL COVERAGE AMOUNT&#xD;&#xA;&#x9;&#x9;NULL AS CHILD_BASIC_AD_D_COVERAGE_AMOUNT,&#xD;&#xA;&#x9;&#x9;NULL AS CHILD_SUPPLEMENTAL_AD_D_COVERAGE_AMOUNT,&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;PER.PERSON_ID AS ADDITIONAL_INFO_FIELD_1,&#xD;&#xA;&#x9;&#x9;NULL AS ADDITIONAL_INFO_FIELD_2&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;FROM SGT_PERSON_BASE PER&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT ON PER.PERSON_ID = SGT_PERSON_EMPLOYMENT.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT ON PER.PERSON_ID = SGT_PERSON_ACCOUNT.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_OPTION PALOBA ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALOBA.PERSON_ACCOUNT_ID AND PALOBA.LEVEL_OF_COVERAGE_VALUE IN ('BASC')&#xD;&#xA;&#x9;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY PALHSU ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALHSU.PERSON_ACCOUNT_ID AND PALHSU.LEVEL_OF_COVERAGE_VALUE IN ('SPML') AND PALHSU.IS_END_DATED_DUE_TO_LOSS_OF_SUPP_LIFE = 'Y'&#xD;&#xA;&#x9;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY PALHDS ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALHDS.PERSON_ACCOUNT_ID AND PALHDS.LEVEL_OF_COVERAGE_VALUE IN ('DSPL') AND PALHDS.IS_END_DATED_DUE_TO_LOSS_OF_SUPP_LIFE = 'Y'&#xD;&#xA;&#x9;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY PALHSS ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALHSS.PERSON_ACCOUNT_ID AND PALHSS.LEVEL_OF_COVERAGE_VALUE IN ('SPSL') AND PALHSS.IS_END_DATED_DUE_TO_LOSS_OF_SUPP_LIFE = 'Y'&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT_LIFE.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL ON SGT_PERSON_EMPLOYMENT.PERSON_EMPLOYMENT_ID = SGT_PERSON_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN (SELECT&#xD;&#xA;&#x9;&#x9;ADDR_LINE_1 AS ADDR_LINE_1,&#xD;&#xA;&#x9;&#x9;ADDR_LINE_2 AS ADDR_LINE_2,&#xD;&#xA;&#x9;&#x9;ADDR_CITY AS ADDR_CITY,&#xD;&#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.ADDR_STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;&#x9;&#x9;ADDR_ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;&#x9;&#x9;ADDR_ZIP_4_CODE AS ADDR_ZIP_4_CODE,&#xD;&#xA;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY SGT_PERSON_ADDRESS.PERSON_ID ORDER BY&#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'TEMP' AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(CONVERT(DATETIME, SGT_PERSON_ADDRESS.START_DATE, 101) &lt;= CONVERT(DATETIME, GETDATE(), 101) AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;CONVERT(DATETIME, ISNULL(SGT_PERSON_ADDRESS.END_DATE, '99991231'), 101) &gt;= CONVERT(DATETIME, GETDATE(), 101)) THEN 0&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(SGT_PERSON_ADDRESS.END_DATE IS NULL) THEN 1&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ADDRESS.END_DATE IS NOT NULL THEN 2&#xD;&#xA;&#x9;&#x9;&#x9;ELSE 3&#xD;&#xA;&#x9;&#x9;END, SGT_PERSON_ADDRESS.END_DATE DESC) AS SR_NO,&#xD;&#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.PERSON_ID&#xD;&#xA;&#xD;&#xA;&#x9;FROM SGT_PERSON_BASE JOIN&#xD;&#xA;         SGT_PERSON_ADDRESS ON SGT_PERSON_BASE.PERSON_ID = SGT_PERSON_ADDRESS.PERSON_ID) AS TEMP &#xD;&#xA;&#x9;ON TEMP.PERSON_ID = PER.PERSON_ID&#xD;&#xA;&#x9;&#x9;WHERE SR_NO = 1&#xD;&#xA;&#x9;&#x9;AND ISNULL(SGT_PERSON_ACCOUNT_LIFE.RET_VOYA_SENT, 'N') = 'N'  &#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_ID = 13&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT_LIFE.LIFE_INSURANCE_TYPE_VALUE = 'REME'&#xD;&#xA;&#x9;&#x9;AND PALHSU.COVERAGE_AMOUNT &gt; 0&#xD;&#xA;&#x9;&#x9;AND ISNULL(PALHSU.IS_END_DATED_DUE_TO_LOSS_OF_SUPP_LIFE, 'N') = 'Y'&#xD;&#xA;&#x9;&#x9;--AND (DATEADD(MONTH,779,PER.DATE_OF_BIRTH) BETWEEN GETDATE() AND DATEADD(s,-1,DATEADD(dd, DATEDIFF(d,0,GETDATE())--+100,0)))&#xD;&#xA;&#x9;&#x9;AND ISNULL(SGT_PERSON_ACCOUNT_LIFE.PREMIUM_WAIVER_FLAG, 'N') != 'Y'&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_EMPLOYMENT.PERSON_EMPLOYMENT_ID = (SELECT TOP 1 PERSON_EMPLOYMENT_ID FROM SGT_PERSON_EMPLOYMENT EMP&#xD;&#xA;&#x9;&#x9;WHERE TEMP.PERSON_ID = EMP.PERSON_ID&#xD;&#xA;&#x9;&#x9;ORDER BY END_DATE DESC)">
      <parameters />
    </query>
    <query ID="UpdateVoyaSentFlagForTerminatedMembers" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_PERSON_EMPLOYMENT SET VOYA_SENT = 'Y' &#xD;&#xA;WHERE PERSON_EMPLOYMENT_ID IN (&#xD;&#xA;&#xD;&#xA;SELECT distinct &#xD;&#xA;&#x9;    SGT_PERSON_EMPLOYMENT.PERSON_EMPLOYMENT_ID&#xD;&#xA;&#x9;&#x9;FROM SGT_PERSON_BASE PER&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT ON PER.PERSON_ID = SGT_PERSON_EMPLOYMENT.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT ON PER.PERSON_ID = SGT_PERSON_ACCOUNT.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_OPTION PALOBA ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALOBA.PERSON_ACCOUNT_ID AND PALOBA.LEVEL_OF_COVERAGE_VALUE IN ('BASC')&#xD;&#xA;&#x9;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_OPTION PALOSU ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALOSU.PERSON_ACCOUNT_ID AND PALOSU.LEVEL_OF_COVERAGE_VALUE IN ('SPML')&#xD;&#xA;&#x9;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_OPTION PALODS ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALODS.PERSON_ACCOUNT_ID AND PALODS.LEVEL_OF_COVERAGE_VALUE IN ('DSPL')&#xD;&#xA;&#x9;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_OPTION PALOSS ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALOSS.PERSON_ACCOUNT_ID AND PALOSS.LEVEL_OF_COVERAGE_VALUE IN ('SPSL')&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT_LIFE.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL ON SGT_PERSON_EMPLOYMENT.PERSON_EMPLOYMENT_ID = SGT_PERSON_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;INNER JOIN &#xD;&#xA;&#x9;&#x9;(SELECT EMP.PERSON_EMPLOYMENT_ID,&#xD;&#xA;&#x9;&#x9;EMP.START_DATE,EMP.END_DATE, &#xD;&#xA;&#x9;&#x9;PER.PERSON_ID, PAEMPDET.ELECTION_VALUE ,&#xD;&#xA;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY EMP.PERSON_ID ORDER BY EMP.END_DATE DESC) AS RW_NUM&#xD;&#xA;&#x9;&#x9;FROM SGT_PERSON PER&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT PERACCT ON PER.PERSON_ID = PERACCT.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT EMP ON EMP.PERSON_ID = PER.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL EMPDET ON EMP.PERSON_EMPLOYMENT_ID = EMPDET.PERSON_EMPLOYMENT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAEMPDET ON PAEMPDET.PERSON_ACCOUNT_ID = PERACCT.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;AND EMPDET.PERSON_EMPLOYMENT_DTL_ID = PAEMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;&#x9;&#x9;WHERE &#xD;&#xA;&#x9;&#x9;PERACCT.PLAN_ID = 13&#xD;&#xA;&#x9;&#x9;AND EMP.END_DATE IS NOT NULL&#xD;&#xA;&#x9;&#x9;AND EMP.END_DATE &lt;= GETDATE()&#xD;&#xA;&#x9;&#x9;AND PERACCT.PLAN_PARTICIPATION_STATUS_VALUE = 'SUS3'&#xD;&#xA;&#x9;&#x9;AND ISNULL(EMP.VOYA_SENT, 'N') = 'N'&#xD;&#xA;&#x9;&#x9; ) AS TEMP1&#xD;&#xA;&#x9;&#x9;ON PER.PERSON_ID = TEMP1.PERSON_ID&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;INNER JOIN (SELECT&#xD;&#xA;&#x9;&#x9;ADDR_LINE_1 AS ADDR_LINE_1,&#xD;&#xA;&#x9;&#x9;ADDR_LINE_2 AS ADDR_LINE_2,&#xD;&#xA;&#x9;&#x9;ADDR_CITY AS ADDR_CITY,&#xD;&#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.ADDR_STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;&#x9;&#x9;ADDR_ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;&#x9;&#x9;ADDR_ZIP_4_CODE AS ADDR_ZIP_4_CODE,&#xD;&#xA;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY SGT_PERSON_ADDRESS.PERSON_ID ORDER BY&#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'TEMP' AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(CONVERT(DATETIME, SGT_PERSON_ADDRESS.START_DATE, 101) &lt;= CONVERT(DATETIME, GETDATE(), 101) AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;CONVERT(DATETIME, ISNULL(SGT_PERSON_ADDRESS.END_DATE, '99991231'), 101) &gt;= CONVERT(DATETIME, GETDATE(), 101)) THEN 0&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(SGT_PERSON_ADDRESS.END_DATE IS NULL) THEN 1&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ADDRESS.END_DATE IS NOT NULL THEN 2&#xD;&#xA;&#x9;&#x9;&#x9;ELSE 3&#xD;&#xA;&#x9;&#x9;END, SGT_PERSON_ADDRESS.END_DATE DESC) AS SR_NO,&#xD;&#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.PERSON_ID&#xD;&#xA;&#xD;&#xA;&#x9;FROM SGT_PERSON_BASE JOIN&#xD;&#xA;         SGT_PERSON_ADDRESS ON SGT_PERSON_BASE.PERSON_ID = SGT_PERSON_ADDRESS.PERSON_ID) AS TEMP &#xD;&#xA;&#x9;ON TEMP.PERSON_ID = PER.PERSON_ID&#xD;&#xA;&#x9;&#x9;WHERE SR_NO = 1&#xD;&#xA;&#x9;&#x9;AND TEMP1.RW_NUM = 1&#xD;&#xA;&#x9;&#x9;AND TEMP1.END_DATE IS NOT NULL &#xD;&#xA;&#x9;&#x9;AND TEMP1.END_DATE &lt;= GETDATE() &#xD;&#xA;&#x9;&#x9;AND ISNULL(SGT_PERSON_EMPLOYMENT.VOYA_SENT, 'N') = 'N'&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_ID = 13&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE = 'SUS3'&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT_LIFE.LIFE_INSURANCE_TYPE_VALUE = 'NREM'&#xD;&#xA;&#x9;&#x9;AND TEMP1.ELECTION_VALUE = 'ENLD'&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_EMPLOYMENT.PERSON_EMPLOYMENT_ID = (SELECT TOP 1 PERSON_EMPLOYMENT_ID FROM SGT_PERSON_EMPLOYMENT EMP&#xD;&#xA;&#x9;&#x9;WHERE TEMP.PERSON_ID = EMP.PERSON_ID&#xD;&#xA;&#x9;&#x9;AND  EMP.END_DATE IS NOT NULL&#xD;&#xA;&#x9;&#x9;AND EMP.END_DATE &lt;= GETDATE()&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE = 'SUS3' &#xD;&#xA;&#x9;&#x9;ORDER BY END_DATE DESC)&#xD;&#xA;&#x9;&#x9;)">
      <parameters />
    </query>
    <query ID="UpdateRetVoyaSentFlagForRetiredMembers" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_PERSON_ACCOUNT_LIFE SET RET_VOYA_SENT = 'Y'&#xD;&#xA;WHERE PERSON_ACCOUNT_ID IN (&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT SGT_PERSON_ACCOUNT_LIFE.PERSON_ACCOUNT_ID &#xD;&#xA;&#x9;&#x9;FROM SGT_PERSON_BASE PER&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT ON PER.PERSON_ID = SGT_PERSON_EMPLOYMENT.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT ON PER.PERSON_ID = SGT_PERSON_ACCOUNT.PERSON_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE_OPTION PALOBA ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALOBA.PERSON_ACCOUNT_ID AND PALOBA.LEVEL_OF_COVERAGE_VALUE IN ('BASC')&#xD;&#xA;&#x9;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_OPTION PALOSU ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALOSU.PERSON_ACCOUNT_ID AND PALOSU.LEVEL_OF_COVERAGE_VALUE IN ('SPML')&#xD;&#xA;        LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY PALHSU ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALHSU.PERSON_ACCOUNT_ID AND PALHSU.LEVEL_OF_COVERAGE_VALUE IN ('SPML') AND PALHSU.IS_END_DATED_DUE_TO_LOSS_OF_SUPP_LIFE = 'Y'&#xD;&#xA;&#x9;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY PALHDS ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALHDS.PERSON_ACCOUNT_ID AND PALHDS.LEVEL_OF_COVERAGE_VALUE IN ('DSPL') AND PALHDS.IS_END_DATED_DUE_TO_LOSS_OF_SUPP_LIFE = 'Y'&#xD;&#xA;&#x9;&#x9;LEFT JOIN SGT_PERSON_ACCOUNT_LIFE_HISTORY PALHSS ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = PALHSS.PERSON_ACCOUNT_ID AND PALHSS.LEVEL_OF_COVERAGE_VALUE IN ('SPSL') AND PALHSS.IS_END_DATED_DUE_TO_LOSS_OF_SUPP_LIFE = 'Y'&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_LIFE ON SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT_LIFE.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL ON SGT_PERSON_EMPLOYMENT.PERSON_EMPLOYMENT_ID = SGT_PERSON_EMPLOYMENT_DETAIL.PERSON_EMPLOYMENT_ID&#xD;&#xA;&#x9;&#x9;INNER JOIN (SELECT&#xD;&#xA;&#x9;&#x9;ADDR_LINE_1 AS ADDR_LINE_1,&#xD;&#xA;&#x9;&#x9;ADDR_LINE_2 AS ADDR_LINE_2,&#xD;&#xA;&#x9;&#x9;ADDR_CITY AS ADDR_CITY,&#xD;&#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.ADDR_STATE_VALUE AS ADDR_STATE_VALUE,&#xD;&#xA;&#x9;&#x9;ADDR_ZIP_CODE AS ADDR_ZIP_CODE,&#xD;&#xA;&#x9;&#x9;ADDR_ZIP_4_CODE AS ADDR_ZIP_4_CODE,&#xD;&#xA;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY SGT_PERSON_ADDRESS.PERSON_ID ORDER BY&#xD;&#xA;&#x9;&#x9;CASE&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'TEMP' AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(CONVERT(DATETIME, SGT_PERSON_ADDRESS.START_DATE, 101) &lt;= CONVERT(DATETIME, GETDATE(), 101) AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;CONVERT(DATETIME, ISNULL(SGT_PERSON_ADDRESS.END_DATE, '99991231'), 101) &gt;= CONVERT(DATETIME, GETDATE(), 101)) THEN 0&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;(SGT_PERSON_ADDRESS.END_DATE IS NULL) THEN 1&#xD;&#xA;&#x9;&#x9;&#x9;WHEN ADDRESS_TYPE_VALUE = 'PERM' AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;SGT_PERSON_ADDRESS.END_DATE IS NOT NULL THEN 2&#xD;&#xA;&#x9;&#x9;&#x9;ELSE 3&#xD;&#xA;&#x9;&#x9;END, SGT_PERSON_ADDRESS.END_DATE DESC) AS SR_NO,&#xD;&#xA;&#x9;&#x9;SGT_PERSON_ADDRESS.PERSON_ID&#xD;&#xA;&#xD;&#xA;&#x9;FROM SGT_PERSON_BASE JOIN&#xD;&#xA;         SGT_PERSON_ADDRESS ON SGT_PERSON_BASE.PERSON_ID = SGT_PERSON_ADDRESS.PERSON_ID) AS TEMP &#xD;&#xA;&#x9;ON TEMP.PERSON_ID = PER.PERSON_ID&#xD;&#xA;&#x9;&#x9;WHERE SR_NO = 1&#xD;&#xA;&#x9;&#x9;AND ISNULL(SGT_PERSON_ACCOUNT_LIFE.RET_VOYA_SENT, 'N') = 'N'  &#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_ID = 13&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2'&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_ACCOUNT_LIFE.LIFE_INSURANCE_TYPE_VALUE = 'REME'&#xD;&#xA;&#x9;&#x9;--AND PALOSU.COVERAGE_AMOUNT &gt; 0&#xD;&#xA;&#x9;&#x9;AND PALHSU.COVERAGE_AMOUNT &gt; 0&#xD;&#xA;&#x9;&#x9;AND ISNULL(PALHSU.IS_END_DATED_DUE_TO_LOSS_OF_SUPP_LIFE, 'N') = 'Y'&#xD;&#xA;&#x9;&#x9;--AND (DATEADD(MONTH,779,PER.DATE_OF_BIRTH) BETWEEN GETDATE() AND DATEADD(s,-1,DATEADD(dd, DATEDIFF(d,0,GETDATE())+100,0)))&#xD;&#xA;&#x9;&#x9;AND ISNULL(SGT_PERSON_ACCOUNT_LIFE.PREMIUM_WAIVER_FLAG, 'N') != 'Y'&#xD;&#xA;&#x9;&#x9;AND SGT_PERSON_EMPLOYMENT.PERSON_EMPLOYMENT_ID = (SELECT TOP 1 PERSON_EMPLOYMENT_ID FROM SGT_PERSON_EMPLOYMENT EMP&#xD;&#xA;&#x9;&#x9;WHERE TEMP.PERSON_ID = EMP.PERSON_ID&#xD;&#xA;&#x9;&#x9;ORDER BY END_DATE DESC)&#xD;&#xA;)">
      <parameters />
    </query>
    <query ID="UpdatePayeeAccountsInPaymentElection" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql=" SELECT SGT_PERSON_ACCOUNT.PERSON_ID, SGT_PLAN.PLAN_NAME, SGS_CODE_VALUE.DESCRIPTION&#xD;&#xA;FROM   SGT_PERSON_ACCOUNT_PAYMENT_ELECTION INNER JOIN&#xD;&#xA;       SGT_PERSON_ACCOUNT ON SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID INNER JOIN&#xD;&#xA;&#x9;   SGT_PLAN ON SGT_PLAN.PLAN_ID = SGT_PERSON_ACCOUNT.PLAN_ID INNER JOIN&#xD;&#xA;       SGT_PAYEE_ACCOUNT_STATUS ON SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PAYEE_ACCOUNT_ID = SGT_PAYEE_ACCOUNT_STATUS.PAYEE_ACCOUNT_ID INNER JOIN&#xD;&#xA;       SGS_CODE_VALUE ON SGT_PAYEE_ACCOUNT_STATUS.STATUS_ID = SGS_CODE_VALUE.CODE_ID AND SGT_PAYEE_ACCOUNT_STATUS.STATUS_VALUE = SGS_CODE_VALUE.CODE_VALUE&#xD;&#xA;WHERE  (SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.IBS_FLAG = 'Y') &#xD;&#xA;&#x9;   AND (SGT_PERSON_ACCOUNT.PLAN_ID IN (9, 12, 13, 16, 17)) &#xD;&#xA;&#x9;   AND (SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE LIKE 'ENL%') &#xD;&#xA;&#x9;   AND (SGT_PAYEE_ACCOUNT_STATUS.PAYEE_ACCOUNT_STATUS_ID =&#xD;&#xA;           (SELECT TOP (1) PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;           FROM SGT_PAYEE_ACCOUNT_STATUS AS SGT_PAYEE_ACCOUNT_STATUS_1 WITH (nolock)&#xD;&#xA;           WHERE (PAYEE_ACCOUNT_ID = SGT_PERSON_ACCOUNT_PAYMENT_ELECTION.PAYEE_ACCOUNT_ID)&#xD;&#xA;           ORDER BY STATUS_EFFECTIVE_DATE DESC, PAYEE_ACCOUNT_STATUS_ID DESC)) &#xD;&#xA;&#x9;&#x9;   AND (SGT_PAYEE_ACCOUNT_STATUS.STATUS_VALUE IN ('PCLD','PSCD','CNLD','CLDS','TRDS','TRDT','TRPS','TRMD','SPND','SPDS','SPDT','SPPS'))&#xD;&#xA;&#x9;   ORDER BY SGT_PERSON_ACCOUNT.PERSON_ID">
      <parameters />
    </query>
    <query ID="rptNonZeroPCDReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SGT_PERSON_ACCOUNT.PERSON_ID AS [PERSLink ID], SGS_CODE_VALUE.DESCRIPTION AS [Plan Participation Status]&#xD;&#xA;FROM&#xD;&#xA;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION JOIN&#xD;&#xA;SGT_PERSON_ACCOUNT ON SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.PERSON_ACCOUNT_ID = SGT_PERSON_ACCOUNT.PERSON_ACCOUNT_ID INNER JOIN&#xD;&#xA;SGS_CODE_VALUE ON SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_ID = SGS_CODE_VALUE.CODE_ID &#xD;&#xA;AND SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE = SGS_CODE_VALUE.CODE_VALUE&#xD;&#xA;WHERE SGT_PERSON_ACCOUNT.PLAN_PARTICIPATION_STATUS_VALUE IN ('RTRD','WTN1','DSW1','TICR','TRDB','TRDC','TRTF','CAN1')&#xD;&#xA;AND PLAN_ID IN (1,2,3,4,5,6,20,26,27,29) &#xD;&#xA;GROUP BY SGT_PERSON_ACCOUNT.PERSON_ID, SGS_CODE_VALUE.DESCRIPTION&#xD;&#xA;HAVING&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.POST_TAX_ER_AMOUNT) &lt;&gt; 0 OR&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.POST_TAX_EE_AMOUNT) &lt;&gt; 0 OR&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.PRE_TAX_ER_AMOUNT) &lt;&gt; 0 OR&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.PRE_TAX_EE_AMOUNT) &lt;&gt; 0 OR&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.EE_RHIC_AMOUNT) &lt;&gt; 0 OR&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.ER_RHIC_AMOUNT) &lt;&gt; 0 OR&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.EE_ER_PICKUP_AMOUNT) &lt;&gt; 0 OR&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.ER_VESTED_AMOUNT) &lt;&gt; 0 OR&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.INTEREST_AMOUNT) &lt;&gt; 0 OR&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.VESTED_SERVICE_CREDIT) &lt;&gt; 0 OR&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.PENSION_SERVICE_CREDIT) &lt;&gt; 0 OR&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.EMPLOYER_INTEREST) &lt;&gt; 0 OR&#xD;&#xA;SUM(SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION.EMPLOYER_RHIC_INTEREST) &lt;&gt; 0">
      <parameters />
    </query>
    <query ID="UpdateASISentFlag" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_PAYEE_ACCOUNT_ACH_DETAIL SET ASI_SENT_FLAG = 'Y' WHERE PAYEE_ACCOUNT_ACH_DETAIL_ID IN (&#xA;---FOR NON JOB SERVICE PLANS&#xA;SELECT PAYEE_ACCOUNT_ACH_DETAIL_ID FROM &#xA;(&#xA;SELECT &#xA;&#x9;&#x9;PAYEE_ACCOUNT_ACH_DETAIL_ID&#xA;FROM&#xA;(SELECT PERSON_ID, MAX(BENEFIT_RHIC_COMBINE_ID) AS BENEFIT_RHIC_COMBINE_ID&#xA;FROM SGT_BENEFIT_RHIC_COMBINE&#xA;GROUP BY &#xA;&#x9;PERSON_ID) AS A&#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE ON SGT_BENEFIT_RHIC_COMBINE.BENEFIT_RHIC_COMBINE_ID = A.BENEFIT_RHIC_COMBINE_ID&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_BASE ON SGT_BENEFIT_RHIC_COMBINE.PERSON_ID = SGT_PERSON_BASE.PERSON_ID INNER JOIN&#xA;        SGT_PERSON_ADDRESS ON SGT_PERSON_BASE.PERSON_ID = SGT_PERSON_ADDRESS.PERSON_ID INNER JOIN&#xA;        SGS_CODE_VALUE ON SGT_PERSON_ADDRESS.ADDR_COUNTRY_ID = SGS_CODE_VALUE.CODE_ID AND &#xA;        SGT_PERSON_ADDRESS.ADDR_COUNTRY_VALUE = SGS_CODE_VALUE.CODE_VALUE &#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL ON &#xA;        SGT_BENEFIT_RHIC_COMBINE.BENEFIT_RHIC_COMBINE_ID = SGT_BENEFIT_RHIC_COMBINE_DETAIL.BENEFIT_RHIC_COMBINE_ID &#xA;&#x9;&#x9;&#xA;&#x9;&#x9;INNER JOIN&#xA;        SGT_PAYEE_ACCOUNT ON SGT_BENEFIT_RHIC_COMBINE_DETAIL.DONAR_PAYEE_ACCOUNT_ID = SGT_PAYEE_ACCOUNT.PAYEE_ACCOUNT_ID INNER JOIN&#xA;        SGT_BENEFIT_APPLICATION ON SGT_PAYEE_ACCOUNT.APPLICATION_ID = SGT_BENEFIT_APPLICATION.BENEFIT_APPLICATION_ID &#xA;&#x9;&#x9;LEFT JOIN &#xA;&#x9;&#x9;SGT_PAYEE_ACCOUNT_ACH_DETAIL ON SGT_PAYEE_ACCOUNT_ACH_DETAIL.PAYEE_ACCOUNT_ACH_DETAIL_ID = &#x9;&#x9;&#xA;&#x9;&#x9;&#x9;(SELECT TOP 1&#xA;&#x9;&#x9;&#x9;ACHDETAIL_MEMB.PAYEE_ACCOUNT_ACH_DETAIL_ID&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;SGT_PAYEE_ACCOUNT_ACH_DETAIL PAYEEACCT&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL RHICCOMBINEDETAIL ON PAYEEACCT.PAYEE_ACCOUNT_ID = RHICCOMBINEDETAIL.DONAR_PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;AND ISNULL(RHICCOMBINEDETAIL.COMBINE_FLAG, 'N') = 'Y'&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE RHICCOMBINE ON RHICCOMBINEDETAIL.BENEFIT_RHIC_COMBINE_ID = RHICCOMBINE.BENEFIT_RHIC_COMBINE_ID&#xA;&#x9;&#x9;&#x9;AND A.BENEFIT_RHIC_COMBINE_ID = RHICCOMBINE.BENEFIT_RHIC_COMBINE_ID &#xA;&#x9;&#x9;&#x9;OUTER APPLY&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT PACH.CREATED_DATE,PACH.PAYEE_ACCOUNT_ACH_DETAIL_ID,PACH.PRIMARY_ACCOUNT_FLAG,PA.PAYEE_PERSLINK_ID FROM SGT_PAYEE_ACCOUNT_ACH_DETAIL PACH&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PA ON PA.PAYEE_ACCOUNT_ID = PACH.PAYEE_ACCOUNT_ID AND PA.PAYEE_PERSLINK_ID = SGT_PERSON_BASE.PERSON_ID&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL RHICCOMBINEDETAIL ON PA.PAYEE_ACCOUNT_ID = RHICCOMBINEDETAIL.DONAR_PAYEE_ACCOUNT_ID AND ISNULL(RHICCOMBINEDETAIL.COMBINE_FLAG, 'N') = 'Y'&#xA;&#x9;&#x9;&#x9;&#x9;WHERE PRIMARY_ACCOUNT_FLAG = 'Y' AND ISNULL(ASI_SENT_FLAG,'N')='N'&#xA;&#xA;&#x9;&#x9;&#x9;) ACHDETAIL_MEMB&#xA;&#x9;&#x9;&#x9;WHERE RHICCOMBINE.PERSON_ID = SGT_PERSON_BASE.PERSON_ID&#xA;&#x9;&#x9;&#x9;ORDER BY ACHDETAIL_MEMB.CREATED_DATE DESC&#xA;&#x9;&#x9;&#x9;) &#xA;&#x9;&#x9;LEFT JOIN SGT_ORGANIZATION ON ORG_ID = BANK_ORG_ID&#xA;&#xA;WHERE (SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE IN ('APPR','ENDD','CANC')) &#xA;&#x9;&#x9; AND (SGT_BENEFIT_APPLICATION.PLAN_ID IN (1,2,3,4,5,7,20,24,25,26,27,28,29,30)) &#xA;&#x9;&#x9; AND (SGT_BENEFIT_RHIC_COMBINE_DETAIL.COMBINE_FLAG = 'Y')&#xA;&#x9;&#x9; AND (SGT_BENEFIT_RHIC_COMBINE.END_DATE IS NULL OR&#xA;&#x9;&#x9;  (SGT_BENEFIT_RHIC_COMBINE.END_DATE IS NOT NULL) AND DATEADD(D,30,SGT_BENEFIT_RHIC_COMBINE.MODIFIED_DATE) &gt;= GETDATE())&#xA;) TEMP&#x9;&#xA;WHERE TEMP.PAYEE_ACCOUNT_ACH_DETAIL_ID IS NOT NULL&#xA;&#xA;UNION&#xA;&#xA;SELECT PAYEE_ACCOUNT_ACH_DETAIL_ID FROM &#xA;(&#xA;SELECT &#xA;&#x9;&#x9;PAYEE_ACCOUNT_ACH_DETAIL_ID&#xA;FROM&#xA;(SELECT PERSON_ID, MAX(BENEFIT_RHIC_COMBINE_ID) AS BENEFIT_RHIC_COMBINE_ID&#xA;FROM SGT_BENEFIT_RHIC_COMBINE&#xA;GROUP BY &#xA;&#x9;PERSON_ID) AS A&#xA;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE ON SGT_BENEFIT_RHIC_COMBINE.BENEFIT_RHIC_COMBINE_ID = A.BENEFIT_RHIC_COMBINE_ID&#xA;&#x9;&#x9;INNER JOIN SGT_PERSON_BASE ON SGT_BENEFIT_RHIC_COMBINE.PERSON_ID = SGT_PERSON_BASE.PERSON_ID INNER JOIN&#xA;        SGT_PERSON_ADDRESS ON SGT_PERSON_BASE.PERSON_ID = SGT_PERSON_ADDRESS.PERSON_ID INNER JOIN&#xA;        SGS_CODE_VALUE ON SGT_PERSON_ADDRESS.ADDR_COUNTRY_ID = SGS_CODE_VALUE.CODE_ID AND &#xA;        SGT_PERSON_ADDRESS.ADDR_COUNTRY_VALUE = SGS_CODE_VALUE.CODE_VALUE INNER JOIN&#xA;        SGT_BENEFIT_RHIC_COMBINE_DETAIL ON &#xA;        SGT_BENEFIT_RHIC_COMBINE.BENEFIT_RHIC_COMBINE_ID = SGT_BENEFIT_RHIC_COMBINE_DETAIL.BENEFIT_RHIC_COMBINE_ID INNER JOIN&#xA;        SGT_PAYEE_ACCOUNT ON SGT_BENEFIT_RHIC_COMBINE_DETAIL.DONAR_PAYEE_ACCOUNT_ID = SGT_PAYEE_ACCOUNT.PAYEE_ACCOUNT_ID INNER JOIN&#xA;        SGT_BENEFIT_APPLICATION ON SGT_PAYEE_ACCOUNT.APPLICATION_ID = SGT_BENEFIT_APPLICATION.BENEFIT_APPLICATION_ID&#xA;&#x9;&#x9;LEFT JOIN SGT_PAYEE_ACCOUNT_ACH_DETAIL ON SGT_BENEFIT_RHIC_COMBINE_DETAIL.DONAR_PAYEE_ACCOUNT_ID = SGT_PAYEE_ACCOUNT_ACH_DETAIL.PAYEE_ACCOUNT_ID AND SGT_PAYEE_ACCOUNT_ACH_DETAIL.PAYEE_ACCOUNT_ACH_DETAIL_ID = &#xA;&#x9;&#x9;&#x9;(SELECT TOP 1&#xA;&#x9;&#x9;&#x9;ACHDETAIL_MEMB.PAYEE_ACCOUNT_ACH_DETAIL_ID &#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;SGT_PAYEE_ACCOUNT PAYEEACCT&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL RHICCOMBINEDETAIL ON PAYEEACCT.PAYEE_ACCOUNT_ID = RHICCOMBINEDETAIL.DONAR_PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;AND ISNULL(RHICCOMBINEDETAIL.COMBINE_FLAG, 'N') = 'Y'&#xA;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE RHICCOMBINE ON RHICCOMBINEDETAIL.BENEFIT_RHIC_COMBINE_ID = RHICCOMBINE.BENEFIT_RHIC_COMBINE_ID&#xA;&#x9;&#x9;&#x9;AND A.BENEFIT_RHIC_COMBINE_ID = RHICCOMBINE.BENEFIT_RHIC_COMBINE_ID &#xA;&#x9;&#x9;&#x9;OUTER APPLY&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT PACH.CREATED_DATE,PACH.PAYEE_ACCOUNT_ACH_DETAIL_ID,PACH.PRIMARY_ACCOUNT_FLAG,PA.PAYEE_PERSLINK_ID FROM SGT_PAYEE_ACCOUNT_ACH_DETAIL PACH&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_PAYEE_ACCOUNT PA ON PA.PAYEE_ACCOUNT_ID = PACH.PAYEE_ACCOUNT_ID AND PA.PAYEE_PERSLINK_ID = SGT_PERSON_BASE.PERSON_ID&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN SGT_BENEFIT_RHIC_COMBINE_DETAIL RHICCOMBINEDETAIL ON PAYEEACCT.PAYEE_ACCOUNT_ID = RHICCOMBINEDETAIL.DONAR_PAYEE_ACCOUNT_ID&#xA;&#x9;&#x9;&#x9;&#x9;AND ISNULL(RHICCOMBINEDETAIL.COMBINE_FLAG, 'N') = 'Y'&#xA;&#x9;&#x9;&#x9;&#x9;WHERE PA.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID AND PRIMARY_ACCOUNT_FLAG = 'Y' AND ISNULL(ASI_SENT_FLAG,'N')='N'&#xA;&#xA;&#x9;&#x9;&#x9;) ACHDETAIL_MEMB&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;WHERE RHICCOMBINE.PERSON_ID = SGT_PERSON_BASE.PERSON_ID&#xA;&#x9;&#x9;&#x9;ORDER BY ACHDETAIL_MEMB.CREATED_DATE DESC&#xA;&#x9;&#x9;&#x9;) &#xA;&#x9;&#x9;&#x9;LEFT JOIN SGT_ORGANIZATION ON ORG_ID = BANK_ORG_ID&#xA;WHERE (SGT_BENEFIT_RHIC_COMBINE.ACTION_STATUS_VALUE IN ('APPR','ENDD','CANC')) &#xA;&#x9;&#x9; AND (SGT_BENEFIT_APPLICATION.PLAN_ID IN (6,23)) &#xA;&#x9;&#x9; AND (SGT_BENEFIT_RHIC_COMBINE_DETAIL.COMBINE_FLAG = 'Y')&#xA;&#x9;&#x9; AND (SGT_BENEFIT_RHIC_COMBINE.END_DATE IS NULL OR&#xA;&#x9;&#x9;  (SGT_BENEFIT_RHIC_COMBINE.END_DATE IS NOT NULL) AND DATEADD(D,30,SGT_BENEFIT_RHIC_COMBINE.MODIFIED_DATE) &gt;= GETDATE())&#xA;) TEMP &#xA;WHERE TEMP.PAYEE_ACCOUNT_ACH_DETAIL_ID IS NOT NULL&#x9;&#xA;)">
      <parameters />
    </query>
    <query ID="rptDuplicateEmail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; COUNT(P1.EMAIL_ADDRESS) AS COUNT,&#xA;&#x9;P1.EMAIL_ADDRESS INTO #TEMP_EMAIL &#xA;FROM&#xA;&#x9; SGT_PERSON P1 &#xA;WHERE&#xA;&#x9; P1.NDPERS_LOGIN_ID IS NOT NULL AND&#xA;&#x9; DATE_OF_DEATH IS NULL &#xA;&#x9;GROUP BY  P1.EMAIL_ADDRESS HAVING COUNT(P1.EMAIL_ADDRESS) &gt; 2  SELECT&#xA;&#x9; #TEMP_EMAIL.EMAIL_ADDRESS,&#xA;&#x9;P2.PERSON_ID,&#xA;&#x9;P2.FIRST_NAME,&#xA;&#x9;P2.LAST_NAME,&#xA;&#x9;P2.SSN,&#xA;&#x9;CV.DESCRIPTION &#xA;FROM&#xA;&#x9; #TEMP_EMAIL &#xA;&#x9;INNER &#xA;&#x9; JOIN SGT_PERSON P2&#xA;&#x9; ON #TEMP_EMAIL.EMAIL_ADDRESS = P2.EMAIL_ADDRESS &#xA;&#x9;INNER &#xA;&#x9; JOIN SGS_CODE_VALUE CV&#xA;&#x9; ON P2.MARITAL_STATUS_VALUE = CV.CODE_VALUE AND&#xA;&#x9; P2.MARITAL_STATUS_ID = CV.CODE_ID &#xA;WHERE&#xA;&#x9; #TEMP_EMAIL.EMAIL_ADDRESS = P2.EMAIL_ADDRESS AND&#xA;&#x9; P2.NDPERS_LOGIN_ID IS NOT NULL &#xA;&#x9;ORDER BY  #TEMP_EMAIL.EMAIL_ADDRESS">
      <parameters />
    </query>
    <query ID="GetMedicareDependentOfDiscrepancies" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9; HIS.PERSON_ID AS 'PERSLink_ID',&#xA;&#x9;HIS.MEMBER_PERSON_ID AS 'Dependent_Of_ID' &#xA;FROM&#xA;&#x9; SGT_PERSON_ACCOUNT_MEDICARE_PART_D_HISTORY HIS WITH(NOLOCK) &#xA;WHERE&#xA;&#x9; HIS.PLAN_PARTICIPATION_STATUS_VALUE = 'ENL2' AND&#xA;&#x9; GETDATE() BETWEEN HIS.[START_DATE] AND&#xA;&#x9; ISNULL(HIS.END_DATE,&#xA;&#x9;'99991231') AND&#xA;&#x9; HIS.PERSON_ID ! =  HIS.MEMBER_PERSON_ID AND&#xA;&#x9; NOT EXISTS(SELECT&#xA;&#x9; 1 &#xA;FROM&#xA;&#x9; SGT_PERSON_ACCOUNT_DEPENDENT PAD WITH(NOLOCK)  &#xA;&#x9; JOIN SGT_PERSON_ACCOUNT PA WITH(NOLOCK)&#xA;&#x9; ON PA.PERSON_ACCOUNT_ID = PAD.PERSON_ACCOUNT_ID AND&#xA;&#x9; PA.PLAN_ID = 12 AND&#xA;&#x9; GETDATE() BETWEEN PAD.[START_DATE] AND&#xA;&#x9; ISNULL(PAD.END_DATE,&#xA;&#x9;'99991231')  &#xA;&#x9; JOIN SGT_PERSON_DEPENDENT PD WITH(NOLOCK)&#xA;&#x9; ON PD.PERSON_ID = PA.PERSON_ID AND&#xA;&#x9; HIS.MEMBER_PERSON_ID = PA.PERSON_ID AND&#xA;&#x9; PD.DEPENDENT_PERSLINK_ID = HIS.PERSON_ID)">
      <parameters />
    </query>
    <query ID="UpdatePerson401aLimitFlagToY" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_PERSON&#xD;&#xA;SET Limit_401a = 'Y',&#xD;&#xA;MODIFIED_BY = @USER_ID&#xD;&#xA;,MODIFIED_DATE = GETDATE()&#xD;&#xA;,UPDATE_SEQ = UPDATE_SEQ + 1&#xD;&#xA;WHERE PERSON_ID = @PERSON_ID">
      <parameters>
        <parameter ID="@USER_ID" sfwDataType="string" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPersons401aLimitReached" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PERSON_ID AS PERSLink_ID, &#xD;&#xA;Concat(FIRST_NAME, ', ', LAST_NAME) AS Full_Name FROM SGT_PERSON WITH(NOLOCK) WHERE Limit_401a = 'Y'">
      <parameters />
    </query>
    <query ID="GetLineOfDutySurvivours" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--Member&#xD;&#xA;SELECT DISTINCT PER.PERSON_ID AS PERSLink_ID, &#xD;&#xA;PER.LAST_NAME + ' ' + PER.FIRST_NAME AS [Name],&#xD;&#xA;PER.DATE_OF_BIRTH AS DOB, &#xD;&#xA;DATEDIFF(YEAR ,PER.DATE_OF_BIRTH, GETDATE()) AS AGE ,&#xD;&#xA;PER.PERSON_ID AS MEMBER_PERSLINK_ID,&#xD;&#xA;'Member' AS RELATIONSHIP &#xD;&#xA;&#xD;&#xA;FROM SGT_PERSON PER&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PA ON PER.PERSON_ID = PA.PERSON_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT PE ON PE.PERSON_ID = PER.PERSON_ID&#xD;&#xA;INNER JOIN SGT_ORGANIZATION ORG ON ORG.ORG_ID = PE.ORG_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV ON CV.DATA1 = ORG.ORG_CODE AND CV.CODE_ID = 7022&#xD;&#xA;&#xD;&#xA;WHERE PA.PLAN_ID = 12&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;--Dependent&#xD;&#xA;SELECT DISTINCT PER.PERSON_ID AS PERSLink_ID, &#xD;&#xA;PER.LAST_NAME + ' ' + PER.FIRST_NAME AS [Name],&#xD;&#xA;PER.DATE_OF_BIRTH AS DOB, &#xD;&#xA;DATEDIFF(YEAR ,PER.DATE_OF_BIRTH, GETDATE()) AS AGE ,&#xD;&#xA;DEP.PERSON_ID AS MEMBER_PERSLINK_ID,&#xD;&#xA;CV1.DESCRIPTION AS RELATIONSHIP &#xD;&#xA;FROM SGT_PERSON PER&#xD;&#xA;INNER JOIN SGT_PERSON_DEPENDENT DEP ON PER.PERSON_ID = DEP.DEPENDENT_PERSLINK_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT EMP ON EMP.PERSON_ID = DEP.PERSON_ID &#xD;&#xA;INNER JOIN SGT_ORGANIZATION ORG ON ORG.ORG_ID = EMP.ORG_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE CV ON CV.DATA1 = ORG.ORG_CODE AND CV.CODE_ID = 7022&#xD;&#xA;LEFT JOIN SGS_CODE_VALUE CV1 ON CV1.CODE_ID = DEP.RELATIONSHIP_ID AND CV1.CODE_VALUE = DEP.RELATIONSHIP_VALUE">
      <parameters />
    </query>
    <query ID="GetPersonIdFromId" sfwQueryType="ScalarQuery" sfwDataType="int" sfwSql="select person_id from sgt_person where person_id = @person_id">
      <parameters>
        <parameter ID="@person_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="OrgWithActivehealthPlan" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK)&#xA;JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK) ON PED.PERSON_EMPLOYMENT_ID=PE.PERSON_EMPLOYMENT_ID&#xA;JOIN SGT_ORGANIZATION ORG WITH(NOLOCK) ON PE.ORG_ID = ORG.ORG_ID&#xA;JOIN SGT_ORG_PLAN OP WITH(NOLOCK) ON ORG.ORG_ID = OP.ORG_ID&#xA;WHERE OP.PLAN_ID=12 AND ORG.EMP_CATEGORY_VALUE IN ('DHSU','STAT') AND ORG.STATUS_VALUE = 'ACTV' AND&#xA;GETDATE() BETWEEN OP.PARTICIPATION_START_DATE AND ISNULL(OP.PARTICIPATION_END_DATE,'01/01/9999') AND&#xA;PED.TYPE_VALUE='TEMP' AND PE.PERSON_EMPLOYMENT_ID=@PERSON_EMPLOYMENT_ID AND PE.ORG_ID=@ORG_ID AND PE.PERSON_ID=@PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_EMPLOYMENT_ID" sfwDataType="int" />
        <parameter ID="@ORG_ID" sfwDataType="int" />
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="MaritalStatusChangeBatchBPM" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select * from sgt_person WITH(NOLOCK) where &#xD;&#xA;MS_Change_batch_flag = 'Y'&#xD;&#xA;AND MARITAL_STATUS_VALUE = 'DVRC'">
      <parameters />
    </query>
    <query ID="LoadTFFRDualMembers" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SSN, LAST_NAME,FIRST_NAME, MIDDLE_NAME,DATE_OF_BIRTH, [MONTH], [YEAR], SALARY, VSC, PERSON_ID FROM &#xD;&#xA;(&#xD;&#xA;&#x9;SELECT P.SSN, P.LAST_NAME, P.FIRST_NAME, P.MIDDLE_NAME, P.DATE_OF_BIRTH, MONTH(PARC.EFFECTIVE_DATE) AS MONTH, &#xD;&#xA;&#x9;YEAR(PARC.EFFECTIVE_DATE) AS YEAR, SUM(PARC.SALARY_AMOUNT) AS SALARY, SUM(PARC.VESTED_SERVICE_CREDIT) AS VSC, P.PERSON_ID&#xD;&#xA;&#x9;FROM SGT_PERSON_ACCOUNT PA (NOLOCK) INNER JOIN SGT_PERSON P (NOLOCK) ON PA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC (NOLOCK) ON PA.PERSON_ACCOUNT_ID = PARC.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;INNER JOIN SGT_PLAN ON PA.PLAN_ID = SGT_PLAN.PLAN_ID&#xD;&#xA;&#x9;WHERE  &#xD;&#xA;&#x9;P.TFFR_REQUEST = 'Y' AND&#xD;&#xA;&#x9;SGT_PLAN.BENEFIT_TYPE_VALUE = 'RETR' AND&#xD;&#xA;&#x9;PA.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1','SUS2','RTRD') AND&#xD;&#xA;&#x9;PARC.SUBSYSTEM_VALUE &lt;&gt; 'PURC'&#xD;&#xA;&#x9;GROUP BY P.SSN, P.LAST_NAME, P.FIRST_NAME, P.MIDDLE_NAME, P.DATE_OF_BIRTH, MONTH(PARC.EFFECTIVE_DATE), YEAR(PARC.EFFECTIVE_DATE), P.PERSON_ID&#xD;&#xA;&#x9;HAVING SUM(PARC.SALARY_AMOUNT) &gt; 0 AND SUM(PARC.VESTED_SERVICE_CREDIT) &gt; 0&#xD;&#xA;&#xD;&#xA;&#x9;UNION ALL&#xD;&#xA;&#xD;&#xA;&#x9;SELECT P.SSN, P.LAST_NAME, P.FIRST_NAME, P.MIDDLE_NAME, P.DATE_OF_BIRTH, '99' AS MONTH, &#xD;&#xA;&#x9;'9999' AS YEAR, '0' AS SALARY, CEILING(SUM(PARC.VESTED_SERVICE_CREDIT)) AS VSC, P.PERSON_ID&#xD;&#xA;&#x9;FROM SGT_PERSON_ACCOUNT PA (NOLOCK) INNER JOIN SGT_PERSON P (NOLOCK) ON PA.PERSON_ID = P.PERSON_ID&#xD;&#xA;&#x9;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC (NOLOCK) ON PA.PERSON_ACCOUNT_ID = PARC.PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;INNER JOIN SGT_PLAN ON PA.PLAN_ID = SGT_PLAN.PLAN_ID&#xD;&#xA;&#x9;WHERE&#xD;&#xA;&#x9;P.TFFR_REQUEST = 'Y' AND&#xD;&#xA;&#x9;SGT_PLAN.BENEFIT_TYPE_VALUE = 'RETR' AND&#xD;&#xA;&#x9;PA.PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1','SUS2','RTRD') AND&#xD;&#xA;&#x9;PARC.SUBSYSTEM_VALUE = 'PURC'&#xD;&#xA;&#x9;GROUP BY P.SSN, P.LAST_NAME, P.FIRST_NAME, P.MIDDLE_NAME, P.DATE_OF_BIRTH, P.PERSON_ID&#xD;&#xA;&#x9;HAVING SUM(PARC.VESTED_SERVICE_CREDIT) &gt; 0&#xD;&#xA;) AS TEMP&#xD;&#xA;ORDER BY TEMP.SSN, TEMP.[YEAR], TEMP.[MONTH]">
      <parameters />
    </query>
    <query ID="SSNMatchFile" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select SFD.RECORD_DATA from SGS_FILE_HDR SFH&#xD;&#xA;Inner join SGS_FILE_DTL SFD (NOLOCK) ON SFD.FILE_HDR_ID= SFH.FILE_HDR_ID&#xD;&#xA;where SFH.FILE_ID=118 and SFH.FILE_HDR_ID =@filehdrid">
      <parameters>
        <parameter ID="@filehdrid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadBeneficiaryandDependentDataForCor" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;SPD.PERSON_ID AS PERSON_ID,&#xD;&#xA;SPD.PERSON_DEPENDENT_ID AS PERSON_DEPENDENT_ID,&#xD;&#xA;0 AS BENEFICIARY_ID,&#xD;&#xA;SPAD.PERSON_ACCOUNT_ID AS PERSON_ACCOUNT_ID,&#xD;&#xA;'' AS BENEFICIARY_RELATIONSHIP,&#xD;&#xA;SPD.RELATIONSHIP_VALUE AS DEPENDENT_RELATIONSHIP,&#xD;&#xA;0 AS ORG_ID&#xD;&#xA;FROM SGT_PERSON_DEPENDENT SPD WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_DEPENDENT SPAD WITH(NOLOCK) ON SPAD.PERSON_DEPENDENT_ID=SPD.PERSON_DEPENDENT_ID&#xD;&#xA;WHERE SPD.PERSON_ID=@PERSON_ID&#xD;&#xA;&#xD;&#xA;UNION&#xD;&#xA;&#xD;&#xA;SELECT SPB.PERSON_ID AS PERSON_ID,&#xD;&#xA;0 AS PERSON_DEPENDENT_ID,&#xD;&#xA;SPB.BENEFICIARY_ID AS BENEFICIARY_ID,&#xD;&#xA;SPAB.PERSON_ACCOUNT_ID AS PERSON_ACCOUNT_ID,&#xD;&#xA;SPB.RELATIONSHIP_VALUE AS BENEFICIARY_RELATIONSHIP,&#xD;&#xA;'' AS DEPENDENT_RELATIONSHIP,&#xD;&#xA;ISNULL(O.ORG_ID,0) AS ORG_ID&#xD;&#xA;FROM SGT_PERSON_BENEFICIARY SPB WITH(NOLOCK)&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT_BENEFICIARY SPAB WITH(NOLOCK) ON SPAB.BENEFICIARY_ID=SPB.BENEFICIARY_ID&#xD;&#xA;LEFT OUTER JOIN SGT_BENEFIT_APPLICATION_BENEFICIARY SBAB WITH(NOLOCK) ON SPAB.BENEFICIARY_ID= SBAB.BENEFICIARY_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION O ON SPB.benificiary_org_id = o.org_id&#xD;&#xA;WHERE SPB.PERSON_ID=@PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadBeneficiaryandDependentToDataForCor" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT A.PERSON_ACCOUNT_ID,&#xD;&#xA;NULL AS DEPENDENT_TO,&#xD;&#xA;'Y' AS BENEFICIARY_TO,&#xD;&#xA;A.PERSON_ACCOUNT_BENEFICIARY_ID,&#xD;&#xA;0 AS PERSON_ACCOUNT_DEPENDENT_ID,&#xD;&#xA;B.RELATIONSHIP_VALUE AS BENEFICIARY_RELATIONSHIP,&#xD;&#xA;NULL AS DEPENDENT_RELATIONSHIP&#xD;&#xA; FROM SGT_PERSON_ACCOUNT_BENEFICIARY A&#xD;&#xA;INNER JOIN SGT_PERSON_BENEFICIARY B ON A.BENEFICIARY_ID =  B.BENEFICIARY_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT D ON D.PERSON_ACCOUNT_ID = A.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE B.BENEFICIARY_PERSON_ID = @PERSON_ID&#xD;&#xA;&#xD;&#xA;UNION &#xD;&#xA;&#xD;&#xA; SELECT &#xD;&#xA; A.PERSON_ACCOUNT_ID,&#xD;&#xA;'Y' AS DEPENDENT_TO,&#xD;&#xA;NULL AS BENEFICIARY_TO,&#xD;&#xA;0 AS PERSON_ACCOUNT_BENEFICIARY_ID,&#xD;&#xA;a.PERSON_ACCOUNT_DEPENDENT_ID,&#xD;&#xA;NULL AS BENEFICIARY_RELATIONSHIP,&#xD;&#xA;B.RELATIONSHIP_VALUE AS DEPENDENT_RELATIONSHIP&#xD;&#xA;  FROM SGT_PERSON_ACCOUNT_DEPENDENT A&#xD;&#xA;INNER JOIN SGT_PERSON_DEPENDENT B ON A.PERSON_DEPENDENT_ID =  B.PERSON_DEPENDENT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT D ON D.PERSON_ACCOUNT_ID = A.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE B.DEPENDENT_PERSLINK_ID = @PERSON_ID">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadCorPersonBeneficiary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;p.person_id as benes_person_name,&#xD;&#xA;SCBD.*,SPAB.*,o.*&#xD;&#xA;FROM SGT_COR_BENE_DEP SCBD WITH(NOLOCK)&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT_BENEFICIARY SPAB WITH(NOLOCK) ON SPAB.BENEFICIARY_ID=SCBD.BENEFICIARY_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON_ACCOUNT SPA WITH(NOLOCK) ON SPA.PERSON_ACCOUNT_ID=SPAB.PERSON_ACCOUNT_ID&#xD;&#xA;LEFT OUTER JOIN SGT_PERSON P WITH(NOLOCK) ON SCBD.PERSON_ID = P.PERSON_ID&#xD;&#xA;LEFT OUTER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON SCBD.ORG_ID = O.ORG_ID&#xD;&#xA;WHERE DEATH_NOTIFICATION_ID = @DEATH_NOTIFICATION_ID AND ISNULL(SCBD.BENEFICIARY_ID, 0) &gt; 0&#xD;&#xA;AND ISNULL(SPA.PLAN_PARTICIPATION_STATUS_VALUE, '') NOT LIKE '%CAN%'">
      <parameters>
        <parameter ID="@DEATH_NOTIFICATION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadCorPersonDepedent" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_COR_BENE_DEP WITH(NOLOCK) WHERE DEATH_NOTIFICATION_ID = @DEATH_NOTIFICATION_ID and ISNULL(PERSON_DEPENDENT_ID,0) &gt; 0">
      <parameters>
        <parameter ID="@DEATH_NOTIFICATION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadCorPersonAccountBeneficiary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM &#xD;&#xA;SGT_COR_BENE_DEP_TO BD WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_BENEFICIARY A WITH(NOLOCK) ON A.PERSON_ACCOUNT_BENEFICIARY_ID = BD.PERSON_ACCOUNT_BENEFICIARY_ID&#xD;&#xA;INNER JOIN SGT_PERSON_BENEFICIARY B ON A.BENEFICIARY_ID =  B.BENEFICIARY_ID&#xD;&#xA;INNER JOIN SGT_PERSON C ON C.PERSON_ID = B.BENEFICIARY_PERSON_ID&#xD;&#xA;WHERE BD.DEATH_NOTIFICATION_ID = @DEATH_NOTIFICATION_ID AND ISNULL(BD.BENEFICIARY_TO,'N') = 'Y'">
      <parameters>
        <parameter ID="@DEATH_NOTIFICATION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadCorPersonAccountDependent" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM &#xD;&#xA;SGT_COR_BENE_DEP_TO BD WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_DEPENDENT A WITH(NOLOCK) ON A.PERSON_ACCOUNT_DEPENDENT_ID = BD.PERSON_ACCOUNT_DEPENDENT_ID&#xD;&#xA;INNER JOIN SGT_PERSON_DEPENDENT B ON A.PERSON_DEPENDENT_ID =  B.PERSON_DEPENDENT_ID&#xD;&#xA;INNER JOIN SGT_PERSON C ON C.PERSON_ID = B.DEPENDENT_PERSLINK_ID&#xD;&#xA;WHERE BD.DEATH_NOTIFICATION_ID = @DEATH_NOTIFICATION_ID AND ISNULL(BD.DEPENDENT_TO,'N') = 'Y'">
      <parameters>
        <parameter ID="@DEATH_NOTIFICATION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPersonDeathNotices" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_DEATH_NOTICE DN WITH(NOLOCK) &#xD;&#xA;INNER JOIN SGT_CONTACT_TICKET CT WITH(NOLOCK) ON CT.CONTACT_TICKET_ID= DN.CONTACT_TICKET_ID&#xD;&#xA;WHERE DN.PERSLINK_ID=@PERSON_ID AND STATUS_VALUE = 'OPEN' ORDER BY 1 DESC">
      <parameters>
        <parameter ID="@PERSON_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="FileHeader118InUpload" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select  FILE_HDR_ID from SGS_FILE_HDR where FILE_ID=118 and STATUS_VALUE='UPLD' order by PROCESSED_DATE asc">
      <parameters />
    </query>
    <query ID="LoadPlanDetailsForWelcomeLetter" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;    Plan_NAME as istrPlanName,&#xD;&#xA;    YOU_MUST_ENROLL_OR_WAIVE AS istrYouMustEnrollOrWaive,&#xD;&#xA;    IF_YOU_DO_NO_ACTION AS istrIfYouDoNoAction&#xD;&#xA;FROM SGT_WELCOME_ORG_BENEFIT_PLAN WOBP&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_EMPLOYMENT_DETAIL PAED ON WOBP.PLAN_ID = PAED.PLAN_ID AND PAED.PERSON_EMPLOYMENT_DTL_ID = @PED_ID">
      <parameters>
        <parameter ID="@PED_ID" sfwDataType="int" />
      </parameters>
    </query>
  </queries>
  <attributes>
    <attribute ID="PersonId" sfwType="Column" sfwValue="person_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="True" sfwDataType="int" sfwRequired="False" />
    <attribute ID="FirstName" sfwType="Column" sfwValue="first_name" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="MiddleName" sfwType="Column" sfwValue="middle_name" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="LastName" sfwType="Column" sfwValue="last_name" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="NamePrefixDescription" sfwType="Description" sfwValue="name_prefix_description" />
    <attribute ID="NamePrefixId" sfwType="Column" sfwValue="name_prefix_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="301" sfwDataType="int" sfwRequired="False" />
    <attribute ID="NamePrefixValue" sfwType="Column" sfwValue="name_prefix_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="NameSuffixDescription" sfwType="Description" sfwValue="name_suffix_description" />
    <attribute ID="NameSuffixId" sfwType="Column" sfwValue="name_suffix_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="302" sfwDataType="int" sfwRequired="False" />
    <attribute ID="NameSuffixValue" sfwType="Column" sfwValue="name_suffix_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="DateOfBirth" sfwType="Column" sfwValue="date_of_birth" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="DateOfBirthCertified" sfwType="Column" sfwValue="date_of_birth_certified" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DateOfDeath" sfwType="Column" sfwValue="date_of_death" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="DateOfDeathCertified" sfwType="Column" sfwValue="date_of_death_certified" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DateOfDeathReportedOn" sfwType="Column" sfwValue="date_of_death_reported_on" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="DateOfDeathCertifiedOn" sfwType="Column" sfwValue="date_of_death_certified_on" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="Ssn" sfwType="Column" sfwValue="ssn" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="9" />
    <attribute ID="GenderDescription" sfwType="Description" sfwValue="gender_description" />
    <attribute ID="GenderId" sfwType="Column" sfwValue="gender_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="300" sfwDataType="int" sfwRequired="False" />
    <attribute ID="GenderValue" sfwType="Column" sfwValue="gender_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="MaritalStatusDescription" sfwType="Description" sfwValue="marital_status_description" />
    <attribute ID="MaritalStatusId" sfwType="Column" sfwValue="marital_status_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="306" sfwDataType="int" sfwRequired="False" />
    <attribute ID="MaritalStatusValue" sfwType="Column" sfwValue="marital_status_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="HomePhoneNo" sfwType="Column" sfwValue="home_phone_no" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="WorkPhoneNo" sfwType="Column" sfwValue="work_phone_no" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CellPhoneNo" sfwType="Column" sfwValue="cell_phone_no" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="FaxNo" sfwType="Column" sfwValue="fax_no" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="EmailAddress" sfwType="Column" sfwValue="email_address" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CommunicationPreferenceDescription" sfwType="Description" sfwValue="communication_preference_description" />
    <attribute ID="CommunicationPreferenceId" sfwType="Column" sfwValue="communication_preference_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="303" sfwDataType="int" sfwRequired="False" />
    <attribute ID="CommunicationPreferenceValue" sfwType="Column" sfwValue="communication_preference_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PeoplesoftId" sfwType="Column" sfwValue="peoplesoft_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="7" />
    <attribute ID="RestrictionFlag" sfwType="Column" sfwValue="restriction_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="RestrictedBy" sfwType="Column" sfwValue="restricted_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="RestrictedDate" sfwType="Column" sfwValue="restricted_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="RestrictionReasonDescription" sfwType="Description" sfwValue="restriction_reason_description" />
    <attribute ID="RestrictionReasonId" sfwType="Column" sfwValue="restriction_reason_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwCodeID="1921" sfwDataType="int" sfwRequired="False" />
    <attribute ID="RestrictionReasonValue" sfwType="Column" sfwValue="restriction_reason_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="WelcomeBatchLetterSentFlag" sfwType="Column" sfwValue="welcome_batch_letter_sent_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="BeneficiaryRequiredFlag" sfwType="Column" sfwValue="beneficiary_required_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="UnrestrictedBy" sfwType="Column" sfwValue="unrestricted_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="SuppressSsnFlag" sfwType="Column" sfwValue="suppress_ssn_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="IsPersonDeletedFlag" sfwType="Column" sfwValue="is_person_deleted_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="DeletedSsn" sfwType="Column" sfwValue="deleted_ssn" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="9" />
    <attribute ID="SuppressAnnualStatementFlag" sfwType="Column" sfwValue="suppress_annual_statement_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="JobServiceSickLeave" sfwType="Column" sfwValue="job_service_sick_leave" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="NdpersLoginId" sfwType="Column" sfwValue="ndpers_login_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="255" />
    <attribute ID="PreviousNdpersLoginId" sfwType="Column" sfwValue="previous_ndpers_login_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="255" />
    <attribute ID="MsChangeDate" sfwType="Column" sfwValue="ms_change_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="MsChangeBatchFlag" sfwType="Column" sfwValue="ms_change_batch_flag" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="WorkPhoneExt" sfwType="Column" sfwValue="work_phone_ext" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" />
    <attribute ID="SuppressNewsletterFlag" sfwType="Column" sfwValue="suppress_newsletter_flag" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" />
    <attribute ID="DbAddlContrib" sfwType="Column" sfwValue="db_addl_contrib" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" />
    <attribute ID="PhoneWaiverFlag" sfwType="Column" sfwValue="phone_waiver_flag" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" />
    <attribute ID="CertifyDate" sfwType="Column" sfwValue="certify_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" />
    <attribute ID="EmailWaiverDate" sfwType="Column" sfwValue="email_waiver_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" />
    <attribute ID="EmailWaiverFlag" sfwType="Column" sfwValue="email_waiver_flag" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" />
    <attribute ID="ActivationCode" sfwType="Column" sfwValue="activation_code" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" />
    <attribute ID="PreEmailAddress" sfwType="Column" sfwValue="pre_email_address" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="50" />
    <attribute ID="IsUserLocked" sfwType="Column" sfwValue="is_user_locked" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" />
    <attribute ID="FailedLoginAttemptCount" sfwType="Column" sfwValue="failed_login_attempt_count" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" />
    <attribute ID="ActivationCodeFlag" sfwType="Column" sfwValue="activation_code_flag" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" />
    <attribute ID="ActivationCodeDate" sfwType="Column" sfwValue="activation_code_date" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="DateTime" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrDOB" sfwValue="icdoPerson.istrDOB" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrConfirmationTrackingNumber" sfwValue="icdoPerson.istrConfirmationTrackingNumber" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintVerificationCode" sfwValue="icdoPerson.iintVerificationCode" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrDeathIndicator" sfwValue="icdoPerson.istrDeathIndicator" />
    <attribute sfwDataType="string" sfwType="Property" ID="AddrLine1" sfwValue="icdoFilePersonAddress.addr_line_1" />
    <attribute sfwDataType="string" sfwType="Property" ID="AddrLine2" sfwValue="icdoFilePersonAddress.addr_line_2" />
    <attribute sfwDataType="string" sfwType="Property" ID="AddrCity" sfwValue="icdoFilePersonAddress.addr_city" />
    <attribute sfwDataType="string" sfwType="Property" ID="AddrStateValue" sfwValue="icdoFilePersonAddress.addr_state_value" />
    <attribute sfwDataType="string" sfwType="Property" ID="AddrZipCode" sfwValue="icdoFilePersonAddress.addr_zip_code" />
    <attribute sfwDataType="string" sfwType="Property" ID="AddrZip4Code" sfwValue="icdoFilePersonAddress.addr_zip_4_code" />
    <attribute sfwDataType="string" sfwType="Property" ID="FullName" sfwValue="icdoPerson.FullName" />
    <attribute sfwDataType="string" sfwType="Property" ID="LastFourDigitsOfSSN" sfwValue="icdoPerson.LastFourDigitsOfSSN" />
    <attribute sfwType="Collection" sfwEntity="entPersonContact" ID="lstPersonContact" sfwValue="icolPersonContact" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccount" ID="lstActivePensionAccounts" sfwValue="iclbActivePensionAccounts" />
    <attribute sfwType="Collection" sfwEntity="entPersonBeneficiary" ID="lstPersonPlanBeneficiaryForDeceased" sfwValue="iclbPersonPlanBeneficiaryForDeceased" />
    <attribute sfwType="Collection" sfwEntity="entBenefitApplication" ID="lstBeneficiaryApplication" sfwValue="iclbBeneficiaryApplication" />
    <attribute sfwType="Collection" sfwEntity="entPersonDependent" ID="lstPersonDependent" sfwValue="iclbPersonDependent" />
    <attribute sfwType="Collection" sfwEntity="entPersonEmployment" ID="lstPersonEmployment" sfwValue="icolPersonEmployment" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountBeneficiary" ID="lstPersonAccountBeneficiary" sfwValue="iclbPersonAccountBeneficiary" />
    <attribute sfwType="Collection" sfwEntity="entBenefitApplication" ID="lstBeneficiaryApplicationForBeneficiaryTo" sfwValue="iclbBeneficiaryApplicationForBeneficiaryTo" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountDependent" ID="lstPersonAccountDependent" sfwValue="iclbPersonAccountDependent" />
    <attribute sfwType="Collection" sfwEntity="entPersonContact" ID="lstPersonContactTo" sfwValue="iclbPersonContactTo" />
    <attribute sfwType="Collection" sfwEntity="entPayeeAccount" ID="lstMemberPlusAlternatePayeeAccounts" sfwValue="iclbMemberPlusAlternatePayeeAccounts" />
    <attribute sfwDataType="string" sfwType="Property" ID="PersonIdWithName" sfwValue="icdoPerson.PersonIdWithName" />
    <attribute sfwDataType="string" sfwType="Property" ID="PersonName" sfwValue="icdoPerson.PersonName" />
    <attribute sfwDataType="string" sfwType="Property" ID="PayeeName" sfwValue="icdoPerson.PayeeName" />
    <attribute sfwType="Collection" sfwEntity="entPersonBeneficiary" ID="lstPersonBeneficiary" sfwValue="iclbPersonBeneficiary" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrRecipientPersonFullName" sfwValue="icdoPerson.istrRecipientPersonFullName" />
    <attribute sfwDataType="string" sfwType="Property" ID="PersonNameForSorting" sfwValue="icdoPerson.PersonNameForSorting" />
    <attribute sfwDataType="string" sfwType="Property" ID="PersonMemberName" sfwValue="icdoPerson.PersonMemberName" />
    <attribute sfwDataType="string" sfwType="Property" ID="MemberPersonName" sfwValue="icdoPerson.MemberPersonName" />
    <attribute sfwDataType="string" sfwType="Property" ID="MemberName" sfwValue="icdoPerson.MemberName" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPersonIdFullNameSSN" sfwValue="icdoPerson.istrPersonIdFullNameSSN" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccount" ID="lstPersonAccount" sfwValue="icolPersonAccount" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintScreenIdentifier" sfwValue="iintScreenIdentifier" />
    <attribute sfwDataType="string" sfwType="Property" ID="TempSsn" sfwValue="icdoPerson.temp_ssn" />
    <attribute ID="objPersonCurrentAddress" sfwType="Object" sfwEntity="entPersonAddress" sfwValue="ibusPersonCurrentAddress" />
    <attribute sfwDataType="string" sfwType="Property" ID="BeneficiaryRequiredFlagForDisplay" sfwValue="beneficiary_required_flag_for_display" />
    <attribute ID="objDeathNotification" sfwType="Object" sfwEntity="entDeathNotification" sfwValue="ibusDeathNotification" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintPlanIDDental" sfwValue="iintPlanIDDental" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintPlanIdGroupHealth" sfwValue="iintPlanIdGroupHealth" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintPlanIdVision" sfwValue="iintPlanIdVision" />
    <attribute sfwDataType="string" sfwType="Property" ID="IblnIsValidateNewTrue" sfwValue="iblnIsValidateNewTrue" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintPlanidMedicare" sfwValue="iintPlanidMedicare" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrMember" sfwValue="istrMember" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrSpouse" sfwValue="istrSpouse" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrDependent" sfwValue="istrDependent" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrAlternatePayee" sfwValue="istrAlternatePayee" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrRetiree" sfwValue="istrRetiree" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrBeneficiary" sfwValue="istrBeneficiary" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPayee" sfwValue="istrPayee" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPOA" sfwValue="istrPOA" />
    <attribute sfwType="Collection" sfwEntity="entPersonAddress" ID="lstPersonAddress" sfwValue="icolPersonAddress" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberSummaryCurrentPremiumAmt" sfwValue="idecMemberSummaryCurrentPremiumAmt" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberSummaryRhicAmt" sfwValue="idecMemberSummaryRhicAmt" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberSummaryJSRhicAmount" sfwValue="idecMemberSummaryJSRhicAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberSummaryNetPremiumAmt" sfwValue="idecMemberSummaryNetPremiumAmt" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberSummaryBalanceForward" sfwValue="idecMemberSummaryBalanceForward" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberPaymentsDone" sfwValue="idecMemberPaymentsDone" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecAdjustmentsPaid" sfwValue="idecAdjustmentsPaid" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecMemberSummaryTotalDueAmt" sfwValue="idecMemberSummaryTotalDueAmt" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecPendingAdjustments" sfwValue="idecPendingAdjustments" />
    <attribute sfwType="Collection" sfwEntity="entPersonTffrTiaaService" ID="lstTffrTiaaService" sfwValue="iclbTffrTiaaService" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecGrossAmountPaid" sfwValue="idecGrossAmountPaid" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecNonTaxableAmountPaid" sfwValue="idecNonTaxableAmountPaid" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTaxableAmountPaid" sfwValue="idecTaxableAmountPaid" />
    <attribute sfwType="Collection" sfwEntity="entPaymentHistoryHeader" ID="lstPaymentDetails" sfwValue="iclbPaymentDetails" />
    <attribute sfwType="Collection" sfwEntity="entPersonBeneficiary" ID="lstBeneficiaryTo" sfwValue="iclbBeneficiaryTo" />
    <attribute sfwType="Collection" sfwEntity="entPerson" ID="lstDependentTo" sfwValue="iclbDependentTo" />
    <attribute sfwType="Collection" sfwEntity="entPerson" ID="lstContactTo" sfwValue="iclbContactTo" />
    <attribute sfwType="Collection" sfwEntity="entSeminarAttendeeDetail" ID="lstSeminarAttendeeDetail" sfwValue="icolSeminarAttendeeDetail" />
    <attribute sfwType="Collection" sfwEntity="entNotes" ID="lstNotes" sfwValue="iclbNotes" />
    <attribute sfwType="Collection" sfwEntity="entServicePurchaseHeader" ID="lstServicePurchaseHeader" sfwValue="iclbServicePurchaseHeader" />
    <attribute sfwType="Collection" sfwEntity="entDeathNotification" ID="lstDeathNotification" sfwValue="iclbDeathNotification" />
    <attribute sfwType="Collection" sfwEntity="entBenefitDroApplication" ID="lstDROApplication" sfwValue="iclbDROApplication" />
    <attribute sfwType="Collection" sfwEntity="entCase" ID="lstCase" sfwValue="iclbCase" />
    <attribute sfwType="Collection" sfwEntity="entMasStatementFile" ID="lstMASStatementFile" sfwValue="iclbMASStatementFile" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountRetirement" ID="lstPensionAccounts" sfwValue="iclbPensionAccounts" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountRetirement" ID="lstClosedPensionAccounts" sfwValue="iclbClosedPensionAccounts" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccountDeferredComp" ID="lstDeferredCompAccounts" sfwValue="iclbDeferredCompAccounts" />
    <attribute sfwType="Collection" sfwEntity="entBenefitApplication" ID="lstBenefitApplication" sfwValue="iclbBenefitApplication" />
    <attribute sfwType="Collection" sfwEntity="entBenefitRhicCombine" ID="lstBenefitRhicCombine" sfwValue="iclbBenefitRhicCombine" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccount" ID="lstActiveInsuranceAccounts" sfwValue="iclbActiveInsuranceAccounts" />
    <attribute sfwType="Collection" sfwEntity="entPersonAccount" ID="lstClosedInsuranceAccounts" sfwValue="iclbClosedInsuranceAccounts" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPossibleDuplicateEmployerName" sfwValue="istrPossibleDuplicateEmployerName" />
    <attribute sfwType="Collection" sfwEntity="entContactTicket" ID="lstPersonContactTicket" sfwValue="icolPersonContactTicket" />
    <attribute sfwType="Collection" sfwEntity="entBpmActivityInstanceHistory" ID="lstWorkflowProcessHistory" sfwValue="iclbWorkflowProcessHistory" />
    <attribute ID="objSpouse" sfwType="Object" sfwEntity="entPerson" sfwValue="ibusSpouse" />
    <attribute ID="objCurrentEmployment" sfwType="Object" sfwEntity="entPersonEmployment" sfwValue="ibusCurrentEmployment" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrSuppressWarning" sfwValue="istrSuppressWarning" />
    <attribute ID="objESSPersonEmployment" sfwType="Object" sfwEntity="entPersonEmployment" sfwValue="ibusESSPersonEmployment" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintPlanID" sfwValue="iintPlanID" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintEmploymentChangeREquestId" sfwValue="iintEmploymentChangeREquestId" />
    <attribute ID="objESSPersonAccountRetirement" sfwType="Object" sfwEntity="entPersonAccount" sfwValue="ibusESSPersonAccountRetirement" />
    <attribute ID="objESSPersonAccount" sfwType="Object" sfwEntity="entPersonAccount" sfwValue="ibusESSPersonAccount" />
    <attribute ID="objESSPersonAccountHealthGhdv" sfwType="Object" sfwEntity="entPersonAccountGhdv" sfwValue="ibusESSPersonAccountHealthGhdv" />
    <attribute ID="objESSPersonAccountDentalGhdv" sfwType="Object" sfwEntity="entPersonAccountGhdv" sfwValue="ibusESSPersonAccountDentalGhdv" />
    <attribute ID="objESSPersonAccountVisionGhdv" sfwType="Object" sfwEntity="entPersonAccountGhdv" sfwValue="ibusESSPersonAccountVisionGhdv" />
    <attribute ID="objESSPersonAccountGroupLife" sfwType="Object" sfwEntity="entPersonAccountLife" sfwValue="ibusESSPersonAccountGroupLife" />
    <attribute ID="objESSPersonAccountEAP" sfwType="Object" sfwEntity="entPersonAccountEAP" sfwValue="ibusESSPersonAccountEAP" />
    <attribute ID="objESSPersonAccountLtc" sfwType="Object" sfwEntity="entPersonAccountLtc" sfwValue="ibusESSPersonAccountLtc" />
    <attribute ID="objESSPersonAccountFlexComp" sfwType="Object" sfwEntity="entPersonAccountFlexComp" sfwValue="ibusESSPersonAccountFlexComp" />
    <attribute ID="objESSPersonAccountDeffComp" sfwType="Object" sfwEntity="entPersonAccountDeferredComp" sfwValue="ibusESSPersonAccountDeffComp" />
    <attribute ID="objESSPersonAccountDeffCompOther457" sfwType="Object" sfwEntity="entPersonAccountDeferredComp" sfwValue="ibusESSPersonAccountDeffCompOther457" />
    <attribute sfwType="Collection" sfwEntity="entPersonAddress" ID="lstPersonFutureAddress" sfwValue="iclbPersonFutureAddress" />
    <attribute sfwType="Collection" sfwEntity="entPersonBeneficiary" ID="lstBeneficiariesByPersonAccount" sfwValue="iclbBeneficiariesByPersonAccount" />
    <attribute sfwDataType="string" sfwType="Property" ID="SalutationFullName" sfwValue="icdoPerson.SalutationFullName" />
    <attribute sfwDataType="string" sfwType="Property" ID="PersonNameWithPrefixAndSuffix" sfwValue="icdoPerson.PersonNameWithPrefixAndSuffix" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintUpdateEmploymentChangeRequestID" sfwValue="iintUpdateEmploymentChangeRequestID" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintLOALEmploymentChangeRequestID" sfwValue="iintLOALEmploymentChangeRequestID" />
    <attribute ID="objBenefitApplication" sfwType="Object" sfwEntity="entBenefitApplication" sfwValue="ibusBenefitApplication" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrImage" sfwValue="istrImage" />
    <attribute sfwDataType="string" sfwType="Property" ID="IsPersonBeneficiaryForDBOrDCPlan" sfwValue="IsPersonBeneficiaryForDBOrDCPlan" />
    <attribute sfwDataType="string" sfwType="Property" ID="IsDeceasedSpouseInLife" sfwValue="isDeceasedSpouseInLife" />
    <attribute sfwDataType="string" sfwType="Property" ID="IsDeceasedEnrolledInDental" sfwValue="isDeceasedEnrolledInDental" />
    <attribute sfwDataType="string" sfwType="Property" ID="IsDeceasedEnrolledInHealth" sfwValue="isDeceasedEnrolledInHealth" />
    <attribute sfwDataType="string" sfwType="Property" ID="IsDeceasedEnrolledInVision" sfwValue="isDeceasedEnrolledInVision" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDependentSupplementalAmount" sfwValue="idecDependentSupplementalAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPersonInLTC" sfwValue="istrPersonInLTC" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecSpouseSupplementalAmount" sfwValue="idecSpouseSupplementalAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="FullNameCaps" sfwValue="icdoPerson.FullNameCaps" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrFormattedDateOfBirth" sfwValue="icdoPerson.istrFormattedDateOfBirth" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPersonFullNameWithSSN" sfwValue="icdoPerson.istrPersonFullNameWithSSN" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecRoundedTPSC" sfwValue="idecRoundedTPSC" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="Idec20PercentOfTaxableAmount" sfwValue="idec20PercentOfTaxableAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsRelationshipSpouse" sfwValue="istrIsRelationshipSpouse" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsBeneficiaryAgeLessThan18" sfwValue="istrIsBeneficiaryAgeLessThan18" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsLifeBeneTrusteeOrEstate" sfwValue="istrIsLifeBeneTrusteeOrEstate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsDCBeneficiarySpouse" sfwValue="istrIsDCBeneficiarySpouse" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsDCPlanExits" sfwValue="istrIsDCPlanExits" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsBeneficiaryDependentInDental" sfwValue="istrIsBeneficiaryDependentInDental" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsBeneficiaryDependentInHealth" sfwValue="istrIsBeneficiaryDependentInHealth" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsBeneficiaryDependentInVision" sfwValue="istrIsBeneficiaryDependentInVision" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDeceasedMemberBalanceAmount" sfwValue="idecDeceasedMemberBalanceAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsDeceasedNotEnrolledNotVestedInDental" sfwValue="istrIsDeceasedNotEnrolledNotVestedInDental" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsDeceasedNotEnrolledNotVestedInHealth" sfwValue="istrIsDeceasedNotEnrolledNotVestedInHealth" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsDeceasedNotEnrolledNotVestedInVision" sfwValue="istrIsDeceasedNotEnrolledNotVestedInVision" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsDeceasedEnrolledInDentalNoDependents" sfwValue="istrIsDeceasedEnrolledInDentalNoDependents" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsDeceasedEnrolledInHealthNoDependents" sfwValue="istrIsDeceasedEnrolledInHealthNoDependents" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsDeceasedEnrolledInVisionNoDependents" sfwValue="istrIsDeceasedEnrolledInVisionNoDependents" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsdefCompPlanNotExits" sfwValue="istrIsdefCompPlanNotExits" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsdefCompPlanExits" sfwValue="istrIsdefCompPlanExits" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDentalFamilyPolicyCOBRAPremium" sfwValue="idecDentalFamilyPolicyCOBRAPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDentalFamilyPolicyPremium" sfwValue="idecDentalFamilyPolicyPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDentalSinglePolicyCOBRAPremium" sfwValue="idecDentalSinglePolicyCOBRAPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDentalSinglePolicyPremium" sfwValue="idecDentalSinglePolicyPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthFamilyPolicyCOBRAPremium" sfwValue="idecHealthFamilyPolicyCOBRAPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthFamilyPolicyPremium" sfwValue="idecHealthFamilyPolicyPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthSinglePolicyNetAmount" sfwValue="idecHealthSinglePolicyNetAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthSinglePolicyCOBRAPremium" sfwValue="idecHealthSinglePolicyCOBRAPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthSinglePolicyPremium" sfwValue="idecHealthSinglePolicyPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHigherValueOf50PercentOr100PercentJSAmt" sfwValue="idecHigherValueOf50PercentOr100PercentJSAmt" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsLifeBeneAgeUnder18" sfwValue="istrIsLifeBeneAgeUnder18" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecLifeInsurancePolicyValue" sfwValue="idecLifeInsurancePolicyValue" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsLTCExtistsForNone" sfwValue="istrIsLTCExtistsForNone" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsLTCExtistsForBoth" sfwValue="istrIsLTCExtistsForBoth" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsLTCExtistsForDeceased" sfwValue="istrIsLTCExtistsForDeceased" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsLTCExtistsForSpouse" sfwValue="istrIsLTCExtistsForSpouse" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsMemberNotBeneficiaryInDBDCPlan" sfwValue="istrIsMemberNotBeneficiaryInDBDCPlan" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsVestedNotInDentalRelationshipMarried" sfwValue="istrIsVestedNotInDentalRelationshipMarried" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsVestedNotInHealthRelationshipMarried" sfwValue="istrIsVestedNotInHealthRelationshipMarried" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsVestedNotInVisionRelationshipMarried" sfwValue="istrIsVestedNotInVisionRelationshipMarried" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecNonTaxableMemberBalanceAmount" sfwValue="idecNonTaxableMemberBalanceAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsVestedIfMultipleBenesOrNonVestedIfPersonIsBene" sfwValue="istrIsVestedIfMultipleBenesOrNonVestedIfPersonIsBene" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsOther457PlanNotExits" sfwValue="istrIsOther457PlanNotExits" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsOther457PlanExits" sfwValue="istrIsOther457PlanExits" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsBeneficiaryInLife" sfwValue="istrIsBeneficiaryInLife" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsBeneficiaryNotInLife" sfwValue="istrIsBeneficiaryNotInLife" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsLifeBeneEstate" sfwValue="istrIsLifeBeneEstate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsEstateInDBDCPlan" sfwValue="istrIsEstateInDBDCPlan" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsLifeBeneTrustee" sfwValue="istrIsLifeBeneTrustee" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsRelationshipTrustee" sfwValue="istrIsRelationshipTrustee" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthRHIC" sfwValue="idecHealthRHIC" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTaxableMemberBalanceAmount" sfwValue="idecTaxableMemberBalanceAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsVestedMarriedBeneDependentInDental" sfwValue="istrIsVestedMarriedBeneDependentInDental" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsVestedMarriedBeneDependentInHealth" sfwValue="istrIsVestedMarriedBeneDependentInHealth" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsVestedMarriedBeneDependentInVision" sfwValue="istrIsVestedMarriedBeneDependentInVision" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsVestedRelationshipSpouse" sfwValue="istrIsVestedRelationshipSpouse" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecVisionFamilyPolicyCOBRAPremium" sfwValue="idecVisionFamilyPolicyCOBRAPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecVisionFamilyPolicyPremium" sfwValue="idecVisionFamilyPolicyPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecVisionSinglePolicyCOBRAPremium" sfwValue="idecVisionSinglePolicyCOBRAPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecVisionSinglePolicyPremium" sfwValue="idecVisionSinglePolicyPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthFamilyPolicyCOBRANetAmt" sfwValue="idecHealthFamilyPolicyCOBRANetAmt" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthFamilyPolicyNetAmount" sfwValue="idecHealthFamilyPolicyNetAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthFamily3PolicyPremium" sfwValue="idecHealthFamily3PolicyPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthFamilyOf3PolicyNetAmount" sfwValue="idecHealthFamilyOf3PolicyNetAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrisHealthVisible" sfwValue="istrisHealthVisible" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrisDentalVisible" sfwValue="istrisDentalVisible" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrisVisionVisible" sfwValue="istrisVisionVisible" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthSinglePolicyCOBRANetAmt" sfwValue="idecHealthSinglePolicyCOBRANetAmt" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsSpouseOrDependentInHealth" sfwValue="istrIsSpouseOrDependentInHealth" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsSpouseOrDependentInDental" sfwValue="istrIsSpouseOrDependentInDental" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsSpouseOrDependentInVision" sfwValue="istrIsSpouseOrDependentInVision" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecBeneLifePercentage" sfwValue="idecBeneLifePercentage" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecBeneRetPercentage" sfwValue="idecBeneRetPercentage" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsMemberHadDCPlan" sfwValue="istrIsMemberHadDCPlan" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrFirstNameInTitleCase" sfwValue="icdoPerson.istrFirstNameInTitleCase" />
    <attribute sfwType="Collection" sfwEntity="entPersonBeneficiary" ID="lstActiveBeneForGivenPlan" sfwValue="iclbActiveBeneForGivenPlan" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrDummy" sfwValue="icdoPerson.istrDummy" />
    <attribute ID="objBenefitAccount" sfwType="Object" sfwEntity="entBenefitAccount" sfwValue="ibusBenefitAccount" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrLTCCarrierName" sfwValue="istrLTCCarrierName" />
    <attribute sfwDataType="boolean" sfwType="Property" ID="IsPermanentAndNotInDeffCompPlan" sfwValue="is_permanent_and_not_in_deff_comp_plan" />
    <attribute sfwDataType="boolean" sfwType="Property" ID="IsPermanentAndNotInFlexPlan" sfwValue="is_permanent_and_not_in_flex_plan" />
    <attribute sfwDataType="boolean" sfwType="Property" ID="IsPermanentHasPastRefund" sfwValue="is_permanent_has_past_refund" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="PreviousEmploymentEndDate" sfwValue="previous_employment_end_date" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="PreviousEmploymentStartDate" sfwValue="previous_employment_start_date" />
    <attribute sfwType="Collection" sfwEntity="entPersonEmployment" ID="lstRefundIssuedEmployment" sfwValue="iclbRefundIssuedEmployment" />
    <attribute sfwDataType="int" sfwType="Property" ID="RetrBeneRequired" sfwValue="icdoPerson.Retr_Bene_Required" />
    <attribute sfwDataType="int" sfwType="Property" ID="LifeBeneRequired" sfwValue="icdoPerson.Life_Bene_Required" />
    <attribute sfwDataType="int" sfwType="Property" ID="RetrLifeBeneRequired" sfwValue="icdoPerson.Retr_Life_Bene_Required" />
    <attribute sfwDataType="string" sfwType="Property" ID="IblnIsPOAExits" sfwValue="iblnIsPOAExits" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecRoundedTVSC" sfwValue="idecRoundedTVSC" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsMemberEnrolledInDB" sfwValue="istrIsMemberEnrolledInDB" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsMemberEnrolledInDC" sfwValue="istrIsMemberEnrolledInDC" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtSFN58771ReceivedDate" sfwValue="idtSFN58771ReceivedDate" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecBalanceForward" sfwValue="idecBalanceForward" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecLifeBasicPremiumAmt" sfwValue="idecLifeBasicPremiumAmt" />
    <attribute sfwDataType="string" sfwType="Property" ID="BillDate" sfwValue="BillDate" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrGroupHealthCoverageDescription" sfwValue="istrGroupHealthCoverageDescription" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecGroupDentalPremiumAmt" sfwValue="idecGroupDentalPremiumAmt" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecDependentSupplementalPremiumAmt" sfwValue="idecDependentSupplementalPremiumAmt" />
    <attribute sfwDataType="string" sfwType="Property" ID="DueDate" sfwValue="DueDate" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecHealthCredit" sfwValue="idecHealthCredit" />
    <attribute sfwDataType="string" sfwType="Property" ID="HealthCreditIdentifier" sfwValue="HealthCreditIdentifier" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecGropHealthPremiumAmt" sfwValue="idecGropHealthPremiumAmt" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalLifePremiumAmount" sfwValue="idecTotalLifePremiumAmount" />
    <attribute sfwDataType="string" sfwType="Property" ID="PastDueIdentifier" sfwValue="PastDueIdentifier" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecSpouseSupplementalPremiumAmt" sfwValue="idecSpouseSupplementalPremiumAmt" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecLifeSupplementalPremiumAmount" sfwValue="idecLifeSupplementalPremiumAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalDue" sfwValue="idecTotalDue" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalHealthPremiumAmt" sfwValue="idecTotalHealthPremiumAmt" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecGroupVisionPremiumAmt" sfwValue="idecGroupVisionPremiumAmt" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrAdjustmentIdentifier" sfwValue="istrAdjustmentIdentifier" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecAdjustmentAmount" sfwValue="idecAdjustmentAmount" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecLTCPremium" sfwValue="idecLTCPremium" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="IdecTotalMedicarePremium" sfwValue="idecTotalMedicarePremium" />
    <attribute sfwType="Collection" sfwEntity="entPerson" ID="lstWelComeBenefitPlans" sfwValue="iclbWelComeBenefitPlans" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrPlanName" sfwValue="istrPlanName" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrYouMustEnrollOrWaive" sfwValue="istrYouMustEnrollOrWaive" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIfYouDoNoAction" sfwValue="istrIfYouDoNoAction" />
    <attribute ID="IintPersonEmploymentDetailid" sfwDataType="int" sfwPrivate="False" sfwValue="ibusCurrentEmployment.icdoPersonEmployment.person_employment_id" sfwType="Property" />
    <attribute ID="lintTermEmploymentChangeRequestID" sfwDataType="int" sfwPrivate="False" sfwValue="iintTermEmploymentChangeRequestID" sfwType="Property" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsUserLocked" sfwValue="istrIsUserLocked" />
    <attribute ID="OrgID" sfwDataType="int" sfwPrivate="True" sfwValue="OrgID" sfwType="Property" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrRestrictionReasonDesc" sfwValue="icdoPerson.istrRestrictionReasonDesc" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrIsRestrictedFlag" sfwValue="istrIsRestrictedFlag" />
    <attribute ID="lstPersonBeneficiaryForCor" sfwType="Collection" sfwValue="iclbPersonBeneficiaryCor" sfwEntity="entPersonBeneficiary" sfwPrivate="False" />
    <attribute ID="IstrBenefitCalculationFullName" sfwDataType="string" sfwPrivate="False" sfwValue="icdoPerson.istrBenefitCalculationFullName" sfwType="Property" />
    <attribute ID="lstBeneficiaryApplicationForDisplay" sfwType="Collection" sfwValue="iclbBeneficiaryApplicationForDisplay" sfwEntity="entBenefitApplication" sfwPrivate="False" />
    <attribute ID="IstrCurrentEmployerOrgCode" sfwDataType="string" sfwPrivate="False" sfwValue="istrCurrentEmployerOrgCode" sfwType="Property" />
    <attribute ID="IstrCurrentEmployerName" sfwDataType="string" sfwPrivate="False" sfwValue="istrCurrentEmployerName" sfwType="Property" />
    <attribute sfwValue="limit_401a" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="char" sfwLength="1" sfwIsNull="True" ID="Limit401a" sfwCaption="Limit 401a" />
    <attribute ID="IstrFullName" sfwDataType="string" sfwPrivate="False" sfwValue="istrFullName" sfwType="Property" />
    <attribute ID="IstrPersonName" sfwDataType="string" sfwPrivate="False" sfwValue="istrPersonName" sfwType="Property" />
    <attribute ID="IblnIs1099RExists" sfwDataType="bool" sfwPrivate="False" sfwValue="icdoPerson.iblnIs1099RExists" sfwType="Property" />
    <attribute ID="lstSolBpmProcessInstanceAttachments" sfwType="Collection" sfwValue="iclbProcessInstanceImageData" sfwEntity="entSolBpmProcessInstanceAttachments" sfwPrivate="False" />
    <attribute ID="objWssEmploymentAcaCert" sfwType="Object" sfwEntity="entWssEmploymentAcaCert" sfwPrivate="False" sfwValue="ibusWssEmploymentAcaCert" />
    <attribute ID="lstWssEmploymentAcaCerts" sfwType="Collection" sfwValue="iclbWssEmploymentAcaCert" sfwEntity="entWssEmploymentAcaCert" sfwPrivate="False" />
    <attribute ID="IstrFirstNameMiddleInitial" sfwDataType="string" sfwPrivate="False" sfwValue="icdoPerson.istrFirstNameMiddleInitial" sfwType="Property" />
    <attribute ID="IstrScrambledSSN" sfwDataType="string" sfwPrivate="False" sfwValue="icdoPerson.istrScrambledSSN" sfwType="Property" />
    <attribute ID="lstrMultiplePlanName" sfwDataType="string" sfwPrivate="False" sfwValue="istrMultiplePlanName" sfwType="Property" />
    <attribute ID="lstrCheckNumberDollar" sfwDataType="string" sfwPrivate="False" sfwValue="istrCheckNumberDollar" sfwType="Property" />
    <attribute ID="objPaymentElectionAdjustment" sfwType="Object" sfwEntity="entPaymentElectionAdjustment" sfwPrivate="False" sfwValue="ibusPaymentElectionAdjustment" />
    <attribute ID="lstDeathNoticeForGrid" sfwType="Collection" sfwValue="iclbDeathNoticeForGrid" sfwEntity="entDeathNotice" sfwPrivate="False" />
    <attribute ID="lstPremiumAmountsForCorr" sfwType="Collection" sfwValue="iclbPremiumAmountsForCorr" sfwEntity="entPerson" sfwPrivate="False" />
    <attribute ID="lstrPlanNameForCorr" sfwDataType="string" sfwPrivate="False" sfwValue="istrPlanNameForCorr" sfwType="Property" />
    <attribute ID="lstrOldRatesForCorr" sfwDataType="string" sfwPrivate="False" sfwValue="istrOldRatesForCorr" sfwType="Property" />
    <attribute ID="lstrNewRatesForCorr" sfwDataType="string" sfwPrivate="False" sfwValue="istrNewRatesForCorr" sfwType="Property" />
    <attribute ID="lstrRateDifferenceForCorr" sfwDataType="string" sfwPrivate="False" sfwValue="istrRateDifferenceForCorr" sfwType="Property" />
    <attribute ID="IblnIsRetirementPlanEnrlOrRetrOrSus" sfwDataType="bool" sfwPrivate="False" sfwValue="iblnIsRetirementPlanEnrlOrRetrOrSus" sfwType="Property" />
    <attribute ID="IblnIsLifeInsurancePlanEnrolled" sfwDataType="bool" sfwPrivate="False" sfwValue="iblnIsLifeInsurancePlanEnrolled" sfwType="Property" />
    <attribute ID="IintESSAddlEEContributionPercent" sfwDataType="int" sfwPrivate="False" sfwValue="iintESSAddlEEContributionPercent" sfwType="Property" />
    <attribute ID="lstPersonTffrHeader" sfwType="Collection" sfwValue="iclbPersonTffrHeader" sfwEntity="entPersonTffrHeader" sfwPrivate="False" />
    <attribute sfwValue="tffr_request" sfwType="Column" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwDBDataType="char" sfwLength="1" sfwIsNull="True" ID="TffrRequest" sfwCaption="Tffr Request" />
    <attribute ID="EndOfLifeDocs" sfwType="Column" sfwValue="end_of_life_docs" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="1" />
    <attribute ID="NameWithPersonID" sfwDataType="string" sfwPrivate="False" sfwValue="icdoPerson.NameWithPersonID" sfwType="Property" />
  </attributes>
  <objectmethods>
    <method ID="btnRemoveWSSAccess_Click" sfwReturnType="ArrayList" />
    <method ID="UpdateAddressClick" sfwReturnType="ArrayList" />
    <method ID="btnUnlockWSSAccount_Click" sfwReturnType="ArrayList" />
    <method ID="btnCertifyPerson_Click" sfwReturnType="ArrayList" />
    <method ID="btnCallDuplicatePersonScreen_Click" sfwReturnType="ArrayList">
      <parameters />
    </method>
    <method ID="UpdateTFFRRequest" sfwReturnType="Void" />
    <method ID="EndOfLifeDocumentsReceived" sfwReturnType="Void" />
  </objectmethods>
  <constraint />
  <methods>
    <method ID="LoadPersonForBPM" sfwDescription="Load Person CDO for BPM" sfwMethodType="Load" sfwMode="Update" sfwLoadMainObject="False">
      <item ID="PersonId" sfwParameter="PersonId" sfwItemType="Property" sfwDataType="int" />
      <parameter ID="PersonId" sfwDataType="int" />
    </method>
  </methods>
  <lifecycle />
  <ExtraFields />
</entity>