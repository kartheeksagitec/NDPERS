<?xml version="1.0" encoding="utf-8"?>
<entity ID="entPersonAccountRetirementContribution" sfwMainCDO="icdoPersonAccountRetirementContribution" sfwType="BusinessRule" sfwActive="True" sfwStatus="Review" sfwObjectID="busPersonAccountRetirementContribution" sfwTableName="sgt_person_account_retirement_contribution" sfwView="False" sfwParentEntity="entExtendBase">
  <queries>
    <query ID="LoadLTDDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PERSON_ACCOUNT_ID,PAY_PERIOD_MONTH,PAY_PERIOD_YEAR,EFFECTIVE_DATE,TRANSACTION_DATE,PARC.PERSON_EMPLOYMENT_DTL_ID,SUBSYSTEM_ID,SUBSYSTEM_VALUE,SUBSYSTEM_REF_ID,&#xD;&#xA;isnull(POST_TAX_EE_AMOUNT,0) POST_TAX_EE_AMOUNT,&#xD;&#xA;isnull(POST_TAX_ER_AMOUNT,0) POST_TAX_ER_AMOUNT,&#xD;&#xA;isnull(PRE_TAX_ER_AMOUNT,0) PRE_TAX_ER_AMOUNT,&#xD;&#xA;isnull(PRE_TAX_EE_AMOUNT,0) PRE_TAX_EE_AMOUNT,&#xD;&#xA;isnull(EE_RHIC_AMOUNT,0) EE_RHIC_AMOUNT,&#xD;&#xA;isnull(ER_RHIC_AMOUNT,0) ER_RHIC_AMOUNT,&#xD;&#xA;isnull(EE_ER_PICKUP_AMOUNT,0) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;isnull(ER_VESTED_AMOUNT,0) ER_VESTED_AMOUNT,&#xD;&#xA;isnull(SALARY_AMOUNT,0) SALARY_AMOUNT,&#xD;&#xA;isnull(VESTED_SERVICE_CREDIT,0) VESTED_SERVICE_CREDIT,&#xD;&#xA;isnull(PENSION_SERVICE_CREDIT,0) PENSION_SERVICE_CREDIT,&#xD;&#xA;isnull(INTEREST_AMOUNT,0) INTEREST_AMOUNT,&#xD;&#xA;PARC.CREATED_BY,PARC.MODIFIED_BY,TRANSACTION_TYPE_ID,TRANSACTION_TYPE_VALUE,ORG_CODE&#xD;&#xA;,isnull(EE_PRETAX_ADDL_AMOUNT,0) EE_PRETAX_ADDL_AMOUNT,isnull(EE_POST_TAX_ADDL_AMOUNT,0) EE_POST_TAX_ADDL_AMOUNT&#xD;&#xA;,isnull(ER_PRETAX_MATCH_AMOUNT,0) ER_PRETAX_MATCH_AMOUNT,isnull(ADEC_AMOUNT,0) ADEC_AMOUNT&#xD;&#xA;from dbo.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;LEFT JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK) ON PARC.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;LEFT JOIN SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK) ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;LEFT JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON PE.ORG_ID = O.ORG_ID&#xD;&#xA;where PERSON_ACCOUNT_ID=@PersonAccountID and &#xD;&#xA;TRANSACTION_TYPE_VALUE Not in ('ERIN')">
      <parameters>
        <parameter ID="@PersonAccountID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadFYTDDetail" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT PERSON_ACCOUNT_ID,PAY_PERIOD_MONTH,PAY_PERIOD_YEAR,EFFECTIVE_DATE,TRANSACTION_DATE,PARC.PERSON_EMPLOYMENT_DTL_ID,SUBSYSTEM_ID,SUBSYSTEM_VALUE,SUBSYSTEM_REF_ID,&#xD;&#xA;isnull(POST_TAX_EE_AMOUNT,0) POST_TAX_EE_AMOUNT,&#xD;&#xA;isnull(POST_TAX_ER_AMOUNT,0) POST_TAX_ER_AMOUNT,&#xD;&#xA;isnull(PRE_TAX_ER_AMOUNT,0) PRE_TAX_ER_AMOUNT,&#xD;&#xA;isnull(PRE_TAX_EE_AMOUNT,0) PRE_TAX_EE_AMOUNT,&#xD;&#xA;isnull(EE_RHIC_AMOUNT,0) EE_RHIC_AMOUNT,&#xD;&#xA;isnull(ER_RHIC_AMOUNT,0) ER_RHIC_AMOUNT,&#xD;&#xA;isnull(EE_ER_PICKUP_AMOUNT,0) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;isnull(ER_VESTED_AMOUNT,0) ER_VESTED_AMOUNT,&#xD;&#xA;isnull(SALARY_AMOUNT,0) SALARY_AMOUNT,&#xD;&#xA;isnull(VESTED_SERVICE_CREDIT,0) VESTED_SERVICE_CREDIT,&#xD;&#xA;isnull(PENSION_SERVICE_CREDIT,0) PENSION_SERVICE_CREDIT,&#xD;&#xA;isnull(INTEREST_AMOUNT,0) INTEREST_AMOUNT,&#xD;&#xA;PARC.CREATED_BY,PARC.MODIFIED_BY,TRANSACTION_TYPE_ID,TRANSACTION_TYPE_VALUE,ORG_CODE&#xD;&#xA;,isnull(EE_PRETAX_ADDL_AMOUNT,0) EE_PRETAX_ADDL_AMOUNT,isnull(EE_POST_TAX_ADDL_AMOUNT,0) EE_POST_TAX_ADDL_AMOUNT&#xD;&#xA;,isnull(ER_PRETAX_MATCH_AMOUNT,0) ER_PRETAX_MATCH_AMOUNT,isnull(ADEC_AMOUNT,0) ADEC_AMOUNT&#xD;&#xA;from dbo.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;LEFT JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK) ON PARC.PERSON_EMPLOYMENT_DTL_ID = PED.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;LEFT JOIN SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK) ON PED.PERSON_EMPLOYMENT_ID = PE.PERSON_EMPLOYMENT_ID&#xD;&#xA;LEFT JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON PE.ORG_ID = O.ORG_ID&#xD;&#xA;where PERSON_ACCOUNT_ID=@PersonAccountID and &#xD;&#xA;(  &#xD;&#xA; (&#xD;&#xA;  TRANSACTION_TYPE_VALUE Not in ('PURC','ERIN') AND &#xD;&#xA;  (cast(year(TRANSACTION_DATE) as varchar(4))+ right('00' + cast(month(TRANSACTION_DATE) as varchar(2)),2)) &gt;= @StartMonth and&#xD;&#xA;  (cast(year(TRANSACTION_DATE) as varchar(4))+ right('00' + cast(month(TRANSACTION_DATE) as varchar(2)),2)) &lt;= @EndMonth&#xD;&#xA; )&#xD;&#xA; OR&#xD;&#xA; (&#xD;&#xA;  TRANSACTION_TYPE_VALUE = 'PURC' AND&#xD;&#xA;  (cast(year(EFFECTIVE_DATE) as varchar(4))+ right('00' + cast(month(EFFECTIVE_DATE) as varchar(2)),2)) &gt;= @StartMonth and&#xD;&#xA;  (cast(year(EFFECTIVE_DATE) as varchar(4))+ right('00' + cast(month(EFFECTIVE_DATE) as varchar(2)),2)) &lt;= @EndMonth&#xD;&#xA; )&#xD;&#xA;)">
      <parameters>
        <parameter ID="@PersonAccountID" sfwDataType="int" />
        <parameter ID="@StartMonth" sfwDataType="string" />
        <parameter ID="@EndMonth" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="GetPersonAccountForInterest" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select cont.person_account_id,acc.person_id,acc.plan_id,&#xD;&#xA;Sum(POST_TAX_EE_AMOUNT) + Sum(PRE_TAX_EE_AMOUNT) + Sum(EE_ER_PICKUP_AMOUNT) +&#xD;&#xA;sum(ER_VESTED_AMOUNT) + Sum(INTEREST_AMOUNT) as ACCOUNT_BALANCE , Sum(PRE_TAX_ER_AMOUNT) as PRE_TAX_ER_AMOUNT &#xD;&#xA;from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION cont&#xD;&#xA;  inner join SGT_PERSON_ACCOUNT acc on acc.person_account_id = cont.person_account_id&#xD;&#xA;  inner join sgt_plan pl on pl.plan_id = acc.plan_id&#xD;&#xA;where acc.end_date is null and pl.allow_interest_posting = 1 and cont.effective_date &lt; @DateValue&#xD;&#xA;  and not exists (select 'x' from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION cont2 where cont.person_account_id = cont2.person_account_id &#xD;&#xA;  and cont2.subsystem_value = 'INTR' and cont2.transaction_date &gt;= @DateValue)&#xD;&#xA;  group by cont.person_account_id,acc.person_id,acc.plan_id  &#xD;&#xA;  having Sum(POST_TAX_EE_AMOUNT) + Sum(PRE_TAX_EE_AMOUNT) + Sum(EE_ER_PICKUP_AMOUNT) +&#xD;&#xA;  sum(ER_VESTED_AMOUNT) + Sum(INTEREST_AMOUNT) != 0&#xD;&#xA;order by cont.person_account_id&#xD;&#xA;">
      <parameters>
        <parameter ID="@DateValue" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetEffectiveAndTransactionDates" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select top 1 transaction_date, effective_date from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION where person_account_id = @person_account_id and subsystem_value = 'INTR' order by effective_date desc">
      <parameters>
        <parameter ID="@person_account_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetAcctIDAndSalaryForRetirementCont" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select acct.plan_id as Plan_Id, acct.person_account_id, Sum(Isnull(cont.salary_amount,0)) AS salary_amount, Sum(Isnull(cont.er_vested_amount,0)) as Vested_Amount from sgt_person_account_retirement_contribution cont&#xD;&#xA;inner join sgt_person_account acct on acct.person_account_id = cont.person_account_id&#xD;&#xA;where acct.plan_id in (1,2,3,20,26,27,29) &#xD;&#xA;and cont.effective_date &gt;=   DATEADD(mm, DATEDIFF(mm,0,@PayPeriodEndDate), 0)&#xD;&#xA;and cont.effective_date &lt;= DateAdd(day, -1, DateAdd(month, DateDiff(month, 0, @PayPeriodEndDate)+1, 0))&#xD;&#xA;and cont.SUBSYSTEM_VALUE not in ('PMNT')&#xD;&#xA;and acct.person_id = @PersonID&#xD;&#xA;group by &#xD;&#xA;acct.person_account_id, Plan_Id">
      <parameters>
        <parameter ID="@PayPeriodEndDate" sfwDataType="DateTime" />
        <parameter ID="@PersonID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetEffectiveAndTransactionDatesForDeffComp" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select top 1 transaction_date, effective_date from sgt_person_account_deferred_comp_contribution where person_account_id = @person_account_id and subsystem_value = 'PEP' order by transaction_date desc">
      <parameters>
        <parameter ID="@person_account_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="CalculateVSC" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select Sum(Vested_service_credit) as Vested_service_credit, acct.person_id from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION cont WITH(NOLOCK)&#xA;inner join sgt_person_account acct WITH(NOLOCK) on acct.person_account_id = cont.person_account_id&#xA;INNER JOIN sgt_plan p WITH(nolock) ON p.PLAN_ID = acct.PLAN_ID AND p.ALLOW_PEP_CALCULATION = 1&#xA;where acct.person_id =@PersonID &#xA;and effective_date &lt;= @effectivedate&#xA;and subsystem_value &lt;&gt; (Case when plan_participation_status_value &lt;&gt; 'WTN1' then 'PMNT' else '' END)&#xA;group by acct.person_id">
      <parameters>
        <parameter ID="@PersonID" sfwDataType="int" />
        <parameter ID="@effectivedate" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetCntofContributions" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select 12-Count(*) RCount from SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;Where PERSON_ACCOUNT_ID=@Person_Account_id&#xD;&#xA;and(PAY_PERIOD_MONTH &gt;= 1 and PAY_PERIOD_MONTH &lt;= @Month)&#xD;&#xA;AND (SUBSYSTEM_VALUE='PAYR' OR SUBSYSTEM_VALUE='CONV') AND TRANSACTION_TYPE_VALUE='RGPR'&#xD;&#xA;AND PAY_PERIOD_YEAR=@YEAR&#xD;&#xA;">
      <parameters>
        <parameter ID="@Person_Account_id" sfwDataType="int" />
        <parameter ID="@Month" sfwDataType="string" />
        <parameter ID="@YEAR" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="LoadTotalContributionByMonth" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select month(effective_date) as Month,year(effective_date) as Year,&#xD;&#xA;isnull(sum(isnull(POST_TAX_ER_AMOUNT,0) + isnull(POST_TAX_EE_AMOUNT,0) + &#xD;&#xA;isnull(PRE_TAX_ER_AMOUNT,0) + isnull(PRE_TAX_EE_AMOUNT,0) +&#xD;&#xA;isnull(EE_RHIC_AMOUNT,0) + isnull(ER_RHIC_AMOUNT,0) +&#xD;&#xA;isnull(EE_ER_PICKUP_AMOUNT,0) + isnull(ER_VESTED_AMOUNT,0) +&#xD;&#xA;isnull(INTEREST_AMOUNT,0)),0) AS TotalContributionAmount&#xD;&#xA;FROM dbo.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;WHERE PERSON_ACCOUNT_ID = @PersonAccountID&#xD;&#xA;AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC'&#xD;&#xA;GROUP BY month(effective_date),year(effective_date)&#xD;&#xA;UNION ALL&#xD;&#xA;select month(effective_date) as Month,year(effective_date) as Year,&#xD;&#xA;isnull(sum(isnull(POST_TAX_ER_AMOUNT,0) + isnull(POST_TAX_EE_AMOUNT,0) + &#xD;&#xA;isnull(PRE_TAX_ER_AMOUNT,0) + isnull(PRE_TAX_EE_AMOUNT,0) +&#xD;&#xA;isnull(EE_RHIC_AMOUNT,0) + isnull(ER_RHIC_AMOUNT,0) +&#xD;&#xA;isnull(EE_ER_PICKUP_AMOUNT,0) + isnull(ER_VESTED_AMOUNT,0) +&#xD;&#xA;isnull(INTEREST_AMOUNT,0)),0) AS TotalContributionAmount&#xD;&#xA;FROM dbo.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION a&#xD;&#xA;INNER JOIN SGT_SERVICE_PURCHASE_HEADER b ON a.SUBSYSTEM_REF_ID = b.service_purchase_header_id &#xD;&#xA;and b.action_status_value = 'PIF'&#xD;&#xA;WHERE PERSON_ACCOUNT_ID = @PersonAccountID&#xD;&#xA;AND TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC'&#xD;&#xA;GROUP BY month(effective_date),year(effective_date)">
      <parameters>
        <parameter ID="@PersonAccountID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadActiveRetirementMembersByOrg" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select paed.*,ped.*,pa.* from sgt_person_account_employment_detail paed(nolock)&#xD;&#xA;inner join sgt_person_employment_detail ped(nolock) on paed.PERSON_EMPLOYMENT_DTL_ID = ped.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;and ped.STATUS_VALUE = 'CONT'&#xD;&#xA;inner join sgt_person_employment pe(nolock) on pe.person_employment_id = ped.person_employment_id&#xD;&#xA;inner join sgt_person_account pa(nolock) on pa.person_account_id = paed.person_account_id&#xD;&#xA;inner join sgt_plan p(nolock) on p.plan_id = pa.plan_id&#xD;&#xA;inner join sgt_person per(nolock) on per.person_id = pa.person_id&#xD;&#xA;where paed.election_value = 'ENLD' and p.benefit_type_value = 'RETR' and&#xD;&#xA;pa.plan_participation_status_value = 'ENL1' AND&#xD;&#xA;@payroll_paid_date between pa.start_date and isnull(pa.end_date,'01/01/2900') and&#xD;&#xA;@payroll_paid_date between pe.start_date and isnull(pe.end_date,'01/01/2900') and&#xD;&#xA;pe.org_id = @org_id">
      <parameters>
        <parameter ID="@payroll_paid_date" sfwDataType="DateTime" />
        <parameter ID="@org_id" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptVestedEmployerContributionSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT CODEVAL.DESCRIPTION AS EmployerCategory,SUM(isnull(ER_VESTED_AMOUNT,0)) AS VestedAmount,COUNT(*) AS COUNT &#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION(NOLOCK) RETCON&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL(NOLOCK) EMPDET ON RETCON.PERSON_EMPLOYMENT_DTL_ID=EMPDET.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT(NOLOCK) EMP ON EMP.PERSON_EMPLOYMENT_ID=EMPDET.PERSON_EMPLOYMENT_ID&#xD;&#xA;INNER JOIN SGT_ORGANIZATION(NOLOCK) ORG ON ORG.ORG_ID=EMP.ORG_ID&#xD;&#xA;INNER JOIN SGS_CODE_VALUE(NOLOCK) CODEVAL ON ORG.EMP_CATEGORY_ID=CODEVAL.CODE_ID AND ORG.EMP_CATEGORY_VALUE=CODEVAL.CODE_VALUE&#xD;&#xA;WHERE TRANSACTION_DATE BETWEEN @Start_Date AND @End_Date&#xD;&#xA;AND transaction_type_Value = 'VEER'&#xD;&#xA;GROUP BY CODEVAL.DESCRIPTION">
      <parameters>
        <parameter ID="@Start_Date" sfwDataType="DateTime" />
        <parameter ID="@End_Date" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptManualAdjustmentsReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,SUBSYSTEM_REF_ID,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;sum(isnull(EE_RHIC_SER_PUR_CONT,0)) as EE_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(ER_RHIC_SER_PUR_CONT,0)) as ER_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(POST_TAX_EE_SER_PUR_CONT,0)) as POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_SER_PUR_CONT,0)) as PRE_TAX_EE_SER_PUR_CONT&#xD;&#xA;from&#xD;&#xA;(&#xD;&#xA;select a.PERSON_ACCOUNT_ID,a.SUBSYSTEM_REF_ID,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0)) POST_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) EE_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) ER_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0)) PRE_TAX_EE_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;0 AS EE_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS ER_RHIC_SER_PUR_CONT,&#xD;&#xA;0 AS POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;0 AS PRE_TAX_EE_SER_PUR_CONT&#xD;&#xA;from dbo.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION a &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_DB_DB_TRANSFER b&#xD;&#xA;on b.TO_PERSON_ACCOUNT_ID = a.PERSON_ACCOUNT_ID &#xD;&#xA;   AND a.SUBSYSTEM_REF_ID = b.DB_DB_TRANSFER_ID  &#xD;&#xA;   AND a.SUBSYSTEM_VALUE = 'ACTR' &#xD;&#xA;where (a.TRANSACTION_TYPE_VALUE &lt;&gt; 'PURC' and  a.TRANSACTION_TYPE_VALUE &lt;&gt; 'PADJ' ) and b.STATUS_VALUE = 'POST'&#xD;&#xA;GROUP BY a.PERSON_ACCOUNT_ID, a.SUBSYSTEM_REF_ID&#xD;&#xA;&#xD;&#xA;union all&#xD;&#xA;&#xD;&#xA;select PERSON_ACCOUNT_ID,a.SUBSYSTEM_REF_ID,&#xD;&#xA;0 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;0 AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;0 AS EE_RHIC_AMOUNT,&#xD;&#xA;0 AS ER_RHIC_AMOUNT,&#xD;&#xA;sum(isnull(POST_TAX_ER_AMOUNT,0)) POST_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(PRE_TAX_ER_AMOUNT,0)) PRE_TAX_ER_AMOUNT,&#xD;&#xA;sum(isnull(EE_ER_PICKUP_AMOUNT,0)) EE_ER_PICKUP_AMOUNT,&#xD;&#xA;sum(isnull(ER_VESTED_AMOUNT,0)) ER_VESTED_AMOUNT,&#xD;&#xA;sum(isnull(SALARY_AMOUNT,0)) SALARY_AMOUNT,&#xD;&#xA;sum(isnull(VESTED_SERVICE_CREDIT,0)) VESTED_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(PENSION_SERVICE_CREDIT,0)) PENSION_SERVICE_CREDIT,&#xD;&#xA;sum(isnull(INTEREST_AMOUNT,0)) INTEREST_AMOUNT,&#xD;&#xA;sum(isnull(EE_RHIC_AMOUNT,0)) as EE_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(ER_RHIC_AMOUNT,0)) as ER_RHIC_SER_PUR_CONT,&#xD;&#xA;sum(isnull(POST_TAX_EE_AMOUNT,0)) as POST_TAX_EE_SER_PUR_CONT,&#xD;&#xA;sum(isnull(PRE_TAX_EE_AMOUNT,0)) as PRE_TAX_EE_SER_PUR_CONT&#xD;&#xA;from dbo.SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION a &#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_DB_DB_TRANSFER b&#xD;&#xA;on b.TO_PERSON_ACCOUNT_ID = a.PERSON_ACCOUNT_ID &#xD;&#xA;   AND a.SUBSYSTEM_REF_ID = b.DB_DB_TRANSFER_ID  &#xD;&#xA;   AND a.SUBSYSTEM_VALUE = 'ACTR' &#xD;&#xA;where ((a.TRANSACTION_TYPE_VALUE = 'PURC' or  a.TRANSACTION_TYPE_VALUE = 'PADJ' ) ) and b.STATUS_VALUE = 'POST'&#xD;&#xA;GROUP BY a.PERSON_ACCOUNT_ID, a.SUBSYSTEM_REF_ID&#xD;&#xA;) AS TEMP&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID, SUBSYSTEM_REF_ID&#xD;&#xA;&#xD;&#xA;">
      <parameters />
    </query>
    <query ID="UpdatePersonAccountRetirementContributionForMember" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--PIR 11946 - Taken max contribution id in variable&#xD;&#xA;DECLARE @MAX_CONTRIBUTION_ID INT = (SELECT MAX(RETIREMENT_CONTRIBUTION_ID) FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION)&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION &#xD;&#xA;(&#xD;&#xA;PERSON_ACCOUNT_ID, SUBSYSTEM_ID, SUBSYSTEM_VALUE, SUBSYSTEM_REF_ID,&#xD;&#xA;TRANSACTION_DATE, EFFECTIVE_DATE, PAY_PERIOD_MONTH, PAY_PERIOD_YEAR,&#xD;&#xA;PERSON_EMPLOYMENT_DTL_ID, TRANSACTION_TYPE_ID, TRANSACTION_TYPE_VALUE, &#xD;&#xA;SALARY_AMOUNT, POST_TAX_ER_AMOUNT, POST_TAX_EE_AMOUNT, PRE_TAX_ER_AMOUNT,&#xD;&#xA;PRE_TAX_EE_AMOUNT, EE_RHIC_AMOUNT, ER_RHIC_AMOUNT, EE_ER_PICKUP_AMOUNT, &#xD;&#xA;ER_VESTED_AMOUNT, INTEREST_AMOUNT, VESTED_SERVICE_CREDIT, PENSION_SERVICE_CREDIT, &#xD;&#xA;CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ--, EMPLOYER_INTEREST&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA; PERSON_ACCOUNT_ID,&#xD;&#xA; 349  as SUBSYSTEM_ID ,&#xD;&#xA; 'PMNT' AS SUBSYSTEM_VALUE ,&#xD;&#xA;  NULL AS SUBSYSTEM_REF_ID ,&#xD;&#xA; @PAYMENTDATE as TRANSACTION_DATE ,&#xD;&#xA; @PAYMENTDATE as EFFECTIVE_DATE ,         &#xD;&#xA; Month(@PAYMENTDATE) AS PAY_PERIOD_MONTH ,&#xD;&#xA; year(@PAYMENTDATE) as PAY_PERIOD_YEAR ,&#xD;&#xA; Null AS PERSON_EMPLOYMENT_DTL_ID ,&#xD;&#xA; 350 as TRANSACTION_TYPE_ID ,&#xD;&#xA; BENEFIT_ACCOUNT_TYPE_VALUE AS TRANSACTION_TYPE_VALUE ,&#xD;&#xA; SALARY_AMOUNT,&#xD;&#xA; POST_TAX_ER_AMOUNT,&#xD;&#xA; POST_TAX_EE_AMOUNT,&#xD;&#xA; PRE_TAX_ER_AMOUNT,&#xD;&#xA; PRE_TAX_EE_AMOUNT,&#xD;&#xA; EE_RHIC_AMOUNT,&#xD;&#xA; ER_RHIC_AMOUNT,&#xD;&#xA; EE_ER_PICKUP_AMOUNT,&#xD;&#xA; ER_VESTED_AMOUNT,&#xD;&#xA; INTEREST_AMOUNT,&#xD;&#xA; VESTED_SERVICE_CREDIT,&#xD;&#xA; PENSION_SERVICE_CREDIT, &#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA; getdate() as CREATED_DATE,&#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA; getdate() as modified_date,&#xD;&#xA; 0 as UPDATE_SEQ--,EMPLOYER_INTEREST&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA; SELECT&#xD;&#xA; RC.PERSON_ACCOUNT_ID,PAS.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA; 0 as SALARY_AMOUNT,&#xD;&#xA; SUM(isnull(POST_TAX_ER_AMOUNT,0)) * -1 as POST_TAX_ER_AMOUNT,&#xD;&#xA; SUM(isnull(POST_TAX_EE_AMOUNT,0)) * -1 as POST_TAX_EE_AMOUNT,&#xD;&#xA; SUM(isnull(PRE_TAX_ER_AMOUNT,0)) * -1 as PRE_TAX_ER_AMOUNT,&#xD;&#xA; SUM(isnull(PRE_TAX_EE_AMOUNT,0)) * -1 as PRE_TAX_EE_AMOUNT,&#xD;&#xA; SUM(isnull(EE_RHIC_AMOUNT,0)) * -1 as EE_RHIC_AMOUNT,&#xD;&#xA; SUM(isnull(ER_RHIC_AMOUNT,0)) * -1 as ER_RHIC_AMOUNT,&#xD;&#xA; SUM(isnull(EE_ER_PICKUP_AMOUNT,0)) * -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA; SUM(isnull(ER_VESTED_AMOUNT,0)) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA; SUM(isnull(INTEREST_AMOUNT,0)) * -1 as INTEREST_AMOUNT,&#xD;&#xA; SUM(isnull(VESTED_SERVICE_CREDIT,0)) * -1 as VESTED_SERVICE_CREDIT,&#xD;&#xA; SUM(isnull(PENSION_SERVICE_CREDIT,0)) * -1 as PENSION_SERVICE_CREDIT--,&#xD;&#xA; --SUM(isnull(EMPLOYER_INTEREST,0)) * -1 as EMPLOYER_INTEREST&#xD;&#xA;FROM &#xD;&#xA;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC&#xD;&#xA;INNER JOIN &#xD;&#xA; (&#xD;&#xA; SELECT &#xD;&#xA;   BAPA.PERSON_ACCOUNT_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;   and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA; WHERE (CV.DATA2 = 'APRD') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;  AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE &lt;&gt; 'DISA'  &#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ) AS  PAS &#xD;&#xA; ON PAS.PERSON_ACCOUNT_ID = RC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE PAS.BENEFIT_ACCOUNT_TYPE_VALUE NOT IN ('DISA','DETH','PSTD')&#xD;&#xA; AND ISNULL(RC.TRANSFER_FLAG_VALUE,'') = CASE WHEN PAS.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' THEN 'C' ELSE ISNULL(RC.TRANSFER_FLAG_VALUE,'') END  -- PIR 11946 - sum only those contributions which have flag currently 'C' for refund case only, for other take all contributions.&#xD;&#xA;GROUP BY RC.PERSON_ACCOUNT_ID ,PAS.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;HAVING SUM(ISNULL(POST_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(POST_TAX_EE_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(EE_RHIC_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(ER_RHIC_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(ER_VESTED_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(INTEREST_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(VESTED_SERVICE_CREDIT,0))+&#xD;&#xA; SUM(ISNULL(PENSION_SERVICE_CREDIT,0))--+&#xD;&#xA; --SUM(ISNULL(EMPLOYER_INTEREST,0)) &#xD;&#xA; &lt;&gt; 0 &#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;-- PIR 6556&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA; RC.PERSON_ACCOUNT_ID,PAS.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA; 0 as SALARY_AMOUNT,&#xD;&#xA; SUM(isnull(POST_TAX_ER_AMOUNT,0)) * -1 as POST_TAX_ER_AMOUNT,&#xD;&#xA; SUM(isnull(POST_TAX_EE_AMOUNT,0)) * -1 as POST_TAX_EE_AMOUNT,&#xD;&#xA; SUM(isnull(PRE_TAX_ER_AMOUNT,0)) * -1 as PRE_TAX_ER_AMOUNT,&#xD;&#xA; SUM(isnull(PRE_TAX_EE_AMOUNT,0)) * -1 as PRE_TAX_EE_AMOUNT,&#xD;&#xA; SUM(isnull(EE_RHIC_AMOUNT,0)) * -1 as EE_RHIC_AMOUNT,&#xD;&#xA; SUM(isnull(ER_RHIC_AMOUNT,0)) * -1 as ER_RHIC_AMOUNT,&#xD;&#xA; SUM(isnull(EE_ER_PICKUP_AMOUNT,0)) * -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA; SUM(isnull(ER_VESTED_AMOUNT,0)) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA; SUM(isnull(INTEREST_AMOUNT,0)) * -1 as INTEREST_AMOUNT,&#xD;&#xA; SUM(isnull(VESTED_SERVICE_CREDIT,0)) * -1 as VESTED_SERVICE_CREDIT,&#xD;&#xA; SUM(isnull(PENSION_SERVICE_CREDIT,0)) * -1 as PENSION_SERVICE_CREDIT--,&#xD;&#xA; --SUM(isnull(EMPLOYER_INTEREST,0)) * -1 as EMPLOYER_INTEREST&#xD;&#xA;FROM &#xD;&#xA;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC&#xD;&#xA;INNER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT &#xD;&#xA;    BAPA.PERSON_ACCOUNT_ID,CALC.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;  FROM SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;   ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;  INNER JOIN SGT_BENEFIT_CALCULATION CALC &#xD;&#xA;   ON CALC.BENEFIT_APPLICATION_ID = BA.BENEFIT_APPLICATION_ID  &#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT PA &#xD;&#xA;   ON BAPA.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PACT&#xD;&#xA;   ON  BA.BENEFIT_APPLICATION_ID = PACT.APPLICATION_ID&#xD;&#xA;    AND BA.RECIPIENT_PERSON_ID = PACT.PAYEE_PERSLINK_ID  &#xD;&#xA;  WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' &#xD;&#xA;   AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC') &#xD;&#xA;   AND (BA.PLAN_ID = 7 OR BA.PLAN_ID = 28 OR BA.PLAN_ID = 30)&#xD;&#xA;   AND CALC.ACTION_STATUS_VALUE ='APPR'  &#xD;&#xA;   --AND PLAN_PARTICIPATION_STATUS_VALUE in( 'SUS2' ,'ENL1')&#xD;&#xA;   AND ISNULL(BA.PAYMENT_DATE,PACT.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE -- ADDED&#xD;&#xA; ) AS  PAS &#xD;&#xA; ON PAS.PERSON_ACCOUNT_ID = RC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE ISNULL(RC.TRANSFER_FLAG_VALUE,'') = CASE WHEN PAS.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' THEN 'C' ELSE ISNULL(RC.TRANSFER_FLAG_VALUE,'') END  -- PIR 11946 - sum only those contributions which have flag currently 'C' for refund case only, for other take all contributions.&#xD;&#xA;GROUP BY RC.PERSON_ACCOUNT_ID ,PAS.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;HAVING SUM(ISNULL(POST_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(POST_TAX_EE_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(EE_RHIC_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(ER_RHIC_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(ER_VESTED_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(INTEREST_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(VESTED_SERVICE_CREDIT,0))+&#xD;&#xA; SUM(ISNULL(PENSION_SERVICE_CREDIT,0))--+&#xD;&#xA; --SUM(ISNULL(EMPLOYER_INTEREST,0))  &#xD;&#xA; &lt;&gt; 0 &#xD;&#xA;&#xD;&#xA;-- END OF PIR 6556&#xD;&#xA;) AS CONTRIBUTION&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA; PERSON_ACCOUNT_ID,&#xD;&#xA; 349  as SUBSYSTEM_ID ,&#xD;&#xA; 'PMNT' AS SUBSYSTEM_VALUE ,&#xD;&#xA;  NULL AS SUBSYSTEM_REF_ID ,&#xD;&#xA; @PAYMENTDATE as TRANSACTION_DATE ,&#xD;&#xA; @PAYMENTDATE as EFFECTIVE_DATE ,         &#xD;&#xA; Month(@PAYMENTDATE) AS PAY_PERIOD_MONTH ,&#xD;&#xA; year(@PAYMENTDATE) as PAY_PERIOD_YEAR ,&#xD;&#xA; Null AS PERSON_EMPLOYMENT_DTL_ID ,&#xD;&#xA; 350 as TRANSACTION_TYPE_ID ,&#xD;&#xA; BENEFIT_ACCOUNT_TYPE_VALUE AS TRANSACTION_TYPE_VALUE ,&#xD;&#xA; SALARY_AMOUNT,&#xD;&#xA; POST_TAX_ER_AMOUNT,&#xD;&#xA; POST_TAX_EE_AMOUNT,&#xD;&#xA; PRE_TAX_ER_AMOUNT,&#xD;&#xA; PRE_TAX_EE_AMOUNT,&#xD;&#xA; EE_RHIC_AMOUNT,&#xD;&#xA; ER_RHIC_AMOUNT,&#xD;&#xA; EE_ER_PICKUP_AMOUNT,&#xD;&#xA; ER_VESTED_AMOUNT,&#xD;&#xA; INTEREST_AMOUNT,&#xD;&#xA; VESTED_SERVICE_CREDIT,&#xD;&#xA; PENSION_SERVICE_CREDIT, &#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA; getdate() as CREATED_DATE,&#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA; getdate() as modified_date,&#xD;&#xA; 0 as UPDATE_SEQ--,EMPLOYER_INTEREST&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA; SELECT&#xD;&#xA; RC.PERSON_ACCOUNT_ID,PAS.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA; 0 as SALARY_AMOUNT,&#xD;&#xA; SUM(isnull(POST_TAX_ER_AMOUNT,0)) * -1 as POST_TAX_ER_AMOUNT,&#xD;&#xA; SUM(isnull(POST_TAX_EE_AMOUNT,0)) * -1 as POST_TAX_EE_AMOUNT,&#xD;&#xA; SUM(isnull(PRE_TAX_ER_AMOUNT,0)) * -1 as PRE_TAX_ER_AMOUNT,&#xD;&#xA; SUM(isnull(PRE_TAX_EE_AMOUNT,0)) * -1 as PRE_TAX_EE_AMOUNT,&#xD;&#xA; SUM(isnull(EE_RHIC_AMOUNT,0)) * -1 as EE_RHIC_AMOUNT,&#xD;&#xA; SUM(isnull(ER_RHIC_AMOUNT,0)) * -1 as ER_RHIC_AMOUNT,&#xD;&#xA; SUM(isnull(EE_ER_PICKUP_AMOUNT,0)) * -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA; SUM(isnull(ER_VESTED_AMOUNT,0)) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA; SUM(isnull(INTEREST_AMOUNT,0)) * -1 as INTEREST_AMOUNT,&#xD;&#xA; SUM(isnull(VESTED_SERVICE_CREDIT,0)) * -1 as VESTED_SERVICE_CREDIT,&#xD;&#xA; SUM(isnull(PENSION_SERVICE_CREDIT,0)) * -1 as PENSION_SERVICE_CREDIT--,&#xD;&#xA; --SUM(isnull(EMPLOYER_INTEREST,0)) * -1 as EMPLOYER_INTEREST&#xD;&#xA;FROM &#xD;&#xA;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC&#xD;&#xA;INNER JOIN &#xD;&#xA; (&#xD;&#xA; SELECT &#xD;&#xA;   DISTINCT BAPA.PERSON_ACCOUNT_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;   and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA; WHERE (CV.DATA2 = 'APRD') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;  AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') &#xD;&#xA;  --AND PA.BENEFIT_OPTION_VALUE &lt;&gt; 'REFD' -- COMMENTED AS PER CALL WITH MAIK ON JANUARY 8, 2018, AS PART OF DISCUSSION OF PIR 18291&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ) AS  PAS &#xD;&#xA; ON PAS.PERSON_ACCOUNT_ID = RC.PERSON_ACCOUNT_ID&#xD;&#xA;GROUP BY RC.PERSON_ACCOUNT_ID ,PAS.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;HAVING SUM(ISNULL(POST_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(POST_TAX_EE_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(EE_RHIC_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(ER_RHIC_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(ER_VESTED_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(INTEREST_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(VESTED_SERVICE_CREDIT,0))+&#xD;&#xA; SUM(ISNULL(PENSION_SERVICE_CREDIT,0))--+&#xD;&#xA;--SUM(ISNULL(EMPLOYER_INTEREST,0))  &#xD;&#xA;&lt;&gt; 0 &#xD;&#xA;) AS CONTRIBUTION&#xD;&#xA;&#xD;&#xA;-- COMMENTED AS PER CALL WITH MAIK ON JANUARY 8, 2018, AS PART OF DISCUSSION OF PIR 18291&#xD;&#xA;--UNION ALL&#xD;&#xA;&#xD;&#xA;--SELECT&#xD;&#xA;-- PERSON_ACCOUNT_ID,&#xD;&#xA;-- 349  as SUBSYSTEM_ID ,&#xD;&#xA;-- 'PMNT' AS SUBSYSTEM_VALUE ,&#xD;&#xA;--  NULL AS SUBSYSTEM_REF_ID ,&#xD;&#xA;-- @PAYMENTDATE as TRANSACTION_DATE ,&#xD;&#xA;-- @PAYMENTDATE as EFFECTIVE_DATE ,         &#xD;&#xA;-- Month(@PAYMENTDATE) AS PAY_PERIOD_MONTH ,&#xD;&#xA;-- year(@PAYMENTDATE) as PAY_PERIOD_YEAR ,&#xD;&#xA;-- Null AS PERSON_EMPLOYMENT_DTL_ID ,&#xD;&#xA;-- 350 as TRANSACTION_TYPE_ID ,&#xD;&#xA;-- BENEFIT_ACCOUNT_TYPE_VALUE AS TRANSACTION_TYPE_VALUE ,&#xD;&#xA;-- SALARY_AMOUNT,&#xD;&#xA;-- POST_TAX_ER_AMOUNT,&#xD;&#xA;-- POST_TAX_EE_AMOUNT,&#xD;&#xA;-- PRE_TAX_ER_AMOUNT,&#xD;&#xA;-- PRE_TAX_EE_AMOUNT,&#xD;&#xA;-- EE_RHIC_AMOUNT,&#xD;&#xA;-- ER_RHIC_AMOUNT,&#xD;&#xA;-- EE_ER_PICKUP_AMOUNT,&#xD;&#xA;-- ER_VESTED_AMOUNT,&#xD;&#xA;-- INTEREST_AMOUNT,&#xD;&#xA;-- VESTED_SERVICE_CREDIT,&#xD;&#xA;-- PENSION_SERVICE_CREDIT, &#xD;&#xA;-- 'PERSLink Batch' as CREATED_BY,&#xD;&#xA;-- getdate() as CREATED_DATE,&#xD;&#xA;-- 'PERSLink Batch' as MODIFIED_BY,&#xD;&#xA;-- getdate() as modified_date,&#xD;&#xA;-- 0 as UPDATE_SEQ,EMPLOYER_INTEREST&#xD;&#xA;--FROM &#xD;&#xA;--(&#xD;&#xA;-- SELECT&#xD;&#xA;-- PAS.PERSON_ACCOUNT_ID,PAS.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;-- 0 as SALARY_AMOUNT,&#xD;&#xA;-- 0 as POST_TAX_ER_AMOUNT,&#xD;&#xA;-- SUM(ISNULL(POST_TAX_EE_AMOUNT,0) + ISNULL(POST_TAX_EE_SER_PUR_CONT  ,0)) * -1 as POST_TAX_EE_AMOUNT,&#xD;&#xA;-- 0 as PRE_TAX_ER_AMOUNT,&#xD;&#xA;-- SUM(ISNULL(PRE_TAX_EE_AMOUNT,0) + ISNULL(PRE_TAX_EE_SER_PUR_CONT,0)) * -1 as PRE_TAX_EE_AMOUNT,&#xD;&#xA;-- SUM(ISNULL(EE_RHIC_AMOUNT,0)+ ISNULL(EE_RHIC_SER_PUR_CONT,0)) * -1 as EE_RHIC_AMOUNT,&#xD;&#xA;-- 0  as ER_RHIC_AMOUNT,&#xD;&#xA;-- SUM(ISNULL(EE_ER_PICKUP_AMOUNT ,0))* -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA;-- SUM(isnull(ER_VESTED_AMOUNT,0)) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA;-- SUM(ISNULL(INTEREST_AMOUNT,0))* -1 as INTEREST_AMOUNT,&#xD;&#xA;-- 0 as VESTED_SERVICE_CREDIT,&#xD;&#xA;-- 0 as PENSION_SERVICE_CREDIT,&#xD;&#xA;-- 0 as EMPLOYER_INTEREST&#xD;&#xA;--FROM SGT_BENEFIT_CALCULATION_OPTIONS BC&#xD;&#xA;--INNER JOIN SGT_BENEFIT_CALCULATION_PAYEE BCPAYEE&#xD;&#xA;--  ON BC.BENEFIT_CALCULATION_PAYEE_ID=BCPAYEE.BENEFIT_CALCULATION_PAYEE_ID &#xD;&#xA;--INNER JOIN &#xD;&#xA;-- (&#xD;&#xA;-- SELECT &#xD;&#xA;--   Distinct BAPA.PERSON_ACCOUNT_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,PA.CALCULATION_ID&#xD;&#xA;-- FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;--  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;--   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;--  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;--   ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;--   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)  &#xD;&#xA;--  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;--   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;--  INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;--   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;--  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;--   ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;--   and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA;-- WHERE (CV.DATA2 = 'APRD' ) &#xD;&#xA;--  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;--   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;--   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;--   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;--   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;--   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;--  )&#xD;&#xA;--  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;--  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;--  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;--  AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA;--  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND PA.BENEFIT_OPTION_VALUE = 'REFD'&#xD;&#xA;--  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;--  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;--  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;-- ) AS  PAS &#xD;&#xA;-- ON PAS.CALCULATION_ID = BC.BENEFIT_CALCULATION_ID&#xD;&#xA;--WHERE BCPAYEE.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;-- AND ISNULL(BCPAYEE.MEMBER_ACCOUNT_NEGATED_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;--GROUP BY PAS.PERSON_ACCOUNT_ID ,PAS.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;--) AS CONTRIBUTION&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;-- PIR 11946 - Start -- Update contributions transfer flag to 'T' if transferred or 'R' if refunded&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT PERSON_ACCOUNT_ID&#xD;&#xA;INTO #DIS_PERSON_ACCOUNT_ID&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;WHERE RETIREMENT_CONTRIBUTION_ID &gt; @MAX_CONTRIBUTION_ID&#xD;&#xA;&#xD;&#xA;UPDATE RC&#xD;&#xA;SET RC.TRANSFER_FLAG_VALUE = CASE WHEN P.PLAN_PARTICIPATION_STATUS_VALUE = 'WTN1' THEN 'R'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN P.PLAN_PARTICIPATION_STATUS_VALUE = 'TICR' THEN 'T' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN P.PLAN_PARTICIPATION_STATUS_VALUE = 'TRDB' THEN 'T' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN P.PLAN_PARTICIPATION_STATUS_VALUE = 'TRDC' THEN 'T' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN P.PLAN_PARTICIPATION_STATUS_VALUE = 'TRTF' THEN 'T' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END,&#xD;&#xA;MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid)&#xD;&#xA;,MODIFIED_DATE = GETDATE()&#xD;&#xA;,UPDATE_SEQ = RC.UPDATE_SEQ + 1&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC&#xD;&#xA;JOIN #DIS_PERSON_ACCOUNT_ID TEMP ON TEMP.PERSON_ACCOUNT_ID = RC.PERSON_ACCOUNT_ID&#xD;&#xA;JOIN SGT_PERSON_ACCOUNT P ON P.PERSON_ACCOUNT_ID = RC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE ISNULL(RC.TRANSFER_FLAG_VALUE,'') = 'C'&#xD;&#xA;&#xD;&#xA;-- PIR 11946 - End&#xD;&#xA;&#xD;&#xA;UPDATE BCPAYEE&#xD;&#xA;SET BCPAYEE.MEMBER_ACCOUNT_NEGATED_FLAG = 'Y',&#xD;&#xA; BCPAYEE.MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA; BCPAYEE.MODIFIED_DATE = GETDATE(),&#xD;&#xA; BCPAYEE.UPDATE_SEQ = BCPAYEE.UPDATE_SEQ + 1&#xD;&#xA;FROM SGT_BENEFIT_CALCULATION_OPTIONS BC&#xD;&#xA;INNER JOIN SGT_BENEFIT_CALCULATION_PAYEE BCPAYEE&#xD;&#xA;  ON BC.BENEFIT_CALCULATION_PAYEE_ID=BCPAYEE.BENEFIT_CALCULATION_PAYEE_ID &#xD;&#xA;INNER JOIN &#xD;&#xA; (&#xD;&#xA; SELECT &#xD;&#xA;   Distinct BAPA.PERSON_ACCOUNT_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,PA.CALCULATION_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)  &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;   and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA; WHERE (CV.DATA2 = 'APRD' ) &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;  AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') AND PA.BENEFIT_OPTION_VALUE = 'REFD'&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;  &#xD;&#xA;  UNION ALL&#xD;&#xA;  -- PIR 6556&#xD;&#xA;   SELECT &#xD;&#xA;    Distinct BAPA.PERSON_ACCOUNT_ID,CALC.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;    CALC.BENEFIT_CALCULATION_ID AS CALCULATION_ID&#xD;&#xA;  FROM SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;   ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;  INNER JOIN SGT_BENEFIT_CALCULATION CALC &#xD;&#xA;   ON CALC.BENEFIT_APPLICATION_ID = BA.BENEFIT_APPLICATION_ID  &#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT PA &#xD;&#xA;   ON BAPA.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PACT&#xD;&#xA;   ON  BA.BENEFIT_APPLICATION_ID = PACT.APPLICATION_ID&#xD;&#xA;    AND BA.RECIPIENT_PERSON_ID = PACT.PAYEE_PERSLINK_ID   &#xD;&#xA;  WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' &#xD;&#xA;   AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC') &#xD;&#xA;   AND (BA.PLAN_ID = 7 OR BA.PLAN_ID = 28  OR BA.PLAN_ID = 30)&#xD;&#xA;   AND CALC.ACTION_STATUS_VALUE ='APPR'  &#xD;&#xA;   --AND PLAN_PARTICIPATION_STATUS_VALUE in( 'SUS2' ,'ENL1')&#xD;&#xA;   AND ISNULL(BA.PAYMENT_DATE,PACT.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE -- ADDED  &#xD;&#xA; ) AS  PAS &#xD;&#xA; ON PAS.CALCULATION_ID = BC.BENEFIT_CALCULATION_ID&#xD;&#xA;WHERE BCPAYEE.PAYEE_ACCOUNT_ID IS NOT NULL -- TO CHECK ON THIS&#xD;&#xA; AND ISNULL(BCPAYEE.MEMBER_ACCOUNT_NEGATED_FLAG,'N') &lt;&gt; 'Y'">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePersonAccountRetirementContributionForAltPayee" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="INSERT INTO SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION &#xD;&#xA;(&#xD;&#xA;PERSON_ACCOUNT_ID, SUBSYSTEM_ID, SUBSYSTEM_VALUE, SUBSYSTEM_REF_ID,&#xD;&#xA;TRANSACTION_DATE, EFFECTIVE_DATE, PAY_PERIOD_MONTH, PAY_PERIOD_YEAR,&#xD;&#xA;PERSON_EMPLOYMENT_DTL_ID, TRANSACTION_TYPE_ID, TRANSACTION_TYPE_VALUE, &#xD;&#xA;SALARY_AMOUNT, POST_TAX_ER_AMOUNT, POST_TAX_EE_AMOUNT, PRE_TAX_ER_AMOUNT,&#xD;&#xA;PRE_TAX_EE_AMOUNT, EE_RHIC_AMOUNT, ER_RHIC_AMOUNT, EE_ER_PICKUP_AMOUNT, &#xD;&#xA;ER_VESTED_AMOUNT, INTEREST_AMOUNT, VESTED_SERVICE_CREDIT, PENSION_SERVICE_CREDIT, &#xD;&#xA;CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ, EMPLOYER_INTEREST&#xD;&#xA;)&#xD;&#xA;SELECT&#xD;&#xA; PAS.PERSON_ACCOUNT_ID,&#xD;&#xA; 349  as SUBSYSTEM_ID ,&#xD;&#xA; 'PMNT' AS SUBSYSTEM_VALUE ,&#xD;&#xA;  NULL AS SUBSYSTEM_REF_ID ,&#xD;&#xA; @PAYMENTDATE as TRANSACTION_DATE ,&#xD;&#xA; @PAYMENTDATE as EFFECTIVE_DATE ,         &#xD;&#xA; Month(@PAYMENTDATE) AS PAY_PERIOD_MONTH ,&#xD;&#xA; year(@PAYMENTDATE) as PAY_PERIOD_YEAR ,&#xD;&#xA; Null AS PERSON_EMPLOYMENT_DTL_ID ,&#xD;&#xA; 350 as TRANSACTION_TYPE_ID ,&#xD;&#xA; 'APPY' TRANSACTION_TYPE_VALUE ,&#xD;&#xA; 0 as SALARY_AMOUNT,&#xD;&#xA; 0 as POST_TAX_ER_AMOUNT,&#xD;&#xA; EE_POST_TAX_AMOUNT as POST_TAX_EE_AMOUNT,&#xD;&#xA; 0 as PRE_TAX_ER_AMOUNT,&#xD;&#xA; EE_PRE_TAX_AMOUNT as PRE_TAX_EE_AMOUNT,&#xD;&#xA; 0 as EE_RHIC_AMOUNT,&#xD;&#xA; 0 as ER_RHIC_AMOUNT,&#xD;&#xA; EE_ER_PICKUP_AMOUNT,&#xD;&#xA; ER_VESTED_AMOUNT,&#xD;&#xA; INTEREST_AMOUNT,&#xD;&#xA; 0 as VESTED_SERVICE_CREDIT,&#xD;&#xA; 0 as PENSION_SERVICE_CREDIT,  &#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA; getdate() as CREATED_DATE,&#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA; getdate() as modified_date,&#xD;&#xA; 0 as UPDATE_SEQ,0 EMPLOYER_INTEREST&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA; SELECT &#xD;&#xA;  BAPA.PERSON_ACCOUNT_ID,&#xD;&#xA;  SUM(isnull(EE_PRE_TAX_AMOUNT,0)) * -1 as EE_PRE_TAX_AMOUNT,&#xD;&#xA;  SUM(isnull(EE_POST_TAX_AMOUNT,0)) * -1 as EE_POST_TAX_AMOUNT,&#xD;&#xA;  SUM(isnull(EE_ER_PICKUP_AMOUNT,0)) * -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA;  SUM(isnull(ER_VESTED_AMOUNT,0)) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA;  SUM(isnull(INTEREST_AMOUNT+ADDITIONAL_INTEREST_AMOUNT,0)) * -1 as INTEREST_AMOUNT,&#xD;&#xA;  SUM(isnull(CAPITAL_GAIN,0)) * -1 as CAPITAL_GAIN&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA (NOLOCK) &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS(NOLOCK) &#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_DRO_CALCULATION DROC&#xD;&#xA;   ON DROC.DRO_CALCULATION_ID = PA.DRO_CALCULATION_ID &#xD;&#xA;  INNER JOIN SGT_BENEFIT_DRO_APPLICATION DROA&#xD;&#xA;   ON PA.DRO_APPLICATION_ID = DROA.DRO_APPLICATION_ID &#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT BAPA &#xD;&#xA;   ON DROA.MEMBER_PERSLINK_ID = BAPA.PERSON_ID AND DROA.PLAN_ID = BAPA.PLAN_ID&#xD;&#xA;&#xD;&#xA;  LEFT OUTER JOIN &#xD;&#xA;   (  -- The member should not have a payee account with Benefit Account Type of Retirement or Refund&#xD;&#xA;   SELECT &#xD;&#xA;   MPA.PAYEE_PERSLINK_ID, MEMBAPA.PERSON_ACCOUNT_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT MPA (NOLOCK) &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS MPAS(NOLOCK) &#xD;&#xA;     ON MPAS.PAYEE_ACCOUNT_ID = MPA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE MCV&#xD;&#xA;     ON MPAS.STATUS_ID= MCV.CODE_ID AND MPAS.STATUS_VALUE = MCV.CODE_VALUE&#xD;&#xA;&#x9;INNER JOIN SGT_BENEFIT_APPLICATION MEMBA ON MEMBA.BENEFIT_APPLICATION_ID = MPA.APPLICATION_ID --this new join added for PIR 23347 fix &#xD;&#xA;&#x9;INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT MEMBAPA ON MEMBAPA.BENEFIT_APPLICATION_ID = MEMBA.BENEFIT_APPLICATION_ID AND ISNULL(MEMBAPA.IS_APPLICATION_PERSON_ACCOUNT_FLAG, 'N') = 'Y' --this new join added for PIR 23347 fix&#xD;&#xA;   WHERE (MCV.DATA2 &lt;&gt; 'CNLD')  &#xD;&#xA;    AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;     (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;      FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;      WHERE PAS1.PAYEE_ACCOUNT_ID = MPA.PAYEE_ACCOUNT_ID&#xD;&#xA;      AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;      ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;     )&#xD;&#xA;    AND (MPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR' OR MPA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND')&#xD;&#xA;    AND MPAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ) AS MPAC&#xD;&#xA;   ON DROA.MEMBER_PERSLINK_ID = MPAC.PAYEE_PERSLINK_ID AND MPAC.PERSON_ACCOUNT_ID = BAPA.PERSON_ACCOUNT_ID --extra join condition added for PIR 23347 fix&#xD;&#xA;  WHERE &#xD;&#xA;  (CV.DATA2 = 'APRD') AND &#xD;&#xA;  PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;  AND PA.DRO_CALCULATION_ID IS NOT NULL&#xD;&#xA;  and PA.ACCOUNT_RELATION_VALUE = 'ALTP'  &#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  and DROC.PAYMENT_STATUS_VALUE &lt;&gt; 'PRCD'&#xD;&#xA;  and mpac.payee_perslink_id is null&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;  GROUP BY BAPA.PERSON_ACCOUNT_ID &#xD;&#xA; ) AS  PAS">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdatePersonAccountRetirementContributionForAdhoc" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="--PIR 11946 - Taken max contribution id in variable&#xD;&#xA;DECLARE @MAX_CONTRIBUTION_ID INT = (SELECT MAX(RETIREMENT_CONTRIBUTION_ID) FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION)&#xD;&#xA;&#xD;&#xA;Select  &#xD;&#xA; PAC.PERSON_ACCOUNT_ID,&#xD;&#xA; 349  as SUBSYSTEM_ID ,&#xD;&#xA; CONTR.SUBSYSTEM_VALUE ,&#xD;&#xA; CONTR.SUBSYSTEM_REF_ID ,&#xD;&#xA; CONTR.TRANSACTION_DATE ,&#xD;&#xA; CONTR.EFFECTIVE_DATE ,         &#xD;&#xA; CONTR.PAY_PERIOD_MONTH ,&#xD;&#xA; CONTR.PAY_PERIOD_YEAR ,&#xD;&#xA; CONTR.PERSON_EMPLOYMENT_DTL_ID ,&#xD;&#xA; 350 as TRANSACTION_TYPE_ID ,&#xD;&#xA; BENEFIT_ACCOUNT_TYPE_VALUE AS TRANSACTION_TYPE_VALUE ,&#xD;&#xA; SALARY_AMOUNT,&#xD;&#xA; POST_TAX_ER_AMOUNT,&#xD;&#xA; POST_TAX_EE_AMOUNT,&#xD;&#xA; CASE WHEN OVERRIDDEN_ER_PRE_TAX_AMOUNT &gt; 0 THEN 0 ELSE PRE_TAX_ER_AMOUNT END AS PRE_TAX_ER_AMOUNT,&#xD;&#xA; PRE_TAX_EE_AMOUNT,&#xD;&#xA; EE_RHIC_AMOUNT,&#xD;&#xA; ER_RHIC_AMOUNT,&#xD;&#xA; EE_ER_PICKUP_AMOUNT,&#xD;&#xA; ER_VESTED_AMOUNT,&#xD;&#xA; INTEREST_AMOUNT,&#xD;&#xA; VESTED_SERVICE_CREDIT,&#xD;&#xA; PENSION_SERVICE_CREDIT, &#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA; getdate() as CREATED_DATE,&#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA; getdate() as modified_date,&#xD;&#xA; 0 as UPDATE_SEQ,--CASE WHEN OVERRIDDEN_ER_INTEREST_AMOUNT &gt; 0 THEN 0 ELSE EMPLOYER_INTEREST END AS EMPLOYER_INTEREST,&#xD;&#xA; OVERRIDDEN_ER_PRE_TAX_AMOUNT--,OVERRIDDEN_ER_INTEREST_AMOUNT &#xD;&#xA; INTO #TEMP&#xD;&#xA;From &#xD;&#xA; (&#xD;&#xA; SELECT PARC.*,PA.PAYEE_PERSLINK_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,CALC.OVERRIDDEN_ER_PRE_TAX_AMOUNT--,CALC.OVERRIDDEN_ER_INTEREST_AMOUNT&#xD;&#xA;  FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;   INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;   INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID    &#xD;&#xA;   INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_CALCULATION_PERSON_ACCOUNT BCPA&#xD;&#xA;    ON BCPA.BENEFIT_CALCULATION_ID = PA.CALCULATION_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC&#xD;&#xA;    ON BCPA.PERSON_ACCOUNT_ID=PARC.PERSON_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_BENEFIT_REFUND_CALCULATION CALC&#xD;&#xA;    ON PA.CALCULATION_ID = CALC.BENEFIT_CALCULATION_ID&#xD;&#xA;  WHERE (CV.DATA2 = 'APRD' )&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;    )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE &#xD;&#xA;   AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;   AND PA.CALCULATION_ID IS NOT NULL &#xD;&#xA;   AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE IN ('DBCT','SPEL')&#xD;&#xA;   AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID   &#xD;&#xA;   AND ISNULL(PARC.TRANSFER_FLAG_VALUE,'') = 'C' -- PIR 11946 - Transfer only those contributions which have flag currently 'C'&#xD;&#xA; )CONTR&#xD;&#xA;INNER JOIN SGT_PERSON_ACCOUNT PAC &#xD;&#xA; ON CONTR.PAYEE_PERSLINK_ID  = PAC.PERSON_ID AND (PAC.PLAN_ID = 7 OR PAC.PLAN_ID = 28 OR PAC.PLAN_ID = 30)&#xD;&#xA;  AND PLAN_PARTICIPATION_STATUS_VALUE IN ('ENL1' , 'SUS2')&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;(&#xD;&#xA; PERSON_ACCOUNT_ID, SUBSYSTEM_ID, SUBSYSTEM_VALUE, SUBSYSTEM_REF_ID, TRANSACTION_DATE, EFFECTIVE_DATE, PAY_PERIOD_MONTH, PAY_PERIOD_YEAR, PERSON_EMPLOYMENT_DTL_ID, TRANSACTION_TYPE_ID, TRANSACTION_TYPE_VALUE, SALARY_AMOUNT, POST_TAX_ER_AMOUNT, POST_TAX_EE_AMOUNT, PRE_TAX_ER_AMOUNT, PRE_TAX_EE_AMOUNT, EE_RHIC_AMOUNT, ER_RHIC_AMOUNT, EE_ER_PICKUP_AMOUNT, ER_VESTED_AMOUNT, INTEREST_AMOUNT, VESTED_SERVICE_CREDIT, PENSION_SERVICE_CREDIT, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ--, EMPLOYER_INTEREST&#xD;&#xA;)&#xD;&#xA;SELECT&#xD;&#xA; PERSON_ACCOUNT_ID,&#xD;&#xA; 349  as SUBSYSTEM_ID ,&#xD;&#xA; 'PMNT' AS SUBSYSTEM_VALUE ,&#xD;&#xA;  NULL AS SUBSYSTEM_REF_ID ,&#xD;&#xA; @PAYMENTDATE as TRANSACTION_DATE ,&#xD;&#xA; EFFECTIVE_DATE ,         &#xD;&#xA; Month(@PAYMENTDATE) AS PAY_PERIOD_MONTH ,&#xD;&#xA; year(@PAYMENTDATE) as PAY_PERIOD_YEAR ,&#xD;&#xA; Null AS PERSON_EMPLOYMENT_DTL_ID ,&#xD;&#xA; 350 as TRANSACTION_TYPE_ID ,&#xD;&#xA; BENEFIT_ACCOUNT_TYPE_VALUE AS TRANSACTION_TYPE_VALUE ,&#xD;&#xA; SALARY_AMOUNT,&#xD;&#xA; POST_TAX_ER_AMOUNT,&#xD;&#xA; POST_TAX_EE_AMOUNT,&#xD;&#xA; CASE WHEN OVERRIDDEN_ER_PRE_TAX_AMOUNT &gt; 0 THEN OVERRIDDEN_ER_PRE_TAX_AMOUNT * -1 ELSE PRE_TAX_ER_AMOUNT END AS PRE_TAX_ER_AMOUNT,&#xD;&#xA; PRE_TAX_EE_AMOUNT,&#xD;&#xA; EE_RHIC_AMOUNT,&#xD;&#xA; ER_RHIC_AMOUNT,&#xD;&#xA; EE_ER_PICKUP_AMOUNT,&#xD;&#xA; ER_VESTED_AMOUNT,&#xD;&#xA; INTEREST_AMOUNT,&#xD;&#xA; VESTED_SERVICE_CREDIT,&#xD;&#xA; PENSION_SERVICE_CREDIT, &#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA; getdate() as CREATED_DATE,&#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA; getdate() as modified_date,&#xD;&#xA; 0 as UPDATE_SEQ--,CASE WHEN OVERRIDDEN_ER_INTEREST_AMOUNT &gt; 0 &#xD;&#xA; --THEN OVERRIDDEN_ER_INTEREST_AMOUNT * -1 &#xD;&#xA; --ELSE EMPLOYER_INTEREST END AS EMPLOYER_INTEREST&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;SELECT&#xD;&#xA;BCPA.PERSON_ACCOUNT_ID,&#xD;&#xA;isnull(SUM(PARC.SALARY_AMOUNT),0) * -1 AS SALARY_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.POST_TAX_ER_AMOUNT),0) * -1 AS POST_TAX_ER_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.ER_RHIC_AMOUNT),0) * -1 AS ER_RHIC_AMOUNT, &#xD;&#xA;isnull(SUM(PARC.VESTED_SERVICE_CREDIT),0) * -1 AS  VESTED_SERVICE_CREDIT,&#xD;&#xA;isnull(SUM(PARC.PENSION_SERVICE_CREDIT),0) * -1 AS  PENSION_SERVICE_CREDIT,&#xD;&#xA;isnull(SUM(PARC.POST_TAX_EE_AMOUNT),0) * -1 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.PRE_TAX_ER_AMOUNT),0) * -1 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.PRE_TAX_EE_AMOUNT),0) * -1 as PRE_TAX_EE_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.EE_RHIC_AMOUNT),0) * -1 as EE_RHIC_AMOUNT, &#xD;&#xA;isnull(SUM(PARC.EE_ER_PICKUP_AMOUNT),0) * -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.ER_VESTED_AMOUNT),0) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.INTEREST_AMOUNT),0) * -1 as INTEREST_AMOUNT,&#xD;&#xA;--isnull(SUM(PARC.EMPLOYER_INTEREST),0) * -1 as EMPLOYER_INTEREST,&#xD;&#xA;'DBCT' as BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;@PAYMENTDATE as EFFECTIVE_DATE,&#xD;&#xA;CALC.OVERRIDDEN_ER_PRE_TAX_AMOUNT--,&#xD;&#xA;--CALC.OVERRIDDEN_ER_INTEREST_AMOUNT&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID    &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_CALCULATION_PERSON_ACCOUNT BCPA&#xD;&#xA;    ON BCPA.BENEFIT_CALCULATION_ID = PA.CALCULATION_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC&#xD;&#xA;    ON BCPA.PERSON_ACCOUNT_ID=PARC.PERSON_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_BENEFIT_REFUND_CALCULATION CALC&#xD;&#xA;    ON PA.CALCULATION_ID = CALC.BENEFIT_CALCULATION_ID&#xD;&#xA;WHERE (CV.DATA2 = 'APRD')&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE IN ('DBCT','SPEL')&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE &#xD;&#xA;   AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;   AND PA.CALCULATION_ID IS NOT NULL &#xD;&#xA;   AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL   &#xD;&#xA;   AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;   AND ISNULL(PARC.TRANSFER_FLAG_VALUE,'') = 'C' -- PIR 11946 - sum only those contributions which have flag currently 'C' for payment entry&#xD;&#xA;GROUP BY BCPA.PERSON_ACCOUNT_ID,pa.payee_account_id,PA.BENEFIT_ACCOUNT_TYPE_VALUE,CALC.OVERRIDDEN_ER_PRE_TAX_AMOUNT,PA.BENEFIT_OPTION_VALUE--,CALC.OVERRIDDEN_ER_INTEREST_AMOUNT&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;--ADDED FOR 'RETR' CASE&#xD;&#xA;UNION ALL&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA; RC.PERSON_ACCOUNT_ID,&#xD;&#xA; 0 as SALARY_AMOUNT,&#xD;&#xA; SUM(isnull(POST_TAX_ER_AMOUNT,0)) * -1 as POST_TAX_ER_AMOUNT,&#xD;&#xA; SUM(isnull(ER_RHIC_AMOUNT,0)) * -1 as ER_RHIC_AMOUNT,&#xD;&#xA; SUM(isnull(VESTED_SERVICE_CREDIT,0)) * -1 as VESTED_SERVICE_CREDIT,&#xD;&#xA; SUM(isnull(PENSION_SERVICE_CREDIT,0)) * -1 as PENSION_SERVICE_CREDIT,&#xD;&#xA; SUM(isnull(POST_TAX_EE_AMOUNT,0)) * -1 as POST_TAX_EE_AMOUNT,&#xD;&#xA; SUM(isnull(PRE_TAX_ER_AMOUNT,0)) * -1 as PRE_TAX_ER_AMOUNT,&#xD;&#xA; SUM(isnull(PRE_TAX_EE_AMOUNT,0)) * -1 as PRE_TAX_EE_AMOUNT,&#xD;&#xA; SUM(isnull(EE_RHIC_AMOUNT,0)) * -1 as EE_RHIC_AMOUNT,&#xD;&#xA; SUM(isnull(EE_ER_PICKUP_AMOUNT,0)) * -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA; SUM(isnull(ER_VESTED_AMOUNT,0)) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA; SUM(isnull(INTEREST_AMOUNT,0)) * -1 as INTEREST_AMOUNT,&#xD;&#xA; --SUM(isnull(EMPLOYER_INTEREST,0)) * -1 as EMPLOYER_INTEREST,&#xD;&#xA; PAS.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA; @PAYMENTDATE as EFFECTIVE_DATE,&#xD;&#xA; 0 AS OVERRIDDEN_ER_PRE_TAX_AMOUNT--,&#xD;&#xA; --0 AS OVERRIDDEN_ER_INTEREST_AMOUNT&#xD;&#xA;FROM &#xD;&#xA;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC&#xD;&#xA;INNER JOIN &#xD;&#xA; (&#xD;&#xA; SELECT &#xD;&#xA;   BAPA.PERSON_ACCOUNT_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;   and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA; WHERE (CV.DATA2 = 'APRD') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND PA.BENEFIT_BEGIN_DATE &lt;= @PAYMENTDATE &#xD;&#xA;  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;  AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RETR'  &#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE NOT IN('DBCT','DTCT','DBDC','DBTT','SPEL')&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ) AS  PAS &#xD;&#xA; ON PAS.PERSON_ACCOUNT_ID = RC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE PAS.BENEFIT_ACCOUNT_TYPE_VALUE NOT IN ('DISA','DETH','PSTD')&#xD;&#xA;GROUP BY RC.PERSON_ACCOUNT_ID ,PAS.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;HAVING SUM(ISNULL(POST_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(POST_TAX_EE_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(EE_RHIC_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(ER_RHIC_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(ER_VESTED_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(INTEREST_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(VESTED_SERVICE_CREDIT,0))+&#xD;&#xA; SUM(ISNULL(PENSION_SERVICE_CREDIT,0))--+&#xD;&#xA; --SUM(ISNULL(EMPLOYER_INTEREST,0))  &#xD;&#xA; &lt;&gt; 0 &#xD;&#xA;&#xD;&#xA;union all&#xD;&#xA;&#xD;&#xA;-- refund with hardship approval to be  negated&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA; RC.PERSON_ACCOUNT_ID,&#xD;&#xA; 0 as SALARY_AMOUNT,&#xD;&#xA; isnull(SUM(POST_TAX_ER_AMOUNT),0) * -1 AS POST_TAX_ER_AMOUNT,&#xD;&#xA; isnull(SUM(ER_RHIC_AMOUNT),0) * -1 AS ER_RHIC_AMOUNT, &#xD;&#xA; isnull(SUM(VESTED_SERVICE_CREDIT),0) * -1 AS  VESTED_SERVICE_CREDIT,&#xD;&#xA; isnull(SUM(PENSION_SERVICE_CREDIT),0) * -1 AS  PENSION_SERVICE_CREDIT,&#xD;&#xA; isnull(SUM(POST_TAX_EE_AMOUNT),0) * -1 AS POST_TAX_EE_AMOUNT,&#xD;&#xA; isnull(SUM(PRE_TAX_ER_AMOUNT),0) * -1 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA; isnull(SUM(PRE_TAX_EE_AMOUNT),0) * -1 as PRE_TAX_EE_AMOUNT,&#xD;&#xA; isnull(SUM(EE_RHIC_AMOUNT),0) * -1 as EE_RHIC_AMOUNT, &#xD;&#xA; isnull(SUM(EE_ER_PICKUP_AMOUNT),0) * -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA; isnull(SUM(ER_VESTED_AMOUNT),0) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA; isnull(SUM(INTEREST_AMOUNT),0) * -1 as INTEREST_AMOUNT,&#xD;&#xA; --isnull(SUM(EMPLOYER_INTEREST),0) * -1 as EMPLOYER_INTEREST,&#xD;&#xA; PAS.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA; @PAYMENTDATE as EFFECTIVE_DATE,&#xD;&#xA; 0 AS OVERRIDDEN_ER_PRE_TAX_AMOUNT--,&#xD;&#xA; --0 AS OVERRIDDEN_ER_INTEREST_AMOUNT&#xD;&#xA;FROM &#xD;&#xA;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC&#xD;&#xA;INNER JOIN &#xD;&#xA; (&#xD;&#xA; SELECT &#xD;&#xA;   BAPA.PERSON_ACCOUNT_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;   and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA; WHERE (CV.DATA2 = 'APRD') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE)&lt;= @PAYMENTDATE &#xD;&#xA;  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;  AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' &#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  AND (PA.BENEFIT_OPTION_VALUE IN ('RGRD','AURD') AND BA.HARDSHIP_APPROVED_FLAG = 'Y'&#xD;&#xA;  AND DATEADD(D,31,BA.TERMINATION_DATE) &lt;= @PAYMENTDATE) --PROD PIR 4919&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ) AS  PAS &#xD;&#xA; ON PAS.PERSON_ACCOUNT_ID = RC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE ISNULL(RC.TRANSFER_FLAG_VALUE,'') = 'C' -- PIR 11946 - sum only those contributions which have flag currently 'C'&#xD;&#xA; GROUP BY RC.PERSON_ACCOUNT_ID ,PAS.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;HAVING SUM(ISNULL(POST_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(POST_TAX_EE_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(EE_RHIC_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(ER_RHIC_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(ER_VESTED_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(INTEREST_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(VESTED_SERVICE_CREDIT,0))+&#xD;&#xA; SUM(ISNULL(PENSION_SERVICE_CREDIT,0))--+&#xD;&#xA; --SUM(ISNULL(EMPLOYER_INTEREST,0))  &#xD;&#xA; &lt;&gt; 0 &#xD;&#xA; &#xD;&#xA;-- end of -- refund with hardship approval to be  negated&#xD;&#xA;Union all&#xD;&#xA;&#xD;&#xA;-- PIR 6556&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA; RC.PERSON_ACCOUNT_ID,&#xD;&#xA; 0 as SALARY_AMOUNT,&#xD;&#xA; isnull(SUM(POST_TAX_ER_AMOUNT),0) * -1 AS POST_TAX_ER_AMOUNT,&#xD;&#xA; isnull(SUM(ER_RHIC_AMOUNT),0) * -1 AS ER_RHIC_AMOUNT, &#xD;&#xA; isnull(SUM(VESTED_SERVICE_CREDIT),0) * -1 AS  VESTED_SERVICE_CREDIT,&#xD;&#xA; isnull(SUM(PENSION_SERVICE_CREDIT),0) * -1 AS  PENSION_SERVICE_CREDIT,&#xD;&#xA; isnull(SUM(POST_TAX_EE_AMOUNT),0) * -1 AS POST_TAX_EE_AMOUNT,&#xD;&#xA; isnull(SUM(PRE_TAX_ER_AMOUNT),0) * -1 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA; isnull(SUM(PRE_TAX_EE_AMOUNT),0) * -1 as PRE_TAX_EE_AMOUNT,&#xD;&#xA; isnull(SUM(EE_RHIC_AMOUNT),0) * -1 as EE_RHIC_AMOUNT, &#xD;&#xA; isnull(SUM(EE_ER_PICKUP_AMOUNT),0) * -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA; isnull(SUM(ER_VESTED_AMOUNT),0) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA; isnull(SUM(INTEREST_AMOUNT),0) * -1 as INTEREST_AMOUNT,&#xD;&#xA; --isnull(SUM(EMPLOYER_INTEREST),0) * -1 as EMPLOYER_INTEREST,&#xD;&#xA; PAS.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA; @PAYMENTDATE as EFFECTIVE_DATE,&#xD;&#xA; 0 AS OVERRIDDEN_ER_PRE_TAX_AMOUNT--,&#xD;&#xA; --0 AS OVERRIDDEN_ER_INTEREST_AMOUNT&#xD;&#xA;FROM &#xD;&#xA;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC&#xD;&#xA;INNER JOIN &#xD;&#xA; (&#xD;&#xA;  SELECT &#xD;&#xA;    BAPA.PERSON_ACCOUNT_ID,CALC.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;  FROM SGT_BENEFIT_APPLICATION(NOLOCK) BA &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT(NOLOCK) BAPA &#xD;&#xA;   ON  BA.BENEFIT_APPLICATION_ID = BAPA.BENEFIT_APPLICATION_ID  &#xD;&#xA;  INNER JOIN SGT_BENEFIT_CALCULATION CALC &#xD;&#xA;   ON CALC.BENEFIT_APPLICATION_ID = BA.BENEFIT_APPLICATION_ID  &#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT PA &#xD;&#xA;   ON BAPA.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;  LEFT OUTER JOIN SGT_PAYEE_ACCOUNT PACT&#xD;&#xA;   ON  BA.BENEFIT_APPLICATION_ID = PACT.APPLICATION_ID&#xD;&#xA;    AND BA.RECIPIENT_PERSON_ID = PACT.PAYEE_PERSLINK_ID    &#xD;&#xA;  WHERE ISNULL(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y' &#xD;&#xA;   AND BA.ACTION_STATUS_VALUE NOT IN ('DENI','CANC') &#xD;&#xA;   AND (BA.PLAN_ID = 7 OR BA.PLAN_ID = 28 OR BA.PLAN_ID = 30)&#xD;&#xA;   AND CALC.ACTION_STATUS_VALUE ='APPR'  &#xD;&#xA;   --AND PLAN_PARTICIPATION_STATUS_VALUE in( 'SUS2' ,'ENL1')&#xD;&#xA;   AND ISNULL(BA.PAYMENT_DATE,PACT.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE -- ADDED &#xD;&#xA; ) AS  PAS &#xD;&#xA; ON PAS.PERSON_ACCOUNT_ID = RC.PERSON_ACCOUNT_ID&#xD;&#xA; WHERE ISNULL(RC.TRANSFER_FLAG_VALUE,'') = CASE WHEN PAS.BENEFIT_ACCOUNT_TYPE_VALUE = 'RFND' THEN 'C' ELSE ISNULL(RC.TRANSFER_FLAG_VALUE,'') END  -- PIR 11946 - sum only those contributions which have flag currently 'C' for refund case only, for other take all contributions.&#xD;&#xA; GROUP BY RC.PERSON_ACCOUNT_ID ,PAS.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;HAVING SUM(ISNULL(POST_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(POST_TAX_EE_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(EE_RHIC_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(ER_RHIC_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(ER_VESTED_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(INTEREST_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(VESTED_SERVICE_CREDIT,0))+&#xD;&#xA; SUM(ISNULL(PENSION_SERVICE_CREDIT,0))--+&#xD;&#xA; --SUM(ISNULL(EMPLOYER_INTEREST,0))  &#xD;&#xA; &lt;&gt; 0  &#xD;&#xA;----- end of PIR 6556&#xD;&#xA;&#xD;&#xA;union all&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA;BCPA.PERSON_ACCOUNT_ID,&#xD;&#xA;isnull(SUM(PARC.SALARY_AMOUNT),0) * -1 AS SALARY_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.POST_TAX_ER_AMOUNT),0) * -1 AS POST_TAX_ER_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.ER_RHIC_AMOUNT),0) * -1 AS ER_RHIC_AMOUNT, &#xD;&#xA;isnull(SUM(PARC.VESTED_SERVICE_CREDIT),0) * -1 AS  VESTED_SERVICE_CREDIT,&#xD;&#xA;isnull(SUM(PARC.PENSION_SERVICE_CREDIT),0) * -1 AS  PENSION_SERVICE_CREDIT,&#xD;&#xA;isnull(SUM(PARC.POST_TAX_EE_AMOUNT),0) * -1 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.PRE_TAX_ER_AMOUNT),0) * -1 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.PRE_TAX_EE_AMOUNT),0) * -1 as PRE_TAX_EE_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.EE_RHIC_AMOUNT),0) * -1 as EE_RHIC_AMOUNT, &#xD;&#xA;isnull(SUM(PARC.EE_ER_PICKUP_AMOUNT),0) * -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.ER_VESTED_AMOUNT),0) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.INTEREST_AMOUNT),0) * -1 as INTEREST_AMOUNT,&#xD;&#xA;--isnull(SUM(PARC.EMPLOYER_INTEREST),0) * -1 as EMPLOYER_INTEREST,&#xD;&#xA;PA.BENEFIT_ACCOUNT_TYPE_VALUE ,&#xD;&#xA;@PAYMENTDATE as EFFECTIVE_DATE,CALC.OVERRIDDEN_ER_PRE_TAX_AMOUNT--,CALC.OVERRIDDEN_ER_INTEREST_AMOUNT&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID    &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_CALCULATION_PERSON_ACCOUNT BCPA&#xD;&#xA;    ON BCPA.BENEFIT_CALCULATION_ID = PA.CALCULATION_ID&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC&#xD;&#xA;    ON BCPA.PERSON_ACCOUNT_ID=PARC.PERSON_ACCOUNT_ID&#xD;&#xA;   INNER JOIN SGT_BENEFIT_REFUND_CALCULATION CALC&#xD;&#xA;    ON PA.CALCULATION_ID = CALC.BENEFIT_CALCULATION_ID&#xD;&#xA;WHERE (CV.DATA2 = 'APRD')&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE ='DTCT'&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE &#xD;&#xA;   AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;   AND PA.CALCULATION_ID IS NOT NULL &#xD;&#xA;   AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL   &#xD;&#xA;   AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID   &#xD;&#xA;   and ISNULL((Select Count(papit.payee_account_id) from  &#xD;&#xA;   sgt_payee_account_payment_item_type papit    &#xD;&#xA;   inner join sgt_payment_item_type pit  on papit.payment_item_type_id=pit.payment_item_type_id&#xD;&#xA;   and pit.item_type_code = 'ITEM4' and papit.payee_account_id=pa.payee_account_id),0)=0&#xD;&#xA;   AND ISNULL(PARC.TRANSFER_FLAG_VALUE,'') = 'C' -- PIR 11946 - sum only those contributions which have flag currently 'C' for payment entry&#xD;&#xA;GROUP BY BCPA.PERSON_ACCOUNT_ID,pa.payee_account_id,PA.BENEFIT_ACCOUNT_TYPE_VALUE,CALC.OVERRIDDEN_ER_PRE_TAX_AMOUNT--,CALC.OVERRIDDEN_ER_INTEREST_AMOUNT&#xD;&#xA;&#xD;&#xA;union all&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA;BAPA.PERSON_ACCOUNT_ID,&#xD;&#xA;isnull(SUM(PARC.SALARY_AMOUNT),0) * -1 AS SALARY_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.POST_TAX_ER_AMOUNT),0) * -1 AS POST_TAX_ER_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.ER_RHIC_AMOUNT),0) * -1 AS ER_RHIC_AMOUNT, &#xD;&#xA;isnull(SUM(PARC.VESTED_SERVICE_CREDIT),0) * -1 AS  VESTED_SERVICE_CREDIT,&#xD;&#xA;isnull(SUM(PARC.PENSION_SERVICE_CREDIT),0) * -1 AS  PENSION_SERVICE_CREDIT,&#xD;&#xA;isnull(SUM(PARC.POST_TAX_EE_AMOUNT),0) * -1 AS POST_TAX_EE_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.PRE_TAX_ER_AMOUNT),0) * -1 AS PRE_TAX_ER_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.PRE_TAX_EE_AMOUNT),0) * -1 as PRE_TAX_EE_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.EE_RHIC_AMOUNT),0) * -1 as EE_RHIC_AMOUNT, &#xD;&#xA;isnull(SUM(PARC.EE_ER_PICKUP_AMOUNT),0) * -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.ER_VESTED_AMOUNT),0) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA;isnull(SUM(PARC.INTEREST_AMOUNT),0) * -1 as INTEREST_AMOUNT,&#xD;&#xA;--isnull(SUM(PARC.EMPLOYER_INTEREST),0) * -1 as EMPLOYER_INTEREST,&#xD;&#xA;'DBTT' as BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;CAST(CAST(YEAR(PARC.EFFECTIVE_DATE) AS VARCHAR(4))+'/'+CAST(MONTH(PARC.EFFECTIVE_DATE) AS VARCHAR(2))+'/01' AS DATETIME) AS EFFECTIVE_DATE&#xD;&#xA;,CALC.OVERRIDDEN_ER_PRE_TAX_AMOUNT--,CALC.OVERRIDDEN_ER_INTEREST_AMOUNT&#xD;&#xA;FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;    INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;    ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;    INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;    ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID    &#xD;&#xA;    INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;    ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;    INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;    ON BAPA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID&#xD;&#xA;    and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA;    INNER JOIN SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC&#xD;&#xA;    ON BAPA.PERSON_ACCOUNT_ID=PARC.PERSON_ACCOUNT_ID    &#xD;&#xA;    LEFT JOIN SGT_BENEFIT_APPLICATION_DB_TFFR_TRANSFER BATFFR&#xD;&#xA;    ON BAPA.BENEFIT_APPLICATION_ID=BATFFR.BENEFIT_APPLICATION_ID&#xD;&#xA;   LEFT OUTER JOIN SGT_BENEFIT_REFUND_CALCULATION CALC&#xD;&#xA;    ON PA.CALCULATION_ID = CALC.BENEFIT_CALCULATION_ID&#xD;&#xA;WHERE (CV.DATA2 = 'APRD')&#xD;&#xA;   AND PA.BENEFIT_OPTION_VALUE in ('DBDC','DBTT')&#xD;&#xA;   AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;    (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;    FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;    WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;    AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;    ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;   )&#xD;&#xA;   AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE &#xD;&#xA;   AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;   and PARC.transaction_date between BATFFR.start_date and BATFFR.end_date&#xD;&#xA;   AND PA.APPLICATION_ID IS NOT NULL &#xD;&#xA;   AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL   &#xD;&#xA;   AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID   &#xD;&#xA;   and ISNULL((Select Count(papit.payee_account_id) from  &#xD;&#xA;   sgt_payee_account_payment_item_type papit    &#xD;&#xA;   inner join sgt_payment_item_type pit  on papit.payment_item_type_id=pit.payment_item_type_id&#xD;&#xA;   and pit.item_type_code = 'ITEM4' and papit.payee_account_id=pa.payee_account_id),0)=0&#xD;&#xA;   AND ISNULL(PARC.TRANSFER_FLAG_VALUE,'') = 'C' -- PIR 11946 - sum only those contributions which have flag currently 'C' for payment entry&#xD;&#xA;GROUP BY BAPA.PERSON_ACCOUNT_ID,pa.payee_account_id,PA.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;CAST(CAST(YEAR(PARC.EFFECTIVE_DATE) AS VARCHAR(4))+'/'+CAST(MONTH(PARC.EFFECTIVE_DATE) AS VARCHAR(2))+'/01' AS DATETIME)&#xD;&#xA;,CALC.OVERRIDDEN_ER_PRE_TAX_AMOUNT--,CALC.OVERRIDDEN_ER_INTEREST_AMOUNT&#xD;&#xA;)TEMP&#xD;&#xA; &#xD;&#xA;  &#xD;&#xA;INSERT INTO SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;(&#xD;&#xA; PERSON_ACCOUNT_ID, SUBSYSTEM_ID, SUBSYSTEM_VALUE, SUBSYSTEM_REF_ID, TRANSACTION_DATE, EFFECTIVE_DATE, PAY_PERIOD_MONTH, PAY_PERIOD_YEAR, PERSON_EMPLOYMENT_DTL_ID, TRANSACTION_TYPE_ID, TRANSACTION_TYPE_VALUE, SALARY_AMOUNT, POST_TAX_ER_AMOUNT, POST_TAX_EE_AMOUNT, PRE_TAX_ER_AMOUNT, PRE_TAX_EE_AMOUNT, EE_RHIC_AMOUNT, ER_RHIC_AMOUNT, EE_ER_PICKUP_AMOUNT, ER_VESTED_AMOUNT, INTEREST_AMOUNT, VESTED_SERVICE_CREDIT, PENSION_SERVICE_CREDIT, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ--, EMPLOYER_INTEREST&#xD;&#xA;)&#xD;&#xA;Select  &#xD;&#xA; PERSON_ACCOUNT_ID,&#xD;&#xA; SUBSYSTEM_ID ,&#xD;&#xA; SUBSYSTEM_VALUE ,&#xD;&#xA; SUBSYSTEM_REF_ID ,&#xD;&#xA; TRANSACTION_DATE ,&#xD;&#xA; EFFECTIVE_DATE ,         &#xD;&#xA; PAY_PERIOD_MONTH ,&#xD;&#xA; PAY_PERIOD_YEAR ,&#xD;&#xA; PERSON_EMPLOYMENT_DTL_ID ,&#xD;&#xA; TRANSACTION_TYPE_ID ,&#xD;&#xA; TRANSACTION_TYPE_VALUE ,&#xD;&#xA; SALARY_AMOUNT,&#xD;&#xA; POST_TAX_ER_AMOUNT,&#xD;&#xA; POST_TAX_EE_AMOUNT,&#xD;&#xA; PRE_TAX_ER_AMOUNT,&#xD;&#xA; PRE_TAX_EE_AMOUNT,&#xD;&#xA; EE_RHIC_AMOUNT,&#xD;&#xA; ER_RHIC_AMOUNT,&#xD;&#xA; EE_ER_PICKUP_AMOUNT,&#xD;&#xA; ER_VESTED_AMOUNT,&#xD;&#xA; INTEREST_AMOUNT,&#xD;&#xA; VESTED_SERVICE_CREDIT,&#xD;&#xA; PENSION_SERVICE_CREDIT, &#xD;&#xA; CREATED_BY,&#xD;&#xA; CREATED_DATE,&#xD;&#xA; MODIFIED_BY,&#xD;&#xA; modified_date,&#xD;&#xA; UPDATE_SEQ--,EMPLOYER_INTEREST &#xD;&#xA;From #TEMP&#xD;&#xA;&#xD;&#xA;SELECT PERSON_ACCOUNT_ID,SUBSYSTEM_ID,TRANSACTION_TYPE_ID,TRANSACTION_TYPE_VALUE ,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ,&#xD;&#xA;ISNULL(OVERRIDDEN_ER_PRE_TAX_AMOUNT,0.0) AS OVERRIDDEN_ER_PRE_TAX_AMOUNT--,ISNULL(OVERRIDDEN_ER_INTEREST_AMOUNT,0.0) AS OVERRIDDEN_ER_INTEREST_AMOUNT&#xD;&#xA;INTO #TEMP1&#xD;&#xA;FROM #TEMP&#xD;&#xA;WHERE --OVERRIDDEN_ER_INTEREST_AMOUNT &gt; 0 OR &#xD;&#xA;OVERRIDDEN_ER_PRE_TAX_AMOUNT &gt; 0&#xD;&#xA;GROUP BY PERSON_ACCOUNT_ID,SUBSYSTEM_ID,TRANSACTION_TYPE_ID,TRANSACTION_TYPE_VALUE ,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,UPDATE_SEQ,OVERRIDDEN_ER_PRE_TAX_AMOUNT--,OVERRIDDEN_ER_INTEREST_AMOUNT&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;(&#xD;&#xA; PERSON_ACCOUNT_ID, SUBSYSTEM_ID, SUBSYSTEM_VALUE, SUBSYSTEM_REF_ID, TRANSACTION_DATE, EFFECTIVE_DATE, PAY_PERIOD_MONTH, PAY_PERIOD_YEAR, PERSON_EMPLOYMENT_DTL_ID, TRANSACTION_TYPE_ID, TRANSACTION_TYPE_VALUE, SALARY_AMOUNT, POST_TAX_ER_AMOUNT, POST_TAX_EE_AMOUNT, PRE_TAX_ER_AMOUNT, PRE_TAX_EE_AMOUNT, EE_RHIC_AMOUNT, ER_RHIC_AMOUNT, EE_ER_PICKUP_AMOUNT, ER_VESTED_AMOUNT, INTEREST_AMOUNT, VESTED_SERVICE_CREDIT, PENSION_SERVICE_CREDIT, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ--, EMPLOYER_INTEREST&#xD;&#xA;)&#xD;&#xA;Select  &#xD;&#xA; PERSON_ACCOUNT_ID,&#xD;&#xA; SUBSYSTEM_ID ,&#xD;&#xA; 'PMNT' ,&#xD;&#xA; NULL ,&#xD;&#xA; @PAYMENTDATE ,&#xD;&#xA; @PAYMENTDATE ,         &#xD;&#xA; Month(@PAYMENTDATE) ,&#xD;&#xA; year(@PAYMENTDATE) ,&#xD;&#xA; NULL ,&#xD;&#xA; TRANSACTION_TYPE_ID ,&#xD;&#xA; TRANSACTION_TYPE_VALUE ,&#xD;&#xA; 0.0,&#xD;&#xA; 0.0,&#xD;&#xA; 0.0,&#xD;&#xA; OVERRIDDEN_ER_PRE_TAX_AMOUNT,&#xD;&#xA; 0.0,&#xD;&#xA; 0.0,&#xD;&#xA; 0.0,&#xD;&#xA; 0.0,&#xD;&#xA; 0.0,&#xD;&#xA; 0.0,&#xD;&#xA; 0.0,&#xD;&#xA; 0.0, &#xD;&#xA; CREATED_BY,&#xD;&#xA; CREATED_DATE,&#xD;&#xA; MODIFIED_BY,&#xD;&#xA; modified_date,&#xD;&#xA; UPDATE_SEQ--,OVERRIDDEN_ER_INTEREST_AMOUNT &#xD;&#xA;From #TEMP1&#xD;&#xA;&#xD;&#xA;-- PIR 11946 - Start -- Update contributions transfer flag to 'T' if transferred or 'R' if refunded&#xD;&#xA;&#xD;&#xA;SELECT DISTINCT PERSON_ACCOUNT_ID&#xD;&#xA;INTO #DIS_PERSON_ACCOUNT_ID&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;WHERE RETIREMENT_CONTRIBUTION_ID &gt; @MAX_CONTRIBUTION_ID&#xD;&#xA;&#xD;&#xA;UPDATE RC&#xD;&#xA;SET RC.TRANSFER_FLAG_VALUE = CASE WHEN P.PLAN_PARTICIPATION_STATUS_VALUE = 'WTN1' THEN 'R'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN P.PLAN_PARTICIPATION_STATUS_VALUE = 'TICR' THEN 'T' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN P.PLAN_PARTICIPATION_STATUS_VALUE = 'TRDB' THEN 'T' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN P.PLAN_PARTICIPATION_STATUS_VALUE = 'TRDC' THEN 'T' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN P.PLAN_PARTICIPATION_STATUS_VALUE = 'TRTF' THEN 'T' &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END,&#xD;&#xA;MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid)&#xD;&#xA;,MODIFIED_DATE = GETDATE()&#xD;&#xA;,UPDATE_SEQ = RC.UPDATE_SEQ + 1&#xD;&#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC&#xD;&#xA;JOIN #DIS_PERSON_ACCOUNT_ID TEMP ON TEMP.PERSON_ACCOUNT_ID = RC.PERSON_ACCOUNT_ID&#xD;&#xA;JOIN SGT_PERSON_ACCOUNT P ON P.PERSON_ACCOUNT_ID = RC.PERSON_ACCOUNT_ID&#xD;&#xA;WHERE ISNULL(RC.TRANSFER_FLAG_VALUE,'') = 'C'&#xD;&#xA;&#xD;&#xA;-- PIR 11946 - End&#xD;&#xA;&#xD;&#xA;-- prod pir 5695 and PIR 8042&#xD;&#xA;&#xD;&#xA;INSERT INTO SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION &#xD;&#xA;(&#xD;&#xA;PERSON_ACCOUNT_ID, SUBSYSTEM_ID, SUBSYSTEM_VALUE, SUBSYSTEM_REF_ID,&#xD;&#xA;TRANSACTION_DATE, EFFECTIVE_DATE, PAY_PERIOD_MONTH, PAY_PERIOD_YEAR,&#xD;&#xA;PERSON_EMPLOYMENT_DTL_ID, TRANSACTION_TYPE_ID, TRANSACTION_TYPE_VALUE, &#xD;&#xA;SALARY_AMOUNT, POST_TAX_ER_AMOUNT, POST_TAX_EE_AMOUNT, PRE_TAX_ER_AMOUNT,&#xD;&#xA;PRE_TAX_EE_AMOUNT, EE_RHIC_AMOUNT, ER_RHIC_AMOUNT, EE_ER_PICKUP_AMOUNT, &#xD;&#xA;ER_VESTED_AMOUNT, INTEREST_AMOUNT, VESTED_SERVICE_CREDIT, PENSION_SERVICE_CREDIT, &#xD;&#xA;CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, UPDATE_SEQ--, EMPLOYER_INTEREST&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA; PERSON_ACCOUNT_ID,&#xD;&#xA; 349  as SUBSYSTEM_ID ,&#xD;&#xA; 'PMNT' AS SUBSYSTEM_VALUE ,&#xD;&#xA;  NULL AS SUBSYSTEM_REF_ID ,&#xD;&#xA; @PAYMENTDATE as TRANSACTION_DATE ,&#xD;&#xA; @PAYMENTDATE as EFFECTIVE_DATE ,         &#xD;&#xA; Month(@PAYMENTDATE) AS PAY_PERIOD_MONTH ,&#xD;&#xA; year(@PAYMENTDATE) as PAY_PERIOD_YEAR ,&#xD;&#xA; Null AS PERSON_EMPLOYMENT_DTL_ID ,&#xD;&#xA; 350 as TRANSACTION_TYPE_ID ,&#xD;&#xA; BENEFIT_ACCOUNT_TYPE_VALUE AS TRANSACTION_TYPE_VALUE ,&#xD;&#xA; SALARY_AMOUNT,&#xD;&#xA; POST_TAX_ER_AMOUNT,&#xD;&#xA; POST_TAX_EE_AMOUNT,&#xD;&#xA; PRE_TAX_ER_AMOUNT,&#xD;&#xA; PRE_TAX_EE_AMOUNT,&#xD;&#xA; EE_RHIC_AMOUNT,&#xD;&#xA; ER_RHIC_AMOUNT,&#xD;&#xA; EE_ER_PICKUP_AMOUNT,&#xD;&#xA; ER_VESTED_AMOUNT,&#xD;&#xA; INTEREST_AMOUNT,&#xD;&#xA; VESTED_SERVICE_CREDIT,&#xD;&#xA; PENSION_SERVICE_CREDIT, &#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as CREATED_BY,&#xD;&#xA; getdate() as CREATED_DATE,&#xD;&#xA; 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid) as MODIFIED_BY,&#xD;&#xA; getdate() as modified_date,&#xD;&#xA; 0 as UPDATE_SEQ--,EMPLOYER_INTEREST&#xD;&#xA;FROM &#xD;&#xA;(&#xD;&#xA;-- SELECT&#xD;&#xA;-- PAS.PERSON_ACCOUNT_ID,PAS.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA;-- 0 as SALARY_AMOUNT,&#xD;&#xA;-- 0 as POST_TAX_ER_AMOUNT,&#xD;&#xA;-- SUM(ISNULL(POST_TAX_EE_AMOUNT,0) + ISNULL(POST_TAX_EE_SER_PUR_CONT  ,0)) * -1 as POST_TAX_EE_AMOUNT,&#xD;&#xA;-- 0 as PRE_TAX_ER_AMOUNT,&#xD;&#xA;-- SUM(ISNULL(PRE_TAX_EE_AMOUNT,0) + ISNULL(PRE_TAX_EE_SER_PUR_CONT,0)) * -1 as PRE_TAX_EE_AMOUNT,&#xD;&#xA;-- SUM(ISNULL(EE_RHIC_AMOUNT,0)+ ISNULL(EE_RHIC_SER_PUR_CONT,0)) * -1 as EE_RHIC_AMOUNT,&#xD;&#xA;-- 0  as ER_RHIC_AMOUNT,&#xD;&#xA;-- SUM(ISNULL(EE_ER_PICKUP_AMOUNT ,0))* -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA;-- SUM(isnull(ER_VESTED_AMOUNT,0)) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA;-- SUM(ISNULL(INTEREST_AMOUNT,0))* -1 as INTEREST_AMOUNT,&#xD;&#xA;-- 0 as VESTED_SERVICE_CREDIT,&#xD;&#xA;-- 0 as PENSION_SERVICE_CREDIT,&#xD;&#xA;-- 0 as EMPLOYER_INTEREST&#xD;&#xA;--FROM SGT_BENEFIT_CALCULATION_OPTIONS BC&#xD;&#xA;--INNER JOIN SGT_BENEFIT_CALCULATION_PAYEE BCPAYEE&#xD;&#xA;--  ON BC.BENEFIT_CALCULATION_PAYEE_ID=BCPAYEE.BENEFIT_CALCULATION_PAYEE_ID &#xD;&#xA;--INNER JOIN &#xD;&#xA;-- (&#xD;&#xA;-- SELECT &#xD;&#xA;--   Distinct BAPA.PERSON_ACCOUNT_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,PA.CALCULATION_ID&#xD;&#xA;-- FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;--  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;--   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;--  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;--   ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;--   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)  &#xD;&#xA;--  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;--   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;--  INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;--   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;--  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;--   ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;--   and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA;-- WHERE (CV.DATA2 = 'APRD' ) &#xD;&#xA;--  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;--   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;--   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;--   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;--   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;--   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;--  )&#xD;&#xA;--  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;--  AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE &#xD;&#xA;--  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;--  AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA;--  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;--  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') &#xD;&#xA;--  --AND PA.BENEFIT_OPTION_VALUE  IN  ('REFD','AURD','RGRD') -- PIR 14517&#xD;&#xA;--  AND PA.BENEFIT_OPTION_VALUE  IN  ('REFD')  -- PIR 14517&#xD;&#xA;--  --AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y' -- PIR 14517&#xD;&#xA;--  AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA;--  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA;-- ) AS  PAS &#xD;&#xA;-- ON PAS.CALCULATION_ID = BC.BENEFIT_CALCULATION_ID&#xD;&#xA;--WHERE BCPAYEE.PAYEE_ACCOUNT_ID IS NOT NULL &#xD;&#xA;-- AND ISNULL(BCPAYEE.MEMBER_ACCOUNT_NEGATED_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;--GROUP BY PAS.PERSON_ACCOUNT_ID ,PAS.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;&#xD;&#xA;-- PIR 14517 -- added for other benefit options for Pre and Post retirement death&#xD;&#xA;--UNION ALL&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT&#xD;&#xA; RC.PERSON_ACCOUNT_ID, PAS.BENEFIT_ACCOUNT_TYPE_VALUE,&#xD;&#xA; 0 as SALARY_AMOUNT,&#xD;&#xA; SUM(isnull(POST_TAX_ER_AMOUNT,0)) * -1 as POST_TAX_ER_AMOUNT,&#xD;&#xA; SUM(isnull(POST_TAX_EE_AMOUNT,0)) * -1 as POST_TAX_EE_AMOUNT,&#xD;&#xA; SUM(isnull(PRE_TAX_ER_AMOUNT,0)) * -1 as PRE_TAX_ER_AMOUNT,&#xD;&#xA; SUM(isnull(PRE_TAX_EE_AMOUNT,0)) * -1 as PRE_TAX_EE_AMOUNT,&#xD;&#xA; SUM(isnull(EE_RHIC_AMOUNT,0)) * -1 as EE_RHIC_AMOUNT,&#xD;&#xA; SUM(isnull(ER_RHIC_AMOUNT,0)) * -1 as ER_RHIC_AMOUNT,&#xD;&#xA; SUM(isnull(EE_ER_PICKUP_AMOUNT,0)) * -1 as EE_ER_PICKUP_AMOUNT,&#xD;&#xA; SUM(isnull(ER_VESTED_AMOUNT,0)) * -1 as ER_VESTED_AMOUNT,&#xD;&#xA; SUM(isnull(INTEREST_AMOUNT,0)) * -1 as INTEREST_AMOUNT,&#xD;&#xA; SUM(isnull(VESTED_SERVICE_CREDIT,0)) * -1 as VESTED_SERVICE_CREDIT,&#xD;&#xA; SUM(isnull(PENSION_SERVICE_CREDIT,0)) * -1 as PENSION_SERVICE_CREDIT--,&#xD;&#xA; --SUM(isnull(EMPLOYER_INTEREST,0)) * -1 as EMPLOYER_INTEREST&#xD;&#xA;FROM &#xD;&#xA;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RC&#xD;&#xA;INNER JOIN &#xD;&#xA; (&#xD;&#xA; SELECT &#xD;&#xA;   DISTINCT BAPA.PERSON_ACCOUNT_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;  ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)&#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;   and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA; WHERE (CV.DATA2 = 'APRD') &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND CASE WHEN PA.BENEFIT_OPTION_VALUE = 'REFD' THEN DATEADD(M,-1,PA.BENEFIT_BEGIN_DATE) ELSE PA.BENEFIT_BEGIN_DATE END &lt;= @PAYMENTDATE &#xD;&#xA;  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;  AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') &#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  --AND PA.BENEFIT_OPTION_VALUE NOT IN('REFD')&#xD;&#xA;  AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = CASE WHEN PA.BENEFIT_OPTION_VALUE = 'REFD' THEN 'Y' ELSE ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') END&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ) AS  PAS &#xD;&#xA; ON PAS.PERSON_ACCOUNT_ID = RC.PERSON_ACCOUNT_ID&#xD;&#xA;GROUP BY RC.PERSON_ACCOUNT_ID ,PAS.BENEFIT_ACCOUNT_TYPE_VALUE&#xD;&#xA;HAVING SUM(ISNULL(POST_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(POST_TAX_EE_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_ER_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(PRE_TAX_EE_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(EE_RHIC_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(ER_RHIC_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(EE_ER_PICKUP_AMOUNT,0))+&#xD;&#xA; SUM(ISNULL(ER_VESTED_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(INTEREST_AMOUNT,0)) +&#xD;&#xA; SUM(ISNULL(VESTED_SERVICE_CREDIT,0))+&#xD;&#xA; SUM(ISNULL(PENSION_SERVICE_CREDIT,0))--+&#xD;&#xA; --SUM(ISNULL(EMPLOYER_INTEREST,0))  &#xD;&#xA; &lt;&gt; 0&#xD;&#xA;&#xD;&#xA;) AS CONTRIBUTION&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE BCPAYEE&#xD;&#xA;SET BCPAYEE.MEMBER_ACCOUNT_NEGATED_FLAG = 'Y',&#xD;&#xA; BCPAYEE.MODIFIED_BY = 'PERSLink Batch'+' '+ convert(nvarchar,@batchscheduleid),&#xD;&#xA; BCPAYEE.MODIFIED_DATE = GETDATE(),&#xD;&#xA; BCPAYEE.UPDATE_SEQ = BCPAYEE.UPDATE_SEQ + 1&#xD;&#xA;FROM SGT_BENEFIT_CALCULATION_OPTIONS BC&#xD;&#xA;INNER JOIN SGT_BENEFIT_CALCULATION_PAYEE BCPAYEE&#xD;&#xA;  ON BC.BENEFIT_CALCULATION_PAYEE_ID=BCPAYEE.BENEFIT_CALCULATION_PAYEE_ID &#xD;&#xA;INNER JOIN &#xD;&#xA; (&#xD;&#xA; SELECT &#xD;&#xA;   Distinct BAPA.PERSON_ACCOUNT_ID,PA.BENEFIT_ACCOUNT_TYPE_VALUE,PA.CALCULATION_ID&#xD;&#xA; FROM SGT_PAYEE_ACCOUNT PA &#xD;&#xA;  INNER JOIN SGT_PAYEE_ACCOUNT_STATUS PAS&#xD;&#xA;   ON PAS.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID &#xD;&#xA;  INNER JOIN SGT_PAYMENT_HISTORY_HEADER PHH &#xD;&#xA;   ON PHH.PAYEE_ACCOUNT_ID=PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND isnull(PHH.ORG_ID,0) = isnull(PA.PAYEE_ORG_ID,0) and ISNULL(PHH.PERSON_ID,0) = ISNULL(PA.PAYEE_PERSLINK_ID,0)  &#xD;&#xA;  INNER JOIN SGS_CODE_VALUE CV&#xD;&#xA;   ON PAS.STATUS_ID= CV.CODE_ID AND PAS.STATUS_VALUE = CV.CODE_VALUE&#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION BA &#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID = PA.APPLICATION_ID &#xD;&#xA;  INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT BAPA&#xD;&#xA;   ON BA.BENEFIT_APPLICATION_ID  = BAPA.BENEFIT_APPLICATION_ID &#xD;&#xA;   and isnull(IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA; WHERE (CV.DATA2 = 'APRD' ) &#xD;&#xA;  AND PAYEE_ACCOUNT_STATUS_ID  = &#xD;&#xA;   (SELECT TOP 1 PAYEE_ACCOUNT_STATUS_ID&#xD;&#xA;   FROM SGT_PAYEE_ACCOUNT_STATUS PAS1 (nolock)&#xD;&#xA;   WHERE PAS1.PAYEE_ACCOUNT_ID = PA.PAYEE_ACCOUNT_ID&#xD;&#xA;   AND PAS1.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;   ORDER BY PAS1.STATUS_EFFECTIVE_DATE DESC,PAS1.PAYEE_ACCOUNT_STATUS_ID DESC&#xD;&#xA;  )&#xD;&#xA;  AND PAS.STATUS_EFFECTIVE_DATE &lt;= @PAYMENTDATE&#xD;&#xA;  AND dateadd(m,-1,PA.BENEFIT_BEGIN_DATE) &lt;= @PAYMENTDATE &#xD;&#xA;  AND ISNULL(PA.BENEFIT_END_DATE,'99991231') &gt; @PAYMENTDATE&#xD;&#xA;  AND PA.APPLICATION_ID IS NOT NULL&#xD;&#xA;  AND PHH.PAYEE_ACCOUNT_ID IS NOT NULL&#xD;&#xA;  AND PA.BENEFIT_ACCOUNT_TYPE_VALUE IN ('DETH','PSTD') &#xD;&#xA;  AND PA.BENEFIT_OPTION_VALUE  IN  ('REFD','AURD','RGRD')&#xD;&#xA;  AND ISNULL(PA.INCLUDE_IN_ADHOC_FLAG,'N') = 'Y'&#xD;&#xA;  AND PHH.PAYMENT_SCHEDULE_ID=@PAYMENTSCHEDULEID&#xD;&#xA; ) AS  PAS &#xD;&#xA; ON PAS.CALCULATION_ID = BC.BENEFIT_CALCULATION_ID&#xD;&#xA;WHERE BCPAYEE.PAYEE_ACCOUNT_ID IS NOT NULL  &#xD;&#xA; AND ISNULL(BCPAYEE.MEMBER_ACCOUNT_NEGATED_FLAG,'N') &lt;&gt; 'Y'&#xD;&#xA;&#xD;&#xA;DROP TABLE #TEMP&#xD;&#xA;DROP TABLE #TEMP1">
      <parameters>
        <parameter ID="@PAYMENTDATE" sfwDataType="DateTime" />
        <parameter ID="@PAYMENTSCHEDULEID" sfwDataType="int" />
        <parameter ID="@batchscheduleid" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="rptContributionMaster" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="CREATE TABLE #FINAL&#xD;&#xA;(ROW_NUM INT,&#xD;&#xA;PLAN_NAME VARCHAR(50),&#xD;&#xA;SUB_SYSTEM VARCHAR(50),&#xD;&#xA;TRANS_TYPE VARCHAR(50),&#xD;&#xA;NUM_PERSON INT,&#xD;&#xA;SALARY_AMOUNT DECIMAL(20,2),&#xD;&#xA;POST_TAX_ER_AMOUNT DECIMAL(20,2),&#xD;&#xA;POST_TAX_EE_AMOUNT DECIMAL(20,2),&#xD;&#xA;PRE_TAX_ER_AMOUNT DECIMAL(20,2),&#xD;&#xA;PRE_TAX_EE_AMOUNT DECIMAL(20,2),&#xD;&#xA;EE_RHIC_AMOUNT DECIMAL(20,2),&#xD;&#xA;ER_RHIC_AMOUNT DECIMAL(20,2),&#xD;&#xA;EE_ER_PICKUP_AMOUNT DECIMAL(20,2),&#xD;&#xA;ER_VESTED_AMOUNT DECIMAL(20,2),&#xD;&#xA;INTEREST_AMOUNT DECIMAL(20,2),&#xD;&#xA;LTD_NUM_PERSON INT,&#xD;&#xA;LTD_SALARY_AMOUNT DECIMAL(20,2),&#xD;&#xA;LTD_POST_TAX_ER_AMOUNT DECIMAL(20,2),&#xD;&#xA;LTD_POST_TAX_EE_AMOUNT DECIMAL(20,2),&#xD;&#xA;LTD_PRE_TAX_ER_AMOUNT DECIMAL(20,2),&#xD;&#xA;LTD_PRE_TAX_EE_AMOUNT DECIMAL(20,2),&#xD;&#xA;LTD_EE_RHIC_AMOUNT DECIMAL(20,2),&#xD;&#xA;LTD_ER_RHIC_AMOUNT DECIMAL(20,2),&#xD;&#xA;LTD_EE_ER_PICKUP_AMOUNT DECIMAL(20,2),&#xD;&#xA;LTD_ER_VESTED_AMOUNT DECIMAL(20,2),&#xD;&#xA;LTD_INTEREST_AMOUNT  DECIMAL(20,2))&#xD;&#xA;&#xD;&#xA;INSERT INTO   #FINAL&#xD;&#xA;SELECT    CAST(ROW_NUMBER() OVER(ORDER BY COUNT(DISTINCT RETCONT.PERSON_ACCOUNT_ID)) AS INT) AS ROW_NUM ,PL.PLAN_NAME,CV1.DESCRIPTION AS SUB_SYSTEM,CV2.DESCRIPTION AS TRANS_TYPE,COUNT(DISTINCT RETCONT.PERSON_ACCOUNT_ID) AS NUM_PERSON,&#xD;&#xA;     SUM(SALARY_AMOUNT) AS SALARY_AMOUNT,SUM(POST_TAX_ER_AMOUNT) AS POST_TAX_ER_AMOUNT,&#xD;&#xA;     SUM(POST_TAX_EE_AMOUNT) AS POST_TAX_EE_AMOUNT,SUM(PRE_TAX_ER_AMOUNT) AS PRE_TAX_ER_AMOUNT,SUM(PRE_TAX_EE_AMOUNT) AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;     SUM(EE_RHIC_AMOUNT) AS EE_RHIC_AMOUNT,SUM(ER_RHIC_AMOUNT) AS ER_RHIC_AMOUNT,SUM(EE_ER_PICKUP_AMOUNT) AS EE_ER_PICKUP_AMOUNT,&#xD;&#xA;     SUM(ER_VESTED_AMOUNT) AS ER_VESTED_AMOUNT,SUM(INTEREST_AMOUNT) AS INTEREST_AMOUNT,&#xD;&#xA;     0 AS LTD_NUM_PERSON,0.00 AS LTD_SALARY_AMOUNT,0.00 AS LTD_POST_TAX_ER_AMOUNT,&#xD;&#xA;     0.00 AS LTD_POST_TAX_EE_AMOUNT,0.00 AS LTD_PRE_TAX_ER_AMOUNT,0.00 AS LTD_PRE_TAX_EE_AMOUNT,&#xD;&#xA;     0.00 AS LTD_EE_RHIC_AMOUNT,0.00 AS LTD_ER_RHIC_AMOUNT,0.00 AS LTD_EE_ER_PICKUP_AMOUNT,&#xD;&#xA;     0.00 AS LTD_ER_VESTED_AMOUNT,0.00 AS LTD_INTEREST_AMOUNT    &#xD;&#xA;FROM    SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RETCONT WITH(NOLOCK)&#xD;&#xA; INNER JOIN  SGT_PERSON_ACCOUNT PERACCT WITH(NOLOCK) &#xD;&#xA;    ON RETCONT.PERSON_ACCOUNT_ID = PERACCT.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN  SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;    ON PERACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK)&#xD;&#xA;    ON RETCONT.SUBSYSTEM_ID = CV1.CODE_ID AND RETCONT.SUBSYSTEM_VALUE = CV1.CODE_VALUE&#xD;&#xA; LEFT OUTER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK)&#xD;&#xA;    ON RETCONT.TRANSACTION_TYPE_ID = CV2.CODE_ID AND RETCONT.TRANSACTION_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;WHERE     RETCONT.EFFECTIVE_DATE &lt;= @EFFECTIVE_DATE&#xD;&#xA;    AND MONTH(RETCONT.TRANSACTION_DATE) = MONTH(@EFFECTIVE_DATE)&#xD;&#xA;    AND YEAR(RETCONT.TRANSACTION_DATE) = YEAR(@EFFECTIVE_DATE)&#xD;&#xA;GROUP BY   PL.PLAN_NAME,CV1.DESCRIPTION,CV2.DESCRIPTION&#xD;&#xA;ORDER BY   PL.PLAN_NAME,CV1.DESCRIPTION,CV2.DESCRIPTION&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE    A&#xD;&#xA;SET     A.LTD_NUM_PERSON = B.NUM_PERSON,A.LTD_SALARY_AMOUNT=B.SALARY_AMOUNT,A.LTD_POST_TAX_ER_AMOUNT=B.POST_TAX_ER_AMOUNT,&#xD;&#xA;     A.LTD_POST_TAX_EE_AMOUNT=B.POST_TAX_EE_AMOUNT,A.LTD_PRE_TAX_ER_AMOUNT=B.PRE_TAX_ER_AMOUNT,A.LTD_PRE_TAX_EE_AMOUNT=B.PRE_TAX_EE_AMOUNT,&#xD;&#xA;     A.LTD_EE_RHIC_AMOUNT=B.EE_RHIC_AMOUNT,A.LTD_ER_RHIC_AMOUNT=B.ER_RHIC_AMOUNT,A.LTD_EE_ER_PICKUP_AMOUNT=B.EE_ER_PICKUP_AMOUNT,&#xD;&#xA;     A.LTD_ER_VESTED_AMOUNT=B.ER_VESTED_AMOUNT,A.LTD_INTEREST_AMOUNT=B.INTEREST_AMOUNT&#xD;&#xA;FROM    #FINAL A&#xD;&#xA; INNER JOIN  (&#xD;&#xA;   SELECT    1 AS ROW_NUM,COUNT(0) AS NUM_PERSON,SUM(SALARY_AMOUNT) AS SALARY_AMOUNT,SUM(POST_TAX_ER_AMOUNT) AS POST_TAX_ER_AMOUNT,&#xD;&#xA;        SUM(POST_TAX_EE_AMOUNT) AS POST_TAX_EE_AMOUNT,SUM(PRE_TAX_ER_AMOUNT) AS PRE_TAX_ER_AMOUNT,SUM(PRE_TAX_EE_AMOUNT) AS PRE_TAX_EE_AMOUNT,&#xD;&#xA;        SUM(EE_RHIC_AMOUNT) AS EE_RHIC_AMOUNT,SUM(ER_RHIC_AMOUNT) AS ER_RHIC_AMOUNT,SUM(EE_ER_PICKUP_AMOUNT) AS EE_ER_PICKUP_AMOUNT,&#xD;&#xA;        SUM(ER_VESTED_AMOUNT) AS ER_VESTED_AMOUNT,SUM(INTEREST_AMOUNT) AS INTEREST_AMOUNT  &#xD;&#xA;   FROM    SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION RETCONT WITH(NOLOCK)&#xD;&#xA;    INNER JOIN  SGT_PERSON_ACCOUNT PERACCT WITH(NOLOCK) &#xD;&#xA;       ON RETCONT.PERSON_ACCOUNT_ID = PERACCT.PERSON_ACCOUNT_ID&#xD;&#xA;    INNER JOIN  SGT_PLAN PL WITH(NOLOCK)&#xD;&#xA;       ON PERACCT.PLAN_ID = PL.PLAN_ID&#xD;&#xA;    LEFT OUTER JOIN SGS_CODE_VALUE CV1 WITH(NOLOCK)&#xD;&#xA;       ON RETCONT.SUBSYSTEM_ID = CV1.CODE_ID AND RETCONT.SUBSYSTEM_VALUE = CV1.CODE_VALUE&#xD;&#xA;    LEFT OUTER JOIN SGS_CODE_VALUE CV2 WITH(NOLOCK)&#xD;&#xA;       ON RETCONT.TRANSACTION_TYPE_ID = CV2.CODE_ID AND RETCONT.TRANSACTION_TYPE_VALUE = CV2.CODE_VALUE&#xD;&#xA;   WHERE     RETCONT.EFFECTIVE_DATE &lt;= @EFFECTIVE_DATE&#xD;&#xA;       AND RETCONT.TRANSACTION_DATE &lt;= @EFFECTIVE_DATE&#xD;&#xA;     ) B&#xD;&#xA;    ON  A.ROW_NUM = B.ROW_NUM&#xD;&#xA;&#xD;&#xA;SELECT    *&#xD;&#xA;FROM    #FINAL&#xD;&#xA;&#xD;&#xA;DROP TABLE   #FINAL">
      <parameters>
        <parameter ID="@EFFECTIVE_DATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetERVestedSchedulePercentage" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="Select Top 1 * from SGT_VESTED_ER_PERCENTAGE_REF WITH(NOLOCK)&#xD;&#xA;Where Retirement_Type_value=@Retirement_Type and Effective_date &lt; = @effective_date&#xD;&#xA;and VSC_FROM &lt;= @TVSC&#xD;&#xA;Order by effective_date desc,VSC_FROM desc">
      <parameters>
        <parameter ID="@effective_date" sfwDataType="DateTime" />
        <parameter ID="@TVSC" sfwDataType="int" />
        <parameter ID="@Retirement_Type" sfwDataType="string" />
      </parameters>
    </query>
    <query ID="rptInterestUpdateSummary" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT SUM(TINTACRFTM -(DCINTFTM+QDRNTFTM+DISINTFTM)) AS INTEREST,&#xD;&#xA;    SUM(TPTTINTFTM) AS PTTINTEREST,&#xD;&#xA;    SUM(TCTRFTM - (DCCTRFTM+QDRCTRFTM+DISCTRFTM)) AS CONTRIBUTING_MEMBERS,&#xD;&#xA;    SUM(DISINTFTM) AS DISABILIT_INTEREST,&#xD;&#xA;    SUM(DISCTRFTM) AS DISABILITY_ANNUITANT_MEMBERS,&#xD;&#xA;    SUM(QDRNTFTM) AS QDRO_INTEREST,&#xD;&#xA;    SUM(QDRCTRFTM) AS QDRO_BENEFICIARIES_MEMBER,&#xD;&#xA;    SUM(TINTACRFTM) AS TOTALINTEREST,&#xD;&#xA;    SUM(TPTTINTFTM) AS TOTALPTTINTEREST,&#xD;&#xA;    SUM(TCTRFTM) AS TOTALCONTRIBUTING_MEMBERS,&#xD;&#xA;    SUM(DCINTFTM) AS DEFINED_CONTRIBUTION_INTEREST,&#xD;&#xA;    SUM(DCCTRFTM) AS DEFINED_CONTRIBUTION_MEMBERS&#xD;&#xA;   &#xD;&#xA;FROM (&#xD;&#xA; SELECT&#xD;&#xA;  CASE WHEN BA.PERSON_ACCOUNT_ID IS NOT NULL THEN ISNULL(INTEREST_AMOUNT,0) ELSE 0 END AS DISINTFTM,&#xD;&#xA;   CASE WHEN BA.PERSON_ACCOUNT_ID IS NOT NULL THEN 1 ELSE 0 END AS DISCTRFTM,&#xD;&#xA;  0 AS QDRNTFTM, &#xD;&#xA;  0 AS QDRCTRFTM,&#xD;&#xA;  CASE WHEN (PA.PLAN_ID = 7 OR PA.PLAN_ID = 28 OR PA.PLAN_ID = 30) THEN ISNULL(INTEREST_AMOUNT,0) ELSE 0 END AS DCINTFTM,&#xD;&#xA;  CASE WHEN (PA.PLAN_ID = 7 OR PA.PLAN_ID = 28 OR PA.PLAN_ID = 30) THEN 1 ELSE 0 END AS DCCTRFTM,&#xD;&#xA;  ISNULL(INTEREST_AMOUNT,0) AS TINTACRFTM,&#xD;&#xA;  ISNULL(EMPLOYER_RHIC_INTEREST,0)+ ISNULL(EE_RHIC_AMOUNT ,0) AS TPTTINTFTM,&#xD;&#xA;  1 AS TCTRFTM&#xD;&#xA;   FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION CT&#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT PA&#xD;&#xA;    ON CT.PERSON_ACCOUNT_ID = PA.PERSON_ACCOUNT_ID&#xD;&#xA;   LEFT OUTER JOIN&#xD;&#xA;    (&#xD;&#xA;    SELECT  PERSON_ACCOUNT_ID FROM SGT_PAYEE_ACCOUNT A &#xD;&#xA;     INNER JOIN SGT_BENEFIT_APPLICATION B ON A.APPLICATION_ID = B.BENEFIT_APPLICATION_ID&#xD;&#xA;     INNER JOIN SGT_BENEFIT_APPLICATION_PERSON_ACCOUNT C ON C.BENEFIT_APPLICATION_ID = B.BENEFIT_APPLICATION_ID&#xD;&#xA;      WHERE A.BENEFIT_ACCOUNT_TYPE_VALUE = 'DISA' &#xD;&#xA;      AND ISNULL(C.IS_APPLICATION_PERSON_ACCOUNT_FLAG,'N') = 'Y'&#xD;&#xA;      AND B.STATUS_VALUE = 'PROC'&#xD;&#xA;    ) BA ON PA.PERSON_ACCOUNT_ID = BA.PERSON_ACCOUNT_ID&#xD;&#xA;  WHERE SUBSYSTEM_VALUE = 'INTR' AND TRANSACTION_DATE = @BATCHDATE&#xD;&#xA;) T">
      <parameters>
        <parameter ID="@BATCHDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="rptVestedEmployerContributionErrorReport" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="DECLARE @LASTMONTHDATE DATETIME&#xD;&#xA;SET  @LASTMONTHDATE =   DATEADD(MM, DATEDIFF(MM,0, @PAYPERIODDATE), 0)-1  &#xD;&#xA;SELECT  RPA.PERSON_ID as PERSLinkID, B.LAST_NAME,B.FIRST_NAME,@PAYPERIODDATE AS PAYPERIODDATE &#xD;&#xA; FROM &#xD;&#xA; (SELECT CONT.PERSON_ACCOUNT_ID, &#xD;&#xA; SUM(ISNULL(ER_VESTED_AMOUNT,0)) AS VESTEDAMOUNT  &#xD;&#xA;    FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION  CONT &#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT ACCT &#xD;&#xA;   ON ACCT.PERSON_ACCOUNT_ID = CONT.PERSON_ACCOUNT_ID&#xD;&#xA;    AND TRANSACTION_DATE &gt;=  DATEADD(MM, DATEDIFF(MM,0, @LASTMONTHDATE), 0)&#xD;&#xA;  AND TRANSACTION_DATE &lt;= DATEADD(DAY, -1, DATEADD(MONTH, DATEDIFF(MONTH, 0, @LASTMONTHDATE)+1, 0))&#xD;&#xA;  GROUP BY CONT.PERSON_ACCOUNT_ID &#xD;&#xA; ) LM&#xD;&#xA;LEFT OUTER JOIN&#xD;&#xA; (&#xD;&#xA;  SELECT CONT.PERSON_ACCOUNT_ID, &#xD;&#xA;  SUM(ISNULL(ER_VESTED_AMOUNT,0)) AS VESTEDAMOUNT  &#xD;&#xA;  FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION  CONT &#xD;&#xA;  INNER JOIN SGT_PERSON_ACCOUNT ACCT &#xD;&#xA;   ON ACCT.PERSON_ACCOUNT_ID = CONT.PERSON_ACCOUNT_ID&#xD;&#xA;    AND TRANSACTION_DATE &gt;=  DATEADD(MM, DATEDIFF(MM,0, @PAYPERIODDATE), 0)&#xD;&#xA;  AND TRANSACTION_DATE &lt;= DATEADD(DAY, -1, DATEADD(MONTH, DATEDIFF(MONTH, 0, @PAYPERIODDATE)+1, 0))&#xD;&#xA;  GROUP BY CONT.PERSON_ACCOUNT_ID &#xD;&#xA; ) CM&#xD;&#xA; ON LM.PERSON_ACCOUNT_ID = CM.PERSON_ACCOUNT_ID &#xD;&#xA; INNER JOIN SGT_PERSON_ACCOUNT RPA &#xD;&#xA;  ON RPA.PERSON_ACCOUNT_ID = LM.PERSON_ACCOUNT_ID&#xD;&#xA; INNER JOIN SGT_PERSON B  &#xD;&#xA;  ON RPA.PERSON_ID = B.PERSON_ID &#xD;&#xA; INNER JOIN &#xD;&#xA;  (&#xD;&#xA;  SELECT DISTINCT B.PERSON_ID &#xD;&#xA;   FROM SGT_PERSON_ACCOUNT_DEFERRED_COMP_PROVIDER A&#xD;&#xA;   INNER JOIN SGT_PERSON_ACCOUNT B &#xD;&#xA;    ON A.PERSON_ACCOUNT_ID = B.PERSON_ACCOUNT_ID &#xD;&#xA;   WHERE DATEADD(MM, DATEDIFF(MM,0, @PAYPERIODDATE), 0) &#xD;&#xA;     BETWEEN A.START_DATE AND ISNULL(A.END_DATE,'29001231')&#xD;&#xA;     OR &#xD;&#xA;      DATEADD(DAY, -1, DATEADD(MONTH, DATEDIFF(MONTH, 0, @PAYPERIODDATE)+1, 0)) &#xD;&#xA;      BETWEEN A.START_DATE AND ISNULL(A.END_DATE,'29001231')&#xD;&#xA;  ) DCP ON DCP.PERSON_ID  = RPA.PERSON_ID&#xD;&#xA;   WHERE  ISNULL(CM.VESTEDAMOUNT,0) = 0 AND ISNULL(LM.VESTEDAMOUNT,0) &lt;&gt; 0&#xD;&#xA;   ORDER BY  RPA.PERSON_ID&#xD;&#xA;  ">
      <parameters>
        <parameter ID="@PAYPERIODDATE" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="LoadPCD" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT  TOP (@FASCOUNT) &#xD;&#xA;&#x9;&#x9;PARC.EFFECTIVE_DATE,&#xD;&#xA;&#x9;&#x9;SUM(PARC.SALARY_AMOUNT) SALARY_AMOUNT,&#xD;&#xA;&#x9;&#x9;O.ORG_CODE&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT_DETAIL PED WITH(NOLOCK) ON PED.PERSON_EMPLOYMENT_DTL_ID = PARC.PERSON_EMPLOYMENT_DTL_ID&#xD;&#xA;INNER JOIN SGT_PERSON_EMPLOYMENT PE WITH(NOLOCK) ON PE.PERSON_EMPLOYMENT_ID = PED.PERSON_EMPLOYMENT_ID&#xD;&#xA;INNER JOIN SGT_ORGANIZATION O WITH(NOLOCK) ON O.ORG_ID = PE.ORG_ID&#xD;&#xA;WHERE PARC.PERSON_ACCOUNT_ID = @PersonAccountID AND ISNULL(PARC.SALARY_AMOUNT, 0) != 0&#xD;&#xA;GROUP BY PARC.EFFECTIVE_DATE, O.ORG_CODE&#xD;&#xA;ORDER BY PARC.EFFECTIVE_DATE DESC ">
      <parameters>
        <parameter ID="@PersonAccountID" sfwDataType="int" />
        <parameter ID="@FASCOUNT" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateInterestContributionTransferFlagToC" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;SET TRANSFER_FLAG_VALUE = 'C',&#xD;&#xA;MODIFIED_BY = @USER_ID&#xD;&#xA;,MODIFIED_DATE = GETDATE()&#xD;&#xA;,UPDATE_SEQ = UPDATE_SEQ + 1&#xD;&#xA;WHERE RETIREMENT_CONTRIBUTION_ID = @RETIREMENT_CONTRIBUTION_ID ">
      <parameters>
        <parameter ID="@USER_ID" sfwDataType="string" />
        <parameter ID="@RETIREMENT_CONTRIBUTION_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="UpdateContributionTransferFlagToCFromPAadjust" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="UPDATE SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;SET TRANSFER_FLAG_VALUE = 'C',&#xD;&#xA;MODIFIED_BY = @USER_ID&#xD;&#xA;,MODIFIED_DATE = GETDATE()&#xD;&#xA;,UPDATE_SEQ = UPDATE_SEQ + 1&#xD;&#xA;WHERE SUBSYSTEM_VALUE = 'ADJS' AND ISNULL(SUBSYSTEM_REF_ID,0) = @SUBSYSTEMREFID&#xD;&#xA;AND PERSON_ACCOUNT_ID = @PERSONACCOUNTID  ">
      <parameters>
        <parameter ID="@USER_ID" sfwDataType="string" />
        <parameter ID="@SUBSYSTEMREFID" sfwDataType="int" />
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadPostedContributionsByERP" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT * FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION PARC WITH(NOLOCK)&#xD;&#xA;WHERE PARC.PERSON_ACCOUNT_ID = @PERSONACCOUNTID AND ISNULL(PARC.SUBSYSTEM_REF_ID, 0) = @SUBSYSTEMREFID">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
        <parameter ID="@SUBSYSTEMREFID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadRetirementContributionAllDataTable" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT &#xD;&#xA;&#x9;RETIREMENT_CONTRIBUTION_ID&#xD;&#xA;&#x9;,PERSON_ACCOUNT_ID&#xD;&#xA;&#x9;,SUBSYSTEM_VALUE&#xD;&#xA;&#x9;,EFFECTIVE_DATE&#xD;&#xA;&#x9;,PAY_PERIOD_MONTH&#xD;&#xA;&#x9;,PAY_PERIOD_YEAR&#xD;&#xA;&#x9;,TRANSACTION_TYPE_VALUE&#xD;&#xA;&#x9;,SALARY_AMOUNT&#xD;&#xA;&#x9;,PENSION_SERVICE_CREDIT&#xD;&#xA;&#x9;,VESTED_SERVICE_CREDIT&#xD;&#xA;&#x9;,CREATED_DATE&#xD;&#xA;FROM &#xD;&#xA;&#x9;SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION&#xD;&#xA;WHERE&#xD;&#xA;&#x9;PERSON_ACCOUNT_ID = @PERSONACCOUNTID &#xD;&#xA;&#x9;AND (PENSION_SERVICE_CREDIT !=0 OR VESTED_SERVICE_CREDIT !=0 OR ISNULL(SALARY_AMOUNT, 0) != 0)">
      <parameters>
        <parameter ID="@PERSONACCOUNTID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="LoadMonthlySalaryDetails" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT&#xA;&#x9;PAY_PERIOD_MONTH,&#xA;&#x9;PAY_PERIOD_YEAR,&#xA;&#x9;SUM(ISNULL((SALARY_AMOUNT),&#xA;&#x9;0)) AS SALARY_AMOUNT &#xA;FROM&#xA;&#x9; SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION WITH(NOLOCK)   &#xA;WHERE&#xA;&#x9; PERSON_ACCOUNT_ID = @PERSON_ACCOUNT_ID  &#xA;GROUP BY    PAY_PERIOD_MONTH,&#xA;&#x9;PAY_PERIOD_YEAR &#xA;HAVING SUM(ISNULL((SALARY_AMOUNT),0)) &gt; 0&#xA;ORDER BY    PAY_PERIOD_YEAR desc,&#xA;&#x9;PAY_PERIOD_MONTH desc">
      <parameters>
        <parameter ID="@PERSON_ACCOUNT_ID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetAcctIDAndSalaryForRetirementContByPayPeriod" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select acct.plan_id as Plan_Id, acct.person_account_id, Sum(Isnull(cont.salary_amount,0)) AS salary_amount &#xD;&#xA;from sgt_person_account_retirement_contribution cont with(nolock)&#xD;&#xA;inner join sgt_person_account acct with(nolock) on acct.person_account_id = cont.person_account_id&#xD;&#xA;where cont.effective_date &gt;=   DATEADD(mm, DATEDIFF(mm,0,@PayPeriodEndDate), 0)&#xD;&#xA;and cont.effective_date &lt;= DateAdd(day, -1, DateAdd(month, DateDiff(month, 0, @PayPeriodEndDate)+1, 0))&#xD;&#xA;and acct.person_id = @PersonID&#xD;&#xA;group by &#xD;&#xA;acct.person_account_id, Plan_Id">
      <parameters>
        <parameter ID="@PayPeriodEndDate" sfwDataType="DateTime" />
        <parameter ID="@PersonID" sfwDataType="int" />
      </parameters>
    </query>
    <query ID="GetLastInterestPostedDate" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT TOP(1) EFFECTIVE_DATE &#xA;FROM SGT_PERSON_ACCOUNT_RETIREMENT_CONTRIBUTION &#xA;WHERE SUBSYSTEM_VALUE = 'INTR' AND TRANSACTION_TYPE_VALUE = 'INTE' &#xA;ORDER BY EFFECTIVE_DATE DESC">
      <parameters />
    </query>
  </queries>
  <attributes>
    <attribute ID="RetirementContributionId" sfwType="Column" sfwValue="retirement_contribution_id" sfwKeyNo="1" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="True" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PersonAccountId" sfwType="Column" sfwValue="person_account_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="SubsystemDescription" sfwType="Description" sfwValue="subsystem_description" />
    <attribute ID="SubsystemId" sfwType="Column" sfwValue="subsystem_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="349" sfwDataType="int" sfwRequired="False" />
    <attribute ID="SubsystemValue" sfwType="Column" sfwValue="subsystem_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="SubsystemRefId" sfwType="Column" sfwValue="subsystem_ref_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="TransactionDate" sfwType="Column" sfwValue="transaction_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="EffectiveDate" sfwType="Column" sfwValue="effective_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="PayPeriodMonth" sfwType="Column" sfwValue="pay_period_month" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PayPeriodYear" sfwType="Column" sfwValue="pay_period_year" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="PersonEmploymentDtlId" sfwType="Column" sfwValue="person_employment_dtl_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="TransactionTypeDescription" sfwType="Description" sfwValue="transaction_type_description" />
    <attribute ID="TransactionTypeId" sfwType="Column" sfwValue="transaction_type_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwCodeID="350" sfwDataType="int" sfwRequired="False" />
    <attribute ID="TransactionTypeValue" sfwType="Column" sfwValue="transaction_type_value" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="4" />
    <attribute ID="SalaryAmount" sfwType="Column" sfwValue="salary_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="PostTaxErAmount" sfwType="Column" sfwValue="post_tax_er_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="PostTaxEeAmount" sfwType="Column" sfwValue="post_tax_ee_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="PreTaxErAmount" sfwType="Column" sfwValue="pre_tax_er_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="PreTaxEeAmount" sfwType="Column" sfwValue="pre_tax_ee_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="EeRhicAmount" sfwType="Column" sfwValue="ee_rhic_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="ErRhicAmount" sfwType="Column" sfwValue="er_rhic_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="EeErPickupAmount" sfwType="Column" sfwValue="ee_er_pickup_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="ErVestedAmount" sfwType="Column" sfwValue="er_vested_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="InterestAmount" sfwType="Column" sfwValue="interest_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="VestedServiceCredit" sfwType="Column" sfwValue="vested_service_credit" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,6" />
    <attribute ID="PensionServiceCredit" sfwType="Column" sfwValue="pension_service_credit" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,6" />
    <attribute ID="CreatedBy" sfwType="Column" sfwValue="created_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="CreatedDate" sfwType="Column" sfwValue="created_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="ModifiedBy" sfwType="Column" sfwValue="modified_by" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="False" sfwIsIdentity="False" sfwDataType="string" sfwRequired="False" sfwLength="50" />
    <attribute ID="ModifiedDate" sfwType="Column" sfwValue="modified_date" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="DateTime" sfwRequired="False" />
    <attribute ID="UpdateSeq" sfwType="Column" sfwValue="update_seq" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="EmployerInterest" sfwType="Column" sfwValue="employer_interest" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="VestedErPercentageRefId" sfwType="Column" sfwValue="vested_er_percentage_ref_id" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="int" sfwRequired="False" />
    <attribute ID="EmployerRhicInterest" sfwType="Column" sfwValue="employer_rhic_interest" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="TransferFlagDescription" sfwType="Description" sfwValue="transfer_flag_description" />
    <attribute ID="TransferFlagId" sfwType="Column" sfwValue="transfer_flag_id" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="int" sfwCodeID="7006" />
    <attribute ID="TransferFlagValue" sfwType="Column" sfwValue="transfer_flag_value" sfwIsNull="True" sfwKeyNo="0" sfwIsIdentity="False" sfwDataType="string" sfwLength="1" />
    <attribute sfwDataType="string" sfwType="Property" ID="IsChecked" sfwValue="icdoPersonAccountRetirementContribution.isChecked" />
    <attribute sfwDataType="decimal" sfwType="Property" ID="EeErPickupSerPurCont" sfwValue="icdoPersonAccountRetirementContribution.ee_er_pickup_ser_pur_cont" />
    <attribute ID="objPARetirement" sfwType="Object" sfwEntity="entPersonAccountRetirement" sfwValue="ibusPARetirement" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrOrgCodeID" sfwValue="istrOrgCodeID" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintPayPeriodFromMonth" sfwValue="iintPayPeriodFromMonth" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintPayPeriodFromYear" sfwValue="iintPayPeriodFromYear" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintPayPeriodToMonth" sfwValue="iintPayPeriodToMonth" />
    <attribute sfwDataType="int" sfwType="Property" ID="IintPayPeriodToYear" sfwValue="iintPayPeriodToYear" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtTransactionDateFrom" sfwValue="idtTransactionDateFrom" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtTransactionDateTo" sfwValue="idtTransactionDateTo" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtEffectiveDateFrom" sfwValue="idtEffectiveDateFrom" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtEffectiveDateTo" sfwValue="idtEffectiveDateTo" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrTransactionType" sfwValue="istrTransactionType" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrSource" sfwValue="istrSource" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrGroupBy" sfwValue="istrGroupBy" />
    <attribute ID="objPersonEmploymentDetail" sfwType="Object" sfwEntity="entPersonEmploymentDetail" sfwValue="ibusPersonEmploymentDetail" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrMonthName" sfwValue="istrMonthName" />
    <attribute sfwDataType="string" sfwType="Property" ID="PensionServiceCreditFormatted" sfwValue="icdoPersonAccountRetirementContribution.pension_service_credit_formatted" />
    <attribute sfwDataType="string" sfwType="Property" ID="VestedServiceCreditFormatted" sfwValue="icdoPersonAccountRetirementContribution.vested_service_credit_formatted" />
    <attribute sfwDataType="string" sfwType="Property" ID="PayrollDetailId" sfwValue="icdoPersonAccountRetirementContribution.payroll_detail_id" />
    <attribute sfwDataType="string" sfwType="Property" ID="ServicePurchaseId" sfwValue="icdoPersonAccountRetirementContribution.service_purchase_id" />
    <attribute sfwDataType="boolean" sfwType="Property" ID="IblnIsDCPlan" sfwValue="iblnIsDCPlan" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrGender" sfwValue="istrGender" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrMaritalStatus" sfwValue="istrMaritalStatus" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrSpouseName" sfwValue="istrSpouseName" />
    <attribute sfwDataType="string" sfwType="Property" ID="IstrSpouseSSN" sfwValue="istrSpouseSSN" />
    <attribute sfwDataType="datetime" sfwType="Property" ID="IdtSpouseDOB" sfwValue="idtSpouseDOB" />
    <attribute sfwDataType="boolean" sfwType="Property" ID="IblnIsDBPlan" sfwValue="iblnIsDBPlan" />
    <attribute ID="BenCalc_Plan_Name" sfwDataType="string" sfwPrivate="False" sfwValue="icdoPersonAccountRetirementContribution.BenCalc_Plan_Name" sfwType="Property" />
    <attribute ID="MonthlySalaryChangePerc" sfwDataType="decimal" sfwPrivate="False" sfwValue="icdoPersonAccountRetirementContribution.MonthlySalaryChangePerc" sfwType="Property" />
    <attribute ID="lstrMemberSSN" sfwDataType="string" sfwPrivate="False" sfwValue="ibusPARetirement.ibusPerson.icdoPerson.LastFourDigitsOfSSN" sfwType="Property" />
    <attribute ID="ldtmemberDOB" sfwDataType="datetime" sfwPrivate="False" sfwValue="ibusPARetirement.ibusPerson.icdoPerson.date_of_birth" sfwType="Property" />
    <attribute ID="lstPersonEmployment" sfwType="Collection" sfwValue="ibusPARetirement.ibusPerson.icolPersonEmployment" sfwEntity="entPersonEmployment" sfwPrivate="False" />
    <attribute ID="lstMonthlySalaryDetails" sfwType="Collection" sfwValue="iclbMonthlySalaryDetails" sfwEntity="entPersonAccountRetirementContribution" sfwPrivate="False" />
    <attribute ID="lstrTotalPSC" sfwDataType="string" sfwPrivate="False" sfwValue="ibusPARetirement.icdoPersonAccount.pension_service_credit_formatted" sfwType="Property" />
    <attribute ID="EePreTaxAddlAmount" sfwType="Column" sfwValue="ee_pretax_addl_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="EePostTaxAddlAmount" sfwType="Column" sfwValue="ee_post_tax_addl_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="ErPretaxMatchAmount" sfwType="Column" sfwValue="er_pretax_match_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
    <attribute ID="AdecAmount" sfwType="Column" sfwValue="adec_amount" sfwKeyNo="0" sfwIsSequence="False" sfwIsNull="True" sfwIsIdentity="False" sfwDataType="decimal" sfwRequired="False" sfwLength="13,2" />
  </attributes>
  <objectmethods>
    <method ID="FilterRetirementContribution" sfwReturnType="ArrayList" />
    <method ID="ResetSearchFilter" sfwReturnType="ArrayList" />
  </objectmethods>
</entity>