<entity ID="entAppMonitoring" sfwView="False" sfwActive="True" sfwType="EntityRule" sfwStatus="Review" sfwObjectID="busAppMonitoring">
  <attributes>
    <attribute ID="FromDate" sfwDataType="datetime" sfwPrivate="False" sfwValue="idtFromDate" sfwType="Property" />
    <attribute ID="ToDate" sfwDataType="datetime" sfwPrivate="False" sfwValue="idtToDate" sfwType="Property" />
    <attribute ID="LastMinutes" sfwDataType="int" sfwPrivate="False" sfwValue="iintLastMinutes" sfwType="Property" />
    <attribute ID="LastDays" sfwDataType="int" sfwPrivate="False" sfwValue="iintLastDays" sfwType="Property" />
  </attributes>
  <ExtraFields />
  <queries>
    <query ID="GetSummaryByWebServer" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT web_server_name ServerName,&#xA;&#x9;      count(*) RequestCount,&#xA;&#x9;      sum(time_in_ms) / count(*) AverageResponseTime,&#xA;&#x9;      max(start_time) LastRequest,&#xA;&#x9;      min(start_time) FirstRequest,&#xA;&#x9;      sum(case when error_flag = 'y' then 1 else 0 end) ErrorCount,&#xA;&#x9;      sum(case when time_in_ms &gt; transaction_limit then 1 else 0 end) SlowCount,&#xA;              round(cast(count(*) as float) / case when DateDiff(MINUTE, min(start_time), max(start_time)) = 0 then 1 else DateDiff(MINUTE, min(start_time), max(start_time)) end, 2) Throughput&#xA;FROM&#xA;&#x9;    sgs_act_log_inst_actn,&#xA;&#x9;     sgs_act_log&#xA;WHERE&#xA;&#x9;    web_server_name is not null   AND&#xA;&#x9;     start_time between @start_time AND   @end_time     &#xA;GROUP BY web_server_name &#xA;ORDER BY 4 desc">
      <parameters>
        <parameter ID="@start_time" sfwDataType="DateTime" />
        <parameter ID="@end_time" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetSummarByBusinessTransaction" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select sum(time_in_ms) / count(*) ResponseTime, &#xA;       case when charindex('(', action_name) &gt; 0 then left(action_name, charindex('(', action_name)-1) else action_name end + '.' +  &#xA;       (case when isnull(action_target,'') = '' then action_source else action_target end) ActionName,&#xA;&#x9;   max(time_in_ms) MaxResponseTime,&#xA;       count(*) Calls, &#xA;       round(cast(count(*) as float) / case when DateDiff(MINUTE, min(start_time), max(start_time)) = 0 then 1 else DateDiff(MINUTE, min(start_time), max(start_time)) end, 2) CallsPerMin,&#xA;       sum(case when error_flag = 'y' then 1 else 0 end) ErrorCount,&#xA;       sum(case when time_in_ms &gt; b.TRANSACTION_HIGH_LIMIT then 1 else 0 end) SlowCount&#xA;from sgs_act_log_inst_actn,&#xA;     sgs_act_log b&#xA;where web_server_name is not null&#xA;  and start_time between @start_time and @end_time&#xA;group by case when charindex('(', action_name) &gt; 0 then left(action_name, charindex('(', action_name)-1) else action_name end + '.' +  &#xA;     (case when isnull(action_target,'') = '' then action_source else action_target  end)&#xA;order by max(time_in_ms) desc">
      <parameters>
        <parameter ID="@start_time" sfwDataType="DateTime" />
        <parameter ID="@end_time" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetSummaryByDatabaseTransaction" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select query, &#xA;      query_hash QueryHash,&#xA;       count(*) Calls,  &#xA;&#x9;   sum(time_in_ms) / count(*) ResponseTime, &#xA;&#x9;   max(time_in_ms) MaxTime,&#xA;       sum(case when time_in_ms &gt; b.QUERY_LIMIT then 1 else 0 end) SlowCount&#xA;  from sgv_database_transaction a, sgs_act_log b&#xA; where start_time between @start_time and @end_time&#xA; group by query, query_hash&#xA; order by max(time_in_ms) desc;">
      <parameters>
        <parameter ID="@start_time" sfwDataType="DateTime" />
        <parameter ID="@end_time" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="WebSummaryChartMinute" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select format(min(start_time), 'HH:mm') StartTime, &#xA;&#x9;   WEB_SERVER_NAME ServerName, &#xA;&#x9;   count(*) 'ReqCount', sum(TIME_IN_MS) / count(*) ResponseTime,&#xA;           sum(case when error_flag = 'Y' then 1 else 0 end) ErrorCount&#xA;  from SGS_ACT_LOG_INST_ACTN&#xA; where WEB_SERVER_NAME is not null&#xA;   and START_TIME between @start_time and @end_time&#xA;group by WEB_SERVER_NAME, &#xA;      DATEPART(YEAR, START_TIME), DATEPART(MONTH, START_TIME), DATEPART(DAY, START_TIME), DATEPART(HOUR, START_TIME), (DATEPART(MINUTE, START_TIME) / 1) &#xA;order by 1, 2, 3">
      <parameters>
        <parameter ID="@start_time" sfwDataType="DateTime" />
        <parameter ID="@end_time" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="WebSummaryChartHour" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select format(min(start_time), 'HH') StartTime, &#xA;&#x9;   WEB_SERVER_NAME ServerName, &#xA;&#x9;   count(*) 'ReqCount', sum(TIME_IN_MS) / count(*) ResponseTime,&#xA;           sum(case when error_flag = 'Y' then 1 else 0 end) ErrorCount&#xA;  from SGS_ACT_LOG_INST_ACTN&#xA; where WEB_SERVER_NAME is not null&#xA;   and START_TIME between @start_time and @end_time&#xA;group by WEB_SERVER_NAME, &#xA;      DATEPART(YEAR, START_TIME), DATEPART(MONTH, START_TIME), DATEPART(DAY, START_TIME), (DATEPART(HOUR, START_TIME) / 1)">
      <parameters>
        <parameter ID="@start_time" sfwDataType="DateTime" />
        <parameter ID="@end_time" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="WebSummaryChartDay" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select format(min(start_time), 'MM/dd/yyyy') StartTime, &#xA;&#x9;   WEB_SERVER_NAME ServerName, &#xA;&#x9;   count(*) 'ReqCount', sum(TIME_IN_MS) / count(*) ResponseTime,&#xA;           sum(case when error_flag = 'Y' then 1 else 0 end) ErrorCount&#xA;  from SGS_ACT_LOG_INST_ACTN&#xA; where WEB_SERVER_NAME is not null&#xA;   and START_TIME between @start_time and @end_time&#xA;group by WEB_SERVER_NAME, &#xA;      DATEPART(YEAR, START_TIME), DATEPART(MONTH, START_TIME), (DATEPART(DAY, START_TIME) / 1)&#xA;order by 1, 2, 3">
      <parameters>
        <parameter ID="@start_time" sfwDataType="DateTime" />
        <parameter ID="@end_time" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="GetSummaryByAppServer" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="SELECT appserver_name ServerName,&#xA;             count(*) RequestCount,&#xA;             sum(time_in_ms) / count(*) AverageResponseTime,&#xA;             max(start_time) LastRequest,&#xA;             min(start_time) FirstRequest,&#xA;             sum(case when error_message is null then 0 else 1 end) ErrorCount,&#xA;             sum(case when time_in_ms &gt; appserver_limit then 1 else 0 end) SlowCount,&#xA;              round(cast(count(*) as float) / case when DateDiff(MINUTE, min(start_time), max(start_time)) = 0 then 1 else DateDiff(MINUTE, min(start_time), max(start_time)) end, 2) Throughput&#xA;FROM&#xA;&#x9;    sgs_act_log_inst_actn_step,&#xA;&#x9;    sgs_act_log &#xA;WHERE&#xA;&#x9;    appserver_name is not null   AND&#xA;&#x9;    start_time between @start_time AND  @end_time     &#xA;GROUP BY appserver_name     &#xA;ORDER BY 4 desc">
      <parameters>
        <parameter ID="@start_time" sfwDataType="DateTime" />
        <parameter ID="@end_time" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="AppSummaryChartMinute" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select format(min(start_time), 'HH:mm') StartTime, &#xA;&#x9;   APPSERVER_NAME ServerName, &#xA;&#x9;   count(*) 'ReqCount', sum(TIME_IN_MS) / count(*) ResponseTime,&#xA;           sum(case when ERROR_MESSAGE is null then 0 else 1 end) ErrorCount&#xA;  from SGS_ACT_LOG_INST_ACTN_STEP&#xA;  where APPSERVER_NAME is not null&#xA;   and START_TIME between @start_time and @end_time&#xA;group by APPSERVER_NAME,&#xA;      DATEPART(YEAR, START_TIME), DATEPART(MONTH, START_TIME), DATEPART(DAY, START_TIME), DATEPART(HOUR, START_TIME), (DATEPART(MINUTE, START_TIME) / 1) &#xA;order by 1, 2, 3">
      <parameters>
        <parameter ID="@start_time" sfwDataType="DateTime" />
        <parameter ID="@end_time" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="AppSummaryChartHour" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select format(min(start_time), 'HH') StartTime, &#xA;&#x9;  APPSERVER_NAME ServerName, &#xA;          count(*) 'ReqCount', sum(TIME_IN_MS) / count(*) ResponseTime,&#xA;          sum(case when ERROR_MESSAGE is null then 0 else 1 end) ErrorCount&#xA;  from SGS_ACT_LOG_INST_ACTN_STEP&#xA;  where APPSERVER_NAME is not null&#xA;   and START_TIME between @start_time and @end_time&#xA;group by APPSERVER_NAME,&#xA;      DATEPART(YEAR, START_TIME), DATEPART(MONTH, START_TIME), DATEPART(DAY, START_TIME), (DATEPART(HOUR, START_TIME) / 1) &#xA;order by 1, 2, 3">
      <parameters>
        <parameter ID="@start_time" sfwDataType="DateTime" />
        <parameter ID="@end_time" sfwDataType="DateTime" />
      </parameters>
    </query>
    <query ID="AppSummaryChartDay" sfwQueryType="SelectQuery" sfwDataType="EntityTable" sfwSql="select format(min(start_time), 'MM/dd/yyyy') StartTime, &#xA;&#x9;   APPSERVER_NAME ServerName, &#xA;&#x9;   count(*) 'ReqCount', sum(TIME_IN_MS) / count(*) ResponseTime,&#xA;           sum(case when ERROR_MESSAGE is null then 0 else 1 end) ErrorCount&#xA;  from SGS_ACT_LOG_INST_ACTN_STEP&#xA;  where APPSERVER_NAME is not null&#xA;   and START_TIME between @start_time and @end_time&#xA;group by APPSERVER_NAME,&#xA;      DATEPART(YEAR, START_TIME), DATEPART(MONTH, START_TIME), (DATEPART(DAY, START_TIME) / 1)&#xA;order by 1, 2, 3">
      <parameters>
        <parameter ID="@start_time" sfwDataType="DateTime" />
        <parameter ID="@end_time" sfwDataType="DateTime" />
      </parameters>
    </query>
  </queries>
  <constraint />
  <rules />
  <initialload />
  <softerror />
  <harderror />
  <validatedelete />
  <delete />
  <groupslist />
  <checklist />
  <methods>
    <method ID="LoadDashboard" sfwMethodType="Load" sfwMode="All">
      <item ID="GetDashboardDetails" sfwItemType="Method" sfwDataType="ArrayList" />
    </method>
  </methods>
  <lifecycle />
  <objectmethods>
    <method ID="GetDashboardDetails" sfwReturnType="ArrayList">
      <parameters />
    </method>
  </objectmethods>
</entity>